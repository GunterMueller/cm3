(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE QtCoreApplicationRaw;


IMPORT Ctypes AS C;



TYPE
  EventFilterT =
    PROCEDURE (message: ADDRESS; result: UNTRACED REF LONGINT);



<* EXTERNAL New_QCoreApplication0 *>
PROCEDURE New_QCoreApplication0
  (VAR argc: C.int; argv: ADDRESS; arg3: C.int; ): QCoreApplication;

<* EXTERNAL New_QCoreApplication1 *>
PROCEDURE New_QCoreApplication1 (VAR argc: C.int; argv: ADDRESS; ):
  QCoreApplication;

<* EXTERNAL Delete_QCoreApplication *>
PROCEDURE Delete_QCoreApplication (self: QCoreApplication; );

<* EXTERNAL Arguments *>
PROCEDURE Arguments (): ADDRESS;

<* EXTERNAL SetAttribute *>
PROCEDURE SetAttribute (attribute: C.int; on: BOOLEAN; );

<* EXTERNAL SetAttribute1 *>
PROCEDURE SetAttribute1 (attribute: C.int; );

<* EXTERNAL TestAttribute *>
PROCEDURE TestAttribute (attribute: C.int; ): BOOLEAN;

<* EXTERNAL SetOrganizationDomain *>
PROCEDURE SetOrganizationDomain (orgDomain: ADDRESS; );

<* EXTERNAL OrganizationDomain *>
PROCEDURE OrganizationDomain (): ADDRESS;

<* EXTERNAL SetOrganizationName *>
PROCEDURE SetOrganizationName (orgName: ADDRESS; );

<* EXTERNAL OrganizationName *>
PROCEDURE OrganizationName (): ADDRESS;

<* EXTERNAL SetApplicationName *>
PROCEDURE SetApplicationName (application: ADDRESS; );

<* EXTERNAL ApplicationName *>
PROCEDURE ApplicationName (): ADDRESS;

<* EXTERNAL SetApplicationVersion *>
PROCEDURE SetApplicationVersion (version: ADDRESS; );

<* EXTERNAL ApplicationVersion *>
PROCEDURE ApplicationVersion (): ADDRESS;

<* EXTERNAL Exec *>
PROCEDURE Exec (): C.int;

<* EXTERNAL ProcessEvents *>
PROCEDURE ProcessEvents (flags: C.int; );

<* EXTERNAL ProcessEvents1 *>
PROCEDURE ProcessEvents1 ();

<* EXTERNAL ProcessEvents2 *>
PROCEDURE ProcessEvents2 (flags, maxtime: C.int; );

<* EXTERNAL Exit *>
PROCEDURE Exit (retcode: C.int; );

<* EXTERNAL Exit1 *>
PROCEDURE Exit1 ();

<* EXTERNAL SendEvent *>
PROCEDURE SendEvent (receiver, event: ADDRESS; ): BOOLEAN;

<* EXTERNAL PostEvent *>
PROCEDURE PostEvent (receiver, event: ADDRESS; );

<* EXTERNAL PostEvent1 *>
PROCEDURE PostEvent1 (receiver, event: ADDRESS; priority: C.int; );

<* EXTERNAL SendPostedEvents *>
PROCEDURE SendPostedEvents (receiver: ADDRESS; event_type: C.int; );

<* EXTERNAL SendPostedEvents1 *>
PROCEDURE SendPostedEvents1 ();

<* EXTERNAL RemovePostedEvents *>
PROCEDURE RemovePostedEvents (receiver: ADDRESS; );

<* EXTERNAL RemovePostedEvents1 *>
PROCEDURE RemovePostedEvents1 (receiver: ADDRESS; eventType: C.int; );

<* EXTERNAL HasPendingEvents *>
PROCEDURE HasPendingEvents (): BOOLEAN;

<* EXTERNAL QCoreApplication_notify *>
PROCEDURE QCoreApplication_notify
  (self: QCoreApplication; arg2, arg3: ADDRESS; ): BOOLEAN;

<* EXTERNAL StartingUp *>
PROCEDURE StartingUp (): BOOLEAN;

<* EXTERNAL ClosingDown *>
PROCEDURE ClosingDown (): BOOLEAN;

<* EXTERNAL ApplicationDirPath *>
PROCEDURE ApplicationDirPath (): ADDRESS;

<* EXTERNAL ApplicationFilePath *>
PROCEDURE ApplicationFilePath (): ADDRESS;

<* EXTERNAL ApplicationPid *>
PROCEDURE ApplicationPid (): C.unsigned_long;

<* EXTERNAL SetLibraryPaths *>
PROCEDURE SetLibraryPaths (arg1: ADDRESS; );

<* EXTERNAL LibraryPaths *>
PROCEDURE LibraryPaths (): ADDRESS;

<* EXTERNAL AddLibraryPath *>
PROCEDURE AddLibraryPath (arg1: ADDRESS; );

<* EXTERNAL RemoveLibraryPath *>
PROCEDURE RemoveLibraryPath (arg1: ADDRESS; );

<* EXTERNAL Translate *>
PROCEDURE Translate
  (context, key, disambiguation: C.char_star; encoding: C.int; ): ADDRESS;

<* EXTERNAL Translate1 *>
PROCEDURE Translate1 (context, key, disambiguation: C.char_star; ):
  ADDRESS;

<* EXTERNAL Translate2 *>
PROCEDURE Translate2 (context, key: C.char_star; ): ADDRESS;

<* EXTERNAL Translate3 *>
PROCEDURE Translate3
  (context, key, disambiguation: C.char_star; encoding, n: C.int; ):
  ADDRESS;

<* EXTERNAL Flush *>
PROCEDURE Flush ();

<* EXTERNAL QCoreApplication_filterEvent *>
PROCEDURE QCoreApplication_filterEvent (self     : QCoreApplication;
                                        message  : ADDRESS;
                                        outResult: UNTRACED REF LONGINT; ):
  BOOLEAN;

<* EXTERNAL Quit *>
PROCEDURE Quit ();

TYPE QCoreApplication = ADDRESS;

END QtCoreApplicationRaw.
