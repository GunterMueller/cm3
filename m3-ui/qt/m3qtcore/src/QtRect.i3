(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE QtRect;

FROM QtSize IMPORT QSize,QSizeF;
FROM QtPoint IMPORT QPoint,QPointF;


TYPE
  T = QRect;


TYPE
QRect <: QRectPublic;
QRectPublic =
 BRANDED OBJECT
cxxObj:ADDRESS;
METHODS
init_0 () : QRect;
init_1 ( topleft, bottomright: QPoint;
) : QRect;
init_2 ( topleft: QPoint;
 size: QSize;
) : QRect;
init (left, top, width, height: INTEGER;
) : QRect;
isNull(): BOOLEAN;
isEmpty(): BOOLEAN;
isValid(): BOOLEAN;
left(): INTEGER;
top(): INTEGER;
right(): INTEGER;
bottom(): INTEGER;
normalized(): QRect;
x(): INTEGER;
y(): INTEGER;
setLeft(pos: INTEGER;
);
setTop(pos: INTEGER;
);
setRight(pos: INTEGER;
);
setBottom(pos: INTEGER;
);
setX(x: INTEGER;
);
setY(y: INTEGER;
);
setTopLeft( p: QPoint;
);
setBottomRight( p: QPoint;
);
setTopRight( p: QPoint;
);
setBottomLeft( p: QPoint;
);
topLeft(): QPoint;
bottomRight(): QPoint;
topRight(): QPoint;
bottomLeft(): QPoint;
center(): QPoint;
moveLeft(pos: INTEGER;
);
moveTop(pos: INTEGER;
);
moveRight(pos: INTEGER;
);
moveBottom(pos: INTEGER;
);
moveTopLeft( p: QPoint;
);
moveBottomRight( p: QPoint;
);
moveTopRight( p: QPoint;
);
moveBottomLeft( p: QPoint;
);
moveCenter( p: QPoint;
);
translate(dx, dy: INTEGER;
);
translate1( p: QPoint;
);
translated(dx, dy: INTEGER;
): QRect;
translated1( p: QPoint;
): QRect;
moveTo(x, t: INTEGER;
);
moveTo1( p: QPoint;
);
setRect(x, y, w, h: INTEGER;
);
getRect(VAR x, y, w, h: INTEGER;
);
setCoords(x1, y1, x2, y2: INTEGER;
);
getCoords(VAR x1, y1, x2, y2: INTEGER;
);
adjust(x1, y1, x2, y2: INTEGER;
);
adjusted(x1, y1, x2, y2: INTEGER;
): QRect;
size(): QSize;
width(): INTEGER;
height(): INTEGER;
setWidth(w: INTEGER;
);
setHeight(h: INTEGER;
);
setSize( s: QSize;
);
PlusEqual( r: QRect;
): QRect;
MinusEqual( r: QRect;
): QRect;
MultiplyEqual( r: QRect;
): QRect;
DivideEqual( r: QRect;
): QRect;
contains( p: QPoint;
proper: BOOLEAN;
): BOOLEAN;
contains1( p: QPoint;
): BOOLEAN;
contains2(x, y: INTEGER;
): BOOLEAN;
contains3(x, y: INTEGER;
proper: BOOLEAN;
): BOOLEAN;
contains4( r: QRect;
proper: BOOLEAN;
): BOOLEAN;
contains5( r: QRect;
): BOOLEAN;
unite( r: QRect;
): QRect;
united( other: QRect;
): QRect;
intersect( r: QRect;
): QRect;
intersected( other: QRect;
): QRect;
intersects( r: QRect;
): BOOLEAN;
destroyCxx();
END;

QRectF <: QRectFPublic;
QRectFPublic =
 BRANDED OBJECT
cxxObj:ADDRESS;
METHODS
init_0 () : QRectF;
init_1 ( topleft: QPointF;
 size: QSizeF;
) : QRectF;
init_2 ( topleft, bottomRight: QPointF;
) : QRectF;
init_3 (left, top, width, height: LONGREAL;
) : QRectF;
init_4 ( rect: QRect;
) : QRectF;
isNull(): BOOLEAN;
isEmpty(): BOOLEAN;
isValid(): BOOLEAN;
normalized(): QRectF;
left(): LONGREAL;
top(): LONGREAL;
right(): LONGREAL;
bottom(): LONGREAL;
x(): LONGREAL;
y(): LONGREAL;
setLeft(pos: LONGREAL;
);
setTop(pos: LONGREAL;
);
setRight(pos: LONGREAL;
);
setBottom(pos: LONGREAL;
);
setX(pos: LONGREAL;
);
setY(pos: LONGREAL;
);
topLeft(): QPointF;
bottomRight(): QPointF;
topRight(): QPointF;
bottomLeft(): QPointF;
center(): QPointF;
setTopLeft( p: QPointF;
);
setBottomRight( p: QPointF;
);
setTopRight( p: QPointF;
);
setBottomLeft( p: QPointF;
);
moveLeft(pos: LONGREAL;
);
moveTop(pos: LONGREAL;
);
moveRight(pos: LONGREAL;
);
moveBottom(pos: LONGREAL;
);
moveTopLeft( p: QPointF;
);
moveBottomRight( p: QPointF;
);
moveTopRight( p: QPointF;
);
moveBottomLeft( p: QPointF;
);
moveCenter( p: QPointF;
);
translate(dx, dy: LONGREAL;
);
translate1( p: QPointF;
);
translated(dx, dy: LONGREAL;
): QRectF;
translated1( p: QPointF;
): QRectF;
moveTo(x, t: LONGREAL;
);
moveTo1( p: QPointF;
);
setRect(x, y, w, h: LONGREAL;
);
getRect(VAR x, y, w, h: LONGREAL;
);
setCoords(x1, y1, x2, y2: LONGREAL;
);
getCoords(VAR x1, y1, x2, y2: LONGREAL;
);
adjust(x1, y1, x2, y2: LONGREAL;
);
adjusted(x1, y1, x2, y2: LONGREAL;
): QRectF;
size(): QSizeF;
width(): LONGREAL;
height(): LONGREAL;
setWidth(w: LONGREAL;
);
setHeight(h: LONGREAL;
);
setSize( s: QSizeF;
);
PlusEqual( r: QRectF;
): QRectF;
MinusEqual( r: QRectF;
): QRectF;
MultiplyEqual( r: QRectF;
): QRectF;
DivideEqual( r: QRectF;
): QRectF;
contains( p: QPointF;
): BOOLEAN;
contains1(x, y: LONGREAL;
): BOOLEAN;
contains2( r: QRectF;
): BOOLEAN;
unite( r: QRectF;
): QRectF;
united( other: QRectF;
): QRectF;
intersect( r: QRectF;
): QRectF;
intersected( other: QRectF;
): QRectF;
intersects( r: QRectF;
): BOOLEAN;
toRect(): QRect;
toAlignedRect(): QRect;
destroyCxx();
END;


END QtRect.
