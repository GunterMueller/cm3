(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtQPalette;


IMPORT QtQPaletteRaw;
FROM QtNamespace IMPORT GlobalColor;


IMPORT WeakRef;

PROCEDURE New_QPalette0 (self:QPalette;): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette0();

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette0;

PROCEDURE New_QPalette1 (self:QPalette;READONLY button: QColor;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette1(button);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette1;

PROCEDURE New_QPalette2 (self:QPalette;button: GlobalColor;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette2(ORD(button));

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette2;

PROCEDURE New_QPalette3 (self:QPalette;READONLY button, window: QColor;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette3(button, window);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette3;

PROCEDURE New_QPalette4 (self:QPalette;READONLY windowText, button, light, dark, mid, text, bright_text, base, window: QBrush;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette4(windowText, button, light, dark, mid, text, bright_text, base, window);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette4;

PROCEDURE New_QPalette5 (self:QPalette;READONLY windowText, window, light, dark, mid, text, base: QColor;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette5(windowText, window, light, dark, mid, text, base);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette5;

PROCEDURE New_QPalette6 (self:QPalette;READONLY palette: QPalette;
): QPalette =
VAR
result : ADDRESS;
BEGIN
result := QtQPaletteRaw.New_QPalette6(palette);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);

RETURN self;
END New_QPalette6;

PROCEDURE Delete_QPalette ( self: QPalette;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.Delete_QPalette(selfAdr);
END Delete_QPalette;

PROCEDURE QPalette_Op_Brush_Assign ( self: QPalette;
READONLY palette: QPalette;
): UNTRACED REF QPalette =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_Op_Brush_Assign(selfAdr, palette);
END QPalette_Op_Brush_Assign;

PROCEDURE QPalette_currentColorGroup ( self: QPalette;
): $*1_type =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_currentColorGroup(selfAdr);
END QPalette_currentColorGroup;

PROCEDURE QPalette_setCurrentColorGroup ( self: QPalette;
cg: QPalette::ColorGroup;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setCurrentColorGroup(selfAdr, cg);
END QPalette_setCurrentColorGroup;

PROCEDURE QPalette_color ( self: QPalette;
cg: QPalette::ColorGroup;
cr: QPalette::ColorRole;
): UNTRACED REF QColor =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_color(selfAdr, cg, cr);
END QPalette_color;

PROCEDURE QPalette_brush ( self: QPalette;
cg: QPalette::ColorGroup;
cr: QPalette::ColorRole;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_brush(selfAdr, cg, cr);
END QPalette_brush;

PROCEDURE QPalette_setColor ( self: QPalette;
cg: QPalette::ColorGroup;
cr: QPalette::ColorRole;
READONLY color: QColor;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setColor(selfAdr, cg, cr, color);
END QPalette_setColor;

PROCEDURE QPalette_setColor1 ( self: QPalette;
cr: QPalette::ColorRole;
READONLY color: QColor;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setColor1(selfAdr, cr, color);
END QPalette_setColor1;

PROCEDURE QPalette_setBrush ( self: QPalette;
cr: QPalette::ColorRole;
READONLY brush: QBrush;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setBrush(selfAdr, cr, brush);
END QPalette_setBrush;

PROCEDURE QPalette_isBrushSet ( self: QPalette;
cg: QPalette::ColorGroup;
cr: QPalette::ColorRole;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_isBrushSet(selfAdr, cg, cr);
END QPalette_isBrushSet;

PROCEDURE QPalette_setBrush1 ( self: QPalette;
cg: QPalette::ColorGroup;
cr: QPalette::ColorRole;
READONLY brush: QBrush;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setBrush1(selfAdr, cg, cr, brush);
END QPalette_setBrush1;

PROCEDURE QPalette_setColorGroup ( self: QPalette;
cr: QPalette::ColorGroup;
READONLY windowText, button, light, dark, mid, text, bright_text, base, window: QBrush;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_setColorGroup(selfAdr, cr, windowText, button, light, dark, mid, text, bright_text, base, window);
END QPalette_setColorGroup;

PROCEDURE QPalette_isEqual ( self: QPalette;
cr1, cr2: QPalette::ColorGroup;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_isEqual(selfAdr, cr1, cr2);
END QPalette_isEqual;

PROCEDURE QPalette_color1 ( self: QPalette;
cr: QPalette::ColorRole;
): UNTRACED REF QColor =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_color1(selfAdr, cr);
END QPalette_color1;

PROCEDURE QPalette_brush1 ( self: QPalette;
cr: QPalette::ColorRole;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_brush1(selfAdr, cr);
END QPalette_brush1;

PROCEDURE QPalette_foreground ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_foreground(selfAdr);
END QPalette_foreground;

PROCEDURE QPalette_windowText ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_windowText(selfAdr);
END QPalette_windowText;

PROCEDURE QPalette_button ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_button(selfAdr);
END QPalette_button;

PROCEDURE QPalette_light ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_light(selfAdr);
END QPalette_light;

PROCEDURE QPalette_dark ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_dark(selfAdr);
END QPalette_dark;

PROCEDURE QPalette_mid ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_mid(selfAdr);
END QPalette_mid;

PROCEDURE QPalette_text ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_text(selfAdr);
END QPalette_text;

PROCEDURE QPalette_base ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_base(selfAdr);
END QPalette_base;

PROCEDURE QPalette_alternateBase ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_alternateBase(selfAdr);
END QPalette_alternateBase;

PROCEDURE QPalette_toolTipBase ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_toolTipBase(selfAdr);
END QPalette_toolTipBase;

PROCEDURE QPalette_toolTipText ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_toolTipText(selfAdr);
END QPalette_toolTipText;

PROCEDURE QPalette_background ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_background(selfAdr);
END QPalette_background;

PROCEDURE QPalette_window ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_window(selfAdr);
END QPalette_window;

PROCEDURE QPalette_midlight ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_midlight(selfAdr);
END QPalette_midlight;

PROCEDURE QPalette_brightText ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_brightText(selfAdr);
END QPalette_brightText;

PROCEDURE QPalette_buttonText ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_buttonText(selfAdr);
END QPalette_buttonText;

PROCEDURE QPalette_shadow ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_shadow(selfAdr);
END QPalette_shadow;

PROCEDURE QPalette_highlight ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_highlight(selfAdr);
END QPalette_highlight;

PROCEDURE QPalette_highlightedText ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_highlightedText(selfAdr);
END QPalette_highlightedText;

PROCEDURE QPalette_link ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_link(selfAdr);
END QPalette_link;

PROCEDURE QPalette_linkVisited ( self: QPalette;
): UNTRACED REF QBrush =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_linkVisited(selfAdr);
END QPalette_linkVisited;

PROCEDURE QPalette_Op_Brush_Equals ( self: QPalette;
READONLY p: QPalette;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_Op_Brush_Equals(selfAdr, p);
END QPalette_Op_Brush_Equals;

PROCEDURE QPalette_Op_Brush_NotEquals ( self: QPalette;
READONLY p: QPalette;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_Op_Brush_NotEquals(selfAdr, p);
END QPalette_Op_Brush_NotEquals;

PROCEDURE QPalette_isCopyOf ( self: QPalette;
READONLY p: QPalette;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_isCopyOf(selfAdr, p);
END QPalette_isCopyOf;

PROCEDURE QPalette_serialNumber ( self: QPalette;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_serialNumber(selfAdr);
END QPalette_serialNumber;

PROCEDURE QPalette_cacheKey ( self: QPalette;
): CARDINAL =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_cacheKey(selfAdr);
END QPalette_cacheKey;

PROCEDURE QPalette_resolve ( self: QPalette;
READONLY arg2: QPalette;
): QPalette =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_resolve(selfAdr, arg2);
END QPalette_resolve;

PROCEDURE QPalette_resolve1 ( self: QPalette;
): CARDINAL =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtQPaletteRaw.QPalette_resolve1(selfAdr);
END QPalette_resolve1;

PROCEDURE QPalette_resolve2 ( self: QPalette;
mask: CARDINAL;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtQPaletteRaw.QPalette_resolve2(selfAdr, mask);
END QPalette_resolve2;

PROCEDURE Cleanup_QPalette(<*UNUSED*>READONLY self: WeakRef.T; ref: REFANY) =
VAR obj : QPalette := ref;
BEGIN
  Delete_QPalette(obj);
 END Cleanup_QPalette;

PROCEDURE Destroy_QPalette(self : QPalette) =
BEGIN
  EVAL WeakRef.FromRef(self,Cleanup_QPalette);
END Destroy_QPalette;

REVEAL
QPalette =
QPalettePublic BRANDED OBJECT
OVERRIDES
init_0 := New_QPalette0;
init_1 := New_QPalette1;
init_2 := New_QPalette2;
init_3 := New_QPalette3;
init_4 := New_QPalette4;
init_5 := New_QPalette5;
init_6 := New_QPalette6;
Op_Brush_Assign := QPalette_Op_Brush_Assign;
currentColorGroup := QPalette_currentColorGroup;
setCurrentColorGroup := QPalette_setCurrentColorGroup;
color := QPalette_color;
brush := QPalette_brush;
setColor := QPalette_setColor;
setColor1 := QPalette_setColor1;
setBrush := QPalette_setBrush;
isBrushSet := QPalette_isBrushSet;
setBrush1 := QPalette_setBrush1;
setColorGroup := QPalette_setColorGroup;
isEqual := QPalette_isEqual;
color1 := QPalette_color1;
brush1 := QPalette_brush1;
foreground := QPalette_foreground;
windowText := QPalette_windowText;
button := QPalette_button;
light := QPalette_light;
dark := QPalette_dark;
mid := QPalette_mid;
text := QPalette_text;
base := QPalette_base;
alternateBase := QPalette_alternateBase;
toolTipBase := QPalette_toolTipBase;
toolTipText := QPalette_toolTipText;
background := QPalette_background;
window := QPalette_window;
midlight := QPalette_midlight;
brightText := QPalette_brightText;
buttonText := QPalette_buttonText;
shadow := QPalette_shadow;
highlight := QPalette_highlight;
highlightedText := QPalette_highlightedText;
link := QPalette_link;
linkVisited := QPalette_linkVisited;
Op_Brush_Equals := QPalette_Op_Brush_Equals;
Op_Brush_NotEquals := QPalette_Op_Brush_NotEquals;
isCopyOf := QPalette_isCopyOf;
serialNumber := QPalette_serialNumber;
cacheKey := QPalette_cacheKey;
resolve := QPalette_resolve;
resolve1 := QPalette_resolve1;
resolve2 := QPalette_resolve2;
destroyCxx := Destroy_QPalette;
END;


BEGIN
END QtQPalette.
