(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtStackedWidget;


IMPORT QtStackedWidgetRaw;
FROM QtWidget IMPORT QWidget;


IMPORT WeakRef;

PROCEDURE New_QStackedWidget0 (self:QStackedWidget; parent: QWidget;
): QStackedWidget =
VAR
result : ADDRESS;
arg1tmp :=  LOOPHOLE(parent.cxxObj,ADDRESS);
BEGIN
result := QtStackedWidgetRaw.New_QStackedWidget0(arg1tmp);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QStackedWidget);

RETURN self;
END New_QStackedWidget0;

PROCEDURE New_QStackedWidget1 (self:QStackedWidget;): QStackedWidget =
VAR
result : ADDRESS;
BEGIN
result := QtStackedWidgetRaw.New_QStackedWidget1();

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QStackedWidget);

RETURN self;
END New_QStackedWidget1;

PROCEDURE Delete_QStackedWidget ( self: QStackedWidget;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtStackedWidgetRaw.Delete_QStackedWidget(selfAdr);
END Delete_QStackedWidget;

PROCEDURE QStackedWidget_addWidget ( self: QStackedWidget;
 w: QWidget;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(w.cxxObj,ADDRESS);
BEGIN
RETURN QtStackedWidgetRaw.QStackedWidget_addWidget(selfAdr, arg2tmp);
END QStackedWidget_addWidget;

PROCEDURE QStackedWidget_insertWidget ( self: QStackedWidget;
index: INTEGER;
 w: QWidget;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg3tmp :=  LOOPHOLE(w.cxxObj,ADDRESS);
BEGIN
RETURN QtStackedWidgetRaw.QStackedWidget_insertWidget(selfAdr, index, arg3tmp);
END QStackedWidget_insertWidget;

PROCEDURE QStackedWidget_removeWidget ( self: QStackedWidget;
 w: QWidget;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(w.cxxObj,ADDRESS);
BEGIN
QtStackedWidgetRaw.QStackedWidget_removeWidget(selfAdr, arg2tmp);
END QStackedWidget_removeWidget;

PROCEDURE QStackedWidget_currentWidget ( self: QStackedWidget;
): QWidget =
VAR
ret:ADDRESS; result : QWidget;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtStackedWidgetRaw.QStackedWidget_currentWidget(selfAdr);

  result := NEW(QWidget);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QStackedWidget_currentWidget;

PROCEDURE QStackedWidget_currentIndex ( self: QStackedWidget;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtStackedWidgetRaw.QStackedWidget_currentIndex(selfAdr);
END QStackedWidget_currentIndex;

PROCEDURE QStackedWidget_indexOf ( self: QStackedWidget;
 arg2: QWidget;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(arg2.cxxObj,ADDRESS);
BEGIN
RETURN QtStackedWidgetRaw.QStackedWidget_indexOf(selfAdr, arg2tmp);
END QStackedWidget_indexOf;

PROCEDURE QStackedWidget_widget ( self: QStackedWidget;
arg2: INTEGER;
): QWidget =
VAR
ret:ADDRESS; result : QWidget;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtStackedWidgetRaw.QStackedWidget_widget(selfAdr, arg2);

  result := NEW(QWidget);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QStackedWidget_widget;

PROCEDURE QStackedWidget_count ( self: QStackedWidget;
): INTEGER =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtStackedWidgetRaw.QStackedWidget_count(selfAdr);
END QStackedWidget_count;

PROCEDURE QStackedWidget_setCurrentIndex ( self: QStackedWidget;
index: INTEGER;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtStackedWidgetRaw.QStackedWidget_setCurrentIndex(selfAdr, index);
END QStackedWidget_setCurrentIndex;

PROCEDURE QStackedWidget_setCurrentWidget ( self: QStackedWidget;
 w: QWidget;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(w.cxxObj,ADDRESS);
BEGIN
QtStackedWidgetRaw.QStackedWidget_setCurrentWidget(selfAdr, arg2tmp);
END QStackedWidget_setCurrentWidget;

PROCEDURE Cleanup_QStackedWidget(<*UNUSED*>READONLY self: WeakRef.T; ref: REFANY) =
VAR obj : QStackedWidget := ref;
BEGIN
  Delete_QStackedWidget(obj);
 END Cleanup_QStackedWidget;

PROCEDURE Destroy_QStackedWidget(self : QStackedWidget) =
BEGIN
  EVAL WeakRef.FromRef(self,Cleanup_QStackedWidget);
END Destroy_QStackedWidget;

REVEAL
QStackedWidget =
QStackedWidgetPublic BRANDED OBJECT
OVERRIDES
init_0 := New_QStackedWidget0;
init_1 := New_QStackedWidget1;
addWidget := QStackedWidget_addWidget;
insertWidget := QStackedWidget_insertWidget;
removeWidget := QStackedWidget_removeWidget;
currentWidget := QStackedWidget_currentWidget;
currentIndex := QStackedWidget_currentIndex;
indexOf := QStackedWidget_indexOf;
widget := QStackedWidget_widget;
count := QStackedWidget_count;
setCurrentIndex := QStackedWidget_setCurrentIndex;
setCurrentWidget := QStackedWidget_setCurrentWidget;
destroyCxx := Destroy_QStackedWidget;
END;


BEGIN
END QtStackedWidget.
