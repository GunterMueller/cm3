/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGMODULA3


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif




#include <stdlib.h>
#include <string.h>
#include <stdio.h>


#include <QtGui/qmessagebox.h>
#define  StandardButtons  QMessageBox::StandardButtons


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT QMessageBox * New_QMessageBox0(QWidget * parent) {
  QWidget *arg1 = (QWidget *) 0 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = *(QWidget **)&parent; 
  result = (QMessageBox *)new QMessageBox(arg1);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox1() {
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  result = (QMessageBox *)new QMessageBox();
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox2(QMessageBox::Icon icon, QString * title, QString * text, StandardButtons buttons, QWidget * parent, Qt::WindowFlags flags) {
  QMessageBox::Icon arg1 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QWidget *arg5 = (QWidget *) 0 ;
  Qt::WindowFlags arg6 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = (QMessageBox::Icon)icon; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = *(QWidget **)&parent; 
  arg6 = (Qt::WindowFlags)flags; 
  result = (QMessageBox *)new QMessageBox(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5,arg6);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox3(QMessageBox::Icon icon, QString * title, QString * text, StandardButtons buttons, QWidget * parent) {
  QMessageBox::Icon arg1 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QWidget *arg5 = (QWidget *) 0 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = (QMessageBox::Icon)icon; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = *(QWidget **)&parent; 
  result = (QMessageBox *)new QMessageBox(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox4(QMessageBox::Icon icon, QString * title, QString * text, StandardButtons buttons) {
  QMessageBox::Icon arg1 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = (QMessageBox::Icon)icon; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  result = (QMessageBox *)new QMessageBox(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox5(QMessageBox::Icon icon, QString * title, QString * text) {
  QMessageBox::Icon arg1 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = (QMessageBox::Icon)icon; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  result = (QMessageBox *)new QMessageBox(arg1,(QString const &)*arg2,(QString const &)*arg3);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT void Delete_QMessageBox(QMessageBox * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  delete arg1;
}


SWIGEXPORT void QMessageBox_addButton(QMessageBox * self, QAbstractButton * button, QMessageBox::ButtonRole role) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *arg2 = (QAbstractButton *) 0 ;
  QMessageBox::ButtonRole arg3 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QAbstractButton **)&button; 
  arg3 = (QMessageBox::ButtonRole)role; 
  (arg1)->addButton(arg2,arg3);
}


SWIGEXPORT QPushButton * QMessageBox_addButton1(QMessageBox * self, QString * text, QMessageBox::ButtonRole role) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *arg2 = 0 ;
  QMessageBox::ButtonRole arg3 ;
  QPushButton *result = 0 ;
  QPushButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QString **)&text;
  arg3 = (QMessageBox::ButtonRole)role; 
  result = (QPushButton *)(arg1)->addButton((QString const &)*arg2,arg3);
  *(QPushButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QPushButton * QMessageBox_addButton2(QMessageBox * self, QMessageBox::StandardButton button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::StandardButton arg2 ;
  QPushButton *result = 0 ;
  QPushButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (QMessageBox::StandardButton)button; 
  result = (QPushButton *)(arg1)->addButton(arg2);
  *(QPushButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_removeButton(QMessageBox * self, QAbstractButton * button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *arg2 = (QAbstractButton *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QAbstractButton **)&button; 
  (arg1)->removeButton(arg2);
}


SWIGEXPORT void QMessageBox_open0_0(QMessageBox * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  (arg1)->open();
}


SWIGEXPORT void QMessageBox_open1(QMessageBox * self, QObject * receiver, char * member) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QObject *arg2 = (QObject *) 0 ;
  char *arg3 = (char *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QObject **)&receiver; 
  {
    arg3 = member;
  }
  (arg1)->open(arg2,(char const *)arg3);
}


SWIGEXPORT QMessageBox::ButtonRole QMessageBox_buttonRole(QMessageBox const * self, QAbstractButton * button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *arg2 = (QAbstractButton *) 0 ;
  QMessageBox::ButtonRole result;
  QMessageBox::ButtonRole cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QAbstractButton **)&button; 
  result = (QMessageBox::ButtonRole)((QMessageBox const *)arg1)->buttonRole(arg2);
  cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_setStandardButtons(QMessageBox * self, StandardButtons buttons) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  StandardButtons arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (StandardButtons)buttons; 
  (arg1)->setStandardButtons(arg2);
}


SWIGEXPORT StandardButtons QMessageBox_standardButtons(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  StandardButtons cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(StandardButtons **)&cresult = new StandardButtons((const StandardButtons &)((QMessageBox const *)arg1)->standardButtons());
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton QMessageBox_standardButton(QMessageBox const * self, QAbstractButton * button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *arg2 = (QAbstractButton *) 0 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QAbstractButton **)&button; 
  result = (QMessageBox::StandardButton)((QMessageBox const *)arg1)->standardButton(arg2);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QAbstractButton * QMessageBox_button(QMessageBox const * self, QMessageBox::StandardButton which) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::StandardButton arg2 ;
  QAbstractButton *result = 0 ;
  QAbstractButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (QMessageBox::StandardButton)which; 
  result = (QAbstractButton *)((QMessageBox const *)arg1)->button(arg2);
  *(QAbstractButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QPushButton * QMessageBox_defaultButton(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QPushButton *result = 0 ;
  QPushButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  result = (QPushButton *)((QMessageBox const *)arg1)->defaultButton();
  *(QPushButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_setDefaultButton(QMessageBox * self, QPushButton * button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QPushButton *arg2 = (QPushButton *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QPushButton **)&button; 
  (arg1)->setDefaultButton(arg2);
}


SWIGEXPORT void QMessageBox_setDefaultButton1(QMessageBox * self, QMessageBox::StandardButton button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::StandardButton arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (QMessageBox::StandardButton)button; 
  (arg1)->setDefaultButton(arg2);
}


SWIGEXPORT QAbstractButton * QMessageBox_escapeButton(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *result = 0 ;
  QAbstractButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  result = (QAbstractButton *)((QMessageBox const *)arg1)->escapeButton();
  *(QAbstractButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_setEscapeButton(QMessageBox * self, QAbstractButton * button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *arg2 = (QAbstractButton *) 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QAbstractButton **)&button; 
  (arg1)->setEscapeButton(arg2);
}


SWIGEXPORT void QMessageBox_setEscapeButton1(QMessageBox * self, QMessageBox::StandardButton button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::StandardButton arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (QMessageBox::StandardButton)button; 
  (arg1)->setEscapeButton(arg2);
}


SWIGEXPORT QAbstractButton * QMessageBox_clickedButton(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QAbstractButton *result = 0 ;
  QAbstractButton * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  result = (QAbstractButton *)((QMessageBox const *)arg1)->clickedButton();
  *(QAbstractButton **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QString *  QMessageBox_text(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *  cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(QString **)&cresult = new QString((const QString &)((QMessageBox const *)arg1)->text());
  return cresult;
}


SWIGEXPORT void QMessageBox_setText(QMessageBox * self, QString * text) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *arg2 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QString **)&text;
  (arg1)->setText((QString const &)*arg2);
}


SWIGEXPORT QMessageBox::Icon QMessageBox_icon(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::Icon result;
  QMessageBox::Icon cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  result = (QMessageBox::Icon)((QMessageBox const *)arg1)->icon();
  cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_setIcon(QMessageBox * self, QMessageBox::Icon m3arg2) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QMessageBox::Icon arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (QMessageBox::Icon)m3arg2; 
  (arg1)->setIcon(arg2);
}


SWIGEXPORT QPixmap * QMessageBox_iconPixmap(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QPixmap * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(QPixmap **)&cresult = new QPixmap((const QPixmap &)((QMessageBox const *)arg1)->iconPixmap());
  return cresult;
}


SWIGEXPORT void QMessageBox_setIconPixmap(QMessageBox * self, QPixmap * pixmap) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QPixmap *arg2 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QPixmap **)&pixmap;
  (arg1)->setIconPixmap((QPixmap const &)*arg2);
}


SWIGEXPORT Qt::TextFormat QMessageBox_textFormat(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  Qt::TextFormat result;
  Qt::TextFormat cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  result = (Qt::TextFormat)((QMessageBox const *)arg1)->textFormat();
  cresult = result; 
  return cresult;
}


SWIGEXPORT void QMessageBox_setTextFormat(QMessageBox * self, Qt::TextFormat format) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  Qt::TextFormat arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (Qt::TextFormat)format; 
  (arg1)->setTextFormat(arg2);
}


SWIGEXPORT QMessageBox::StandardButton InfoDialog(QWidget * parent, QString * title, QString * text, StandardButtons buttons, QMessageBox::StandardButton defaultButton) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton arg5 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = (QMessageBox::StandardButton)defaultButton; 
  result = (QMessageBox::StandardButton)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton InfoDialog1(QWidget * parent, QString * title, QString * text, StandardButtons buttons) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  result = (QMessageBox::StandardButton)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton InfoDialog2(QWidget * parent, QString * title, QString * text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  result = (QMessageBox::StandardButton)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton QuestionDialog(QWidget * parent, QString * title, QString * text, StandardButtons buttons, QMessageBox::StandardButton defaultButton) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton arg5 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = (QMessageBox::StandardButton)defaultButton; 
  result = (QMessageBox::StandardButton)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton QuestionDialog1(QWidget * parent, QString * title, QString * text, StandardButtons buttons) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  result = (QMessageBox::StandardButton)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton QuestionDialog2(QWidget * parent, QString * title, QString * text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  result = (QMessageBox::StandardButton)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton WarningDialog(QWidget * parent, QString * title, QString * text, StandardButtons buttons, QMessageBox::StandardButton defaultButton) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton arg5 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = (QMessageBox::StandardButton)defaultButton; 
  result = (QMessageBox::StandardButton)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton WarningDialog1(QWidget * parent, QString * title, QString * text, StandardButtons buttons) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  result = (QMessageBox::StandardButton)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton WarningDialog2(QWidget * parent, QString * title, QString * text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  result = (QMessageBox::StandardButton)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton CriticalDialog(QWidget * parent, QString * title, QString * text, StandardButtons buttons, QMessageBox::StandardButton defaultButton) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton arg5 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  arg5 = (QMessageBox::StandardButton)defaultButton; 
  result = (QMessageBox::StandardButton)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton CriticalDialog1(QWidget * parent, QString * title, QString * text, StandardButtons buttons) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  StandardButtons arg4 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (StandardButtons)buttons; 
  result = (QMessageBox::StandardButton)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton CriticalDialog2(QWidget * parent, QString * title, QString * text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  result = (QMessageBox::StandardButton)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3);
  cresult = result; 
  return cresult;
}


SWIGEXPORT void About(QWidget * parent, QString * title, QString * text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  QMessageBox::about(arg1,(QString const &)*arg2,(QString const &)*arg3);
}


SWIGEXPORT QSize * QMessageBox_sizeHint(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QSize * cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(QSize **)&cresult = new QSize((const QSize &)((QMessageBox const *)arg1)->sizeHint());
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox6(QString * title, QString * text, QMessageBox::Icon icon, int button0, int button1, int button2, QWidget * parent, Qt::WindowFlags f) {
  QString *arg1 = 0 ;
  QString *arg2 = 0 ;
  QMessageBox::Icon arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  QWidget *arg7 = (QWidget *) 0 ;
  Qt::WindowFlags arg8 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = *(QString **)&title;
  arg2 = *(QString **)&text;
  arg3 = (QMessageBox::Icon)icon; 
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  arg7 = *(QWidget **)&parent; 
  arg8 = (Qt::WindowFlags)f; 
  result = (QMessageBox *)new QMessageBox((QString const &)*arg1,(QString const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox7(QString * title, QString * text, QMessageBox::Icon icon, int button0, int button1, int button2, QWidget * parent) {
  QString *arg1 = 0 ;
  QString *arg2 = 0 ;
  QMessageBox::Icon arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  QWidget *arg7 = (QWidget *) 0 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = *(QString **)&title;
  arg2 = *(QString **)&text;
  arg3 = (QMessageBox::Icon)icon; 
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  arg7 = *(QWidget **)&parent; 
  result = (QMessageBox *)new QMessageBox((QString const &)*arg1,(QString const &)*arg2,arg3,arg4,arg5,arg6,arg7);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox * New_QMessageBox8(QString * title, QString * text, QMessageBox::Icon icon, int button0, int button1, int button2) {
  QString *arg1 = 0 ;
  QString *arg2 = 0 ;
  QMessageBox::Icon arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  QMessageBox *result = 0 ;
  QMessageBox * cresult ;
  
  arg1 = *(QString **)&title;
  arg2 = *(QString **)&text;
  arg3 = (QMessageBox::Icon)icon; 
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  result = (QMessageBox *)new QMessageBox((QString const &)*arg1,(QString const &)*arg2,arg3,arg4,arg5,arg6);
  *(QMessageBox **)&cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog3(QWidget * parent, QString * title, QString * text, int button0, int button1, int button2) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5,arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog4(QWidget * parent, QString * title, QString * text, int button0, int button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog5(QWidget * parent, QString * title, QString * text, int button0) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog6(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  arg8 = (int)escapeButtonNumber; 
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7,arg8);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog7(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog8(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog9(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int InfoDialog10(QWidget * parent, QString * title, QString * text, QString * button0Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  result = (int)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton InfoDialog11(QWidget * parent, QString * title, QString * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton arg4 ;
  QMessageBox::StandardButton arg5 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (QMessageBox::StandardButton)button0; 
  arg5 = (QMessageBox::StandardButton)button1; 
  result = (QMessageBox::StandardButton)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QMessageBox::StandardButton InfoDialog12(QWidget * parent, QString * title, QString * text, QMessageBox::StandardButton button0) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton arg4 ;
  QMessageBox::StandardButton result;
  QMessageBox::StandardButton cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (QMessageBox::StandardButton)button0; 
  result = (QMessageBox::StandardButton)QMessageBox::information(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog3(QWidget * parent, QString * title, QString * text, int button0, int button1, int button2) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5,arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog4(QWidget * parent, QString * title, QString * text, int button0, int button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog5(QWidget * parent, QString * title, QString * text, int button0) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog6(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  arg8 = (int)escapeButtonNumber; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7,arg8);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog7(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog8(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog9(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog10(QWidget * parent, QString * title, QString * text, QString * button0Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int QuestionDialog11(QWidget * parent, QString * title, QString * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton arg4 ;
  QMessageBox::StandardButton arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (QMessageBox::StandardButton)button0; 
  arg5 = (QMessageBox::StandardButton)button1; 
  result = (int)QMessageBox::question(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog3(QWidget * parent, QString * title, QString * text, int button0, int button1, int button2) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5,arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog4(QWidget * parent, QString * title, QString * text, int button0, int button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog5(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  arg8 = (int)escapeButtonNumber; 
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7,arg8);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog6(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog7(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog8(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog9(QWidget * parent, QString * title, QString * text, QString * button0Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int WarningDialog10(QWidget * parent, QString * title, QString * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton arg4 ;
  QMessageBox::StandardButton arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (QMessageBox::StandardButton)button0; 
  arg5 = (QMessageBox::StandardButton)button1; 
  result = (int)QMessageBox::warning(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog3(QWidget * parent, QString * title, QString * text, int button0, int button1, int button2) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  arg6 = (int)button2; 
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5,arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog4(QWidget * parent, QString * title, QString * text, int button0, int button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (int)button0; 
  arg5 = (int)button1; 
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog5(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber, int escapeButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int arg8 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  arg8 = (int)escapeButtonNumber; 
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7,arg8);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog6(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text, int defaultButtonNumber) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int arg7 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  arg7 = (int)defaultButtonNumber; 
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6,arg7);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog7(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text, QString * button2Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  QString *arg6 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  arg6 = *(QString **)&button2Text;
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5,(QString const &)*arg6);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog8(QWidget * parent, QString * title, QString * text, QString * button0Text, QString * button1Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  QString *arg5 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  arg5 = *(QString **)&button1Text;
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4,(QString const &)*arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog9(QWidget * parent, QString * title, QString * text, QString * button0Text) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QString *arg4 = 0 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = *(QString **)&button0Text;
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,(QString const &)*arg4);
  cresult = result; 
  return cresult;
}


SWIGEXPORT int CriticalDialog10(QWidget * parent, QString * title, QString * text, QMessageBox::StandardButton button0, QMessageBox::StandardButton button1) {
  QWidget *arg1 = (QWidget *) 0 ;
  QString *arg2 = 0 ;
  QString *arg3 = 0 ;
  QMessageBox::StandardButton arg4 ;
  QMessageBox::StandardButton arg5 ;
  int result;
  int cresult ;
  
  arg1 = *(QWidget **)&parent; 
  arg2 = *(QString **)&title;
  arg3 = *(QString **)&text;
  arg4 = (QMessageBox::StandardButton)button0; 
  arg5 = (QMessageBox::StandardButton)button1; 
  result = (int)QMessageBox::critical(arg1,(QString const &)*arg2,(QString const &)*arg3,arg4,arg5);
  cresult = result; 
  return cresult;
}


SWIGEXPORT QString *  QMessageBox_buttonText(QMessageBox const * self, int button) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  int arg2 ;
  QString *  cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (int)button; 
  *(QString **)&cresult = new QString((const QString &)((QMessageBox const *)arg1)->buttonText(arg2));
  return cresult;
}


SWIGEXPORT void QMessageBox_setButtonText(QMessageBox * self, int button, QString * text) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  int arg2 ;
  QString *arg3 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (int)button; 
  arg3 = *(QString **)&text;
  (arg1)->setButtonText(arg2,(QString const &)*arg3);
}


SWIGEXPORT QString *  QMessageBox_informativeText(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *  cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(QString **)&cresult = new QString((const QString &)((QMessageBox const *)arg1)->informativeText());
  return cresult;
}


SWIGEXPORT void QMessageBox_setInformativeText(QMessageBox * self, QString * text) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *arg2 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QString **)&text;
  (arg1)->setInformativeText((QString const &)*arg2);
}


SWIGEXPORT QString *  QMessageBox_detailedText(QMessageBox const * self) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *  cresult ;
  
  arg1 = *(QMessageBox **)&self; 
  *(QString **)&cresult = new QString((const QString &)((QMessageBox const *)arg1)->detailedText());
  return cresult;
}


SWIGEXPORT void QMessageBox_setDetailedText(QMessageBox * self, QString * text) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *arg2 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QString **)&text;
  (arg1)->setDetailedText((QString const &)*arg2);
}


SWIGEXPORT void QMessageBox_setWindowTitle(QMessageBox * self, QString * title) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  QString *arg2 = 0 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = *(QString **)&title;
  (arg1)->setWindowTitle((QString const &)*arg2);
}


SWIGEXPORT void QMessageBox_setWindowModality(QMessageBox * self, Qt::WindowModality windowModality) {
  QMessageBox *arg1 = (QMessageBox *) 0 ;
  Qt::WindowModality arg2 ;
  
  arg1 = *(QMessageBox **)&self; 
  arg2 = (Qt::WindowModality)windowModality; 
  (arg1)->setWindowModality(arg2);
}


SWIGEXPORT QPixmap * StandardIcon(QMessageBox::Icon icon) {
  QMessageBox::Icon arg1 ;
  QPixmap * cresult ;
  
  arg1 = (QMessageBox::Icon)icon; 
  *(QPixmap **)&cresult = new QPixmap((const QPixmap &)QMessageBox::standardIcon(arg1));
  return cresult;
}


SWIGEXPORT long Modula3_QMessageBoxToQDialog(long objectRef) {
    long baseptr = 0;
    *(QDialog **)&baseptr = *(QMessageBox **)&objectRef;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

