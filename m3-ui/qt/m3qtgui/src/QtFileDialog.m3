(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtFileDialog;


FROM QtStringList IMPORT QStringList;
FROM QtByteArray IMPORT QByteArray;
FROM QtAbstractItemDelegate IMPORT QAbstractItemDelegate;
IMPORT QtFileDialogRaw;
FROM QtObject IMPORT QObject;
FROM QGuiStubs IMPORT QDir, QFileIconProvider, QAbstractProxyModel;
IMPORT M3toC;
FROM QtWidget IMPORT QWidget;
FROM QtString IMPORT QString;
IMPORT Ctypes AS C;
FROM QtNamespace IMPORT WindowTypes;


IMPORT WeakRef;

PROCEDURE New_QFileDialog0
  (self: QFileDialog; parent: QWidget; f: WindowTypes; ): QFileDialog =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtFileDialogRaw.New_QFileDialog0(arg1tmp, ORD(f));

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog0;

PROCEDURE New_QFileDialog1
  (self: QFileDialog; parent: QWidget; caption, directory, filter: TEXT; ):
  QFileDialog =
  VAR
    result        : ADDRESS;
    arg1tmp                 := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption            := NEW(QString).initQString(caption);
    arg2tmp                 := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_directory          := NEW(QString).initQString(directory);
    arg3tmp                 := LOOPHOLE(qstr_directory.cxxObj, ADDRESS);
    qstr_filter             := NEW(QString).initQString(filter);
    arg4tmp                 := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    result :=
      QtFileDialogRaw.New_QFileDialog1(arg1tmp, arg2tmp, arg3tmp, arg4tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog1;

PROCEDURE New_QFileDialog2
  (self: QFileDialog; parent: QWidget; caption, directory: TEXT; ):
  QFileDialog =
  VAR
    result        : ADDRESS;
    arg1tmp                 := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption            := NEW(QString).initQString(caption);
    arg2tmp                 := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_directory          := NEW(QString).initQString(directory);
    arg3tmp                 := LOOPHOLE(qstr_directory.cxxObj, ADDRESS);
  BEGIN
    result := QtFileDialogRaw.New_QFileDialog2(arg1tmp, arg2tmp, arg3tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog2;

PROCEDURE New_QFileDialog3
  (self: QFileDialog; parent: QWidget; caption: TEXT; ): QFileDialog =
  VAR
    result      : ADDRESS;
    arg1tmp               := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption          := NEW(QString).initQString(caption);
    arg2tmp               := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
  BEGIN
    result := QtFileDialogRaw.New_QFileDialog3(arg1tmp, arg2tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog3;

PROCEDURE New_QFileDialog4 (self: QFileDialog; parent: QWidget; ):
  QFileDialog =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtFileDialogRaw.New_QFileDialog4(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog4;

PROCEDURE New_QFileDialog5 (self: QFileDialog; ): QFileDialog =
  VAR result: ADDRESS;
  BEGIN
    result := QtFileDialogRaw.New_QFileDialog5();

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);

    RETURN self;
  END New_QFileDialog5;

PROCEDURE Delete_QFileDialog (self: QFileDialog; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.Delete_QFileDialog(selfAdr);
  END Delete_QFileDialog;

PROCEDURE QFileDialog_setDirectory (self: QFileDialog; directory: TEXT; ) =
  VAR
    selfAdr       : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_directory          := NEW(QString).initQString(directory);
    arg2tmp                 := LOOPHOLE(qstr_directory.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setDirectory(selfAdr, arg2tmp);
  END QFileDialog_setDirectory;

PROCEDURE QFileDialog_setDirectory1
  (self: QFileDialog; directory: QDir; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(directory.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setDirectory1(selfAdr, arg2tmp);
  END QFileDialog_setDirectory1;

PROCEDURE QFileDialog_directory (self: QFileDialog; ): QDir =
  VAR
    ret    : ADDRESS;
    result : QDir;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_directory(selfAdr);

    result := NEW(QDir);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_directory;

PROCEDURE QFileDialog_selectFile (self: QFileDialog; filename: TEXT; ) =
  VAR
    selfAdr      : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_filename          := NEW(QString).initQString(filename);
    arg2tmp                := LOOPHOLE(qstr_filename.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_selectFile(selfAdr, arg2tmp);
  END QFileDialog_selectFile;

PROCEDURE QFileDialog_selectedFiles (self: QFileDialog; ): QStringList =
  VAR
    ret    : ADDRESS;
    result : QStringList;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_selectedFiles(selfAdr);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_selectedFiles;

PROCEDURE QFileDialog_setNameFilterDetailsVisible
  (self: QFileDialog; enabled: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setNameFilterDetailsVisible(
      selfAdr, enabled);
  END QFileDialog_setNameFilterDetailsVisible;

PROCEDURE QFileDialog_isNameFilterDetailsVisible (self: QFileDialog; ):
  BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_isNameFilterDetailsVisible(selfAdr);
  END QFileDialog_isNameFilterDetailsVisible;

PROCEDURE QFileDialog_setNameFilter (self: QFileDialog; filter: TEXT; ) =
  VAR
    selfAdr    : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_filter          := NEW(QString).initQString(filter);
    arg2tmp              := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setNameFilter(selfAdr, arg2tmp);
  END QFileDialog_setNameFilter;

PROCEDURE QFileDialog_setNameFilters
  (self: QFileDialog; filters: QStringList; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(filters.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setNameFilters(selfAdr, arg2tmp);
  END QFileDialog_setNameFilters;

PROCEDURE QFileDialog_nameFilters (self: QFileDialog; ): QStringList =
  VAR
    ret    : ADDRESS;
    result : QStringList;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_nameFilters(selfAdr);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_nameFilters;

PROCEDURE QFileDialog_selectNameFilter
  (self: QFileDialog; filter: TEXT; ) =
  VAR
    selfAdr    : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_filter          := NEW(QString).initQString(filter);
    arg2tmp              := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_selectNameFilter(selfAdr, arg2tmp);
  END QFileDialog_selectNameFilter;

PROCEDURE QFileDialog_selectedNameFilter (self: QFileDialog; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_selectedNameFilter(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QFileDialog_selectedNameFilter;

PROCEDURE QFileDialog_setViewMode (self: QFileDialog; mode: ViewMode; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setViewMode(selfAdr, ORD(mode));
  END QFileDialog_setViewMode;

PROCEDURE QFileDialog_viewMode (self: QFileDialog; ): ViewMode =
  VAR
    ret    : INTEGER;
    result : ViewMode;
    selfAdr: ADDRESS  := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_viewMode(selfAdr);
    result := VAL(ret, ViewMode);
    RETURN result;
  END QFileDialog_viewMode;

PROCEDURE QFileDialog_setFileMode (self: QFileDialog; mode: FileMode; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setFileMode(selfAdr, ORD(mode));
  END QFileDialog_setFileMode;

PROCEDURE QFileDialog_fileMode (self: QFileDialog; ): FileMode =
  VAR
    ret    : INTEGER;
    result : FileMode;
    selfAdr: ADDRESS  := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_fileMode(selfAdr);
    result := VAL(ret, FileMode);
    RETURN result;
  END QFileDialog_fileMode;

PROCEDURE QFileDialog_setAcceptMode
  (self: QFileDialog; mode: AcceptMode; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setAcceptMode(selfAdr, ORD(mode));
  END QFileDialog_setAcceptMode;

PROCEDURE QFileDialog_acceptMode (self: QFileDialog; ): AcceptMode =
  VAR
    ret    : INTEGER;
    result : AcceptMode;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_acceptMode(selfAdr);
    result := VAL(ret, AcceptMode);
    RETURN result;
  END QFileDialog_acceptMode;

PROCEDURE QFileDialog_setReadOnly (self: QFileDialog; enabled: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setReadOnly(selfAdr, enabled);
  END QFileDialog_setReadOnly;

PROCEDURE QFileDialog_isReadOnly (self: QFileDialog; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_isReadOnly(selfAdr);
  END QFileDialog_isReadOnly;

PROCEDURE QFileDialog_setResolveSymlinks
  (self: QFileDialog; enabled: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setResolveSymlinks(selfAdr, enabled);
  END QFileDialog_setResolveSymlinks;

PROCEDURE QFileDialog_resolveSymlinks (self: QFileDialog; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_resolveSymlinks(selfAdr);
  END QFileDialog_resolveSymlinks;

PROCEDURE QFileDialog_saveState (self: QFileDialog; ): QByteArray =
  VAR
    ret    : ADDRESS;
    result : QByteArray;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_saveState(selfAdr);

    result := NEW(QByteArray);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_saveState;

PROCEDURE QFileDialog_restoreState
  (self: QFileDialog; state: QByteArray; ): BOOLEAN =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(state.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_restoreState(selfAdr, arg2tmp);
  END QFileDialog_restoreState;

PROCEDURE QFileDialog_setConfirmOverwrite
  (self: QFileDialog; enabled: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setConfirmOverwrite(selfAdr, enabled);
  END QFileDialog_setConfirmOverwrite;

PROCEDURE QFileDialog_confirmOverwrite (self: QFileDialog; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_confirmOverwrite(selfAdr);
  END QFileDialog_confirmOverwrite;

PROCEDURE QFileDialog_setDefaultSuffix
  (self: QFileDialog; suffix: TEXT; ) =
  VAR
    selfAdr    : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_suffix          := NEW(QString).initQString(suffix);
    arg2tmp              := LOOPHOLE(qstr_suffix.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setDefaultSuffix(selfAdr, arg2tmp);
  END QFileDialog_setDefaultSuffix;

PROCEDURE QFileDialog_defaultSuffix (self: QFileDialog; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_defaultSuffix(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QFileDialog_defaultSuffix;

PROCEDURE QFileDialog_setHistory
  (self: QFileDialog; paths: QStringList; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(paths.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setHistory(selfAdr, arg2tmp);
  END QFileDialog_setHistory;

PROCEDURE QFileDialog_history (self: QFileDialog; ): QStringList =
  VAR
    ret    : ADDRESS;
    result : QStringList;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_history(selfAdr);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_history;

PROCEDURE QFileDialog_setItemDelegate
  (self: QFileDialog; delegate: QAbstractItemDelegate; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(delegate.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setItemDelegate(selfAdr, arg2tmp);
  END QFileDialog_setItemDelegate;

PROCEDURE QFileDialog_itemDelegate (self: QFileDialog; ):
  QAbstractItemDelegate =
  VAR
    ret    : ADDRESS;
    result : QAbstractItemDelegate;
    selfAdr: ADDRESS               := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_itemDelegate(selfAdr);

    result := NEW(QAbstractItemDelegate);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_itemDelegate;

PROCEDURE QFileDialog_setIconProvider
  (self: QFileDialog; provider: QFileIconProvider; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(provider.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setIconProvider(selfAdr, arg2tmp);
  END QFileDialog_setIconProvider;

PROCEDURE QFileDialog_iconProvider (self: QFileDialog; ):
  QFileIconProvider =
  VAR
    ret    : ADDRESS;
    result : QFileIconProvider;
    selfAdr: ADDRESS           := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_iconProvider(selfAdr);

    result := NEW(QFileIconProvider);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_iconProvider;

PROCEDURE QFileDialog_setLabelText
  (self: QFileDialog; label: DialogLabel; text: TEXT; ) =
  VAR
    selfAdr  : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_text          := NEW(QString).initQString(text);
    arg3tmp            := LOOPHOLE(qstr_text.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setLabelText(selfAdr, ORD(label), arg3tmp);
  END QFileDialog_setLabelText;

PROCEDURE QFileDialog_labelText (self: QFileDialog; label: DialogLabel; ):
  TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_labelText(selfAdr, ORD(label));

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QFileDialog_labelText;

PROCEDURE QFileDialog_setProxyModel
  (self: QFileDialog; model: QAbstractProxyModel; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(model.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setProxyModel(selfAdr, arg2tmp);
  END QFileDialog_setProxyModel;

PROCEDURE QFileDialog_proxyModel (self: QFileDialog; ):
  QAbstractProxyModel =
  VAR
    ret    : ADDRESS;
    result : QAbstractProxyModel;
    selfAdr: ADDRESS             := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_proxyModel(selfAdr);

    result := NEW(QAbstractProxyModel);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QFileDialog_proxyModel;

PROCEDURE QFileDialog_setOption
  (self: QFileDialog; option: Option; on: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setOption(selfAdr, ORD(option), on);
  END QFileDialog_setOption;

PROCEDURE QFileDialog_setOption1 (self: QFileDialog; option: Option; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setOption1(selfAdr, ORD(option));
  END QFileDialog_setOption1;

PROCEDURE QFileDialog_testOption (self: QFileDialog; option: Option; ):
  BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFileDialogRaw.QFileDialog_testOption(selfAdr, ORD(option));
  END QFileDialog_testOption;

PROCEDURE QFileDialog_setOptions (self: QFileDialog; options: Options; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setOptions(selfAdr, ORD(options));
  END QFileDialog_setOptions;

PROCEDURE QFileDialog_options (self: QFileDialog; ): Options =
  VAR
    ret    : INTEGER;
    result : Options;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.QFileDialog_options(selfAdr);
    result := VAL(ret, Options);
    RETURN result;
  END QFileDialog_options;

PROCEDURE QFileDialog_open0_0 (self: QFileDialog; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_open0_0(selfAdr);
  END QFileDialog_open0_0;

PROCEDURE QFileDialog_open1
  (self: QFileDialog; receiver: QObject; member: TEXT; ) =
  VAR
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp              := LOOPHOLE(receiver.cxxObj, ADDRESS);
    arg3tmp: C.char_star;
  BEGIN
    arg3tmp := M3toC.CopyTtoS(member);
    QtFileDialogRaw.QFileDialog_open1(selfAdr, arg2tmp, arg3tmp);


  END QFileDialog_open1;

PROCEDURE QFileDialog_setVisible (self: QFileDialog; visible: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFileDialogRaw.QFileDialog_setVisible(selfAdr, visible);
  END QFileDialog_setVisible;

PROCEDURE GetOpenFileName
  (parent                              : QWidget;
   caption, dir, filter, selectedFilter: TEXT;
   options                             : Options; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp, ORD(options));

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName;

PROCEDURE GetOpenFileName1
  (parent: QWidget; caption, dir, filter, selectedFilter: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName1(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName1;

PROCEDURE GetOpenFileName2 (parent: QWidget; caption, dir, filter: TEXT; ):
  TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    ret :=
      QtFileDialogRaw.GetOpenFileName2(arg1tmp, arg2tmp, arg3tmp, arg4tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName2;

PROCEDURE GetOpenFileName3 (parent: QWidget; caption, dir: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName3(arg1tmp, arg2tmp, arg3tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName3;

PROCEDURE GetOpenFileName4 (parent: QWidget; caption: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName4(arg1tmp, arg2tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName4;

PROCEDURE GetOpenFileName5 (parent: QWidget; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    arg1tmp             := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName5(arg1tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName5;

PROCEDURE GetOpenFileName6 (): TEXT =
  VAR
    ret   : ADDRESS;
    qstr               := NEW(QString);
    ba    : QByteArray;
    result: TEXT;
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileName6();

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetOpenFileName6;

PROCEDURE GetSaveFileName
  (parent                              : QWidget;
   caption, dir, filter, selectedFilter: TEXT;
   options                             : Options; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp, ORD(options));

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName;

PROCEDURE GetSaveFileName1
  (parent: QWidget; caption, dir, filter, selectedFilter: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName1(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName1;

PROCEDURE GetSaveFileName2 (parent: QWidget; caption, dir, filter: TEXT; ):
  TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter              := NEW(QString).initQString(filter);
    arg4tmp                  := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    ret :=
      QtFileDialogRaw.GetSaveFileName2(arg1tmp, arg2tmp, arg3tmp, arg4tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName2;

PROCEDURE GetSaveFileName3 (parent: QWidget; caption, dir: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName3(arg1tmp, arg2tmp, arg3tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName3;

PROCEDURE GetSaveFileName4 (parent: QWidget; caption: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName4(arg1tmp, arg2tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName4;

PROCEDURE GetSaveFileName5 (parent: QWidget; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    arg1tmp             := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName5(arg1tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName5;

PROCEDURE GetSaveFileName6 (): TEXT =
  VAR
    ret   : ADDRESS;
    qstr               := NEW(QString);
    ba    : QByteArray;
    result: TEXT;
  BEGIN
    ret := QtFileDialogRaw.GetSaveFileName6();

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetSaveFileName6;

PROCEDURE GetExistingDirectory
  (parent: QWidget; caption, dir: TEXT; options: Options; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetExistingDirectory(
             arg1tmp, arg2tmp, arg3tmp, ORD(options));

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetExistingDirectory;

PROCEDURE GetExistingDirectory1 (parent: QWidget; caption, dir: TEXT; ):
  TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                 := NEW(QString).initQString(dir);
    arg3tmp                  := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
  BEGIN
    ret :=
      QtFileDialogRaw.GetExistingDirectory1(arg1tmp, arg2tmp, arg3tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetExistingDirectory1;

PROCEDURE GetExistingDirectory2 (parent: QWidget; caption: TEXT; ): TEXT =
  VAR
    ret         : ADDRESS;
    qstr                     := NEW(QString);
    ba          : QByteArray;
    result      : TEXT;
    arg1tmp                  := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption             := NEW(QString).initQString(caption);
    arg2tmp                  := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetExistingDirectory2(arg1tmp, arg2tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetExistingDirectory2;

PROCEDURE GetExistingDirectory3 (parent: QWidget; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    arg1tmp             := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetExistingDirectory3(arg1tmp);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetExistingDirectory3;

PROCEDURE GetExistingDirectory4 (): TEXT =
  VAR
    ret   : ADDRESS;
    qstr               := NEW(QString);
    ba    : QByteArray;
    result: TEXT;
  BEGIN
    ret := QtFileDialogRaw.GetExistingDirectory4();

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END GetExistingDirectory4;

PROCEDURE GetOpenFileNames
  (parent                              : QWidget;
   caption, dir, filter, selectedFilter: TEXT;
   options                             : Options; ): QStringList =
  VAR
    ret         : ADDRESS;
    result      : QStringList;
    arg1tmp                   := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption              := NEW(QString).initQString(caption);
    arg2tmp                   := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                  := NEW(QString).initQString(dir);
    arg3tmp                   := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter               := NEW(QString).initQString(filter);
    arg4tmp                   := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp, ORD(options));

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames;

PROCEDURE GetOpenFileNames1
  (parent: QWidget; caption, dir, filter, selectedFilter: TEXT; ):
  QStringList =
  VAR
    ret         : ADDRESS;
    result      : QStringList;
    arg1tmp                   := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption              := NEW(QString).initQString(caption);
    arg2tmp                   := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                  := NEW(QString).initQString(dir);
    arg3tmp                   := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter               := NEW(QString).initQString(filter);
    arg4tmp                   := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
    qstr_selectedFilter := NEW(QString).initQString(selectedFilter);
    arg5tmp             := LOOPHOLE(qstr_selectedFilter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames1(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp, arg5tmp);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames1;

PROCEDURE GetOpenFileNames2
  (parent: QWidget; caption, dir, filter: TEXT; ): QStringList =
  VAR
    ret         : ADDRESS;
    result      : QStringList;
    arg1tmp                   := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption              := NEW(QString).initQString(caption);
    arg2tmp                   := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                  := NEW(QString).initQString(dir);
    arg3tmp                   := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
    qstr_filter               := NEW(QString).initQString(filter);
    arg4tmp                   := LOOPHOLE(qstr_filter.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames2(
             arg1tmp, arg2tmp, arg3tmp, arg4tmp);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames2;

PROCEDURE GetOpenFileNames3 (parent: QWidget; caption, dir: TEXT; ):
  QStringList =
  VAR
    ret         : ADDRESS;
    result      : QStringList;
    arg1tmp                   := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption              := NEW(QString).initQString(caption);
    arg2tmp                   := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
    qstr_dir                  := NEW(QString).initQString(dir);
    arg3tmp                   := LOOPHOLE(qstr_dir.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames3(arg1tmp, arg2tmp, arg3tmp);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames3;

PROCEDURE GetOpenFileNames4 (parent: QWidget; caption: TEXT; ):
  QStringList =
  VAR
    ret         : ADDRESS;
    result      : QStringList;
    arg1tmp                   := LOOPHOLE(parent.cxxObj, ADDRESS);
    qstr_caption              := NEW(QString).initQString(caption);
    arg2tmp                   := LOOPHOLE(qstr_caption.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames4(arg1tmp, arg2tmp);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames4;

PROCEDURE GetOpenFileNames5 (parent: QWidget; ): QStringList =
  VAR
    ret    : ADDRESS;
    result : QStringList;
    arg1tmp              := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames5(arg1tmp);

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames5;

PROCEDURE GetOpenFileNames6 (): QStringList =
  VAR
    ret   : ADDRESS;
    result: QStringList;
  BEGIN
    ret := QtFileDialogRaw.GetOpenFileNames6();

    result := NEW(QStringList);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END GetOpenFileNames6;

PROCEDURE Cleanup_QFileDialog
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QFileDialog := ref;
  BEGIN
    Delete_QFileDialog(obj);
  END Cleanup_QFileDialog;

PROCEDURE Destroy_QFileDialog (self: QFileDialog) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QFileDialog);
  END Destroy_QFileDialog;

REVEAL
  QFileDialog =
    QFileDialogPublic BRANDED OBJECT
    OVERRIDES
      init_0        := New_QFileDialog0;
      init_1        := New_QFileDialog1;
      init_2        := New_QFileDialog2;
      init_3        := New_QFileDialog3;
      init_4        := New_QFileDialog4;
      init_5        := New_QFileDialog5;
      setDirectory  := QFileDialog_setDirectory;
      setDirectory1 := QFileDialog_setDirectory1;
      directory     := QFileDialog_directory;
      selectFile    := QFileDialog_selectFile;
      selectedFiles := QFileDialog_selectedFiles;
      setNameFilterDetailsVisible := QFileDialog_setNameFilterDetailsVisible;
      isNameFilterDetailsVisible := QFileDialog_isNameFilterDetailsVisible;
      setNameFilter              := QFileDialog_setNameFilter;
      setNameFilters             := QFileDialog_setNameFilters;
      nameFilters                := QFileDialog_nameFilters;
      selectNameFilter           := QFileDialog_selectNameFilter;
      selectedNameFilter         := QFileDialog_selectedNameFilter;
      setViewMode                := QFileDialog_setViewMode;
      viewMode                   := QFileDialog_viewMode;
      setFileMode                := QFileDialog_setFileMode;
      fileMode                   := QFileDialog_fileMode;
      setAcceptMode              := QFileDialog_setAcceptMode;
      acceptMode                 := QFileDialog_acceptMode;
      setReadOnly                := QFileDialog_setReadOnly;
      isReadOnly                 := QFileDialog_isReadOnly;
      setResolveSymlinks         := QFileDialog_setResolveSymlinks;
      resolveSymlinks            := QFileDialog_resolveSymlinks;
      saveState                  := QFileDialog_saveState;
      restoreState               := QFileDialog_restoreState;
      setConfirmOverwrite        := QFileDialog_setConfirmOverwrite;
      confirmOverwrite           := QFileDialog_confirmOverwrite;
      setDefaultSuffix           := QFileDialog_setDefaultSuffix;
      defaultSuffix              := QFileDialog_defaultSuffix;
      setHistory                 := QFileDialog_setHistory;
      history                    := QFileDialog_history;
      setItemDelegate            := QFileDialog_setItemDelegate;
      itemDelegate               := QFileDialog_itemDelegate;
      setIconProvider            := QFileDialog_setIconProvider;
      iconProvider               := QFileDialog_iconProvider;
      setLabelText               := QFileDialog_setLabelText;
      labelText                  := QFileDialog_labelText;
      setProxyModel              := QFileDialog_setProxyModel;
      proxyModel                 := QFileDialog_proxyModel;
      setOption                  := QFileDialog_setOption;
      setOption1                 := QFileDialog_setOption1;
      testOption                 := QFileDialog_testOption;
      setOptions                 := QFileDialog_setOptions;
      options                    := QFileDialog_options;
      open0_0                    := QFileDialog_open0_0;
      open1                      := QFileDialog_open1;
      setVisible                 := QFileDialog_setVisible;
      destroyCxx                 := Destroy_QFileDialog;
    END;


BEGIN
END QtFileDialog.
