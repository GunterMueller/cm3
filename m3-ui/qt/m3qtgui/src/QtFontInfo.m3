(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtFontInfo;


IMPORT QtFontInfoRaw;
FROM QtFont IMPORT QFont, Style, StyleHint;


IMPORT WeakRef;
FROM QtString IMPORT QString;
FROM QtByteArray IMPORT QByteArray;

PROCEDURE New_QFontInfo0 (self: QFontInfo; arg1: QFont; ): QFontInfo =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(arg1.cxxObj, ADDRESS);
  BEGIN
    result := QtFontInfoRaw.New_QFontInfo0(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFontInfo);

    RETURN self;
  END New_QFontInfo0;

PROCEDURE New_QFontInfo1 (self: QFontInfo; arg1: QFontInfo; ): QFontInfo =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(arg1.cxxObj, ADDRESS);
  BEGIN
    result := QtFontInfoRaw.New_QFontInfo1(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QFontInfo);

    RETURN self;
  END New_QFontInfo1;

PROCEDURE Delete_QFontInfo (self: QFontInfo; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtFontInfoRaw.Delete_QFontInfo(selfAdr);
  END Delete_QFontInfo;

PROCEDURE QFontInfo_family (self: QFontInfo; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFontInfoRaw.QFontInfo_family(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QFontInfo_family;

PROCEDURE QFontInfo_styleName (self: QFontInfo; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFontInfoRaw.QFontInfo_styleName(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QFontInfo_styleName;

PROCEDURE QFontInfo_pixelSize (self: QFontInfo; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_pixelSize(selfAdr);
  END QFontInfo_pixelSize;

PROCEDURE QFontInfo_pointSize (self: QFontInfo; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_pointSize(selfAdr);
  END QFontInfo_pointSize;

PROCEDURE QFontInfo_pointSizeF (self: QFontInfo; ): LONGREAL =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_pointSizeF(selfAdr);
  END QFontInfo_pointSizeF;

PROCEDURE QFontInfo_italic (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_italic(selfAdr);
  END QFontInfo_italic;

PROCEDURE QFontInfo_style (self: QFontInfo; ): Style =
  VAR
    ret    : INTEGER;
    result : Style;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFontInfoRaw.QFontInfo_style(selfAdr);
    result := VAL(ret, Style);
    RETURN result;
  END QFontInfo_style;

PROCEDURE QFontInfo_weight (self: QFontInfo; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_weight(selfAdr);
  END QFontInfo_weight;

PROCEDURE QFontInfo_bold (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_bold(selfAdr);
  END QFontInfo_bold;

PROCEDURE QFontInfo_underline (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_underline(selfAdr);
  END QFontInfo_underline;

PROCEDURE QFontInfo_overline (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_overline(selfAdr);
  END QFontInfo_overline;

PROCEDURE QFontInfo_strikeOut (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_strikeOut(selfAdr);
  END QFontInfo_strikeOut;

PROCEDURE QFontInfo_fixedPitch (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_fixedPitch(selfAdr);
  END QFontInfo_fixedPitch;

PROCEDURE QFontInfo_styleHint (self: QFontInfo; ): StyleHint =
  VAR
    ret    : INTEGER;
    result : StyleHint;
    selfAdr: ADDRESS   := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtFontInfoRaw.QFontInfo_styleHint(selfAdr);
    result := VAL(ret, StyleHint);
    RETURN result;
  END QFontInfo_styleHint;

PROCEDURE QFontInfo_rawMode (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_rawMode(selfAdr);
  END QFontInfo_rawMode;

PROCEDURE QFontInfo_exactMatch (self: QFontInfo; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtFontInfoRaw.QFontInfo_exactMatch(selfAdr);
  END QFontInfo_exactMatch;

PROCEDURE Cleanup_QFontInfo
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QFontInfo := ref;
  BEGIN
    Delete_QFontInfo(obj);
  END Cleanup_QFontInfo;

PROCEDURE Destroy_QFontInfo (self: QFontInfo) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QFontInfo);
  END Destroy_QFontInfo;

REVEAL
  QFontInfo = QFontInfoPublic BRANDED OBJECT
              OVERRIDES
                init_0     := New_QFontInfo0;
                init_1     := New_QFontInfo1;
                family     := QFontInfo_family;
                styleName  := QFontInfo_styleName;
                pixelSize  := QFontInfo_pixelSize;
                pointSize  := QFontInfo_pointSize;
                pointSizeF := QFontInfo_pointSizeF;
                italic     := QFontInfo_italic;
                style      := QFontInfo_style;
                weight     := QFontInfo_weight;
                bold       := QFontInfo_bold;
                underline  := QFontInfo_underline;
                overline   := QFontInfo_overline;
                strikeOut  := QFontInfo_strikeOut;
                fixedPitch := QFontInfo_fixedPitch;
                styleHint  := QFontInfo_styleHint;
                rawMode    := QFontInfo_rawMode;
                exactMatch := QFontInfo_exactMatch;
                destroyCxx := Destroy_QFontInfo;
              END;


BEGIN
END QtFontInfo.
