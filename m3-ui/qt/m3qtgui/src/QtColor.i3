(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE QtColor;

FROM QtStringList IMPORT QStringList;
IMPORT QtRgb;
FROM QtNamespace IMPORT GlobalColor;


TYPE T = QColor;


TYPE                             (* Enum Spec *)
  Spec = {Invalid, Rgb, Hsv, Cmyk, Hsl};
PROCEDURE ColorNames (): QStringList;

PROCEDURE FromRgb (rgb: QtRgb.T; ): QColor;

PROCEDURE FromRgba (rgba: QtRgb.T; ): QColor;

PROCEDURE FromRgb1 (r, g, b, a: INTEGER; ): QColor;

PROCEDURE FromRgb2 (r, g, b: INTEGER; ): QColor;

PROCEDURE FromRgbF (r, g, b, a: LONGREAL; ): QColor;

PROCEDURE FromRgbF1 (r, g, b: LONGREAL; ): QColor;

PROCEDURE FromHsv (h, s, v, a: INTEGER; ): QColor;

PROCEDURE FromHsv1 (h, s, v: INTEGER; ): QColor;

PROCEDURE FromHsvF (h, s, v, a: LONGREAL; ): QColor;

PROCEDURE FromHsvF1 (h, s, v: LONGREAL; ): QColor;

PROCEDURE FromCmyk (c, m, y, k, a: INTEGER; ): QColor;

PROCEDURE FromCmyk1 (c, m, y, k: INTEGER; ): QColor;

PROCEDURE FromCmykF (c, m, y, k, a: LONGREAL; ): QColor;

PROCEDURE FromCmykF1 (c, m, y, k: LONGREAL; ): QColor;

PROCEDURE FromHsl (h, s, l, a: INTEGER; ): QColor;

PROCEDURE FromHsl1 (h, s, l: INTEGER; ): QColor;

PROCEDURE FromHslF (h, s, l, a: LONGREAL; ): QColor;

PROCEDURE FromHslF1 (h, s, l: LONGREAL; ): QColor;

PROCEDURE IsValidColor (name: TEXT; ): BOOLEAN;


TYPE
  QColor <: QColorPublic;
  QColorPublic = BRANDED OBJECT
                   cxxObj: ADDRESS;
                 METHODS
                   init_0         (): QColor;
                   init_1         (color: GlobalColor; ): QColor;
                   init_2         (r, g, b, a: INTEGER; ): QColor;
                   init_3         (r, g, b: INTEGER; ): QColor;
                   init_4         (rgb: QtRgb.T; ): QColor;
                   init_5         (name: TEXT; ): QColor;
                   init_6         (name: TEXT; ): QColor;
                   init_7         (color: QColor; ): QColor;
                   init_8         (spec: Spec; ): QColor;
                   isValid        (): BOOLEAN;
                   name           (): TEXT;
                   setNamedColor  (name: TEXT; );
                   spec           (): Spec;
                   alpha          (): INTEGER;
                   setAlpha       (alpha: INTEGER; );
                   alphaF         (): LONGREAL;
                   setAlphaF      (alpha: LONGREAL; );
                   red            (): INTEGER;
                   green          (): INTEGER;
                   blue           (): INTEGER;
                   setRed         (red: INTEGER; );
                   setGreen       (green: INTEGER; );
                   setBlue        (blue: INTEGER; );
                   redF           (): LONGREAL;
                   greenF         (): LONGREAL;
                   blueF          (): LONGREAL;
                   setRedF        (red: LONGREAL; );
                   setGreenF      (green: LONGREAL; );
                   setBlueF       (blue: LONGREAL; );
                   getRgb         (VAR r, g, b, a: INTEGER; );
                   getRgb1        (VAR r, g, b: INTEGER; );
                   setRgb         (r, g, b, a: INTEGER; );
                   setRgb1        (r, g, b: INTEGER; );
                   getRgbF        (VAR r, g, b, a: LONGREAL; );
                   getRgbF1       (VAR r, g, b: LONGREAL; );
                   setRgbF        (r, g, b, a: LONGREAL; );
                   setRgbF1       (r, g, b: LONGREAL; );
                   rgba           (): QtRgb.T;
                   setRgba        (rgba: QtRgb.T; );
                   rgb            (): QtRgb.T;
                   setRgb2        (rgb: QtRgb.T; );
                   hue            (): INTEGER;
                   saturation     (): INTEGER;
                   hsvHue         (): INTEGER;
                   hsvSaturation  (): INTEGER;
                   value          (): INTEGER;
                   hueF           (): LONGREAL;
                   saturationF    (): LONGREAL;
                   hsvHueF        (): LONGREAL;
                   hsvSaturationF (): LONGREAL;
                   valueF         (): LONGREAL;
                   getHsv         (VAR h, s, v, a: INTEGER; );
                   getHsv1        (VAR h, s, v: INTEGER; );
                   setHsv         (h, s, v, a: INTEGER; );
                   setHsv1        (h, s, v: INTEGER; );
                   getHsvF        (VAR h, s, v, a: LONGREAL; );
                   getHsvF1       (VAR h, s, v: LONGREAL; );
                   setHsvF        (h, s, v, a: LONGREAL; );
                   setHsvF1       (h, s, v: LONGREAL; );
                   cyan           (): INTEGER;
                   magenta        (): INTEGER;
                   yellow         (): INTEGER;
                   black          (): INTEGER;
                   cyanF          (): LONGREAL;
                   magentaF       (): LONGREAL;
                   yellowF        (): LONGREAL;
                   blackF         (): LONGREAL;
                   getCmyk        (VAR c, m, y, k, a: INTEGER; );
                   getCmyk1       (VAR c, m, y, k: INTEGER; );
                   setCmyk        (c, m, y, k, a: INTEGER; );
                   setCmyk1       (c, m, y, k: INTEGER; );
                   getCmykF       (VAR c, m, y, k, a: LONGREAL; );
                   getCmykF1      (VAR c, m, y, k: LONGREAL; );
                   setCmykF       (c, m, y, k, a: LONGREAL; );
                   setCmykF1      (c, m, y, k: LONGREAL; );
                   hslHue         (): INTEGER;
                   hslSaturation  (): INTEGER;
                   lightness      (): INTEGER;
                   hslHueF        (): LONGREAL;
                   hslSaturationF (): LONGREAL;
                   lightnessF     (): LONGREAL;
                   getHsl         (VAR h, s, l, a: INTEGER; );
                   getHsl1        (VAR h, s, l: INTEGER; );
                   setHsl         (h, s, l, a: INTEGER; );
                   setHsl1        (h, s, l: INTEGER; );
                   getHslF        (VAR h, s, l, a: LONGREAL; );
                   getHslF1       (VAR h, s, l: LONGREAL; );
                   setHslF        (h, s, l, a: LONGREAL; );
                   setHslF1       (h, s, l: LONGREAL; );
                   toRgb          (): QColor;
                   toHsv          (): QColor;
                   toCmyk         (): QColor;
                   toHsl          (): QColor;
                   convertTo      (colorSpec: Spec; ): QColor;
                   light          (f: INTEGER; ): QColor;
                   light1         (): QColor;
                   lighter        (f: INTEGER; ): QColor;
                   lighter1       (): QColor;
                   dark           (f: INTEGER; ): QColor;
                   dark1          (): QColor;
                   darker         (f: INTEGER; ): QColor;
                   darker1        (): QColor;
                   Op_Assign      (arg1: QColor; ): QColor;
                   Op_Assign1     (color: GlobalColor; ): QColor;
                   Op_Equals      (c: QColor; ): BOOLEAN;
                   Op_NotEquals   (c: QColor; ): BOOLEAN;
                   destroyCxx     ();
                 END;


END QtColor.
