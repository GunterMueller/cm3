(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtBoxLayout;


FROM QtLayoutItem IMPORT QLayoutItem, QSpacerItem;
FROM QtSize IMPORT QSize;
FROM QtLayout IMPORT QLayout;
IMPORT QtBoxLayoutRaw;
FROM QtWidget IMPORT QWidget;
FROM QtNamespace IMPORT AlignmentFlag, Orientations;
FROM QtRect IMPORT QRect;


IMPORT WeakRef;

PROCEDURE New_QBoxLayout0
  (self: QBoxLayout; arg1: Direction; parent: QWidget; ): QBoxLayout =
  VAR
    result : ADDRESS;
    arg2tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtBoxLayoutRaw.New_QBoxLayout0(ORD(arg1), arg2tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QBoxLayout);

    RETURN self;
  END New_QBoxLayout0;

PROCEDURE New_QBoxLayout1 (self: QBoxLayout; arg1: Direction; ):
  QBoxLayout =
  VAR result: ADDRESS;
  BEGIN
    result := QtBoxLayoutRaw.New_QBoxLayout1(ORD(arg1));

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QBoxLayout);

    RETURN self;
  END New_QBoxLayout1;

PROCEDURE Delete_QBoxLayout (self: QBoxLayout; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.Delete_QBoxLayout(selfAdr);
  END Delete_QBoxLayout;

PROCEDURE QBoxLayout_direction (self: QBoxLayout; ): Direction =
  VAR
    ret    : INTEGER;
    result : Direction;
    selfAdr: ADDRESS   := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_direction(selfAdr);
    result := VAL(ret, Direction);
    RETURN result;
  END QBoxLayout_direction;

PROCEDURE QBoxLayout_setDirection (self: QBoxLayout; arg2: Direction; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_setDirection(selfAdr, ORD(arg2));
  END QBoxLayout_setDirection;

PROCEDURE QBoxLayout_addSpacing (self: QBoxLayout; size: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addSpacing(selfAdr, size);
  END QBoxLayout_addSpacing;

PROCEDURE QBoxLayout_addStretch (self: QBoxLayout; stretch: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addStretch(selfAdr, stretch);
  END QBoxLayout_addStretch;

PROCEDURE QBoxLayout_addStretch1 (self: QBoxLayout; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addStretch1(selfAdr);
  END QBoxLayout_addStretch1;

PROCEDURE QBoxLayout_addSpacerItem
  (self: QBoxLayout; spacerItem: QSpacerItem; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(spacerItem.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addSpacerItem(selfAdr, arg2tmp);
  END QBoxLayout_addSpacerItem;

PROCEDURE QBoxLayout_addWidget (self     : QBoxLayout;
                                arg2     : QWidget;
                                stretch  : INTEGER;
                                alignment: AlignmentFlag; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(arg2.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addWidget(
      selfAdr, arg2tmp, stretch, ORD(alignment));
  END QBoxLayout_addWidget;

PROCEDURE QBoxLayout_addWidget1
  (self: QBoxLayout; arg2: QWidget; stretch: INTEGER; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(arg2.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addWidget1(selfAdr, arg2tmp, stretch);
  END QBoxLayout_addWidget1;

PROCEDURE QBoxLayout_addWidget2 (self: QBoxLayout; arg2: QWidget; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(arg2.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addWidget2(selfAdr, arg2tmp);
  END QBoxLayout_addWidget2;

PROCEDURE QBoxLayout_addLayout
  (self: QBoxLayout; layout: QLayout; stretch: INTEGER; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(layout.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addLayout(selfAdr, arg2tmp, stretch);
  END QBoxLayout_addLayout;

PROCEDURE QBoxLayout_addLayout1 (self: QBoxLayout; layout: QLayout; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(layout.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addLayout1(selfAdr, arg2tmp);
  END QBoxLayout_addLayout1;

PROCEDURE QBoxLayout_addStrut (self: QBoxLayout; arg2: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addStrut(selfAdr, arg2);
  END QBoxLayout_addStrut;

PROCEDURE QBoxLayout_addItem (self: QBoxLayout; arg2: QLayoutItem; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(arg2.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_addItem(selfAdr, arg2tmp);
  END QBoxLayout_addItem;

PROCEDURE QBoxLayout_insertSpacing
  (self: QBoxLayout; index, size: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertSpacing(selfAdr, index, size);
  END QBoxLayout_insertSpacing;

PROCEDURE QBoxLayout_insertStretch
  (self: QBoxLayout; index, stretch: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertStretch(selfAdr, index, stretch);
  END QBoxLayout_insertStretch;

PROCEDURE QBoxLayout_insertStretch1 (self: QBoxLayout; index: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertStretch1(selfAdr, index);
  END QBoxLayout_insertStretch1;

PROCEDURE QBoxLayout_insertSpacerItem
  (self: QBoxLayout; index: INTEGER; spacerItem: QSpacerItem; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(spacerItem.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertSpacerItem(selfAdr, index, arg3tmp);
  END QBoxLayout_insertSpacerItem;

PROCEDURE QBoxLayout_insertWidget (self     : QBoxLayout;
                                   index    : INTEGER;
                                   widget   : QWidget;
                                   stretch  : INTEGER;
                                   alignment: AlignmentFlag; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(widget.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertWidget(
      selfAdr, index, arg3tmp, stretch, ORD(alignment));
  END QBoxLayout_insertWidget;

PROCEDURE QBoxLayout_insertWidget1
  (self: QBoxLayout; index: INTEGER; widget: QWidget; stretch: INTEGER; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(widget.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertWidget1(
      selfAdr, index, arg3tmp, stretch);
  END QBoxLayout_insertWidget1;

PROCEDURE QBoxLayout_insertWidget2
  (self: QBoxLayout; index: INTEGER; widget: QWidget; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(widget.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertWidget2(selfAdr, index, arg3tmp);
  END QBoxLayout_insertWidget2;

PROCEDURE QBoxLayout_insertLayout
  (self: QBoxLayout; index: INTEGER; layout: QLayout; stretch: INTEGER; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(layout.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertLayout(
      selfAdr, index, arg3tmp, stretch);
  END QBoxLayout_insertLayout;

PROCEDURE QBoxLayout_insertLayout1
  (self: QBoxLayout; index: INTEGER; layout: QLayout; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg3tmp          := LOOPHOLE(layout.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_insertLayout1(selfAdr, index, arg3tmp);
  END QBoxLayout_insertLayout1;

PROCEDURE QBoxLayout_spacing (self: QBoxLayout; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_spacing(selfAdr);
  END QBoxLayout_spacing;

PROCEDURE QBoxLayout_setSpacing (self: QBoxLayout; spacing: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_setSpacing(selfAdr, spacing);
  END QBoxLayout_setSpacing;

PROCEDURE QBoxLayout_setStretchFactor
  (self: QBoxLayout; w: QWidget; stretch: INTEGER; ): BOOLEAN =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(w.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_setStretchFactor(
             selfAdr, arg2tmp, stretch);
  END QBoxLayout_setStretchFactor;

PROCEDURE QBoxLayout_setStretchFactor1
  (self: QBoxLayout; l: QLayout; stretch: INTEGER; ): BOOLEAN =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(l.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_setStretchFactor1(
             selfAdr, arg2tmp, stretch);
  END QBoxLayout_setStretchFactor1;

PROCEDURE QBoxLayout_setStretch
  (self: QBoxLayout; index, stretch: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_setStretch(selfAdr, index, stretch);
  END QBoxLayout_setStretch;

PROCEDURE QBoxLayout_stretch (self: QBoxLayout; index: INTEGER; ):
  INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_stretch(selfAdr, index);
  END QBoxLayout_stretch;

PROCEDURE QBoxLayout_sizeHint (self: QBoxLayout; ): QSize =
  VAR
    ret    : ADDRESS;
    result : QSize;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_sizeHint(selfAdr);

    result := NEW(QSize);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QBoxLayout_sizeHint;

PROCEDURE QBoxLayout_minimumSize (self: QBoxLayout; ): QSize =
  VAR
    ret    : ADDRESS;
    result : QSize;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_minimumSize(selfAdr);

    result := NEW(QSize);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QBoxLayout_minimumSize;

PROCEDURE QBoxLayout_maximumSize (self: QBoxLayout; ): QSize =
  VAR
    ret    : ADDRESS;
    result : QSize;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_maximumSize(selfAdr);

    result := NEW(QSize);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QBoxLayout_maximumSize;

PROCEDURE QBoxLayout_hasHeightForWidth (self: QBoxLayout; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_hasHeightForWidth(selfAdr);
  END QBoxLayout_hasHeightForWidth;

PROCEDURE QBoxLayout_heightForWidth (self: QBoxLayout; arg2: INTEGER; ):
  INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_heightForWidth(selfAdr, arg2);
  END QBoxLayout_heightForWidth;

PROCEDURE QBoxLayout_minimumHeightForWidth
  (self: QBoxLayout; arg2: INTEGER; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_minimumHeightForWidth(selfAdr, arg2);
  END QBoxLayout_minimumHeightForWidth;

PROCEDURE QBoxLayout_expandingDirections (self: QBoxLayout; ):
  Orientations =
  VAR
    ret    : INTEGER;
    result : Orientations;
    selfAdr: ADDRESS      := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_expandingDirections(selfAdr);
    result := VAL(ret, Orientations);
    RETURN result;
  END QBoxLayout_expandingDirections;

PROCEDURE QBoxLayout_invalidate (self: QBoxLayout; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_invalidate(selfAdr);
  END QBoxLayout_invalidate;

PROCEDURE QBoxLayout_itemAt (self: QBoxLayout; arg2: INTEGER; ):
  QLayoutItem =
  VAR
    ret    : ADDRESS;
    result : QLayoutItem;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_itemAt(selfAdr, arg2);

    result := NEW(QLayoutItem);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QBoxLayout_itemAt;

PROCEDURE QBoxLayout_takeAt (self: QBoxLayout; arg2: INTEGER; ):
  QLayoutItem =
  VAR
    ret    : ADDRESS;
    result : QLayoutItem;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtBoxLayoutRaw.QBoxLayout_takeAt(selfAdr, arg2);

    result := NEW(QLayoutItem);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QBoxLayout_takeAt;

PROCEDURE QBoxLayout_count (self: QBoxLayout; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtBoxLayoutRaw.QBoxLayout_count(selfAdr);
  END QBoxLayout_count;

PROCEDURE QBoxLayout_setGeometry (self: QBoxLayout; arg2: QRect; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(arg2.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.QBoxLayout_setGeometry(selfAdr, arg2tmp);
  END QBoxLayout_setGeometry;

PROCEDURE Cleanup_QBoxLayout
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QBoxLayout := ref;
  BEGIN
    Delete_QBoxLayout(obj);
  END Cleanup_QBoxLayout;

PROCEDURE Destroy_QBoxLayout (self: QBoxLayout) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QBoxLayout);
  END Destroy_QBoxLayout;

REVEAL
  QBoxLayout = QBoxLayoutPublic BRANDED OBJECT
               OVERRIDES
                 init_0                := New_QBoxLayout0;
                 init_1                := New_QBoxLayout1;
                 direction             := QBoxLayout_direction;
                 setDirection          := QBoxLayout_setDirection;
                 addSpacing            := QBoxLayout_addSpacing;
                 addStretch            := QBoxLayout_addStretch;
                 addStretch1           := QBoxLayout_addStretch1;
                 addSpacerItem         := QBoxLayout_addSpacerItem;
                 addWidget             := QBoxLayout_addWidget;
                 addWidget1            := QBoxLayout_addWidget1;
                 addWidget2            := QBoxLayout_addWidget2;
                 addLayout             := QBoxLayout_addLayout;
                 addLayout1            := QBoxLayout_addLayout1;
                 addStrut              := QBoxLayout_addStrut;
                 addItem               := QBoxLayout_addItem;
                 insertSpacing         := QBoxLayout_insertSpacing;
                 insertStretch         := QBoxLayout_insertStretch;
                 insertStretch1        := QBoxLayout_insertStretch1;
                 insertSpacerItem      := QBoxLayout_insertSpacerItem;
                 insertWidget          := QBoxLayout_insertWidget;
                 insertWidget1         := QBoxLayout_insertWidget1;
                 insertWidget2         := QBoxLayout_insertWidget2;
                 insertLayout          := QBoxLayout_insertLayout;
                 insertLayout1         := QBoxLayout_insertLayout1;
                 spacing               := QBoxLayout_spacing;
                 setSpacing            := QBoxLayout_setSpacing;
                 setStretchFactor      := QBoxLayout_setStretchFactor;
                 setStretchFactor1     := QBoxLayout_setStretchFactor1;
                 setStretch            := QBoxLayout_setStretch;
                 stretch               := QBoxLayout_stretch;
                 sizeHint              := QBoxLayout_sizeHint;
                 minimumSize           := QBoxLayout_minimumSize;
                 maximumSize           := QBoxLayout_maximumSize;
                 hasHeightForWidth     := QBoxLayout_hasHeightForWidth;
                 heightForWidth        := QBoxLayout_heightForWidth;
                 minimumHeightForWidth := QBoxLayout_minimumHeightForWidth;
                 expandingDirections   := QBoxLayout_expandingDirections;
                 invalidate            := QBoxLayout_invalidate;
                 itemAt                := QBoxLayout_itemAt;
                 takeAt                := QBoxLayout_takeAt;
                 count                 := QBoxLayout_count;
                 setGeometry           := QBoxLayout_setGeometry;
                 destroyCxx            := Destroy_QBoxLayout;
               END;

PROCEDURE New_QHBoxLayout0 (self: QHBoxLayout; ): QHBoxLayout =
  VAR result: ADDRESS;
  BEGIN
    result := QtBoxLayoutRaw.New_QHBoxLayout0();

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QHBoxLayout);

    RETURN self;
  END New_QHBoxLayout0;

PROCEDURE New_QHBoxLayout1 (self: QHBoxLayout; parent: QWidget; ):
  QHBoxLayout =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtBoxLayoutRaw.New_QHBoxLayout1(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QHBoxLayout);

    RETURN self;
  END New_QHBoxLayout1;

PROCEDURE Delete_QHBoxLayout (self: QHBoxLayout; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.Delete_QHBoxLayout(selfAdr);
  END Delete_QHBoxLayout;

PROCEDURE Cleanup_QHBoxLayout
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QHBoxLayout := ref;
  BEGIN
    Delete_QHBoxLayout(obj);
  END Cleanup_QHBoxLayout;

PROCEDURE Destroy_QHBoxLayout (self: QHBoxLayout) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QHBoxLayout);
  END Destroy_QHBoxLayout;

REVEAL
  QHBoxLayout = QHBoxLayoutPublic BRANDED OBJECT
                OVERRIDES
                  init_0     := New_QHBoxLayout0;
                  init_1     := New_QHBoxLayout1;
                  destroyCxx := Destroy_QHBoxLayout;
                END;

PROCEDURE New_QVBoxLayout0 (self: QVBoxLayout; ): QVBoxLayout =
  VAR result: ADDRESS;
  BEGIN
    result := QtBoxLayoutRaw.New_QVBoxLayout0();

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QVBoxLayout);

    RETURN self;
  END New_QVBoxLayout0;

PROCEDURE New_QVBoxLayout1 (self: QVBoxLayout; parent: QWidget; ):
  QVBoxLayout =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtBoxLayoutRaw.New_QVBoxLayout1(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QVBoxLayout);

    RETURN self;
  END New_QVBoxLayout1;

PROCEDURE Delete_QVBoxLayout (self: QVBoxLayout; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtBoxLayoutRaw.Delete_QVBoxLayout(selfAdr);
  END Delete_QVBoxLayout;

PROCEDURE Cleanup_QVBoxLayout
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QVBoxLayout := ref;
  BEGIN
    Delete_QVBoxLayout(obj);
  END Cleanup_QVBoxLayout;

PROCEDURE Destroy_QVBoxLayout (self: QVBoxLayout) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QVBoxLayout);
  END Destroy_QVBoxLayout;

REVEAL
  QVBoxLayout = QVBoxLayoutPublic BRANDED OBJECT
                OVERRIDES
                  init_0     := New_QVBoxLayout0;
                  init_1     := New_QVBoxLayout1;
                  destroyCxx := Destroy_QVBoxLayout;
                END;


BEGIN
END QtBoxLayout.
