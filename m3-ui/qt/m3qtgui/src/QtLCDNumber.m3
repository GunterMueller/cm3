(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtLCDNumber;


FROM QtSize IMPORT QSize;
IMPORT QtLCDNumberRaw;
FROM QtWidget IMPORT QWidget;
FROM QtString IMPORT QString;


IMPORT WeakRef;

PROCEDURE New_QLCDNumber0 (self: QLCDNumber; parent: QWidget; ):
  QLCDNumber =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtLCDNumberRaw.New_QLCDNumber0(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QLCDNumber);

    RETURN self;
  END New_QLCDNumber0;

PROCEDURE New_QLCDNumber1 (self: QLCDNumber; ): QLCDNumber =
  VAR result: ADDRESS;
  BEGIN
    result := QtLCDNumberRaw.New_QLCDNumber1();

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QLCDNumber);

    RETURN self;
  END New_QLCDNumber1;

PROCEDURE New_QLCDNumber2
  (self: QLCDNumber; numDigits: CARDINAL; parent: QWidget; ): QLCDNumber =
  VAR
    result : ADDRESS;
    arg2tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtLCDNumberRaw.New_QLCDNumber2(numDigits, arg2tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QLCDNumber);

    RETURN self;
  END New_QLCDNumber2;

PROCEDURE New_QLCDNumber3 (self: QLCDNumber; numDigits: CARDINAL; ):
  QLCDNumber =
  VAR result: ADDRESS;
  BEGIN
    result := QtLCDNumberRaw.New_QLCDNumber3(numDigits);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QLCDNumber);

    RETURN self;
  END New_QLCDNumber3;

PROCEDURE Delete_QLCDNumber (self: QLCDNumber; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.Delete_QLCDNumber(selfAdr);
  END Delete_QLCDNumber;

PROCEDURE QLCDNumber_smallDecimalPoint (self: QLCDNumber; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_smallDecimalPoint(selfAdr);
  END QLCDNumber_smallDecimalPoint;

PROCEDURE QLCDNumber_digitCount (self: QLCDNumber; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_digitCount(selfAdr);
  END QLCDNumber_digitCount;

PROCEDURE QLCDNumber_setDigitCount (self: QLCDNumber; nDigits: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setDigitCount(selfAdr, nDigits);
  END QLCDNumber_setDigitCount;

PROCEDURE QLCDNumber_checkOverflow (self: QLCDNumber; num: LONGREAL; ):
  BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_checkOverflow(selfAdr, num);
  END QLCDNumber_checkOverflow;

PROCEDURE QLCDNumber_checkOverflow1 (self: QLCDNumber; num: INTEGER; ):
  BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_checkOverflow1(selfAdr, num);
  END QLCDNumber_checkOverflow1;

PROCEDURE QLCDNumber_mode (self: QLCDNumber; ): Mode =
  VAR
    ret    : INTEGER;
    result : Mode;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtLCDNumberRaw.QLCDNumber_mode(selfAdr);
    result := VAL(ret, Mode);
    RETURN result;
  END QLCDNumber_mode;

PROCEDURE QLCDNumber_setMode (self: QLCDNumber; arg2: Mode; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setMode(selfAdr, ORD(arg2));
  END QLCDNumber_setMode;

PROCEDURE QLCDNumber_segmentStyle (self: QLCDNumber; ): SegmentStyle =
  VAR
    ret    : INTEGER;
    result : SegmentStyle;
    selfAdr: ADDRESS      := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtLCDNumberRaw.QLCDNumber_segmentStyle(selfAdr);
    result := VAL(ret, SegmentStyle);
    RETURN result;
  END QLCDNumber_segmentStyle;

PROCEDURE QLCDNumber_setSegmentStyle
  (self: QLCDNumber; arg2: SegmentStyle; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setSegmentStyle(selfAdr, ORD(arg2));
  END QLCDNumber_setSegmentStyle;

PROCEDURE QLCDNumber_value (self: QLCDNumber; ): LONGREAL =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_value(selfAdr);
  END QLCDNumber_value;

PROCEDURE QLCDNumber_intValue (self: QLCDNumber; ): INTEGER =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtLCDNumberRaw.QLCDNumber_intValue(selfAdr);
  END QLCDNumber_intValue;

PROCEDURE QLCDNumber_sizeHint (self: QLCDNumber; ): QSize =
  VAR
    ret    : ADDRESS;
    result : QSize;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtLCDNumberRaw.QLCDNumber_sizeHint(selfAdr);

    result := NEW(QSize);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QLCDNumber_sizeHint;

PROCEDURE QLCDNumber_display (self: QLCDNumber; str: TEXT; ) =
  VAR
    selfAdr : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_str          := NEW(QString).initQString(str);
    arg2tmp           := LOOPHOLE(qstr_str.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_display(selfAdr, arg2tmp);
  END QLCDNumber_display;

PROCEDURE QLCDNumber_display1 (self: QLCDNumber; num: INTEGER; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_display1(selfAdr, num);
  END QLCDNumber_display1;

PROCEDURE QLCDNumber_display2 (self: QLCDNumber; num: LONGREAL; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_display2(selfAdr, num);
  END QLCDNumber_display2;

PROCEDURE QLCDNumber_setHexMode (self: QLCDNumber; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setHexMode(selfAdr);
  END QLCDNumber_setHexMode;

PROCEDURE QLCDNumber_setDecMode (self: QLCDNumber; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setDecMode(selfAdr);
  END QLCDNumber_setDecMode;

PROCEDURE QLCDNumber_setOctMode (self: QLCDNumber; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setOctMode(selfAdr);
  END QLCDNumber_setOctMode;

PROCEDURE QLCDNumber_setBinMode (self: QLCDNumber; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setBinMode(selfAdr);
  END QLCDNumber_setBinMode;

PROCEDURE QLCDNumber_setSmallDecimalPoint
  (self: QLCDNumber; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtLCDNumberRaw.QLCDNumber_setSmallDecimalPoint(selfAdr, arg2);
  END QLCDNumber_setSmallDecimalPoint;

PROCEDURE Cleanup_QLCDNumber
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QLCDNumber := ref;
  BEGIN
    Delete_QLCDNumber(obj);
  END Cleanup_QLCDNumber;

PROCEDURE Destroy_QLCDNumber (self: QLCDNumber) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QLCDNumber);
  END Destroy_QLCDNumber;

REVEAL
  QLCDNumber = QLCDNumberPublic BRANDED OBJECT
               OVERRIDES
                 init_0               := New_QLCDNumber0;
                 init_1               := New_QLCDNumber1;
                 init_2               := New_QLCDNumber2;
                 init_3               := New_QLCDNumber3;
                 smallDecimalPoint    := QLCDNumber_smallDecimalPoint;
                 digitCount           := QLCDNumber_digitCount;
                 setDigitCount        := QLCDNumber_setDigitCount;
                 checkOverflow        := QLCDNumber_checkOverflow;
                 checkOverflow1       := QLCDNumber_checkOverflow1;
                 mode                 := QLCDNumber_mode;
                 setMode              := QLCDNumber_setMode;
                 segmentStyle         := QLCDNumber_segmentStyle;
                 setSegmentStyle      := QLCDNumber_setSegmentStyle;
                 value                := QLCDNumber_value;
                 intValue             := QLCDNumber_intValue;
                 sizeHint             := QLCDNumber_sizeHint;
                 display              := QLCDNumber_display;
                 display1             := QLCDNumber_display1;
                 display2             := QLCDNumber_display2;
                 setHexMode           := QLCDNumber_setHexMode;
                 setDecMode           := QLCDNumber_setDecMode;
                 setOctMode           := QLCDNumber_setOctMode;
                 setBinMode           := QLCDNumber_setBinMode;
                 setSmallDecimalPoint := QLCDNumber_setSmallDecimalPoint;
                 destroyCxx           := Destroy_QLCDNumber;
               END;


BEGIN
END QtLCDNumber.
