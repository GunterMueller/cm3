(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtAction;


FROM QtIcon IMPORT QIcon;
FROM QtFont IMPORT QFont;
FROM QtObject IMPORT QObject;
FROM QtActionGroup IMPORT QActionGroup;
FROM QtKeySequence IMPORT QKeySequence;
IMPORT QtActionRaw;
FROM QtNamespace IMPORT ShortcutContext;


IMPORT WeakRef;
FROM QtMenu IMPORT QMenu;
FROM QtWidget IMPORT QWidget;
FROM QtString IMPORT QString;
FROM QtByteArray IMPORT QByteArray;

PROCEDURE New_QAction0 (self: QAction; parent: QObject; ): QAction =
  VAR
    result : ADDRESS;
    arg1tmp          := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtActionRaw.New_QAction0(arg1tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QAction);

    RETURN self;
  END New_QAction0;

PROCEDURE New_QAction1 (self: QAction; text: TEXT; parent: QObject; ):
  QAction =
  VAR
    result   : ADDRESS;
    qstr_text          := NEW(QString).initQString(text);
    arg1tmp            := LOOPHOLE(qstr_text.cxxObj, ADDRESS);
    arg2tmp            := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtActionRaw.New_QAction1(arg1tmp, arg2tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QAction);

    RETURN self;
  END New_QAction1;

PROCEDURE New_QAction2
  (self: QAction; icon: QIcon; text: TEXT; parent: QObject; ): QAction =
  VAR
    result   : ADDRESS;
    arg1tmp            := LOOPHOLE(icon.cxxObj, ADDRESS);
    qstr_text          := NEW(QString).initQString(text);
    arg2tmp            := LOOPHOLE(qstr_text.cxxObj, ADDRESS);
    arg3tmp            := LOOPHOLE(parent.cxxObj, ADDRESS);
  BEGIN
    result := QtActionRaw.New_QAction2(arg1tmp, arg2tmp, arg3tmp);

    self.cxxObj := result;
    EVAL WeakRef.FromRef(self, Cleanup_QAction);

    RETURN self;
  END New_QAction2;

PROCEDURE Delete_QAction (self: QAction; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.Delete_QAction(selfAdr);
  END Delete_QAction;

PROCEDURE QAction_setActionGroup (self: QAction; group: QActionGroup; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(group.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setActionGroup(selfAdr, arg2tmp);
  END QAction_setActionGroup;

PROCEDURE QAction_actionGroup (self: QAction; ): QActionGroup =
  VAR
    ret    : ADDRESS;
    result : QActionGroup;
    selfAdr: ADDRESS      := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_actionGroup(selfAdr);

    result := NEW(QActionGroup);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_actionGroup;

PROCEDURE QAction_setIcon (self: QAction; icon: QIcon; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(icon.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setIcon(selfAdr, arg2tmp);
  END QAction_setIcon;

PROCEDURE QAction_icon (self: QAction; ): QIcon =
  VAR
    ret    : ADDRESS;
    result : QIcon;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_icon(selfAdr);

    result := NEW(QIcon);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_icon;

PROCEDURE QAction_setText (self: QAction; text: TEXT; ) =
  VAR
    selfAdr  : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_text          := NEW(QString).initQString(text);
    arg2tmp            := LOOPHOLE(qstr_text.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setText(selfAdr, arg2tmp);
  END QAction_setText;

PROCEDURE QAction_text (self: QAction; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_text(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QAction_text;

PROCEDURE QAction_setIconText (self: QAction; text: TEXT; ) =
  VAR
    selfAdr  : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_text          := NEW(QString).initQString(text);
    arg2tmp            := LOOPHOLE(qstr_text.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setIconText(selfAdr, arg2tmp);
  END QAction_setIconText;

PROCEDURE QAction_iconText (self: QAction; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_iconText(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QAction_iconText;

PROCEDURE QAction_setToolTip (self: QAction; tip: TEXT; ) =
  VAR
    selfAdr : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_tip          := NEW(QString).initQString(tip);
    arg2tmp           := LOOPHOLE(qstr_tip.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setToolTip(selfAdr, arg2tmp);
  END QAction_setToolTip;

PROCEDURE QAction_toolTip (self: QAction; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_toolTip(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QAction_toolTip;

PROCEDURE QAction_setStatusTip (self: QAction; statusTip: TEXT; ) =
  VAR
    selfAdr       : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_statusTip          := NEW(QString).initQString(statusTip);
    arg2tmp                 := LOOPHOLE(qstr_statusTip.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setStatusTip(selfAdr, arg2tmp);
  END QAction_setStatusTip;

PROCEDURE QAction_statusTip (self: QAction; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_statusTip(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QAction_statusTip;

PROCEDURE QAction_setWhatsThis (self: QAction; what: TEXT; ) =
  VAR
    selfAdr  : ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    qstr_what          := NEW(QString).initQString(what);
    arg2tmp            := LOOPHOLE(qstr_what.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setWhatsThis(selfAdr, arg2tmp);
  END QAction_setWhatsThis;

PROCEDURE QAction_whatsThis (self: QAction; ): TEXT =
  VAR
    ret    : ADDRESS;
    qstr                := NEW(QString);
    ba     : QByteArray;
    result : TEXT;
    selfAdr: ADDRESS    := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_whatsThis(selfAdr);

    qstr.cxxObj := ret;
    ba := qstr.toLocal8Bit();
    result := ba.data();

    RETURN result;
  END QAction_whatsThis;

PROCEDURE QAction_setPriority (self: QAction; priority: Priority; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setPriority(selfAdr, ORD(priority));
  END QAction_setPriority;

PROCEDURE QAction_priority (self: QAction; ): Priority =
  VAR
    ret    : INTEGER;
    result : Priority;
    selfAdr: ADDRESS  := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_priority(selfAdr);
    result := VAL(ret, Priority);
    RETURN result;
  END QAction_priority;

PROCEDURE QAction_menu (self: QAction; ): REFANY =
  VAR
    ret    : ADDRESS;
    result : QMenu;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_menu(selfAdr);

    result := NEW(QMenu);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_menu;

PROCEDURE QAction_setMenu (self: QAction; menu: REFANY; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(NARROW(menu, QMenu).cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setMenu(selfAdr, arg2tmp);
  END QAction_setMenu;

PROCEDURE QAction_setSeparator (self: QAction; b: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setSeparator(selfAdr, b);
  END QAction_setSeparator;

PROCEDURE QAction_isSeparator (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isSeparator(selfAdr);
  END QAction_isSeparator;

PROCEDURE QAction_setShortcut (self: QAction; shortcut: QKeySequence; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(shortcut.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setShortcut(selfAdr, arg2tmp);
  END QAction_setShortcut;

PROCEDURE QAction_shortcut (self: QAction; ): QKeySequence =
  VAR
    ret    : ADDRESS;
    result : QKeySequence;
    selfAdr: ADDRESS      := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_shortcut(selfAdr);

    result := NEW(QKeySequence);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_shortcut;

PROCEDURE QAction_setShortcutContext
  (self: QAction; context: ShortcutContext; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setShortcutContext(selfAdr, ORD(context));
  END QAction_setShortcutContext;

PROCEDURE QAction_shortcutContext (self: QAction; ): ShortcutContext =
  VAR
    ret    : INTEGER;
    result : ShortcutContext;
    selfAdr: ADDRESS         := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_shortcutContext(selfAdr);
    result := VAL(ret, ShortcutContext);
    RETURN result;
  END QAction_shortcutContext;

PROCEDURE QAction_setAutoRepeat (self: QAction; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setAutoRepeat(selfAdr, arg2);
  END QAction_setAutoRepeat;

PROCEDURE QAction_autoRepeat (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_autoRepeat(selfAdr);
  END QAction_autoRepeat;

PROCEDURE QAction_setFont (self: QAction; font: QFont; ) =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(font.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setFont(selfAdr, arg2tmp);
  END QAction_setFont;

PROCEDURE QAction_font (self: QAction; ): QFont =
  VAR
    ret    : ADDRESS;
    result : QFont;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_font(selfAdr);

    result := NEW(QFont);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_font;

PROCEDURE QAction_setCheckable (self: QAction; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setCheckable(selfAdr, arg2);
  END QAction_setCheckable;

PROCEDURE QAction_isCheckable (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isCheckable(selfAdr);
  END QAction_isCheckable;

PROCEDURE QAction_isChecked (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isChecked(selfAdr);
  END QAction_isChecked;

PROCEDURE QAction_isEnabled (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isEnabled(selfAdr);
  END QAction_isEnabled;

PROCEDURE QAction_isVisible (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isVisible(selfAdr);
  END QAction_isVisible;

PROCEDURE QAction_activate (self: QAction; event: ActionEvent; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_activate(selfAdr, ORD(event));
  END QAction_activate;

PROCEDURE QAction_showStatusText (self: QAction; widget: REFANY; ):
  BOOLEAN =
  VAR
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
    arg2tmp          := LOOPHOLE(NARROW(widget, QWidget).cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_showStatusText(selfAdr, arg2tmp);
  END QAction_showStatusText;

PROCEDURE QAction_showStatusText1 (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_showStatusText1(selfAdr);
  END QAction_showStatusText1;

PROCEDURE QAction_setMenuRole (self: QAction; menuRole: MenuRole; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setMenuRole(selfAdr, ORD(menuRole));
  END QAction_setMenuRole;

PROCEDURE QAction_menuRole (self: QAction; ): MenuRole =
  VAR
    ret    : INTEGER;
    result : MenuRole;
    selfAdr: ADDRESS  := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_menuRole(selfAdr);
    result := VAL(ret, MenuRole);
    RETURN result;
  END QAction_menuRole;

PROCEDURE QAction_setSoftKeyRole
  (self: QAction; softKeyRole: SoftKeyRole; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setSoftKeyRole(selfAdr, ORD(softKeyRole));
  END QAction_setSoftKeyRole;

PROCEDURE QAction_softKeyRole (self: QAction; ): SoftKeyRole =
  VAR
    ret    : INTEGER;
    result : SoftKeyRole;
    selfAdr: ADDRESS     := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_softKeyRole(selfAdr);
    result := VAL(ret, SoftKeyRole);
    RETURN result;
  END QAction_softKeyRole;

PROCEDURE QAction_setIconVisibleInMenu
  (self: QAction; visible: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setIconVisibleInMenu(selfAdr, visible);
  END QAction_setIconVisibleInMenu;

PROCEDURE QAction_isIconVisibleInMenu (self: QAction; ): BOOLEAN =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    RETURN QtActionRaw.QAction_isIconVisibleInMenu(selfAdr);
  END QAction_isIconVisibleInMenu;

PROCEDURE QAction_parentWidget (self: QAction; ): REFANY =
  VAR
    ret    : ADDRESS;
    result : QWidget;
    selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    ret := QtActionRaw.QAction_parentWidget(selfAdr);

    result := NEW(QWidget);
    result.cxxObj := ret;
    result.destroyCxx();

    RETURN result;
  END QAction_parentWidget;

PROCEDURE QAction_trigger (self: QAction; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_trigger(selfAdr);
  END QAction_trigger;

PROCEDURE QAction_hover (self: QAction; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_hover(selfAdr);
  END QAction_hover;

PROCEDURE QAction_setChecked (self: QAction; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setChecked(selfAdr, arg2);
  END QAction_setChecked;

PROCEDURE QAction_toggle (self: QAction; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_toggle(selfAdr);
  END QAction_toggle;

PROCEDURE QAction_setEnabled (self: QAction; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setEnabled(selfAdr, arg2);
  END QAction_setEnabled;

PROCEDURE QAction_setDisabled (self: QAction; b: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setDisabled(selfAdr, b);
  END QAction_setDisabled;

PROCEDURE QAction_setVisible (self: QAction; arg2: BOOLEAN; ) =
  VAR selfAdr: ADDRESS := LOOPHOLE(self.cxxObj, ADDRESS);
  BEGIN
    QtActionRaw.QAction_setVisible(selfAdr, arg2);
  END QAction_setVisible;

PROCEDURE Cleanup_QAction
  (<* UNUSED *> READONLY self: WeakRef.T; ref: REFANY) =
  VAR obj: QAction := ref;
  BEGIN
    Delete_QAction(obj);
  END Cleanup_QAction;

PROCEDURE Destroy_QAction (self: QAction) =
  BEGIN
    EVAL WeakRef.FromRef(self, Cleanup_QAction);
  END Destroy_QAction;

REVEAL
  QAction = QActionPublic BRANDED OBJECT
            OVERRIDES
              init_0               := New_QAction0;
              init_1               := New_QAction1;
              init_2               := New_QAction2;
              setActionGroup       := QAction_setActionGroup;
              actionGroup          := QAction_actionGroup;
              setIcon              := QAction_setIcon;
              icon                 := QAction_icon;
              setText              := QAction_setText;
              text                 := QAction_text;
              setIconText          := QAction_setIconText;
              iconText             := QAction_iconText;
              setToolTip           := QAction_setToolTip;
              toolTip              := QAction_toolTip;
              setStatusTip         := QAction_setStatusTip;
              statusTip            := QAction_statusTip;
              setWhatsThis         := QAction_setWhatsThis;
              whatsThis            := QAction_whatsThis;
              setPriority          := QAction_setPriority;
              priority             := QAction_priority;
              menu                 := QAction_menu;
              setMenu              := QAction_setMenu;
              setSeparator         := QAction_setSeparator;
              isSeparator          := QAction_isSeparator;
              setShortcut          := QAction_setShortcut;
              shortcut             := QAction_shortcut;
              setShortcutContext   := QAction_setShortcutContext;
              shortcutContext      := QAction_shortcutContext;
              setAutoRepeat        := QAction_setAutoRepeat;
              autoRepeat           := QAction_autoRepeat;
              setFont              := QAction_setFont;
              font                 := QAction_font;
              setCheckable         := QAction_setCheckable;
              isCheckable          := QAction_isCheckable;
              isChecked            := QAction_isChecked;
              isEnabled            := QAction_isEnabled;
              isVisible            := QAction_isVisible;
              activate             := QAction_activate;
              showStatusText       := QAction_showStatusText;
              showStatusText1      := QAction_showStatusText1;
              setMenuRole          := QAction_setMenuRole;
              menuRole             := QAction_menuRole;
              setSoftKeyRole       := QAction_setSoftKeyRole;
              softKeyRole          := QAction_softKeyRole;
              setIconVisibleInMenu := QAction_setIconVisibleInMenu;
              isIconVisibleInMenu  := QAction_isIconVisibleInMenu;
              parentWidget         := QAction_parentWidget;
              trigger              := QAction_trigger;
              hover                := QAction_hover;
              setChecked           := QAction_setChecked;
              toggle               := QAction_toggle;
              setEnabled           := QAction_setEnabled;
              setDisabled          := QAction_setDisabled;
              setVisible           := QAction_setVisible;
              destroyCxx           := Destroy_QAction;
            END;


BEGIN
END QtAction.
