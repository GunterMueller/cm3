(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

UNSAFE MODULE QtToolBar;


FROM QtIcon IMPORT QIcon;
IMPORT QtToolBarRaw;
FROM QtSize IMPORT QSize;
FROM QtObject IMPORT QObject;
IMPORT M3toC;
FROM QtString IMPORT QString;
FROM QtWidget IMPORT QWidget;
FROM QtAction IMPORT QAction;
IMPORT Ctypes AS C;
FROM QtPoint IMPORT QPoint;
FROM QtNamespace IMPORT ToolBarArea,Orientation,ToolBarAreas,ToolButtonStyle;
FROM QtRect IMPORT QRect;


IMPORT WeakRef;

PROCEDURE New_QToolBar0 (self:QToolBar; title: TEXT;
 parent: QWidget;
): QToolBar =
VAR
result : ADDRESS;
qstr_title := NEW(QString).initQString(title);
arg1tmp :=  LOOPHOLE(qstr_title.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(parent.cxxObj,ADDRESS);
BEGIN
result := QtToolBarRaw.New_QToolBar0(arg1tmp, arg2tmp);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QToolBar);

RETURN self;
END New_QToolBar0;

PROCEDURE New_QToolBar1 (self:QToolBar; title: TEXT;
): QToolBar =
VAR
result : ADDRESS;
qstr_title := NEW(QString).initQString(title);
arg1tmp :=  LOOPHOLE(qstr_title.cxxObj,ADDRESS);
BEGIN
result := QtToolBarRaw.New_QToolBar1(arg1tmp);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QToolBar);

RETURN self;
END New_QToolBar1;

PROCEDURE New_QToolBar2 (self:QToolBar; parent: QWidget;
): QToolBar =
VAR
result : ADDRESS;
arg1tmp :=  LOOPHOLE(parent.cxxObj,ADDRESS);
BEGIN
result := QtToolBarRaw.New_QToolBar2(arg1tmp);

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QToolBar);

RETURN self;
END New_QToolBar2;

PROCEDURE New_QToolBar3 (self:QToolBar;): QToolBar =
VAR
result : ADDRESS;
BEGIN
result := QtToolBarRaw.New_QToolBar3();

  self.cxxObj := result;
  EVAL WeakRef.FromRef(self,Cleanup_QToolBar);

RETURN self;
END New_QToolBar3;

PROCEDURE Delete_QToolBar ( self: QToolBar;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.Delete_QToolBar(selfAdr);
END Delete_QToolBar;

PROCEDURE QToolBar_setMovable ( self: QToolBar;
movable: BOOLEAN;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setMovable(selfAdr, movable);
END QToolBar_setMovable;

PROCEDURE QToolBar_isMovable ( self: QToolBar;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtToolBarRaw.QToolBar_isMovable(selfAdr);
END QToolBar_isMovable;

PROCEDURE QToolBar_setAllowedAreas ( self: QToolBar;
areas: ToolBarAreas;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setAllowedAreas(selfAdr, ORD(areas));
END QToolBar_setAllowedAreas;

PROCEDURE QToolBar_allowedAreas ( self: QToolBar;
): ToolBarAreas =
VAR
ret:INTEGER; result : ToolBarAreas;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_allowedAreas(selfAdr);
result := VAL(ret,ToolBarAreas);  
RETURN result;
END QToolBar_allowedAreas;

PROCEDURE QToolBar_isAreaAllowed ( self: QToolBar;
area: ToolBarArea;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtToolBarRaw.QToolBar_isAreaAllowed(selfAdr, ORD(area));
END QToolBar_isAreaAllowed;

PROCEDURE QToolBar_setOrientation ( self: QToolBar;
orientation: Orientation;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setOrientation(selfAdr, ORD(orientation));
END QToolBar_setOrientation;

PROCEDURE QToolBar_orientation ( self: QToolBar;
): Orientation =
VAR
ret:INTEGER; result : Orientation;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_orientation(selfAdr);
result := VAL(ret,Orientation);  
RETURN result;
END QToolBar_orientation;

PROCEDURE QToolBar_clear ( self: QToolBar;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_clear(selfAdr);
END QToolBar_clear;

PROCEDURE QToolBar_addAction0_0 ( self: QToolBar;
 action: QAction;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(action.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_addAction0_0(selfAdr, arg2tmp);
END QToolBar_addAction0_0;

PROCEDURE QToolBar_addAction1 ( self: QToolBar;
 text: TEXT;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
qstr_text := NEW(QString).initQString(text);
arg2tmp :=  LOOPHOLE(qstr_text.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_addAction1(selfAdr, arg2tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_addAction1;

PROCEDURE QToolBar_addAction2 ( self: QToolBar;
 icon: QIcon;
 text: TEXT;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(icon.cxxObj,ADDRESS);
qstr_text := NEW(QString).initQString(text);
arg3tmp :=  LOOPHOLE(qstr_text.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_addAction2(selfAdr, arg2tmp, arg3tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_addAction2;

PROCEDURE QToolBar_addAction3 ( self: QToolBar;
 text: TEXT;
 receiver: QObject;
 member: TEXT;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
qstr_text := NEW(QString).initQString(text);
arg2tmp :=  LOOPHOLE(qstr_text.cxxObj,ADDRESS);
arg3tmp :=  LOOPHOLE(receiver.cxxObj,ADDRESS);
arg4tmp: C.char_star;
BEGIN
arg4tmp := M3toC.CopyTtoS(member);
ret := QtToolBarRaw.QToolBar_addAction3(selfAdr, arg2tmp, arg3tmp, arg4tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();



RETURN result;
END QToolBar_addAction3;

PROCEDURE QToolBar_addAction4 ( self: QToolBar;
 icon: QIcon;
 text: TEXT;
 receiver: QObject;
 member: TEXT;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(icon.cxxObj,ADDRESS);
qstr_text := NEW(QString).initQString(text);
arg3tmp :=  LOOPHOLE(qstr_text.cxxObj,ADDRESS);
arg4tmp :=  LOOPHOLE(receiver.cxxObj,ADDRESS);
arg5tmp: C.char_star;
BEGIN
arg5tmp := M3toC.CopyTtoS(member);
ret := QtToolBarRaw.QToolBar_addAction4(selfAdr, arg2tmp, arg3tmp, arg4tmp, arg5tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();



RETURN result;
END QToolBar_addAction4;

PROCEDURE QToolBar_addSeparator ( self: QToolBar;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_addSeparator(selfAdr);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_addSeparator;

PROCEDURE QToolBar_insertSeparator ( self: QToolBar;
 before: QAction;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(before.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_insertSeparator(selfAdr, arg2tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_insertSeparator;

PROCEDURE QToolBar_addWidget ( self: QToolBar;
 widget: QWidget;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(widget.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_addWidget(selfAdr, arg2tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_addWidget;

PROCEDURE QToolBar_insertWidget ( self: QToolBar;
 before: QAction;
 widget: QWidget;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(before.cxxObj,ADDRESS);
arg3tmp :=  LOOPHOLE(widget.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_insertWidget(selfAdr, arg2tmp, arg3tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_insertWidget;

PROCEDURE QToolBar_actionGeometry ( self: QToolBar;
 action: QAction;
): QRect =
VAR
ret:ADDRESS; result : QRect;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(action.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_actionGeometry(selfAdr, arg2tmp);

  result := NEW(QRect);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_actionGeometry;

PROCEDURE QToolBar_actionAt ( self: QToolBar;
 p: QPoint;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(p.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_actionAt(selfAdr, arg2tmp);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_actionAt;

PROCEDURE QToolBar_actionAt1 ( self: QToolBar;
x, y: INTEGER;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_actionAt1(selfAdr, x, y);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_actionAt1;

PROCEDURE QToolBar_toggleViewAction ( self: QToolBar;
): QAction =
VAR
ret:ADDRESS; result : QAction;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_toggleViewAction(selfAdr);

  result := NEW(QAction);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_toggleViewAction;

PROCEDURE QToolBar_iconSize ( self: QToolBar;
): QSize =
VAR
ret:ADDRESS; result : QSize;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_iconSize(selfAdr);

  result := NEW(QSize);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_iconSize;

PROCEDURE QToolBar_toolButtonStyle ( self: QToolBar;
): ToolButtonStyle =
VAR
ret:INTEGER; result : ToolButtonStyle;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_toolButtonStyle(selfAdr);
result := VAL(ret,ToolButtonStyle);  
RETURN result;
END QToolBar_toolButtonStyle;

PROCEDURE QToolBar_widgetForAction ( self: QToolBar;
 action: QAction;
): QWidget =
VAR
ret:ADDRESS; result : QWidget;
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(action.cxxObj,ADDRESS);
BEGIN
ret := QtToolBarRaw.QToolBar_widgetForAction(selfAdr, arg2tmp);

  result := NEW(QWidget);
  result.cxxObj := ret;
  result.destroyCxx();

RETURN result;
END QToolBar_widgetForAction;

PROCEDURE QToolBar_isFloatable ( self: QToolBar;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtToolBarRaw.QToolBar_isFloatable(selfAdr);
END QToolBar_isFloatable;

PROCEDURE QToolBar_setFloatable ( self: QToolBar;
floatable: BOOLEAN;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setFloatable(selfAdr, floatable);
END QToolBar_setFloatable;

PROCEDURE QToolBar_isFloating ( self: QToolBar;
): BOOLEAN =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
RETURN QtToolBarRaw.QToolBar_isFloating(selfAdr);
END QToolBar_isFloating;

PROCEDURE QToolBar_setIconSize ( self: QToolBar;
 iconSize: QSize;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
arg2tmp :=  LOOPHOLE(iconSize.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setIconSize(selfAdr, arg2tmp);
END QToolBar_setIconSize;

PROCEDURE QToolBar_setToolButtonStyle ( self: QToolBar;
toolButtonStyle: ToolButtonStyle;
) =
VAR
selfAdr: ADDRESS := LOOPHOLE(self.cxxObj,ADDRESS);
BEGIN
QtToolBarRaw.QToolBar_setToolButtonStyle(selfAdr, ORD(toolButtonStyle));
END QToolBar_setToolButtonStyle;

PROCEDURE Cleanup_QToolBar(<*UNUSED*>READONLY self: WeakRef.T; ref: REFANY) =
VAR obj : QToolBar := ref;
BEGIN
  Delete_QToolBar(obj);
 END Cleanup_QToolBar;

PROCEDURE Destroy_QToolBar(self : QToolBar) =
BEGIN
  EVAL WeakRef.FromRef(self,Cleanup_QToolBar);
END Destroy_QToolBar;

REVEAL
QToolBar =
QToolBarPublic BRANDED OBJECT
OVERRIDES
init_0 := New_QToolBar0;
init_1 := New_QToolBar1;
init_2 := New_QToolBar2;
init_3 := New_QToolBar3;
setMovable := QToolBar_setMovable;
isMovable := QToolBar_isMovable;
setAllowedAreas := QToolBar_setAllowedAreas;
allowedAreas := QToolBar_allowedAreas;
isAreaAllowed := QToolBar_isAreaAllowed;
setOrientation := QToolBar_setOrientation;
orientation := QToolBar_orientation;
clear := QToolBar_clear;
addAction0_0 := QToolBar_addAction0_0;
addAction1 := QToolBar_addAction1;
addAction2 := QToolBar_addAction2;
addAction3 := QToolBar_addAction3;
addAction4 := QToolBar_addAction4;
addSeparator := QToolBar_addSeparator;
insertSeparator := QToolBar_insertSeparator;
addWidget := QToolBar_addWidget;
insertWidget := QToolBar_insertWidget;
actionGeometry := QToolBar_actionGeometry;
actionAt := QToolBar_actionAt;
actionAt1 := QToolBar_actionAt1;
toggleViewAction := QToolBar_toggleViewAction;
iconSize := QToolBar_iconSize;
toolButtonStyle := QToolBar_toolButtonStyle;
widgetForAction := QToolBar_widgetForAction;
isFloatable := QToolBar_isFloatable;
setFloatable := QToolBar_setFloatable;
isFloating := QToolBar_isFloating;
setIconSize := QToolBar_setIconSize;
setToolButtonStyle := QToolBar_setToolButtonStyle;
destroyCxx := Destroy_QToolBar;
END;


BEGIN
END QtToolBar.
