  process_new(pr: Processor, nameAndArgs: [Text], mergeOut: Bool, 
	      wd: Text): Process ! os_error
    Create a process from a processor and the given process name and arguments.
    The local processor is available as the lexically scoped identifier 
    "processor". If mergeOut is true, use a single pipe for stdout and stderr.
    If "wd" is not "", it specifies the working directory for the process.
  process_id(p: Process): Int
    Get the process id of the process 'p'
  process_myId: Int
    The process id of this process
  process_in(p: Process): Wr
    The stdin pipe of a process.
  process_out(p: Process): Rd
    The stdout pipe of a process.
  process_err(p: Process): Rd
    The stderr pipe of a process.
  process_complete(p: Process): Int
    Wait for the process to exit, close all its pipes, and return the exit code
  process_filter(pr: Processor, nameAndArgs: [Text], wd: Text, input:Text):Text 
    ! net_failure os_error
    Create a process from a processor and the given process name and arguments.
    The local processor is available as the lexically scoped identifier 
    "processor". The stderr output is merged to stdout.
    If "wd" is not "", it specifies the working directory for the process.
    Usage: feed the input to its stdin pipe and close it; read all the output
    from its stdout pipe and close it; return the output.
  process_getWorkingDirectory(pr: Processor): Text ! os_error
    The current working directory of this process.
  process_setWorkingDirectory(pr: Processor, dir: Text) ! os_error
    Change then current working directory of this process.
