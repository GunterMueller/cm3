(* Copyright (C) 1994, Digital Equipment Corporation                         *)
(* Digital Internal Use Only                                                 *)
(* All rights reserved.                                                      *)
(*                                                                           *)
(* Last modified on Wed Jul 20 17:43:23 PDT 1994 by najork                   *)
(*       Created on Wed Jul 20 09:39:54 PDT 1994 by najork                   *)


module EmbProxiedObjWrap for EmbProxiedObj;

(* extend is used to create subtypes, and should only be used by 
   machine generated protos.  As long as raw is "ok", it can be used.  When 
   raw is actually assigned to, it just returns self. *)
(*
let TProto = {
  protected, 
  raw    => ok,
  extend => meth (self, o, r) 
	var new = ok;
	if self.raw is ok then 
		self.raw := r;
		if o is ok then 
			new := clone(self);
		else
			new := clone(self, o);
		end;
		self.raw := ok;
	else
		raise(EmbProxiedObj_Error);
	end;
	new
	end,
};
*)

let TProto = {protected,
  raw    => ok,
  extend => meth (self, o) 
	if self.raw is ok then
		if o is ok then clone (self) else clone (o, self) end;
	else
		EmbProxiedObj_Extend (self, o);
	end;
    end,
  make`simple => meth (self) 
	if self.raw is ok then 
		simple (self);
	else
		EmbProxiedObj_Extend (simple(self), {simple});
	end;
    end,
  make`remote => meth (self) 
	if self.raw is ok then 
		remote (self);
	else
		EmbProxiedObj_Extend (remote(self), {});
	end;
    end,
  make`replicated => meth (self, umeths) 
	if self.raw is ok then 
		replicated (self,umeths);
	else
		EmbProxiedObj_Extend (replicated(self,umeths), {replicated});
	end;
    end
};

end module;
