% Partly copied from CVSup by John D. Polstra
%
% Copyright 1999-2003 John D. Polstra.
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions
% are met:
% 1. Redistributions of source code must retain the above copyright
%    notice, this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright
%    notice, this list of conditions and the following disclaimer in the
%    documentation and/or other materials provided with the distribution.
% 3. All advertising materials mentioning features or use of this software
%    must display the following acknowledgment:
%      This product includes software developed by John D. Polstra.
% 4. The name of the author may not be used to endorse or promote products
%    derived from this software without specific prior written permission.
%
% THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
% IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
% NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
% DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
% THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
% THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%
% $Id: version.quake,v 1.5 2007-12-31 17:51:32 jkrell Exp $

% Generate the "Version.m3" implementation file.  It contains the release
% name, if any, else the compilation date and time.
proc version_impl(name) is
  local filename = name & ".m3"
  local tempname = "." & filename
  local datefn = "../" & TARGET & ".datenow"
  local dcmd = ""
  local ret = 0
  if defined("_all")
    > tempname in
      write("MODULE Version;", CR, CR, "BEGIN", CR)
    end

    if equal($OS, "Windows_NT")
        %
        % A ".cmd.i" file is a .cmd file that first is run through the C
        % preprocessor. I have never seen this done before, but the C
        % preprocessor does get around.
        %
        > "date.cmd.i" in
        write(
            %
            % This is localtime instead of UTC.
            %
            % desired 2007-12-31 13:20:36
            % __DATE__ "Dec 31 2007"
            %          012345679012
            % __TIME__ "05:20:50"
            %
            % Initializing this from C code in cm3 would
            % also be a very good idea. I'm not sure how,
            % but will try shortly.
            %
            "@echo off", CR,
            "SetLocal", CR, % just for testing, not really needed
            "set d=__DATE__", CR,
            "set t=__TIME__", CR,
            "set y=%d:~-5,4%", CR,
            "set m=%d:~1,3%", CR,
            "set d=%d:~5,2%", CR,
            "set m=%m:Jan=01%", CR,
            "set m=%m:Feb=02%", CR,
            "set m=%m:Mar=03%", CR,
            "set m=%m:Apr=04%", CR,
            "set m=%m:May=05%", CR,
            "set m=%m:Jun=06%", CR,
            "set m=%m:Jul=07%", CR,
            "set m=%m:Aug=08%", CR,
            "set m=%m:Sep=09%", CR,
            "set m=%m:Oct=10%", CR,
            "set m=%m:Nov=11%", CR,
            "set m=%m:Dec=12%", CR,
            "echo NOW = \"%Y%-%m%-%d% %t:~1,-1%\"", CR,
            )
        end

        % why two names for these?
        local readonly Map =
        {
            "CM3_VERSION_NUMBER" : 
                { "EnvName"  : "CM3VERSIONNUM",
                  "EnvValue" : $CM3VERSIONNUM,
                },

            "CM3_VERSION_TEXT" : 
                { "EnvName"  : "CM3VERSION",
                  "EnvValue" : $CM3VERSION,
                },

            "CM3_LAST_CHANGED" : 
                { "EnvName"  : "CM3LASTCHANGED",
                  "EnvValue" : $CM3LASTCHANGED,
                },
        }

        local readonly True = "True"
        local readonly False = ""

        % are any not defined, and not in the environment
        % if so, we need to run sysinfo.cmd to look at sysinfo.sh
        local Missing = [ ]
        local AnyMissing = False

        % were any initially missing, but then gotten from environment
        % we still need to write and include a file for this
        local AnyChanged = False
        local Changed = [ ]

        foreach Name in Map
            if not defined(Name)
                EnvValue = Map{Name}{"EnvValue"}
                if not equal(EnvValue, "")
                    write("getting " & Name & " from environment " & Map{Name}{"EnvName"} & "=" & EnvValue & CR)
                    Map{Name}{"Value"} = EnvValue
                    Changed += Name
                    AnyChanged = True
                else
                    write("missing " & Name & " will read sysinfo.sh" & CR)
                    Missing += Name
                    AnyMissing = True
                end
            end
        end

        if (AnyChanged or AnyMissing)
            if AnyMissing
                >> "date.cmd.i" in
                    %    
                    % It does not make sense to me that we have to pass in the path to sysinfo.sh here.
                    % The useof %~dp0 in sysinfo.cmd is oddly not working, it is resolving
                    % to the cm3/src/<TARGET> directory of this calling .cmd file.
                    %
                    write("call ..\\..\\..\\scripts\\win\\sysinfo GetDefaultsFromSh ..\\..\\..\\scripts\\sysinfo.sh || exit /b 1", CR)
                end
            end
            foreach Name in Missing
                >> "date.cmd.i" in
                    write("echo ", Name, " = \"%", Map{Name}{"EnvName"}, "%\"", CR)
                end
            end
            foreach Name in Changed
                >> "date.cmd.i" in
                    write("echo ", Name, " = \"", Map{Name}{"Value"}, "\"", CR)
                end
            end
        end
        exec("@" & c_preprocessor & " date.cmd.i>date.cmd 2>nul")
        exec("@.\\date.cmd > " & datefn)
    else
        dcmd = "date -u +'%Y-%m-%d %H:%M:%S' | tr -d '\\n'"
        > datefn in
          write("NOW = \"")
        end
        dcmd = dcmd & " >> " & datefn
        exec("@-" & dcmd)
        >> datefn in
          write("\"" & CR)
        end
    end
    include(datefn)
    if not defined("CM3_VERSION_NUMBER")
      CM3_VERSION_NUMBER = "000000"
      write(" *** warning: CM3_VERSION_NUMBER not defined", CR)
    end
    if not defined("CM3_VERSION_TEXT")
      CM3_VERSION_TEXT = "d0.0.0"
      write(" *** warning: CM3_VERSION_TEXT not defined", CR)
    end
    if not defined("CM3_LAST_CHANGED")
      CM3_LAST_CHANGED = "unknown"
      write(" *** warning: CM3_LAST_CHANGED not defined", CR)
    end
    >> tempname in
      write("  Text := \"", CM3_VERSION_TEXT, "\";", CR)
      write("  Number := \"", CM3_VERSION_NUMBER, "\";", CR)
      write("  LastChanged := \"", CM3_LAST_CHANGED, "\";", CR)
      write("  Created := \"", NOW, "\";", CR)
      write("  Target := \"", TARGET, "\";", CR)
    end
    >> tempname in
      write("END Version.", CR)
    end
    cp_if(tempname, filename)
    derived_implementation(name)
  end
end

