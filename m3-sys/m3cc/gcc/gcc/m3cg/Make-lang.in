# Top level -*- makefile -*- fragment for the Modula-3 code generator
#   Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003
#   Free Software Foundation, Inc.

#This file is part of GCC.

#GCC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.

#GCC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GCC; see the file COPYING.  If not, write to
#the Free Software Foundation, 51 Franklin Street, Fifth Floor,
#Boston, MA 02110-1301, USA.

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
#
# foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.install-normal, foo.install-common, foo.install-man,
# foo.uninstall,
# foo.mostlyclean, foo.clean, foo.distclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (eg: gcc)
# - the compiler proper (eg: m3cgc1)
# - define the names for selecting the language in LANGUAGES.
#
# Define the names for selecting M3CG in LANGUAGES.
M3CG m3cg: m3cgc1$(exeext)

# Tell GNU make to ignore these if they exist.
.PHONY: M3CG m3cg

# Language-specific object files for the Modula-3 Code Generator.
M3CG_OBJS = m3cg/parse.o m3cg/m3-convert.o attribs.o

m3cgc1$(exeext): $(M3CG_OBJS) $(BACKEND) $(LIBDEPS)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(M3CG_OBJS) $(BACKEND) $(LIBS) $(GMPLIBS)

m3cg/parse.o: m3cg/parse.c $(CONFIG_H) $(SYSTEM_H) $(HASHTAB_H) coretypes.h \
  $(TM_H) $(TREE_H) flags.h output.h $(RTL_H) $(GGC_H) toplev.h \
  varray.h $(LANGHOOKS_DEF_H) langhooks.h input.h opts.h options.h \
  gt-m3cg-parse.h gtype-m3cg.h

# looks like rules for gtfiles are now generated automatically
# gt-m3cg-parse.h gtype-m3cg.h : s-gtype; @true

#
# Build hooks:

m3cg.all.build:
m3cg.all.cross:
m3cg.start.encap:
m3cg.rest.encap:
m3cg.info:
m3cg.man:
m3cg.srcinfo:
m3cg.srcman:

m3cg.tags: force
	cd $(srcdir)/m3cg; etags -o TAGS.sub *.c *.h
	etags --include TAGS.sub --include ../TAGS.sub

#
# Install hooks:
# m3cgc1 is installed elsewhere as part of $(COMPILERS).

m3cg.install-normal:

m3cg.install-common:

m3cg.install-man:

m3cg.uninstall:
#
# Clean hooks:
# A lot of the ancillary files are deleted by the main makefile.
# We just have to delete files specific to us.
m3cg.mostlyclean:
	-rm -f m3cg/*$(objext)
m3cg.clean: m3cg.mostlyclean
m3cg.distclean:
	-rm -f m3cg/Makefile m3cg/Make-host m3cg/Make-target
	-rm -f m3cg/config.status m3cg/config.cache
m3cg.maintainer-clean:
#
# Stage hooks:

m3cg.stage1: stage1-start
	-mv m3cg/*$(objext) stage1/m3cg
m3cg.stage2: stage2-start
	-mv m3cg/*$(objext) stage2/m3cg
m3cg.stage3: stage3-start
	-mv m3cg/*$(objext) stage3/m3cg
m3cg.stage4: stage4-start
	-mv m3cg/*$(objext) stage4/m3cg
m3cg.stageprofile: stageprofile-start
	-mv m3cg/*$(objext) stageprofile/m3cg
m3cg.stagefeedback: stagefeedback-start
	-mv m3cg/*$(objext) stagefeedback/m3cg
