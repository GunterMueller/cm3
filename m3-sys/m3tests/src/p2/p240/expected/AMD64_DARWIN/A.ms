	.text
.globl _A__ret_ki16
	.private_extern _A__ret_ki16
_A__ret_ki16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__ret_kLC
	.private_extern _A__ret_kLC
_A__ret_kLC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$2, %eax
	leave
	ret
.globl _A__ret_kf64
	.private_extern _A__ret_kf64
_A__ret_kf64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	LC0(%rip), %xmm0
	leave
	ret
.globl _A__ret_ki64
	.private_extern _A__ret_ki64
_A__ret_ki64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$5, %eax
	leave
	ret
.globl _A__ret_kI
	.private_extern _A__ret_kI
_A__ret_kI:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$6, %eax
	leave
	ret
.globl _A__ret_ku8
	.private_extern _A__ret_ku8
_A__ret_ku8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$7, %eax
	leave
	ret
.globl _A__ret_kC
	.private_extern _A__ret_kC
_A__ret_kC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$8, %eax
	leave
	ret
.globl _A__ret_kf32
	.private_extern _A__ret_kf32
_A__ret_kf32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	LC1(%rip), %xmm0
	leave
	ret
.globl _A__ret_ku32
	.private_extern _A__ret_ku32
_A__ret_ku32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$11, %eax
	leave
	ret
.globl _A__ret_ki8
	.private_extern _A__ret_ki8
_A__ret_ki8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$12, %eax
	leave
	ret
.globl _A__ret_kL
	.private_extern _A__ret_kL
_A__ret_kL:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$13, %eax
	leave
	ret
.globl _A__ret_ku64
	.private_extern _A__ret_ku64
_A__ret_ku64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$14, %eax
	leave
	ret
.globl _A__ret_ku16
	.private_extern _A__ret_ku16
_A__ret_ku16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$15, %eax
	leave
	ret
.globl _A__ret_ki32
	.private_extern _A__ret_ki32
_A__ret_ki32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$16, %eax
	leave
	ret
.globl _A__ret_vi16
	.private_extern _A__ret_vi16
_A__ret_vi16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leave
	ret
.globl _A__ret_vLC
	.private_extern _A__ret_vLC
_A__ret_vLC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vf64
	.private_extern _A__ret_vf64
_A__ret_vf64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm0
	leave
	ret
.globl _A__ret_vi64
	.private_extern _A__ret_vi64
_A__ret_vi64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vI
	.private_extern _A__ret_vI
_A__ret_vI:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vu8
	.private_extern _A__ret_vu8
_A__ret_vu8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leave
	ret
.globl _A__ret_vC
	.private_extern _A__ret_vC
_A__ret_vC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vf32
	.private_extern _A__ret_vf32
_A__ret_vf32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm0
	leave
	ret
.globl _A__ret_vu32
	.private_extern _A__ret_vu32
_A__ret_vu32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	leave
	ret
.globl _A__ret_vi8
	.private_extern _A__ret_vi8
_A__ret_vi8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__ret_vL
	.private_extern _A__ret_vL
_A__ret_vL:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vu64
	.private_extern _A__ret_vu64
_A__ret_vu64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	leave
	ret
.globl _A__ret_vu16
	.private_extern _A__ret_vu16
_A__ret_vu16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leave
	ret
.globl _A__ret_vi32
	.private_extern _A__ret_vi32
_A__ret_vi32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leave
	ret
.globl _A__ret_pi16
	.private_extern _A__ret_pi16
_A__ret_pi16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_pLC
	.private_extern _A__ret_pLC
_A__ret_pLC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pf64
	.private_extern _A__ret_pf64
_A__ret_pf64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	-24(%rbp), %xmm0
	leave
	ret
.globl _A__ret_pi64
	.private_extern _A__ret_pi64
_A__ret_pi64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pI
	.private_extern _A__ret_pI
_A__ret_pI:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pu8
	.private_extern _A__ret_pu8
_A__ret_pu8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_pC
	.private_extern _A__ret_pC
_A__ret_pC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pf32
	.private_extern _A__ret_pf32
_A__ret_pf32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	-20(%rbp), %xmm0
	leave
	ret
.globl _A__ret_pu32
	.private_extern _A__ret_pu32
_A__ret_pu32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_pi8
	.private_extern _A__ret_pi8
_A__ret_pi8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_pL
	.private_extern _A__ret_pL
_A__ret_pL:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pu64
	.private_extern _A__ret_pu64
_A__ret_pu64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_pu16
	.private_extern _A__ret_pu16
_A__ret_pu16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_pi32
	.private_extern _A__ret_pi32
_A__ret_pi32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_LC_LC
	.private_extern _A__ret_LC_LC
_A__ret_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_i64
	.private_extern _A__ret_LC_i64
_A__ret_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_i16
	.private_extern _A__ret_LC_i16
_A__ret_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_I
	.private_extern _A__ret_LC_I
_A__ret_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_u8
	.private_extern _A__ret_LC_u8
_A__ret_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_C
	.private_extern _A__ret_LC_C
_A__ret_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_u32
	.private_extern _A__ret_LC_u32
_A__ret_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_i8
	.private_extern _A__ret_LC_i8
_A__ret_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_L
	.private_extern _A__ret_LC_L
_A__ret_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_u64
	.private_extern _A__ret_LC_u64
_A__ret_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_i32
	.private_extern _A__ret_LC_i32
_A__ret_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_LC_u16
	.private_extern _A__ret_LC_u16
_A__ret_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_LC
	.private_extern _A__ret_i64_LC
_A__ret_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_i64
	.private_extern _A__ret_i64_i64
_A__ret_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_i16
	.private_extern _A__ret_i64_i16
_A__ret_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_I
	.private_extern _A__ret_i64_I
_A__ret_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_u8
	.private_extern _A__ret_i64_u8
_A__ret_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_C
	.private_extern _A__ret_i64_C
_A__ret_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_u32
	.private_extern _A__ret_i64_u32
_A__ret_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_i8
	.private_extern _A__ret_i64_i8
_A__ret_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_L
	.private_extern _A__ret_i64_L
_A__ret_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_u64
	.private_extern _A__ret_i64_u64
_A__ret_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_i32
	.private_extern _A__ret_i64_i32
_A__ret_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i64_u16
	.private_extern _A__ret_i64_u16
_A__ret_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i16_LC
	.private_extern _A__ret_i16_LC
_A__ret_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_i64
	.private_extern _A__ret_i16_i64
_A__ret_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_i16
	.private_extern _A__ret_i16_i16
_A__ret_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_I
	.private_extern _A__ret_i16_I
_A__ret_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_u8
	.private_extern _A__ret_i16_u8
_A__ret_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_C
	.private_extern _A__ret_i16_C
_A__ret_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_u32
	.private_extern _A__ret_i16_u32
_A__ret_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_i8
	.private_extern _A__ret_i16_i8
_A__ret_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_L
	.private_extern _A__ret_i16_L
_A__ret_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_u64
	.private_extern _A__ret_i16_u64
_A__ret_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_i32
	.private_extern _A__ret_i16_i32
_A__ret_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_i16_u16
	.private_extern _A__ret_i16_u16
_A__ret_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movzwl	-18(%rbp), %eax
	leave
	ret
.globl _A__ret_I_LC
	.private_extern _A__ret_I_LC
_A__ret_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_i64
	.private_extern _A__ret_I_i64
_A__ret_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_i16
	.private_extern _A__ret_I_i16
_A__ret_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_I
	.private_extern _A__ret_I_I
_A__ret_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_u8
	.private_extern _A__ret_I_u8
_A__ret_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_C
	.private_extern _A__ret_I_C
_A__ret_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_u32
	.private_extern _A__ret_I_u32
_A__ret_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_i8
	.private_extern _A__ret_I_i8
_A__ret_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_L
	.private_extern _A__ret_I_L
_A__ret_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_u64
	.private_extern _A__ret_I_u64
_A__ret_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_i32
	.private_extern _A__ret_I_i32
_A__ret_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_I_u16
	.private_extern _A__ret_I_u16
_A__ret_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u8_LC
	.private_extern _A__ret_u8_LC
_A__ret_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_i64
	.private_extern _A__ret_u8_i64
_A__ret_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_i16
	.private_extern _A__ret_u8_i16
_A__ret_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_I
	.private_extern _A__ret_u8_I
_A__ret_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_u8
	.private_extern _A__ret_u8_u8
_A__ret_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_C
	.private_extern _A__ret_u8_C
_A__ret_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_u32
	.private_extern _A__ret_u8_u32
_A__ret_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_i8
	.private_extern _A__ret_u8_i8
_A__ret_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_L
	.private_extern _A__ret_u8_L
_A__ret_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_u64
	.private_extern _A__ret_u8_u64
_A__ret_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_i32
	.private_extern _A__ret_u8_i32
_A__ret_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_u8_u16
	.private_extern _A__ret_u8_u16
_A__ret_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movsbq	-17(%rbp),%rax
	leave
	ret
.globl _A__ret_C_LC
	.private_extern _A__ret_C_LC
_A__ret_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_i64
	.private_extern _A__ret_C_i64
_A__ret_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_i16
	.private_extern _A__ret_C_i16
_A__ret_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_I
	.private_extern _A__ret_C_I
_A__ret_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_u8
	.private_extern _A__ret_C_u8
_A__ret_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_C
	.private_extern _A__ret_C_C
_A__ret_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_u32
	.private_extern _A__ret_C_u32
_A__ret_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_i8
	.private_extern _A__ret_C_i8
_A__ret_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_L
	.private_extern _A__ret_C_L
_A__ret_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_u64
	.private_extern _A__ret_C_u64
_A__ret_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_i32
	.private_extern _A__ret_C_i32
_A__ret_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_C_u16
	.private_extern _A__ret_C_u16
_A__ret_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u32_LC
	.private_extern _A__ret_u32_LC
_A__ret_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_i64
	.private_extern _A__ret_u32_i64
_A__ret_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_i16
	.private_extern _A__ret_u32_i16
_A__ret_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_I
	.private_extern _A__ret_u32_I
_A__ret_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_u8
	.private_extern _A__ret_u32_u8
_A__ret_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_C
	.private_extern _A__ret_u32_C
_A__ret_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_u32
	.private_extern _A__ret_u32_u32
_A__ret_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_i8
	.private_extern _A__ret_u32_i8
_A__ret_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_L
	.private_extern _A__ret_u32_L
_A__ret_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_u64
	.private_extern _A__ret_u32_u64
_A__ret_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_i32
	.private_extern _A__ret_u32_i32
_A__ret_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_u32_u16
	.private_extern _A__ret_u32_u16
_A__ret_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	-20(%rbp), %eax
	cltq
	leave
	ret
.globl _A__ret_i8_LC
	.private_extern _A__ret_i8_LC
_A__ret_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_i64
	.private_extern _A__ret_i8_i64
_A__ret_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_i16
	.private_extern _A__ret_i8_i16
_A__ret_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_I
	.private_extern _A__ret_i8_I
_A__ret_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_u8
	.private_extern _A__ret_i8_u8
_A__ret_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_C
	.private_extern _A__ret_i8_C
_A__ret_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_u32
	.private_extern _A__ret_i8_u32
_A__ret_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_i8
	.private_extern _A__ret_i8_i8
_A__ret_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_L
	.private_extern _A__ret_i8_L
_A__ret_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_u64
	.private_extern _A__ret_i8_u64
_A__ret_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_i32
	.private_extern _A__ret_i8_i32
_A__ret_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_i8_u16
	.private_extern _A__ret_i8_u16
_A__ret_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movzbl	-17(%rbp), %eax
	leave
	ret
.globl _A__ret_L_LC
	.private_extern _A__ret_L_LC
_A__ret_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_i64
	.private_extern _A__ret_L_i64
_A__ret_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_i16
	.private_extern _A__ret_L_i16
_A__ret_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_I
	.private_extern _A__ret_L_I
_A__ret_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_u8
	.private_extern _A__ret_L_u8
_A__ret_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_C
	.private_extern _A__ret_L_C
_A__ret_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_u32
	.private_extern _A__ret_L_u32
_A__ret_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_i8
	.private_extern _A__ret_L_i8
_A__ret_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_L
	.private_extern _A__ret_L_L
_A__ret_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_u64
	.private_extern _A__ret_L_u64
_A__ret_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_i32
	.private_extern _A__ret_L_i32
_A__ret_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_L_u16
	.private_extern _A__ret_L_u16
_A__ret_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_LC
	.private_extern _A__ret_u64_LC
_A__ret_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_i64
	.private_extern _A__ret_u64_i64
_A__ret_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_i16
	.private_extern _A__ret_u64_i16
_A__ret_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_I
	.private_extern _A__ret_u64_I
_A__ret_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_u8
	.private_extern _A__ret_u64_u8
_A__ret_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_C
	.private_extern _A__ret_u64_C
_A__ret_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_u32
	.private_extern _A__ret_u64_u32
_A__ret_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_i8
	.private_extern _A__ret_u64_i8
_A__ret_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_L
	.private_extern _A__ret_u64_L
_A__ret_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_u64
	.private_extern _A__ret_u64_u64
_A__ret_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_i32
	.private_extern _A__ret_u64_i32
_A__ret_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_u64_u16
	.private_extern _A__ret_u64_u16
_A__ret_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__ret_i32_LC
	.private_extern _A__ret_i32_LC
_A__ret_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_i64
	.private_extern _A__ret_i32_i64
_A__ret_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_i16
	.private_extern _A__ret_i32_i16
_A__ret_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_I
	.private_extern _A__ret_i32_I
_A__ret_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_u8
	.private_extern _A__ret_i32_u8
_A__ret_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_C
	.private_extern _A__ret_i32_C
_A__ret_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_u32
	.private_extern _A__ret_i32_u32
_A__ret_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_i8
	.private_extern _A__ret_i32_i8
_A__ret_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_L
	.private_extern _A__ret_i32_L
_A__ret_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_u64
	.private_extern _A__ret_i32_u64
_A__ret_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_i32
	.private_extern _A__ret_i32_i32
_A__ret_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_i32_u16
	.private_extern _A__ret_i32_u16
_A__ret_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	mov	-20(%rbp), %eax
	leave
	ret
.globl _A__ret_u16_LC
	.private_extern _A__ret_u16_LC
_A__ret_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_i64
	.private_extern _A__ret_u16_i64
_A__ret_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_i16
	.private_extern _A__ret_u16_i16
_A__ret_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_I
	.private_extern _A__ret_u16_I
_A__ret_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_u8
	.private_extern _A__ret_u16_u8
_A__ret_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_C
	.private_extern _A__ret_u16_C
_A__ret_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_u32
	.private_extern _A__ret_u16_u32
_A__ret_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_i8
	.private_extern _A__ret_u16_i8
_A__ret_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_L
	.private_extern _A__ret_u16_L
_A__ret_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_u64
	.private_extern _A__ret_u16_u64
_A__ret_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_i32
	.private_extern _A__ret_u16_i32
_A__ret_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__ret_u16_u16
	.private_extern _A__ret_u16_u16
_A__ret_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movswq	-18(%rbp),%rax
	leave
	ret
.globl _A__uPlus_var_i16_i16
	.private_extern _A__uPlus_var_i16_i16
_A__uPlus_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_i16
	.private_extern _A__Plus_var_i16_i16
_A__Plus_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L376
	movl	$8097, %edi
	call	__m3_fault
L376:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_i16
	.private_extern _A__uPlus_param_i16_i16
_A__uPlus_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_i16
	.private_extern _A__Plus_param_i16_i16
_A__Plus_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movzwl	-20(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L381
	movl	$8161, %edi
	call	__m3_fault
L381:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_LC
	.private_extern _A__uPlus_var_i16_LC
_A__uPlus_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_LC
	.private_extern _A__Plus_var_i16_LC
_A__Plus_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i16_LC
	.private_extern _A__uPlus_param_i16_LC
_A__uPlus_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i16_LC
	.private_extern _A__Plus_param_i16_LC
_A__Plus_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_i16_i64
	.private_extern _A__uPlus_var_i16_i64
_A__uPlus_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_i64
	.private_extern _A__Plus_var_i16_i64
_A__Plus_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i16_i64
	.private_extern _A__uPlus_param_i16_i64
_A__uPlus_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_i64
	.private_extern _A__Plus_param_i16_i64
_A__Plus_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_I
	.private_extern _A__uPlus_var_i16_I
_A__uPlus_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_I
	.private_extern _A__Plus_var_i16_I
_A__Plus_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L402
	cmpq	$65535, -16(%rbp)
	jle	L403
L402:
	movl	$8481, %edi
	call	__m3_fault
L403:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_I
	.private_extern _A__uPlus_param_i16_I
_A__uPlus_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_I
	.private_extern _A__Plus_param_i16_I
_A__Plus_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L408
	cmpq	$65535, -16(%rbp)
	jle	L409
L408:
	movl	$8545, %edi
	call	__m3_fault
L409:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_u8
	.private_extern _A__uPlus_var_i16_u8
_A__uPlus_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_u8
	.private_extern _A__Plus_var_i16_u8
_A__Plus_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L414
	cmpq	$65535, -16(%rbp)
	jle	L415
L414:
	movl	$8609, %edi
	call	__m3_fault
L415:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_u8
	.private_extern _A__uPlus_param_i16_u8
_A__uPlus_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_u8
	.private_extern _A__Plus_param_i16_u8
_A__Plus_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movsbq	-19(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L420
	cmpq	$65535, -16(%rbp)
	jle	L421
L420:
	movl	$8673, %edi
	call	__m3_fault
L421:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_C
	.private_extern _A__uPlus_var_i16_C
_A__uPlus_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_C
	.private_extern _A__Plus_var_i16_C
_A__Plus_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L426
	cmpq	$65535, -16(%rbp)
	jle	L427
L426:
	movl	$8737, %edi
	call	__m3_fault
L427:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_C
	.private_extern _A__uPlus_param_i16_C
_A__uPlus_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i16_C
	.private_extern _A__Plus_param_i16_C
_A__Plus_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L432
	cmpq	$65535, -16(%rbp)
	jle	L433
L432:
	movl	$8801, %edi
	call	__m3_fault
L433:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_u32
	.private_extern _A__uPlus_var_i16_u32
_A__uPlus_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_u32
	.private_extern _A__Plus_var_i16_u32
_A__Plus_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L438
	cmpq	$65535, -16(%rbp)
	jle	L439
L438:
	movl	$8865, %edi
	call	__m3_fault
L439:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_u32
	.private_extern _A__uPlus_param_i16_u32
_A__uPlus_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_u32
	.private_extern _A__Plus_param_i16_u32
_A__Plus_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L444
	cmpq	$65535, -16(%rbp)
	jle	L445
L444:
	movl	$8929, %edi
	call	__m3_fault
L445:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_i8
	.private_extern _A__uPlus_var_i16_i8
_A__uPlus_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_i8
	.private_extern _A__Plus_var_i16_i8
_A__Plus_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L450
	movl	$8993, %edi
	call	__m3_fault
L450:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_i8
	.private_extern _A__uPlus_param_i16_i8
_A__uPlus_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_i8
	.private_extern _A__Plus_param_i16_i8
_A__Plus_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movzbl	-19(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L455
	movl	$9057, %edi
	call	__m3_fault
L455:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_L
	.private_extern _A__uPlus_var_i16_L
_A__uPlus_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_L
	.private_extern _A__Plus_var_i16_L
_A__Plus_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i16_L
	.private_extern _A__uPlus_param_i16_L
_A__uPlus_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_L
	.private_extern _A__Plus_param_i16_L
_A__Plus_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_u64
	.private_extern _A__uPlus_var_i16_u64
_A__uPlus_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_u64
	.private_extern _A__Plus_var_i16_u64
_A__Plus_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i16_u64
	.private_extern _A__uPlus_param_i16_u64
_A__uPlus_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_u64
	.private_extern _A__Plus_param_i16_u64
_A__Plus_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_u16
	.private_extern _A__uPlus_var_i16_u16
_A__uPlus_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_u16
	.private_extern _A__Plus_var_i16_u16
_A__Plus_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L476
	cmpq	$65535, -16(%rbp)
	jle	L477
L476:
	movl	$9377, %edi
	call	__m3_fault
L477:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_u16
	.private_extern _A__uPlus_param_i16_u16
_A__uPlus_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_u16
	.private_extern _A__Plus_param_i16_u16
_A__Plus_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movswq	-20(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L482
	cmpq	$65535, -16(%rbp)
	jle	L483
L482:
	movl	$9441, %edi
	call	__m3_fault
L483:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i16_i32
	.private_extern _A__uPlus_var_i16_i32
_A__uPlus_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i16_i32
	.private_extern _A__Plus_var_i16_i32
_A__Plus_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L488
	movl	$9505, %edi
	call	__m3_fault
L488:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i16_i32
	.private_extern _A__uPlus_param_i16_i32
_A__uPlus_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i16_i32
	.private_extern _A__Plus_param_i16_i32
_A__Plus_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	mov	-24(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L493
	movl	$9569, %edi
	call	__m3_fault
L493:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_LC_i16
	.private_extern _A__uPlus_var_LC_i16
_A__uPlus_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_i16
	.private_extern _A__Plus_var_LC_i16
_A__Plus_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_i16
	.private_extern _A__uPlus_param_LC_i16
_A__uPlus_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_i16
	.private_extern _A__Plus_param_LC_i16
_A__Plus_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_LC
	.private_extern _A__uPlus_var_LC_LC
_A__uPlus_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_LC
	.private_extern _A__Plus_var_LC_LC
_A__Plus_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_LC
	.private_extern _A__uPlus_param_LC_LC
_A__uPlus_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__Plus_param_LC_LC
	.private_extern _A__Plus_param_LC_LC
_A__Plus_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_i64
	.private_extern _A__uPlus_var_LC_i64
_A__uPlus_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_i64
	.private_extern _A__Plus_var_LC_i64
_A__Plus_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_i64
	.private_extern _A__uPlus_param_LC_i64
_A__uPlus_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_i64
	.private_extern _A__Plus_param_LC_i64
_A__Plus_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_LC_I
	.private_extern _A__uPlus_var_LC_I
_A__uPlus_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_I
	.private_extern _A__Plus_var_LC_I
_A__Plus_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_I
	.private_extern _A__uPlus_param_LC_I
_A__uPlus_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_I
	.private_extern _A__Plus_param_LC_I
_A__Plus_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_LC_u8
	.private_extern _A__uPlus_var_LC_u8
_A__uPlus_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_u8
	.private_extern _A__Plus_var_LC_u8
_A__Plus_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_u8
	.private_extern _A__uPlus_param_LC_u8
_A__uPlus_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_u8
	.private_extern _A__Plus_param_LC_u8
_A__Plus_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_C
	.private_extern _A__uPlus_var_LC_C
_A__uPlus_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_C
	.private_extern _A__Plus_var_LC_C
_A__Plus_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_C
	.private_extern _A__uPlus_param_LC_C
_A__uPlus_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__Plus_param_LC_C
	.private_extern _A__Plus_param_LC_C
_A__Plus_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_u32
	.private_extern _A__uPlus_var_LC_u32
_A__uPlus_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_u32
	.private_extern _A__Plus_var_LC_u32
_A__Plus_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_u32
	.private_extern _A__uPlus_param_LC_u32
_A__uPlus_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_u32
	.private_extern _A__Plus_param_LC_u32
_A__Plus_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_i8
	.private_extern _A__uPlus_var_LC_i8
_A__uPlus_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_i8
	.private_extern _A__Plus_var_LC_i8
_A__Plus_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_i8
	.private_extern _A__uPlus_param_LC_i8
_A__uPlus_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_i8
	.private_extern _A__Plus_param_LC_i8
_A__Plus_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_L
	.private_extern _A__uPlus_var_LC_L
_A__uPlus_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_L
	.private_extern _A__Plus_var_LC_L
_A__Plus_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_L
	.private_extern _A__uPlus_param_LC_L
_A__uPlus_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_L
	.private_extern _A__Plus_param_LC_L
_A__Plus_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_LC_u64
	.private_extern _A__uPlus_var_LC_u64
_A__uPlus_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_u64
	.private_extern _A__Plus_var_LC_u64
_A__Plus_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_u64
	.private_extern _A__uPlus_param_LC_u64
_A__uPlus_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_u64
	.private_extern _A__Plus_param_LC_u64
_A__Plus_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_LC_u16
	.private_extern _A__uPlus_var_LC_u16
_A__uPlus_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_u16
	.private_extern _A__Plus_var_LC_u16
_A__Plus_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_u16
	.private_extern _A__uPlus_param_LC_u16
_A__uPlus_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_u16
	.private_extern _A__Plus_param_LC_u16
_A__Plus_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_LC_i32
	.private_extern _A__uPlus_var_LC_i32
_A__uPlus_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_LC_i32
	.private_extern _A__Plus_var_LC_i32
_A__Plus_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_LC_i32
	.private_extern _A__uPlus_param_LC_i32
_A__uPlus_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_LC_i32
	.private_extern _A__Plus_param_LC_i32
_A__Plus_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_f64_f64
	.private_extern _A__Plus_var_f64_f64
_A__Plus_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm0
	addsd	%xmm0, %xmm0
	leave
	ret
.globl _A__Plus_param_f64_f64
	.private_extern _A__Plus_param_f64_f64
_A__Plus_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	addsd	-32(%rbp), %xmm0
	leave
	ret
.globl _A__uPlus_var_i64_i16
	.private_extern _A__uPlus_var_i64_i16
_A__uPlus_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_i16
	.private_extern _A__Plus_var_i64_i16
_A__Plus_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_i16
	.private_extern _A__uPlus_param_i64_i16
_A__uPlus_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_i16
	.private_extern _A__Plus_param_i64_i16
_A__Plus_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_LC
	.private_extern _A__uPlus_var_i64_LC
_A__uPlus_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_LC
	.private_extern _A__Plus_var_i64_LC
_A__Plus_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_LC
	.private_extern _A__uPlus_param_i64_LC
_A__uPlus_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i64_LC
	.private_extern _A__Plus_param_i64_LC
_A__Plus_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_i64
	.private_extern _A__uPlus_var_i64_i64
_A__uPlus_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_i64
	.private_extern _A__Plus_var_i64_i64
_A__Plus_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_i64
	.private_extern _A__uPlus_param_i64_i64
_A__uPlus_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_i64
	.private_extern _A__Plus_param_i64_i64
_A__Plus_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_i64_I
	.private_extern _A__uPlus_var_i64_I
_A__uPlus_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_I
	.private_extern _A__Plus_var_i64_I
_A__Plus_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_I
	.private_extern _A__uPlus_param_i64_I
_A__uPlus_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_I
	.private_extern _A__Plus_param_i64_I
_A__Plus_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_i64_u8
	.private_extern _A__uPlus_var_i64_u8
_A__uPlus_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_u8
	.private_extern _A__Plus_var_i64_u8
_A__Plus_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_u8
	.private_extern _A__uPlus_param_i64_u8
_A__uPlus_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_u8
	.private_extern _A__Plus_param_i64_u8
_A__Plus_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_C
	.private_extern _A__uPlus_var_i64_C
_A__uPlus_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_C
	.private_extern _A__Plus_var_i64_C
_A__Plus_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_C
	.private_extern _A__uPlus_param_i64_C
_A__uPlus_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i64_C
	.private_extern _A__Plus_param_i64_C
_A__Plus_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_u32
	.private_extern _A__uPlus_var_i64_u32
_A__uPlus_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_u32
	.private_extern _A__Plus_var_i64_u32
_A__Plus_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_u32
	.private_extern _A__uPlus_param_i64_u32
_A__uPlus_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_u32
	.private_extern _A__Plus_param_i64_u32
_A__Plus_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_i8
	.private_extern _A__uPlus_var_i64_i8
_A__uPlus_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_i8
	.private_extern _A__Plus_var_i64_i8
_A__Plus_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_i8
	.private_extern _A__uPlus_param_i64_i8
_A__uPlus_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_i8
	.private_extern _A__Plus_param_i64_i8
_A__Plus_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_L
	.private_extern _A__uPlus_var_i64_L
_A__uPlus_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_L
	.private_extern _A__Plus_var_i64_L
_A__Plus_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_L
	.private_extern _A__uPlus_param_i64_L
_A__uPlus_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_L
	.private_extern _A__Plus_param_i64_L
_A__Plus_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_i64_u64
	.private_extern _A__uPlus_var_i64_u64
_A__uPlus_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_u64
	.private_extern _A__Plus_var_i64_u64
_A__Plus_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_u64
	.private_extern _A__uPlus_param_i64_u64
_A__uPlus_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_u64
	.private_extern _A__Plus_param_i64_u64
_A__Plus_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_i64_u16
	.private_extern _A__uPlus_var_i64_u16
_A__uPlus_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_u16
	.private_extern _A__Plus_var_i64_u16
_A__Plus_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_u16
	.private_extern _A__uPlus_param_i64_u16
_A__uPlus_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_u16
	.private_extern _A__Plus_param_i64_u16
_A__Plus_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i64_i32
	.private_extern _A__uPlus_var_i64_i32
_A__uPlus_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i64_i32
	.private_extern _A__Plus_var_i64_i32
_A__Plus_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i64_i32
	.private_extern _A__uPlus_param_i64_i32
_A__uPlus_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i64_i32
	.private_extern _A__Plus_param_i64_i32
_A__Plus_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_i16
	.private_extern _A__uPlus_var_I_i16
_A__uPlus_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_i16
	.private_extern _A__Plus_var_I_i16
_A__Plus_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_i16
	.private_extern _A__uPlus_param_I_i16
_A__uPlus_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_i16
	.private_extern _A__Plus_param_I_i16
_A__Plus_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_LC
	.private_extern _A__uPlus_var_I_LC
_A__uPlus_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_LC
	.private_extern _A__Plus_var_I_LC
_A__Plus_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_LC
	.private_extern _A__uPlus_param_I_LC
_A__uPlus_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_I_LC
	.private_extern _A__Plus_param_I_LC
_A__Plus_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_i64
	.private_extern _A__uPlus_var_I_i64
_A__uPlus_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_i64
	.private_extern _A__Plus_var_I_i64
_A__Plus_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_i64
	.private_extern _A__uPlus_param_I_i64
_A__uPlus_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_i64
	.private_extern _A__Plus_param_I_i64
_A__Plus_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_I_I
	.private_extern _A__uPlus_var_I_I
_A__uPlus_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_I
	.private_extern _A__Plus_var_I_I
_A__Plus_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_I
	.private_extern _A__uPlus_param_I_I
_A__uPlus_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_I
	.private_extern _A__Plus_param_I_I
_A__Plus_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_I_u8
	.private_extern _A__uPlus_var_I_u8
_A__uPlus_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_u8
	.private_extern _A__Plus_var_I_u8
_A__Plus_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_u8
	.private_extern _A__uPlus_param_I_u8
_A__uPlus_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_u8
	.private_extern _A__Plus_param_I_u8
_A__Plus_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_C
	.private_extern _A__uPlus_var_I_C
_A__uPlus_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_C
	.private_extern _A__Plus_var_I_C
_A__Plus_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_C
	.private_extern _A__uPlus_param_I_C
_A__uPlus_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_I_C
	.private_extern _A__Plus_param_I_C
_A__Plus_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_u32
	.private_extern _A__uPlus_var_I_u32
_A__uPlus_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_u32
	.private_extern _A__Plus_var_I_u32
_A__Plus_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_u32
	.private_extern _A__uPlus_param_I_u32
_A__uPlus_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_u32
	.private_extern _A__Plus_param_I_u32
_A__Plus_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_i8
	.private_extern _A__uPlus_var_I_i8
_A__uPlus_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_i8
	.private_extern _A__Plus_var_I_i8
_A__Plus_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_i8
	.private_extern _A__uPlus_param_I_i8
_A__uPlus_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_i8
	.private_extern _A__Plus_param_I_i8
_A__Plus_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_L
	.private_extern _A__uPlus_var_I_L
_A__uPlus_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_L
	.private_extern _A__Plus_var_I_L
_A__Plus_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_L
	.private_extern _A__uPlus_param_I_L
_A__uPlus_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_L
	.private_extern _A__Plus_param_I_L
_A__Plus_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_I_u64
	.private_extern _A__uPlus_var_I_u64
_A__uPlus_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_u64
	.private_extern _A__Plus_var_I_u64
_A__Plus_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_u64
	.private_extern _A__uPlus_param_I_u64
_A__uPlus_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_u64
	.private_extern _A__Plus_param_I_u64
_A__Plus_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_I_u16
	.private_extern _A__uPlus_var_I_u16
_A__uPlus_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_u16
	.private_extern _A__Plus_var_I_u16
_A__Plus_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_u16
	.private_extern _A__uPlus_param_I_u16
_A__uPlus_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_u16
	.private_extern _A__Plus_param_I_u16
_A__Plus_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_I_i32
	.private_extern _A__uPlus_var_I_i32
_A__uPlus_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_I_i32
	.private_extern _A__Plus_var_I_i32
_A__Plus_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_I_i32
	.private_extern _A__uPlus_param_I_i32
_A__uPlus_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_I_i32
	.private_extern _A__Plus_param_I_i32
_A__Plus_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_i16
	.private_extern _A__uPlus_var_u8_i16
_A__uPlus_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_i16
	.private_extern _A__Plus_var_u8_i16
_A__Plus_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L790
	movl	$14305, %edi
	call	__m3_fault
L790:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_i16
	.private_extern _A__uPlus_param_u8_i16
_A__uPlus_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_i16
	.private_extern _A__Plus_param_u8_i16
_A__Plus_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movzwl	-20(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L795
	movl	$14369, %edi
	call	__m3_fault
L795:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_LC
	.private_extern _A__uPlus_var_u8_LC
_A__uPlus_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_LC
	.private_extern _A__Plus_var_u8_LC
_A__Plus_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u8_LC
	.private_extern _A__uPlus_param_u8_LC
_A__uPlus_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u8_LC
	.private_extern _A__Plus_param_u8_LC
_A__Plus_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_u8_i64
	.private_extern _A__uPlus_var_u8_i64
_A__uPlus_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_i64
	.private_extern _A__Plus_var_u8_i64
_A__Plus_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u8_i64
	.private_extern _A__uPlus_param_u8_i64
_A__uPlus_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_i64
	.private_extern _A__Plus_param_u8_i64
_A__Plus_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_I
	.private_extern _A__uPlus_var_u8_I
_A__uPlus_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_I
	.private_extern _A__Plus_var_u8_I
_A__Plus_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L816
	cmpq	$127, -16(%rbp)
	jle	L817
L816:
	movl	$14689, %edi
	call	__m3_fault
L817:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_I
	.private_extern _A__uPlus_param_u8_I
_A__uPlus_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_I
	.private_extern _A__Plus_param_u8_I
_A__Plus_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L822
	cmpq	$127, -16(%rbp)
	jle	L823
L822:
	movl	$14753, %edi
	call	__m3_fault
L823:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_u8
	.private_extern _A__uPlus_var_u8_u8
_A__uPlus_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_u8
	.private_extern _A__Plus_var_u8_u8
_A__Plus_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L828
	cmpq	$127, -16(%rbp)
	jle	L829
L828:
	movl	$14817, %edi
	call	__m3_fault
L829:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_u8
	.private_extern _A__uPlus_param_u8_u8
_A__uPlus_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_u8
	.private_extern _A__Plus_param_u8_u8
_A__Plus_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movsbq	-18(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L834
	cmpq	$127, -16(%rbp)
	jle	L835
L834:
	movl	$14881, %edi
	call	__m3_fault
L835:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_C
	.private_extern _A__uPlus_var_u8_C
_A__uPlus_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_C
	.private_extern _A__Plus_var_u8_C
_A__Plus_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L840
	cmpq	$127, -16(%rbp)
	jle	L841
L840:
	movl	$14945, %edi
	call	__m3_fault
L841:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_C
	.private_extern _A__uPlus_param_u8_C
_A__uPlus_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u8_C
	.private_extern _A__Plus_param_u8_C
_A__Plus_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L846
	cmpq	$127, -16(%rbp)
	jle	L847
L846:
	movl	$15009, %edi
	call	__m3_fault
L847:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_u32
	.private_extern _A__uPlus_var_u8_u32
_A__uPlus_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_u32
	.private_extern _A__Plus_var_u8_u32
_A__Plus_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L852
	cmpq	$127, -16(%rbp)
	jle	L853
L852:
	movl	$15073, %edi
	call	__m3_fault
L853:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_u32
	.private_extern _A__uPlus_param_u8_u32
_A__uPlus_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_u32
	.private_extern _A__Plus_param_u8_u32
_A__Plus_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L858
	cmpq	$127, -16(%rbp)
	jle	L859
L858:
	movl	$15137, %edi
	call	__m3_fault
L859:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_i8
	.private_extern _A__uPlus_var_u8_i8
_A__uPlus_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_i8
	.private_extern _A__Plus_var_u8_i8
_A__Plus_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L864
	movl	$15201, %edi
	call	__m3_fault
L864:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_i8
	.private_extern _A__uPlus_param_u8_i8
_A__uPlus_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_i8
	.private_extern _A__Plus_param_u8_i8
_A__Plus_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movzbl	-18(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L869
	movl	$15265, %edi
	call	__m3_fault
L869:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_L
	.private_extern _A__uPlus_var_u8_L
_A__uPlus_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_L
	.private_extern _A__Plus_var_u8_L
_A__Plus_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u8_L
	.private_extern _A__uPlus_param_u8_L
_A__uPlus_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_L
	.private_extern _A__Plus_param_u8_L
_A__Plus_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_u64
	.private_extern _A__uPlus_var_u8_u64
_A__uPlus_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_u64
	.private_extern _A__Plus_var_u8_u64
_A__Plus_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u8_u64
	.private_extern _A__uPlus_param_u8_u64
_A__uPlus_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_u64
	.private_extern _A__Plus_param_u8_u64
_A__Plus_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_u16
	.private_extern _A__uPlus_var_u8_u16
_A__uPlus_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_u16
	.private_extern _A__Plus_var_u8_u16
_A__Plus_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L890
	cmpq	$127, -16(%rbp)
	jle	L891
L890:
	movl	$15585, %edi
	call	__m3_fault
L891:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_u16
	.private_extern _A__uPlus_param_u8_u16
_A__uPlus_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_u16
	.private_extern _A__Plus_param_u8_u16
_A__Plus_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movswq	-20(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L896
	cmpq	$127, -16(%rbp)
	jle	L897
L896:
	movl	$15649, %edi
	call	__m3_fault
L897:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u8_i32
	.private_extern _A__uPlus_var_u8_i32
_A__uPlus_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u8_i32
	.private_extern _A__Plus_var_u8_i32
_A__Plus_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L902
	movl	$15713, %edi
	call	__m3_fault
L902:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u8_i32
	.private_extern _A__uPlus_param_u8_i32
_A__uPlus_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u8_i32
	.private_extern _A__Plus_param_u8_i32
_A__Plus_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	mov	-24(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L907
	movl	$15777, %edi
	call	__m3_fault
L907:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_i16
	.private_extern _A__uPlus_var_C_i16
_A__uPlus_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_i16
	.private_extern _A__Plus_var_C_i16
_A__Plus_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L912
	movl	$15841, %edi
	call	__m3_fault
L912:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_i16
	.private_extern _A__uPlus_param_C_i16
_A__uPlus_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_i16
	.private_extern _A__Plus_param_C_i16
_A__Plus_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	-24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L917
	movl	$15905, %edi
	call	__m3_fault
L917:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_LC
	.private_extern _A__uPlus_var_C_LC
_A__uPlus_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_LC
	.private_extern _A__Plus_var_C_LC
_A__Plus_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_C_LC
	.private_extern _A__uPlus_param_C_LC
_A__uPlus_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__Plus_param_C_LC
	.private_extern _A__Plus_param_C_LC
_A__Plus_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_C_i64
	.private_extern _A__uPlus_var_C_i64
_A__uPlus_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_i64
	.private_extern _A__Plus_var_C_i64
_A__Plus_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_C_i64
	.private_extern _A__uPlus_param_C_i64
_A__uPlus_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_i64
	.private_extern _A__Plus_param_C_i64
_A__Plus_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_I
	.private_extern _A__uPlus_var_C_I
_A__uPlus_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_I
	.private_extern _A__Plus_var_C_I
_A__Plus_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L938
	movl	$16225, %edi
	call	__m3_fault
L938:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_I
	.private_extern _A__uPlus_param_C_I
_A__uPlus_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_I
	.private_extern _A__Plus_param_C_I
_A__Plus_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L943
	movl	$16289, %edi
	call	__m3_fault
L943:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_u8
	.private_extern _A__uPlus_var_C_u8
_A__uPlus_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_u8
	.private_extern _A__Plus_var_C_u8
_A__Plus_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L948
	movl	$16353, %edi
	call	__m3_fault
L948:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_u8
	.private_extern _A__uPlus_param_C_u8
_A__uPlus_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_u8
	.private_extern _A__Plus_param_C_u8
_A__Plus_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	-24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L953
	movl	$16417, %edi
	call	__m3_fault
L953:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_C
	.private_extern _A__uPlus_var_C_C
_A__uPlus_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_C
	.private_extern _A__Plus_var_C_C
_A__Plus_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L958
	movl	$16481, %edi
	call	__m3_fault
L958:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_C
	.private_extern _A__uPlus_param_C_C
_A__uPlus_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__Plus_param_C_C
	.private_extern _A__Plus_param_C_C
_A__Plus_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L963
	movl	$16545, %edi
	call	__m3_fault
L963:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_u32
	.private_extern _A__uPlus_var_C_u32
_A__uPlus_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_u32
	.private_extern _A__Plus_var_C_u32
_A__Plus_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L968
	movl	$16609, %edi
	call	__m3_fault
L968:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_u32
	.private_extern _A__uPlus_param_C_u32
_A__uPlus_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_u32
	.private_extern _A__Plus_param_C_u32
_A__Plus_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L973
	movl	$16673, %edi
	call	__m3_fault
L973:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_i8
	.private_extern _A__uPlus_var_C_i8
_A__uPlus_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_i8
	.private_extern _A__Plus_var_C_i8
_A__Plus_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L978
	movl	$16737, %edi
	call	__m3_fault
L978:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_i8
	.private_extern _A__uPlus_param_C_i8
_A__uPlus_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_i8
	.private_extern _A__Plus_param_C_i8
_A__Plus_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	-24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L983
	movl	$16801, %edi
	call	__m3_fault
L983:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_L
	.private_extern _A__uPlus_var_C_L
_A__uPlus_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_L
	.private_extern _A__Plus_var_C_L
_A__Plus_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_C_L
	.private_extern _A__uPlus_param_C_L
_A__uPlus_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_L
	.private_extern _A__Plus_param_C_L
_A__Plus_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_u64
	.private_extern _A__uPlus_var_C_u64
_A__uPlus_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_u64
	.private_extern _A__Plus_var_C_u64
_A__Plus_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_C_u64
	.private_extern _A__uPlus_param_C_u64
_A__uPlus_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_u64
	.private_extern _A__Plus_param_C_u64
_A__Plus_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_u16
	.private_extern _A__uPlus_var_C_u16
_A__uPlus_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_u16
	.private_extern _A__Plus_var_C_u16
_A__Plus_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L1004
	movl	$17121, %edi
	call	__m3_fault
L1004:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_u16
	.private_extern _A__uPlus_param_C_u16
_A__uPlus_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_u16
	.private_extern _A__Plus_param_C_u16
_A__Plus_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	-24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L1009
	movl	$17185, %edi
	call	__m3_fault
L1009:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_C_i32
	.private_extern _A__uPlus_var_C_i32
_A__uPlus_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_C_i32
	.private_extern _A__Plus_var_C_i32
_A__Plus_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L1014
	movl	$17249, %edi
	call	__m3_fault
L1014:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_C_i32
	.private_extern _A__uPlus_param_C_i32
_A__uPlus_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_C_i32
	.private_extern _A__Plus_param_C_i32
_A__Plus_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	-24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L1019
	movl	$17313, %edi
	call	__m3_fault
L1019:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__Plus_var_f32_f32
	.private_extern _A__Plus_var_f32_f32
_A__Plus_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm0
	addss	%xmm0, %xmm0
	leave
	ret
.globl _A__Plus_param_f32_f32
	.private_extern _A__Plus_param_f32_f32
_A__Plus_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	addss	-24(%rbp), %xmm0
	leave
	ret
.globl _A__uPlus_var_u32_i16
	.private_extern _A__uPlus_var_u32_i16
_A__uPlus_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_i16
	.private_extern _A__Plus_var_u32_i16
_A__Plus_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1028
	movl	$17441, %edi
	call	__m3_fault
L1028:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_i16
	.private_extern _A__uPlus_param_u32_i16
_A__uPlus_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_i16
	.private_extern _A__Plus_param_u32_i16
_A__Plus_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1033
	movl	$17505, %edi
	call	__m3_fault
L1033:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_LC
	.private_extern _A__uPlus_var_u32_LC
_A__uPlus_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_LC
	.private_extern _A__Plus_var_u32_LC
_A__Plus_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u32_LC
	.private_extern _A__uPlus_param_u32_LC
_A__uPlus_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u32_LC
	.private_extern _A__Plus_param_u32_LC
_A__Plus_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_u32_i64
	.private_extern _A__uPlus_var_u32_i64
_A__uPlus_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_i64
	.private_extern _A__Plus_var_u32_i64
_A__Plus_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u32_i64
	.private_extern _A__uPlus_param_u32_i64
_A__uPlus_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_i64
	.private_extern _A__Plus_param_u32_i64
_A__Plus_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_I
	.private_extern _A__uPlus_var_u32_I
_A__uPlus_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_I
	.private_extern _A__Plus_var_u32_I
_A__Plus_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1054
	cmpq	$2147483647, -16(%rbp)
	jle	L1055
L1054:
	movl	$17825, %edi
	call	__m3_fault
L1055:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_I
	.private_extern _A__uPlus_param_u32_I
_A__uPlus_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_I
	.private_extern _A__Plus_param_u32_I
_A__Plus_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1060
	cmpq	$2147483647, -16(%rbp)
	jle	L1061
L1060:
	movl	$17889, %edi
	call	__m3_fault
L1061:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_u8
	.private_extern _A__uPlus_var_u32_u8
_A__uPlus_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_u8
	.private_extern _A__Plus_var_u32_u8
_A__Plus_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1066
	cmpq	$2147483647, -16(%rbp)
	jle	L1067
L1066:
	movl	$17953, %edi
	call	__m3_fault
L1067:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_u8
	.private_extern _A__uPlus_param_u32_u8
_A__uPlus_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_u8
	.private_extern _A__Plus_param_u32_u8
_A__Plus_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1072
	cmpq	$2147483647, -16(%rbp)
	jle	L1073
L1072:
	movl	$18017, %edi
	call	__m3_fault
L1073:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_C
	.private_extern _A__uPlus_var_u32_C
_A__uPlus_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_C
	.private_extern _A__Plus_var_u32_C
_A__Plus_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1078
	cmpq	$2147483647, -16(%rbp)
	jle	L1079
L1078:
	movl	$18081, %edi
	call	__m3_fault
L1079:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_C
	.private_extern _A__uPlus_param_u32_C
_A__uPlus_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u32_C
	.private_extern _A__Plus_param_u32_C
_A__Plus_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1084
	cmpq	$2147483647, -16(%rbp)
	jle	L1085
L1084:
	movl	$18145, %edi
	call	__m3_fault
L1085:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_u32
	.private_extern _A__uPlus_var_u32_u32
_A__uPlus_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_u32
	.private_extern _A__Plus_var_u32_u32
_A__Plus_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1090
	cmpq	$2147483647, -16(%rbp)
	jle	L1091
L1090:
	movl	$18209, %edi
	call	__m3_fault
L1091:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_u32
	.private_extern _A__uPlus_param_u32_u32
_A__uPlus_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_u32
	.private_extern _A__Plus_param_u32_u32
_A__Plus_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1096
	cmpq	$2147483647, -16(%rbp)
	jle	L1097
L1096:
	movl	$18273, %edi
	call	__m3_fault
L1097:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_i8
	.private_extern _A__uPlus_var_u32_i8
_A__uPlus_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_i8
	.private_extern _A__Plus_var_u32_i8
_A__Plus_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1102
	movl	$18337, %edi
	call	__m3_fault
L1102:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_i8
	.private_extern _A__uPlus_param_u32_i8
_A__uPlus_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_i8
	.private_extern _A__Plus_param_u32_i8
_A__Plus_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1107
	movl	$18401, %edi
	call	__m3_fault
L1107:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_L
	.private_extern _A__uPlus_var_u32_L
_A__uPlus_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_L
	.private_extern _A__Plus_var_u32_L
_A__Plus_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u32_L
	.private_extern _A__uPlus_param_u32_L
_A__uPlus_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_L
	.private_extern _A__Plus_param_u32_L
_A__Plus_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_u64
	.private_extern _A__uPlus_var_u32_u64
_A__uPlus_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_u64
	.private_extern _A__Plus_var_u32_u64
_A__Plus_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u32_u64
	.private_extern _A__uPlus_param_u32_u64
_A__uPlus_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_u64
	.private_extern _A__Plus_param_u32_u64
_A__Plus_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_u16
	.private_extern _A__uPlus_var_u32_u16
_A__uPlus_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_u16
	.private_extern _A__Plus_var_u32_u16
_A__Plus_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1128
	cmpq	$2147483647, -16(%rbp)
	jle	L1129
L1128:
	movl	$18721, %edi
	call	__m3_fault
L1129:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_u16
	.private_extern _A__uPlus_param_u32_u16
_A__uPlus_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_u16
	.private_extern _A__Plus_param_u32_u16
_A__Plus_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L1134
	cmpq	$2147483647, -16(%rbp)
	jle	L1135
L1134:
	movl	$18785, %edi
	call	__m3_fault
L1135:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u32_i32
	.private_extern _A__uPlus_var_u32_i32
_A__uPlus_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u32_i32
	.private_extern _A__Plus_var_u32_i32
_A__Plus_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1140
	movl	$18849, %edi
	call	__m3_fault
L1140:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u32_i32
	.private_extern _A__uPlus_param_u32_i32
_A__uPlus_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u32_i32
	.private_extern _A__Plus_param_u32_i32
_A__Plus_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L1145
	movl	$18913, %edi
	call	__m3_fault
L1145:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_i16
	.private_extern _A__uPlus_var_i8_i16
_A__uPlus_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_i16
	.private_extern _A__Plus_var_i8_i16
_A__Plus_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1150
	movl	$18977, %edi
	call	__m3_fault
L1150:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_i16
	.private_extern _A__uPlus_param_i8_i16
_A__uPlus_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_i16
	.private_extern _A__Plus_param_i8_i16
_A__Plus_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movzwl	-20(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1155
	movl	$19041, %edi
	call	__m3_fault
L1155:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_LC
	.private_extern _A__uPlus_var_i8_LC
_A__uPlus_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_LC
	.private_extern _A__Plus_var_i8_LC
_A__Plus_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i8_LC
	.private_extern _A__uPlus_param_i8_LC
_A__uPlus_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i8_LC
	.private_extern _A__Plus_param_i8_LC
_A__Plus_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_i8_i64
	.private_extern _A__uPlus_var_i8_i64
_A__uPlus_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_i64
	.private_extern _A__Plus_var_i8_i64
_A__Plus_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i8_i64
	.private_extern _A__uPlus_param_i8_i64
_A__uPlus_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_i64
	.private_extern _A__Plus_param_i8_i64
_A__Plus_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_I
	.private_extern _A__uPlus_var_i8_I
_A__uPlus_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_I
	.private_extern _A__Plus_var_i8_I
_A__Plus_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1176
	cmpq	$255, -16(%rbp)
	jle	L1177
L1176:
	movl	$19361, %edi
	call	__m3_fault
L1177:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_I
	.private_extern _A__uPlus_param_i8_I
_A__uPlus_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_I
	.private_extern _A__Plus_param_i8_I
_A__Plus_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1182
	cmpq	$255, -16(%rbp)
	jle	L1183
L1182:
	movl	$19425, %edi
	call	__m3_fault
L1183:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_u8
	.private_extern _A__uPlus_var_i8_u8
_A__uPlus_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_u8
	.private_extern _A__Plus_var_i8_u8
_A__Plus_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1188
	cmpq	$255, -16(%rbp)
	jle	L1189
L1188:
	movl	$19489, %edi
	call	__m3_fault
L1189:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_u8
	.private_extern _A__uPlus_param_i8_u8
_A__uPlus_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_u8
	.private_extern _A__Plus_param_i8_u8
_A__Plus_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movsbq	-18(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1194
	cmpq	$255, -16(%rbp)
	jle	L1195
L1194:
	movl	$19553, %edi
	call	__m3_fault
L1195:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_C
	.private_extern _A__uPlus_var_i8_C
_A__uPlus_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_C
	.private_extern _A__Plus_var_i8_C
_A__Plus_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1200
	cmpq	$255, -16(%rbp)
	jle	L1201
L1200:
	movl	$19617, %edi
	call	__m3_fault
L1201:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_C
	.private_extern _A__uPlus_param_i8_C
_A__uPlus_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i8_C
	.private_extern _A__Plus_param_i8_C
_A__Plus_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1206
	cmpq	$255, -16(%rbp)
	jle	L1207
L1206:
	movl	$19681, %edi
	call	__m3_fault
L1207:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_u32
	.private_extern _A__uPlus_var_i8_u32
_A__uPlus_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_u32
	.private_extern _A__Plus_var_i8_u32
_A__Plus_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1212
	cmpq	$255, -16(%rbp)
	jle	L1213
L1212:
	movl	$19745, %edi
	call	__m3_fault
L1213:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_u32
	.private_extern _A__uPlus_param_i8_u32
_A__uPlus_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_u32
	.private_extern _A__Plus_param_i8_u32
_A__Plus_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1218
	cmpq	$255, -16(%rbp)
	jle	L1219
L1218:
	movl	$19809, %edi
	call	__m3_fault
L1219:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_i8
	.private_extern _A__uPlus_var_i8_i8
_A__uPlus_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_i8
	.private_extern _A__Plus_var_i8_i8
_A__Plus_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1224
	movl	$19873, %edi
	call	__m3_fault
L1224:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_i8
	.private_extern _A__uPlus_param_i8_i8
_A__uPlus_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_i8
	.private_extern _A__Plus_param_i8_i8
_A__Plus_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movzbl	-18(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1229
	movl	$19937, %edi
	call	__m3_fault
L1229:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_L
	.private_extern _A__uPlus_var_i8_L
_A__uPlus_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_L
	.private_extern _A__Plus_var_i8_L
_A__Plus_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i8_L
	.private_extern _A__uPlus_param_i8_L
_A__uPlus_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_L
	.private_extern _A__Plus_param_i8_L
_A__Plus_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_u64
	.private_extern _A__uPlus_var_i8_u64
_A__uPlus_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_u64
	.private_extern _A__Plus_var_i8_u64
_A__Plus_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i8_u64
	.private_extern _A__uPlus_param_i8_u64
_A__uPlus_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_u64
	.private_extern _A__Plus_param_i8_u64
_A__Plus_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_u16
	.private_extern _A__uPlus_var_i8_u16
_A__uPlus_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_u16
	.private_extern _A__Plus_var_i8_u16
_A__Plus_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1250
	cmpq	$255, -16(%rbp)
	jle	L1251
L1250:
	movl	$20257, %edi
	call	__m3_fault
L1251:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_u16
	.private_extern _A__uPlus_param_i8_u16
_A__uPlus_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_u16
	.private_extern _A__Plus_param_i8_u16
_A__Plus_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movswq	-20(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1256
	cmpq	$255, -16(%rbp)
	jle	L1257
L1256:
	movl	$20321, %edi
	call	__m3_fault
L1257:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i8_i32
	.private_extern _A__uPlus_var_i8_i32
_A__uPlus_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i8_i32
	.private_extern _A__Plus_var_i8_i32
_A__Plus_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1262
	movl	$20385, %edi
	call	__m3_fault
L1262:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i8_i32
	.private_extern _A__uPlus_param_i8_i32
_A__uPlus_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i8_i32
	.private_extern _A__Plus_param_i8_i32
_A__Plus_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	mov	-24(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L1267
	movl	$20449, %edi
	call	__m3_fault
L1267:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_i16
	.private_extern _A__uPlus_var_L_i16
_A__uPlus_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_i16
	.private_extern _A__Plus_var_L_i16
_A__Plus_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_i16
	.private_extern _A__uPlus_param_L_i16
_A__uPlus_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_i16
	.private_extern _A__Plus_param_L_i16
_A__Plus_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_LC
	.private_extern _A__uPlus_var_L_LC
_A__uPlus_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_LC
	.private_extern _A__Plus_var_L_LC
_A__Plus_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_LC
	.private_extern _A__uPlus_param_L_LC
_A__uPlus_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_L_LC
	.private_extern _A__Plus_param_L_LC
_A__Plus_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_i64
	.private_extern _A__uPlus_var_L_i64
_A__uPlus_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_i64
	.private_extern _A__Plus_var_L_i64
_A__Plus_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_i64
	.private_extern _A__uPlus_param_L_i64
_A__uPlus_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_i64
	.private_extern _A__Plus_param_L_i64
_A__Plus_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_L_I
	.private_extern _A__uPlus_var_L_I
_A__uPlus_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_I
	.private_extern _A__Plus_var_L_I
_A__Plus_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_I
	.private_extern _A__uPlus_param_L_I
_A__uPlus_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_I
	.private_extern _A__Plus_param_L_I
_A__Plus_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_L_u8
	.private_extern _A__uPlus_var_L_u8
_A__uPlus_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_u8
	.private_extern _A__Plus_var_L_u8
_A__Plus_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_u8
	.private_extern _A__uPlus_param_L_u8
_A__uPlus_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_u8
	.private_extern _A__Plus_param_L_u8
_A__Plus_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_C
	.private_extern _A__uPlus_var_L_C
_A__uPlus_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_C
	.private_extern _A__Plus_var_L_C
_A__Plus_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_C
	.private_extern _A__uPlus_param_L_C
_A__uPlus_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_L_C
	.private_extern _A__Plus_param_L_C
_A__Plus_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_u32
	.private_extern _A__uPlus_var_L_u32
_A__uPlus_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_u32
	.private_extern _A__Plus_var_L_u32
_A__Plus_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_u32
	.private_extern _A__uPlus_param_L_u32
_A__uPlus_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_u32
	.private_extern _A__Plus_param_L_u32
_A__Plus_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_i8
	.private_extern _A__uPlus_var_L_i8
_A__uPlus_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_i8
	.private_extern _A__Plus_var_L_i8
_A__Plus_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_i8
	.private_extern _A__uPlus_param_L_i8
_A__uPlus_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_i8
	.private_extern _A__Plus_param_L_i8
_A__Plus_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_L
	.private_extern _A__uPlus_var_L_L
_A__uPlus_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_L
	.private_extern _A__Plus_var_L_L
_A__Plus_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_L
	.private_extern _A__uPlus_param_L_L
_A__uPlus_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_L
	.private_extern _A__Plus_param_L_L
_A__Plus_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_L_u64
	.private_extern _A__uPlus_var_L_u64
_A__uPlus_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_u64
	.private_extern _A__Plus_var_L_u64
_A__Plus_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_u64
	.private_extern _A__uPlus_param_L_u64
_A__uPlus_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_u64
	.private_extern _A__Plus_param_L_u64
_A__Plus_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_L_u16
	.private_extern _A__uPlus_var_L_u16
_A__uPlus_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_u16
	.private_extern _A__Plus_var_L_u16
_A__Plus_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_u16
	.private_extern _A__uPlus_param_L_u16
_A__uPlus_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_u16
	.private_extern _A__Plus_param_L_u16
_A__Plus_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_L_i32
	.private_extern _A__uPlus_var_L_i32
_A__uPlus_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_L_i32
	.private_extern _A__Plus_var_L_i32
_A__Plus_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_L_i32
	.private_extern _A__uPlus_param_L_i32
_A__uPlus_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_L_i32
	.private_extern _A__Plus_param_L_i32
_A__Plus_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_i16
	.private_extern _A__uPlus_var_u64_i16
_A__uPlus_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_i16
	.private_extern _A__Plus_var_u64_i16
_A__Plus_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_i16
	.private_extern _A__uPlus_param_u64_i16
_A__uPlus_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_i16
	.private_extern _A__Plus_param_u64_i16
_A__Plus_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_LC
	.private_extern _A__uPlus_var_u64_LC
_A__uPlus_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_LC
	.private_extern _A__Plus_var_u64_LC
_A__Plus_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_LC
	.private_extern _A__uPlus_param_u64_LC
_A__uPlus_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u64_LC
	.private_extern _A__Plus_param_u64_LC
_A__Plus_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_i64
	.private_extern _A__uPlus_var_u64_i64
_A__uPlus_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_i64
	.private_extern _A__Plus_var_u64_i64
_A__Plus_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_i64
	.private_extern _A__uPlus_param_u64_i64
_A__uPlus_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_i64
	.private_extern _A__Plus_param_u64_i64
_A__Plus_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_u64_I
	.private_extern _A__uPlus_var_u64_I
_A__uPlus_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_I
	.private_extern _A__Plus_var_u64_I
_A__Plus_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_I
	.private_extern _A__uPlus_param_u64_I
_A__uPlus_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_I
	.private_extern _A__Plus_param_u64_I
_A__Plus_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_u64_u8
	.private_extern _A__uPlus_var_u64_u8
_A__uPlus_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_u8
	.private_extern _A__Plus_var_u64_u8
_A__Plus_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_u8
	.private_extern _A__uPlus_param_u64_u8
_A__uPlus_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_u8
	.private_extern _A__Plus_param_u64_u8
_A__Plus_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_C
	.private_extern _A__uPlus_var_u64_C
_A__uPlus_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_C
	.private_extern _A__Plus_var_u64_C
_A__Plus_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_C
	.private_extern _A__uPlus_param_u64_C
_A__uPlus_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u64_C
	.private_extern _A__Plus_param_u64_C
_A__Plus_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_u32
	.private_extern _A__uPlus_var_u64_u32
_A__uPlus_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_u32
	.private_extern _A__Plus_var_u64_u32
_A__Plus_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_u32
	.private_extern _A__uPlus_param_u64_u32
_A__uPlus_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_u32
	.private_extern _A__Plus_param_u64_u32
_A__Plus_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_i8
	.private_extern _A__uPlus_var_u64_i8
_A__uPlus_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_i8
	.private_extern _A__Plus_var_u64_i8
_A__Plus_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_i8
	.private_extern _A__uPlus_param_u64_i8
_A__uPlus_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_i8
	.private_extern _A__Plus_param_u64_i8
_A__Plus_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_L
	.private_extern _A__uPlus_var_u64_L
_A__uPlus_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_L
	.private_extern _A__Plus_var_u64_L
_A__Plus_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_L
	.private_extern _A__uPlus_param_u64_L
_A__uPlus_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_L
	.private_extern _A__Plus_param_u64_L
_A__Plus_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_u64_u64
	.private_extern _A__uPlus_var_u64_u64
_A__uPlus_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_u64
	.private_extern _A__Plus_var_u64_u64
_A__Plus_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_u64
	.private_extern _A__uPlus_param_u64_u64
_A__uPlus_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_u64
	.private_extern _A__Plus_param_u64_u64
_A__Plus_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	addq	%rdx, %rax
	leave
	ret
.globl _A__uPlus_var_u64_u16
	.private_extern _A__uPlus_var_u64_u16
_A__uPlus_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_u16
	.private_extern _A__Plus_var_u64_u16
_A__Plus_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_u16
	.private_extern _A__uPlus_param_u64_u16
_A__uPlus_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_u16
	.private_extern _A__Plus_param_u64_u16
_A__Plus_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u64_i32
	.private_extern _A__uPlus_var_u64_i32
_A__uPlus_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u64_i32
	.private_extern _A__Plus_var_u64_i32
_A__Plus_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u64_i32
	.private_extern _A__uPlus_param_u64_i32
_A__uPlus_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u64_i32
	.private_extern _A__Plus_param_u64_i32
_A__Plus_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	addq	-24(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_i16
	.private_extern _A__uPlus_var_u16_i16
_A__uPlus_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_i16
	.private_extern _A__Plus_var_u16_i16
_A__Plus_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1464
	movl	$23585, %edi
	call	__m3_fault
L1464:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_i16
	.private_extern _A__uPlus_param_u16_i16
_A__uPlus_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_i16
	.private_extern _A__Plus_param_u16_i16
_A__Plus_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movzwl	-20(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1469
	movl	$23649, %edi
	call	__m3_fault
L1469:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_LC
	.private_extern _A__uPlus_var_u16_LC
_A__uPlus_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_LC
	.private_extern _A__Plus_var_u16_LC
_A__Plus_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u16_LC
	.private_extern _A__uPlus_param_u16_LC
_A__uPlus_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u16_LC
	.private_extern _A__Plus_param_u16_LC
_A__Plus_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_u16_i64
	.private_extern _A__uPlus_var_u16_i64
_A__uPlus_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_i64
	.private_extern _A__Plus_var_u16_i64
_A__Plus_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u16_i64
	.private_extern _A__uPlus_param_u16_i64
_A__uPlus_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_i64
	.private_extern _A__Plus_param_u16_i64
_A__Plus_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_I
	.private_extern _A__uPlus_var_u16_I
_A__uPlus_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_I
	.private_extern _A__Plus_var_u16_I
_A__Plus_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1490
	cmpq	$32767, -16(%rbp)
	jle	L1491
L1490:
	movl	$23969, %edi
	call	__m3_fault
L1491:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_I
	.private_extern _A__uPlus_param_u16_I
_A__uPlus_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_I
	.private_extern _A__Plus_param_u16_I
_A__Plus_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1496
	cmpq	$32767, -16(%rbp)
	jle	L1497
L1496:
	movl	$24033, %edi
	call	__m3_fault
L1497:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_u8
	.private_extern _A__uPlus_var_u16_u8
_A__uPlus_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_u8
	.private_extern _A__Plus_var_u16_u8
_A__Plus_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1502
	cmpq	$32767, -16(%rbp)
	jle	L1503
L1502:
	movl	$24097, %edi
	call	__m3_fault
L1503:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_u8
	.private_extern _A__uPlus_param_u16_u8
_A__uPlus_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_u8
	.private_extern _A__Plus_param_u16_u8
_A__Plus_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movsbq	-19(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1508
	cmpq	$32767, -16(%rbp)
	jle	L1509
L1508:
	movl	$24161, %edi
	call	__m3_fault
L1509:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_C
	.private_extern _A__uPlus_var_u16_C
_A__uPlus_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_C
	.private_extern _A__Plus_var_u16_C
_A__Plus_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1514
	cmpq	$32767, -16(%rbp)
	jle	L1515
L1514:
	movl	$24225, %edi
	call	__m3_fault
L1515:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_C
	.private_extern _A__uPlus_param_u16_C
_A__uPlus_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_u16_C
	.private_extern _A__Plus_param_u16_C
_A__Plus_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1520
	cmpq	$32767, -16(%rbp)
	jle	L1521
L1520:
	movl	$24289, %edi
	call	__m3_fault
L1521:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_u32
	.private_extern _A__uPlus_var_u16_u32
_A__uPlus_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_u32
	.private_extern _A__Plus_var_u16_u32
_A__Plus_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1526
	cmpq	$32767, -16(%rbp)
	jle	L1527
L1526:
	movl	$24353, %edi
	call	__m3_fault
L1527:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_u32
	.private_extern _A__uPlus_param_u16_u32
_A__uPlus_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_u32
	.private_extern _A__Plus_param_u16_u32
_A__Plus_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1532
	cmpq	$32767, -16(%rbp)
	jle	L1533
L1532:
	movl	$24417, %edi
	call	__m3_fault
L1533:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_i8
	.private_extern _A__uPlus_var_u16_i8
_A__uPlus_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_i8
	.private_extern _A__Plus_var_u16_i8
_A__Plus_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1538
	movl	$24481, %edi
	call	__m3_fault
L1538:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_i8
	.private_extern _A__uPlus_param_u16_i8
_A__uPlus_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_i8
	.private_extern _A__Plus_param_u16_i8
_A__Plus_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movzbl	-19(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1543
	movl	$24545, %edi
	call	__m3_fault
L1543:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_L
	.private_extern _A__uPlus_var_u16_L
_A__uPlus_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_L
	.private_extern _A__Plus_var_u16_L
_A__Plus_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u16_L
	.private_extern _A__uPlus_param_u16_L
_A__uPlus_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_L
	.private_extern _A__Plus_param_u16_L
_A__Plus_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_u64
	.private_extern _A__uPlus_var_u16_u64
_A__uPlus_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_u64
	.private_extern _A__Plus_var_u16_u64
_A__Plus_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_u16_u64
	.private_extern _A__uPlus_param_u16_u64
_A__uPlus_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_u64
	.private_extern _A__Plus_param_u16_u64
_A__Plus_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_u16
	.private_extern _A__uPlus_var_u16_u16
_A__uPlus_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_u16
	.private_extern _A__Plus_var_u16_u16
_A__Plus_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1564
	cmpq	$32767, -16(%rbp)
	jle	L1565
L1564:
	movl	$24865, %edi
	call	__m3_fault
L1565:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_u16
	.private_extern _A__uPlus_param_u16_u16
_A__uPlus_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_u16
	.private_extern _A__Plus_param_u16_u16
_A__Plus_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movswq	-20(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L1570
	cmpq	$32767, -16(%rbp)
	jle	L1571
L1570:
	movl	$24929, %edi
	call	__m3_fault
L1571:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_u16_i32
	.private_extern _A__uPlus_var_u16_i32
_A__uPlus_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_u16_i32
	.private_extern _A__Plus_var_u16_i32
_A__Plus_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1576
	movl	$24993, %edi
	call	__m3_fault
L1576:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_u16_i32
	.private_extern _A__uPlus_param_u16_i32
_A__uPlus_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_u16_i32
	.private_extern _A__Plus_param_u16_i32
_A__Plus_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	mov	-24(%rbp), %edx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L1581
	movl	$25057, %edi
	call	__m3_fault
L1581:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_i16
	.private_extern _A__uPlus_var_i32_i16
_A__uPlus_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_i16
	.private_extern _A__Plus_var_i32_i16
_A__Plus_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1586
	movl	$25121, %edi
	call	__m3_fault
L1586:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_i16
	.private_extern _A__uPlus_param_i32_i16
_A__uPlus_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_i16
	.private_extern _A__Plus_param_i32_i16
_A__Plus_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1591
	movl	$25185, %edi
	call	__m3_fault
L1591:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_LC
	.private_extern _A__uPlus_var_i32_LC
_A__uPlus_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_LC
	.private_extern _A__Plus_var_i32_LC
_A__Plus_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i32_LC
	.private_extern _A__uPlus_param_i32_LC
_A__uPlus_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i32_LC
	.private_extern _A__Plus_param_i32_LC
_A__Plus_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_var_i32_i64
	.private_extern _A__uPlus_var_i32_i64
_A__uPlus_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_i64
	.private_extern _A__Plus_var_i32_i64
_A__Plus_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i32_i64
	.private_extern _A__uPlus_param_i32_i64
_A__uPlus_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_i64
	.private_extern _A__Plus_param_i32_i64
_A__Plus_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_I
	.private_extern _A__uPlus_var_i32_I
_A__uPlus_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_I
	.private_extern _A__Plus_var_i32_I
_A__Plus_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1612
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1613
L1612:
	movl	$25505, %edi
	call	__m3_fault
L1613:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_I
	.private_extern _A__uPlus_param_i32_I
_A__uPlus_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_I
	.private_extern _A__Plus_param_i32_I
_A__Plus_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1618
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1619
L1618:
	movl	$25569, %edi
	call	__m3_fault
L1619:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_u8
	.private_extern _A__uPlus_var_i32_u8
_A__uPlus_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_u8
	.private_extern _A__Plus_var_i32_u8
_A__Plus_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1624
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1625
L1624:
	movl	$25633, %edi
	call	__m3_fault
L1625:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_u8
	.private_extern _A__uPlus_param_i32_u8
_A__uPlus_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_u8
	.private_extern _A__Plus_param_i32_u8
_A__Plus_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movsbq	-21(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1630
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1631
L1630:
	movl	$25697, %edi
	call	__m3_fault
L1631:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_C
	.private_extern _A__uPlus_var_i32_C
_A__uPlus_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_C
	.private_extern _A__Plus_var_i32_C
_A__Plus_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1636
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1637
L1636:
	movl	$25761, %edi
	call	__m3_fault
L1637:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_C
	.private_extern _A__uPlus_param_i32_C
_A__uPlus_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__Plus_param_i32_C
	.private_extern _A__Plus_param_i32_C
_A__Plus_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	-32(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1642
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1643
L1642:
	movl	$25825, %edi
	call	__m3_fault
L1643:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_u32
	.private_extern _A__uPlus_var_i32_u32
_A__uPlus_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_u32
	.private_extern _A__Plus_var_i32_u32
_A__Plus_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1648
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1649
L1648:
	movl	$25889, %edi
	call	__m3_fault
L1649:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_u32
	.private_extern _A__uPlus_param_i32_u32
_A__uPlus_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_u32
	.private_extern _A__Plus_param_i32_u32
_A__Plus_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1654
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1655
L1654:
	movl	$25953, %edi
	call	__m3_fault
L1655:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_i8
	.private_extern _A__uPlus_var_i32_i8
_A__uPlus_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_i8
	.private_extern _A__Plus_var_i32_i8
_A__Plus_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1660
	movl	$26017, %edi
	call	__m3_fault
L1660:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_i8
	.private_extern _A__uPlus_param_i32_i8
_A__uPlus_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_i8
	.private_extern _A__Plus_param_i32_i8
_A__Plus_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1665
	movl	$26081, %edi
	call	__m3_fault
L1665:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_L
	.private_extern _A__uPlus_var_i32_L
_A__uPlus_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_L
	.private_extern _A__Plus_var_i32_L
_A__Plus_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i32_L
	.private_extern _A__uPlus_param_i32_L
_A__uPlus_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_L
	.private_extern _A__Plus_param_i32_L
_A__Plus_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_u64
	.private_extern _A__uPlus_var_i32_u64
_A__uPlus_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_u64
	.private_extern _A__Plus_var_i32_u64
_A__Plus_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__uPlus_param_i32_u64
	.private_extern _A__uPlus_param_i32_u64
_A__uPlus_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_u64
	.private_extern _A__Plus_param_i32_u64
_A__Plus_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	addq	-32(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_u16
	.private_extern _A__uPlus_var_i32_u16
_A__uPlus_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_u16
	.private_extern _A__Plus_var_i32_u16
_A__Plus_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1686
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1687
L1686:
	movl	$26401, %edi
	call	__m3_fault
L1687:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_u16
	.private_extern _A__uPlus_param_i32_u16
_A__uPlus_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_u16
	.private_extern _A__Plus_param_i32_u16
_A__Plus_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movswq	-22(%rbp),%rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1692
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1693
L1692:
	movl	$26465, %edi
	call	__m3_fault
L1693:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_var_i32_i32
	.private_extern _A__uPlus_var_i32_i32
_A__uPlus_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_var_i32_i32
	.private_extern _A__Plus_var_i32_i32
_A__Plus_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1698
	movl	$26529, %edi
	call	__m3_fault
L1698:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uPlus_param_i32_i32
	.private_extern _A__uPlus_param_i32_i32
_A__uPlus_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	leave
	ret
.globl _A__Plus_param_i32_i32
	.private_extern _A__Plus_param_i32_i32
_A__Plus_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L1703
	movl	$26593, %edi
	call	__m3_fault
L1703:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_i16
	.private_extern _A__uTimes_var_i16_i16
_A__uTimes_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_i16
	.private_extern _A__Times_var_i16_i16
_A__Times_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1708
	cmpq	$65535, -16(%rbp)
	jle	L1709
L1708:
	movl	$26753, %edi
	call	__m3_fault
L1709:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_i16
	.private_extern _A__uTimes_param_i16_i16
_A__uTimes_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_i16
	.private_extern _A__Times_param_i16_i16
_A__Times_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movzwl	-20(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1714
	cmpq	$65535, -16(%rbp)
	jle	L1715
L1714:
	movl	$26817, %edi
	call	__m3_fault
L1715:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_LC
	.private_extern _A__uTimes_var_i16_LC
_A__uTimes_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_LC
	.private_extern _A__Times_var_i16_LC
_A__Times_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i16_LC
	.private_extern _A__uTimes_param_i16_LC
_A__uTimes_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i16_LC
	.private_extern _A__Times_param_i16_LC
_A__Times_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_i16_i64
	.private_extern _A__uTimes_var_i16_i64
_A__uTimes_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_i64
	.private_extern _A__Times_var_i16_i64
_A__Times_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i16_i64
	.private_extern _A__uTimes_param_i16_i64
_A__uTimes_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_i64
	.private_extern _A__Times_param_i16_i64
_A__Times_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_I
	.private_extern _A__uTimes_var_i16_I
_A__uTimes_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_I
	.private_extern _A__Times_var_i16_I
_A__Times_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1736
	cmpq	$65535, -16(%rbp)
	jle	L1737
L1736:
	movl	$27137, %edi
	call	__m3_fault
L1737:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_I
	.private_extern _A__uTimes_param_i16_I
_A__uTimes_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_I
	.private_extern _A__Times_param_i16_I
_A__Times_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1742
	cmpq	$65535, -16(%rbp)
	jle	L1743
L1742:
	movl	$27201, %edi
	call	__m3_fault
L1743:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_u8
	.private_extern _A__uTimes_var_i16_u8
_A__uTimes_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_u8
	.private_extern _A__Times_var_i16_u8
_A__Times_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1748
	cmpq	$65535, -16(%rbp)
	jle	L1749
L1748:
	movl	$27265, %edi
	call	__m3_fault
L1749:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_u8
	.private_extern _A__uTimes_param_i16_u8
_A__uTimes_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_u8
	.private_extern _A__Times_param_i16_u8
_A__Times_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movsbq	-19(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1754
	cmpq	$65535, -16(%rbp)
	jle	L1755
L1754:
	movl	$27329, %edi
	call	__m3_fault
L1755:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_C
	.private_extern _A__uTimes_var_i16_C
_A__uTimes_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_C
	.private_extern _A__Times_var_i16_C
_A__Times_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1760
	cmpq	$65535, -16(%rbp)
	jle	L1761
L1760:
	movl	$27393, %edi
	call	__m3_fault
L1761:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_C
	.private_extern _A__uTimes_param_i16_C
_A__uTimes_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i16_C
	.private_extern _A__Times_param_i16_C
_A__Times_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1766
	cmpq	$65535, -16(%rbp)
	jle	L1767
L1766:
	movl	$27457, %edi
	call	__m3_fault
L1767:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_u32
	.private_extern _A__uTimes_var_i16_u32
_A__uTimes_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_u32
	.private_extern _A__Times_var_i16_u32
_A__Times_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1772
	cmpq	$65535, -16(%rbp)
	jle	L1773
L1772:
	movl	$27521, %edi
	call	__m3_fault
L1773:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_u32
	.private_extern _A__uTimes_param_i16_u32
_A__uTimes_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_u32
	.private_extern _A__Times_param_i16_u32
_A__Times_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1778
	cmpq	$65535, -16(%rbp)
	jle	L1779
L1778:
	movl	$27585, %edi
	call	__m3_fault
L1779:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_i8
	.private_extern _A__uTimes_var_i16_i8
_A__uTimes_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_i8
	.private_extern _A__Times_var_i16_i8
_A__Times_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1784
	cmpq	$65535, -16(%rbp)
	jle	L1785
L1784:
	movl	$27649, %edi
	call	__m3_fault
L1785:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_i8
	.private_extern _A__uTimes_param_i16_i8
_A__uTimes_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_i8
	.private_extern _A__Times_param_i16_i8
_A__Times_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movzbl	-19(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1790
	cmpq	$65535, -16(%rbp)
	jle	L1791
L1790:
	movl	$27713, %edi
	call	__m3_fault
L1791:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_L
	.private_extern _A__uTimes_var_i16_L
_A__uTimes_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_L
	.private_extern _A__Times_var_i16_L
_A__Times_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i16_L
	.private_extern _A__uTimes_param_i16_L
_A__uTimes_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_L
	.private_extern _A__Times_param_i16_L
_A__Times_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_u64
	.private_extern _A__uTimes_var_i16_u64
_A__uTimes_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_u64
	.private_extern _A__Times_var_i16_u64
_A__Times_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i16_u64
	.private_extern _A__uTimes_param_i16_u64
_A__uTimes_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_u64
	.private_extern _A__Times_param_i16_u64
_A__Times_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_u16
	.private_extern _A__uTimes_var_i16_u16
_A__uTimes_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_u16
	.private_extern _A__Times_var_i16_u16
_A__Times_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1812
	cmpq	$65535, -16(%rbp)
	jle	L1813
L1812:
	movl	$28033, %edi
	call	__m3_fault
L1813:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_u16
	.private_extern _A__uTimes_param_i16_u16
_A__uTimes_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_u16
	.private_extern _A__Times_param_i16_u16
_A__Times_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movswq	-20(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1818
	cmpq	$65535, -16(%rbp)
	jle	L1819
L1818:
	movl	$28097, %edi
	call	__m3_fault
L1819:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i16_i32
	.private_extern _A__uTimes_var_i16_i32
_A__uTimes_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i16_i32
	.private_extern _A__Times_var_i16_i32
_A__Times_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1824
	cmpq	$65535, -16(%rbp)
	jle	L1825
L1824:
	movl	$28161, %edi
	call	__m3_fault
L1825:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i16_i32
	.private_extern _A__uTimes_param_i16_i32
_A__uTimes_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i16_i32
	.private_extern _A__Times_param_i16_i32
_A__Times_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	mov	-24(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L1830
	cmpq	$65535, -16(%rbp)
	jle	L1831
L1830:
	movl	$28225, %edi
	call	__m3_fault
L1831:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_LC_i16
	.private_extern _A__uTimes_var_LC_i16
_A__uTimes_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_i16
	.private_extern _A__Times_var_LC_i16
_A__Times_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_i16
	.private_extern _A__uTimes_param_LC_i16
_A__uTimes_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_i16
	.private_extern _A__Times_param_LC_i16
_A__Times_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_LC
	.private_extern _A__uTimes_var_LC_LC
_A__uTimes_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_LC
	.private_extern _A__Times_var_LC_LC
_A__Times_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_LC
	.private_extern _A__uTimes_param_LC_LC
_A__uTimes_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_LC
	.private_extern _A__Times_param_LC_LC
_A__Times_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_i64
	.private_extern _A__uTimes_var_LC_i64
_A__uTimes_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_i64
	.private_extern _A__Times_var_LC_i64
_A__Times_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_i64
	.private_extern _A__uTimes_param_LC_i64
_A__uTimes_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_i64
	.private_extern _A__Times_param_LC_i64
_A__Times_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_LC_I
	.private_extern _A__uTimes_var_LC_I
_A__uTimes_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_I
	.private_extern _A__Times_var_LC_I
_A__Times_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_I
	.private_extern _A__uTimes_param_LC_I
_A__uTimes_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_I
	.private_extern _A__Times_param_LC_I
_A__Times_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_LC_u8
	.private_extern _A__uTimes_var_LC_u8
_A__uTimes_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_u8
	.private_extern _A__Times_var_LC_u8
_A__Times_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_u8
	.private_extern _A__uTimes_param_LC_u8
_A__uTimes_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_u8
	.private_extern _A__Times_param_LC_u8
_A__Times_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_C
	.private_extern _A__uTimes_var_LC_C
_A__uTimes_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_C
	.private_extern _A__Times_var_LC_C
_A__Times_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_C
	.private_extern _A__uTimes_param_LC_C
_A__uTimes_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_C
	.private_extern _A__Times_param_LC_C
_A__Times_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_u32
	.private_extern _A__uTimes_var_LC_u32
_A__uTimes_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_u32
	.private_extern _A__Times_var_LC_u32
_A__Times_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_u32
	.private_extern _A__uTimes_param_LC_u32
_A__uTimes_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_u32
	.private_extern _A__Times_param_LC_u32
_A__Times_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_i8
	.private_extern _A__uTimes_var_LC_i8
_A__uTimes_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_i8
	.private_extern _A__Times_var_LC_i8
_A__Times_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_i8
	.private_extern _A__uTimes_param_LC_i8
_A__uTimes_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_i8
	.private_extern _A__Times_param_LC_i8
_A__Times_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_L
	.private_extern _A__uTimes_var_LC_L
_A__uTimes_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_L
	.private_extern _A__Times_var_LC_L
_A__Times_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_L
	.private_extern _A__uTimes_param_LC_L
_A__uTimes_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_L
	.private_extern _A__Times_param_LC_L
_A__Times_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_LC_u64
	.private_extern _A__uTimes_var_LC_u64
_A__uTimes_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_u64
	.private_extern _A__Times_var_LC_u64
_A__Times_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_u64
	.private_extern _A__uTimes_param_LC_u64
_A__uTimes_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_u64
	.private_extern _A__Times_param_LC_u64
_A__Times_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_LC_u16
	.private_extern _A__uTimes_var_LC_u16
_A__uTimes_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_u16
	.private_extern _A__Times_var_LC_u16
_A__Times_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_u16
	.private_extern _A__uTimes_param_LC_u16
_A__uTimes_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_u16
	.private_extern _A__Times_param_LC_u16
_A__Times_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_LC_i32
	.private_extern _A__uTimes_var_LC_i32
_A__uTimes_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_LC_i32
	.private_extern _A__Times_var_LC_i32
_A__Times_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_LC_i32
	.private_extern _A__uTimes_param_LC_i32
_A__uTimes_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_LC_i32
	.private_extern _A__Times_param_LC_i32
_A__Times_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_f64_f64
	.private_extern _A__Times_var_f64_f64
_A__Times_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	mulsd	%xmm1, %xmm0
	leave
	ret
.globl _A__Times_param_f64_f64
	.private_extern _A__Times_param_f64_f64
_A__Times_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	mulsd	-32(%rbp), %xmm0
	leave
	ret
.globl _A__uTimes_var_i64_i16
	.private_extern _A__uTimes_var_i64_i16
_A__uTimes_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_i16
	.private_extern _A__Times_var_i64_i16
_A__Times_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_i16
	.private_extern _A__uTimes_param_i64_i16
_A__uTimes_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_i16
	.private_extern _A__Times_param_i64_i16
_A__Times_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_LC
	.private_extern _A__uTimes_var_i64_LC
_A__uTimes_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_LC
	.private_extern _A__Times_var_i64_LC
_A__Times_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_LC
	.private_extern _A__uTimes_param_i64_LC
_A__uTimes_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i64_LC
	.private_extern _A__Times_param_i64_LC
_A__Times_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_i64
	.private_extern _A__uTimes_var_i64_i64
_A__uTimes_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_i64
	.private_extern _A__Times_var_i64_i64
_A__Times_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_i64
	.private_extern _A__uTimes_param_i64_i64
_A__uTimes_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_i64
	.private_extern _A__Times_param_i64_i64
_A__Times_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_I
	.private_extern _A__uTimes_var_i64_I
_A__uTimes_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_I
	.private_extern _A__Times_var_i64_I
_A__Times_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_I
	.private_extern _A__uTimes_param_i64_I
_A__uTimes_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_I
	.private_extern _A__Times_param_i64_I
_A__Times_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_u8
	.private_extern _A__uTimes_var_i64_u8
_A__uTimes_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_u8
	.private_extern _A__Times_var_i64_u8
_A__Times_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_u8
	.private_extern _A__uTimes_param_i64_u8
_A__uTimes_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_u8
	.private_extern _A__Times_param_i64_u8
_A__Times_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_C
	.private_extern _A__uTimes_var_i64_C
_A__uTimes_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_C
	.private_extern _A__Times_var_i64_C
_A__Times_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_C
	.private_extern _A__uTimes_param_i64_C
_A__uTimes_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i64_C
	.private_extern _A__Times_param_i64_C
_A__Times_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_u32
	.private_extern _A__uTimes_var_i64_u32
_A__uTimes_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_u32
	.private_extern _A__Times_var_i64_u32
_A__Times_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_u32
	.private_extern _A__uTimes_param_i64_u32
_A__uTimes_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_u32
	.private_extern _A__Times_param_i64_u32
_A__Times_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_i8
	.private_extern _A__uTimes_var_i64_i8
_A__uTimes_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_i8
	.private_extern _A__Times_var_i64_i8
_A__Times_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_i8
	.private_extern _A__uTimes_param_i64_i8
_A__uTimes_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_i8
	.private_extern _A__Times_param_i64_i8
_A__Times_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_L
	.private_extern _A__uTimes_var_i64_L
_A__uTimes_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_L
	.private_extern _A__Times_var_i64_L
_A__Times_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_L
	.private_extern _A__uTimes_param_i64_L
_A__uTimes_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_L
	.private_extern _A__Times_param_i64_L
_A__Times_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_u64
	.private_extern _A__uTimes_var_i64_u64
_A__uTimes_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_u64
	.private_extern _A__Times_var_i64_u64
_A__Times_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_u64
	.private_extern _A__uTimes_param_i64_u64
_A__uTimes_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_u64
	.private_extern _A__Times_param_i64_u64
_A__Times_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_u16
	.private_extern _A__uTimes_var_i64_u16
_A__uTimes_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_u16
	.private_extern _A__Times_var_i64_u16
_A__Times_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_u16
	.private_extern _A__uTimes_param_i64_u16
_A__uTimes_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_u16
	.private_extern _A__Times_param_i64_u16
_A__Times_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i64_i32
	.private_extern _A__uTimes_var_i64_i32
_A__uTimes_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i64_i32
	.private_extern _A__Times_var_i64_i32
_A__Times_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i64_i32
	.private_extern _A__uTimes_param_i64_i32
_A__uTimes_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i64_i32
	.private_extern _A__Times_param_i64_i32
_A__Times_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_i16
	.private_extern _A__uTimes_var_I_i16
_A__uTimes_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_i16
	.private_extern _A__Times_var_I_i16
_A__Times_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_i16
	.private_extern _A__uTimes_param_I_i16
_A__uTimes_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_i16
	.private_extern _A__Times_param_I_i16
_A__Times_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_LC
	.private_extern _A__uTimes_var_I_LC
_A__uTimes_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_LC
	.private_extern _A__Times_var_I_LC
_A__Times_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_LC
	.private_extern _A__uTimes_param_I_LC
_A__uTimes_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_I_LC
	.private_extern _A__Times_param_I_LC
_A__Times_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_i64
	.private_extern _A__uTimes_var_I_i64
_A__uTimes_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_i64
	.private_extern _A__Times_var_I_i64
_A__Times_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_i64
	.private_extern _A__uTimes_param_I_i64
_A__uTimes_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_i64
	.private_extern _A__Times_param_I_i64
_A__Times_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_I
	.private_extern _A__uTimes_var_I_I
_A__uTimes_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_I
	.private_extern _A__Times_var_I_I
_A__Times_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_I
	.private_extern _A__uTimes_param_I_I
_A__uTimes_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_I
	.private_extern _A__Times_param_I_I
_A__Times_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_u8
	.private_extern _A__uTimes_var_I_u8
_A__uTimes_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_u8
	.private_extern _A__Times_var_I_u8
_A__Times_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_u8
	.private_extern _A__uTimes_param_I_u8
_A__uTimes_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_u8
	.private_extern _A__Times_param_I_u8
_A__Times_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_C
	.private_extern _A__uTimes_var_I_C
_A__uTimes_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_C
	.private_extern _A__Times_var_I_C
_A__Times_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_C
	.private_extern _A__uTimes_param_I_C
_A__uTimes_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_I_C
	.private_extern _A__Times_param_I_C
_A__Times_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_u32
	.private_extern _A__uTimes_var_I_u32
_A__uTimes_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_u32
	.private_extern _A__Times_var_I_u32
_A__Times_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_u32
	.private_extern _A__uTimes_param_I_u32
_A__uTimes_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_u32
	.private_extern _A__Times_param_I_u32
_A__Times_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_i8
	.private_extern _A__uTimes_var_I_i8
_A__uTimes_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_i8
	.private_extern _A__Times_var_I_i8
_A__Times_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_i8
	.private_extern _A__uTimes_param_I_i8
_A__uTimes_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_i8
	.private_extern _A__Times_param_I_i8
_A__Times_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_L
	.private_extern _A__uTimes_var_I_L
_A__uTimes_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_L
	.private_extern _A__Times_var_I_L
_A__Times_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_L
	.private_extern _A__uTimes_param_I_L
_A__uTimes_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_L
	.private_extern _A__Times_param_I_L
_A__Times_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_u64
	.private_extern _A__uTimes_var_I_u64
_A__uTimes_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_u64
	.private_extern _A__Times_var_I_u64
_A__Times_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_u64
	.private_extern _A__uTimes_param_I_u64
_A__uTimes_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_u64
	.private_extern _A__Times_param_I_u64
_A__Times_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_u16
	.private_extern _A__uTimes_var_I_u16
_A__uTimes_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_u16
	.private_extern _A__Times_var_I_u16
_A__Times_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_u16
	.private_extern _A__uTimes_param_I_u16
_A__uTimes_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_u16
	.private_extern _A__Times_param_I_u16
_A__Times_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_I_i32
	.private_extern _A__uTimes_var_I_i32
_A__uTimes_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_I_i32
	.private_extern _A__Times_var_I_i32
_A__Times_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_I_i32
	.private_extern _A__uTimes_param_I_i32
_A__uTimes_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_I_i32
	.private_extern _A__Times_param_I_i32
_A__Times_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_i16
	.private_extern _A__uTimes_var_u8_i16
_A__uTimes_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_i16
	.private_extern _A__Times_var_u8_i16
_A__Times_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2128
	cmpq	$127, -16(%rbp)
	jle	L2129
L2128:
	movl	$32961, %edi
	call	__m3_fault
L2129:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_i16
	.private_extern _A__uTimes_param_u8_i16
_A__uTimes_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_i16
	.private_extern _A__Times_param_u8_i16
_A__Times_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movzwl	-20(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2134
	cmpq	$127, -16(%rbp)
	jle	L2135
L2134:
	movl	$33025, %edi
	call	__m3_fault
L2135:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_LC
	.private_extern _A__uTimes_var_u8_LC
_A__uTimes_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_LC
	.private_extern _A__Times_var_u8_LC
_A__Times_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u8_LC
	.private_extern _A__uTimes_param_u8_LC
_A__uTimes_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u8_LC
	.private_extern _A__Times_param_u8_LC
_A__Times_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_u8_i64
	.private_extern _A__uTimes_var_u8_i64
_A__uTimes_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_i64
	.private_extern _A__Times_var_u8_i64
_A__Times_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u8_i64
	.private_extern _A__uTimes_param_u8_i64
_A__uTimes_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_i64
	.private_extern _A__Times_param_u8_i64
_A__Times_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_I
	.private_extern _A__uTimes_var_u8_I
_A__uTimes_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_I
	.private_extern _A__Times_var_u8_I
_A__Times_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2156
	cmpq	$127, -16(%rbp)
	jle	L2157
L2156:
	movl	$33345, %edi
	call	__m3_fault
L2157:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_I
	.private_extern _A__uTimes_param_u8_I
_A__uTimes_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_I
	.private_extern _A__Times_param_u8_I
_A__Times_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2162
	cmpq	$127, -16(%rbp)
	jle	L2163
L2162:
	movl	$33409, %edi
	call	__m3_fault
L2163:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_u8
	.private_extern _A__uTimes_var_u8_u8
_A__uTimes_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_u8
	.private_extern _A__Times_var_u8_u8
_A__Times_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2168
	cmpq	$127, -16(%rbp)
	jle	L2169
L2168:
	movl	$33473, %edi
	call	__m3_fault
L2169:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_u8
	.private_extern _A__uTimes_param_u8_u8
_A__uTimes_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_u8
	.private_extern _A__Times_param_u8_u8
_A__Times_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movsbq	-18(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2174
	cmpq	$127, -16(%rbp)
	jle	L2175
L2174:
	movl	$33537, %edi
	call	__m3_fault
L2175:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_C
	.private_extern _A__uTimes_var_u8_C
_A__uTimes_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_C
	.private_extern _A__Times_var_u8_C
_A__Times_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2180
	cmpq	$127, -16(%rbp)
	jle	L2181
L2180:
	movl	$33601, %edi
	call	__m3_fault
L2181:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_C
	.private_extern _A__uTimes_param_u8_C
_A__uTimes_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u8_C
	.private_extern _A__Times_param_u8_C
_A__Times_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2186
	cmpq	$127, -16(%rbp)
	jle	L2187
L2186:
	movl	$33665, %edi
	call	__m3_fault
L2187:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_u32
	.private_extern _A__uTimes_var_u8_u32
_A__uTimes_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_u32
	.private_extern _A__Times_var_u8_u32
_A__Times_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2192
	cmpq	$127, -16(%rbp)
	jle	L2193
L2192:
	movl	$33729, %edi
	call	__m3_fault
L2193:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_u32
	.private_extern _A__uTimes_param_u8_u32
_A__uTimes_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_u32
	.private_extern _A__Times_param_u8_u32
_A__Times_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2198
	cmpq	$127, -16(%rbp)
	jle	L2199
L2198:
	movl	$33793, %edi
	call	__m3_fault
L2199:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_i8
	.private_extern _A__uTimes_var_u8_i8
_A__uTimes_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_i8
	.private_extern _A__Times_var_u8_i8
_A__Times_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2204
	cmpq	$127, -16(%rbp)
	jle	L2205
L2204:
	movl	$33857, %edi
	call	__m3_fault
L2205:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_i8
	.private_extern _A__uTimes_param_u8_i8
_A__uTimes_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_i8
	.private_extern _A__Times_param_u8_i8
_A__Times_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movzbl	-18(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2210
	cmpq	$127, -16(%rbp)
	jle	L2211
L2210:
	movl	$33921, %edi
	call	__m3_fault
L2211:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_L
	.private_extern _A__uTimes_var_u8_L
_A__uTimes_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_L
	.private_extern _A__Times_var_u8_L
_A__Times_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u8_L
	.private_extern _A__uTimes_param_u8_L
_A__uTimes_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_L
	.private_extern _A__Times_param_u8_L
_A__Times_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_u64
	.private_extern _A__uTimes_var_u8_u64
_A__uTimes_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_u64
	.private_extern _A__Times_var_u8_u64
_A__Times_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u8_u64
	.private_extern _A__uTimes_param_u8_u64
_A__uTimes_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_u64
	.private_extern _A__Times_param_u8_u64
_A__Times_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_u16
	.private_extern _A__uTimes_var_u8_u16
_A__uTimes_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_u16
	.private_extern _A__Times_var_u8_u16
_A__Times_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2232
	cmpq	$127, -16(%rbp)
	jle	L2233
L2232:
	movl	$34241, %edi
	call	__m3_fault
L2233:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_u16
	.private_extern _A__uTimes_param_u8_u16
_A__uTimes_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_u16
	.private_extern _A__Times_param_u8_u16
_A__Times_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movswq	-20(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2238
	cmpq	$127, -16(%rbp)
	jle	L2239
L2238:
	movl	$34305, %edi
	call	__m3_fault
L2239:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u8_i32
	.private_extern _A__uTimes_var_u8_i32
_A__uTimes_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u8_i32
	.private_extern _A__Times_var_u8_i32
_A__Times_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2244
	cmpq	$127, -16(%rbp)
	jle	L2245
L2244:
	movl	$34369, %edi
	call	__m3_fault
L2245:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u8_i32
	.private_extern _A__uTimes_param_u8_i32
_A__uTimes_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u8_i32
	.private_extern _A__Times_param_u8_i32
_A__Times_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	mov	-24(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L2250
	cmpq	$127, -16(%rbp)
	jle	L2251
L2250:
	movl	$34433, %edi
	call	__m3_fault
L2251:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_i16
	.private_extern _A__uTimes_var_C_i16
_A__uTimes_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_i16
	.private_extern _A__Times_var_C_i16
_A__Times_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2256
	movl	$34497, %edi
	call	__m3_fault
L2256:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_i16
	.private_extern _A__uTimes_param_C_i16
_A__uTimes_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_i16
	.private_extern _A__Times_param_C_i16
_A__Times_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	-24(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2261
	movl	$34561, %edi
	call	__m3_fault
L2261:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_LC
	.private_extern _A__uTimes_var_C_LC
_A__uTimes_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_LC
	.private_extern _A__Times_var_C_LC
_A__Times_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_C_LC
	.private_extern _A__uTimes_param_C_LC
_A__uTimes_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_LC
	.private_extern _A__Times_param_C_LC
_A__Times_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_C_i64
	.private_extern _A__uTimes_var_C_i64
_A__uTimes_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_i64
	.private_extern _A__Times_var_C_i64
_A__Times_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_C_i64
	.private_extern _A__uTimes_param_C_i64
_A__uTimes_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_i64
	.private_extern _A__Times_param_C_i64
_A__Times_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_I
	.private_extern _A__uTimes_var_C_I
_A__uTimes_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_I
	.private_extern _A__Times_var_C_I
_A__Times_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2282
	movl	$34881, %edi
	call	__m3_fault
L2282:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_I
	.private_extern _A__uTimes_param_C_I
_A__uTimes_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_I
	.private_extern _A__Times_param_C_I
_A__Times_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2287
	movl	$34945, %edi
	call	__m3_fault
L2287:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_u8
	.private_extern _A__uTimes_var_C_u8
_A__uTimes_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_u8
	.private_extern _A__Times_var_C_u8
_A__Times_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2292
	movl	$35009, %edi
	call	__m3_fault
L2292:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_u8
	.private_extern _A__uTimes_param_C_u8
_A__uTimes_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_u8
	.private_extern _A__Times_param_C_u8
_A__Times_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	-24(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2297
	movl	$35073, %edi
	call	__m3_fault
L2297:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_C
	.private_extern _A__uTimes_var_C_C
_A__uTimes_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_C
	.private_extern _A__Times_var_C_C
_A__Times_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2302
	movl	$35137, %edi
	call	__m3_fault
L2302:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_C
	.private_extern _A__uTimes_param_C_C
_A__uTimes_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_C
	.private_extern _A__Times_param_C_C
_A__Times_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2307
	movl	$35201, %edi
	call	__m3_fault
L2307:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_u32
	.private_extern _A__uTimes_var_C_u32
_A__uTimes_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_u32
	.private_extern _A__Times_var_C_u32
_A__Times_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2312
	movl	$35265, %edi
	call	__m3_fault
L2312:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_u32
	.private_extern _A__uTimes_param_C_u32
_A__uTimes_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_u32
	.private_extern _A__Times_param_C_u32
_A__Times_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2317
	movl	$35329, %edi
	call	__m3_fault
L2317:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_i8
	.private_extern _A__uTimes_var_C_i8
_A__uTimes_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_i8
	.private_extern _A__Times_var_C_i8
_A__Times_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2322
	movl	$35393, %edi
	call	__m3_fault
L2322:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_i8
	.private_extern _A__uTimes_param_C_i8
_A__uTimes_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_i8
	.private_extern _A__Times_param_C_i8
_A__Times_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	-24(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2327
	movl	$35457, %edi
	call	__m3_fault
L2327:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_L
	.private_extern _A__uTimes_var_C_L
_A__uTimes_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_L
	.private_extern _A__Times_var_C_L
_A__Times_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_C_L
	.private_extern _A__uTimes_param_C_L
_A__uTimes_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_L
	.private_extern _A__Times_param_C_L
_A__Times_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_u64
	.private_extern _A__uTimes_var_C_u64
_A__uTimes_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_u64
	.private_extern _A__Times_var_C_u64
_A__Times_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_C_u64
	.private_extern _A__uTimes_param_C_u64
_A__uTimes_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_u64
	.private_extern _A__Times_param_C_u64
_A__Times_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_u16
	.private_extern _A__uTimes_var_C_u16
_A__uTimes_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_u16
	.private_extern _A__Times_var_C_u16
_A__Times_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2348
	movl	$35777, %edi
	call	__m3_fault
L2348:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_u16
	.private_extern _A__uTimes_param_C_u16
_A__uTimes_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_u16
	.private_extern _A__Times_param_C_u16
_A__Times_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	-24(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2353
	movl	$35841, %edi
	call	__m3_fault
L2353:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_C_i32
	.private_extern _A__uTimes_var_C_i32
_A__uTimes_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_C_i32
	.private_extern _A__Times_var_C_i32
_A__Times_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2358
	movl	$35905, %edi
	call	__m3_fault
L2358:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_C_i32
	.private_extern _A__uTimes_param_C_i32
_A__uTimes_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__Times_param_C_i32
	.private_extern _A__Times_param_C_i32
_A__Times_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	-24(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L2363
	movl	$35969, %edi
	call	__m3_fault
L2363:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__Times_var_f32_f32
	.private_extern _A__Times_var_f32_f32
_A__Times_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	mulss	%xmm1, %xmm0
	leave
	ret
.globl _A__Times_param_f32_f32
	.private_extern _A__Times_param_f32_f32
_A__Times_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	mulss	-24(%rbp), %xmm0
	leave
	ret
.globl _A__uTimes_var_u32_i16
	.private_extern _A__uTimes_var_u32_i16
_A__uTimes_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_i16
	.private_extern _A__Times_var_u32_i16
_A__Times_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2372
	cmpq	$2147483647, -16(%rbp)
	jle	L2373
L2372:
	movl	$36097, %edi
	call	__m3_fault
L2373:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_i16
	.private_extern _A__uTimes_param_u32_i16
_A__uTimes_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_i16
	.private_extern _A__Times_param_u32_i16
_A__Times_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2378
	cmpq	$2147483647, -16(%rbp)
	jle	L2379
L2378:
	movl	$36161, %edi
	call	__m3_fault
L2379:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_LC
	.private_extern _A__uTimes_var_u32_LC
_A__uTimes_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_LC
	.private_extern _A__Times_var_u32_LC
_A__Times_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u32_LC
	.private_extern _A__uTimes_param_u32_LC
_A__uTimes_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u32_LC
	.private_extern _A__Times_param_u32_LC
_A__Times_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_u32_i64
	.private_extern _A__uTimes_var_u32_i64
_A__uTimes_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_i64
	.private_extern _A__Times_var_u32_i64
_A__Times_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u32_i64
	.private_extern _A__uTimes_param_u32_i64
_A__uTimes_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_i64
	.private_extern _A__Times_param_u32_i64
_A__Times_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_I
	.private_extern _A__uTimes_var_u32_I
_A__uTimes_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_I
	.private_extern _A__Times_var_u32_I
_A__Times_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2400
	cmpq	$2147483647, -16(%rbp)
	jle	L2401
L2400:
	movl	$36481, %edi
	call	__m3_fault
L2401:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_I
	.private_extern _A__uTimes_param_u32_I
_A__uTimes_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_I
	.private_extern _A__Times_param_u32_I
_A__Times_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2406
	cmpq	$2147483647, -16(%rbp)
	jle	L2407
L2406:
	movl	$36545, %edi
	call	__m3_fault
L2407:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_u8
	.private_extern _A__uTimes_var_u32_u8
_A__uTimes_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_u8
	.private_extern _A__Times_var_u32_u8
_A__Times_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2412
	cmpq	$2147483647, -16(%rbp)
	jle	L2413
L2412:
	movl	$36609, %edi
	call	__m3_fault
L2413:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_u8
	.private_extern _A__uTimes_param_u32_u8
_A__uTimes_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_u8
	.private_extern _A__Times_param_u32_u8
_A__Times_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2418
	cmpq	$2147483647, -16(%rbp)
	jle	L2419
L2418:
	movl	$36673, %edi
	call	__m3_fault
L2419:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_C
	.private_extern _A__uTimes_var_u32_C
_A__uTimes_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_C
	.private_extern _A__Times_var_u32_C
_A__Times_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2424
	cmpq	$2147483647, -16(%rbp)
	jle	L2425
L2424:
	movl	$36737, %edi
	call	__m3_fault
L2425:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_C
	.private_extern _A__uTimes_param_u32_C
_A__uTimes_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u32_C
	.private_extern _A__Times_param_u32_C
_A__Times_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2430
	cmpq	$2147483647, -16(%rbp)
	jle	L2431
L2430:
	movl	$36801, %edi
	call	__m3_fault
L2431:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_u32
	.private_extern _A__uTimes_var_u32_u32
_A__uTimes_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_u32
	.private_extern _A__Times_var_u32_u32
_A__Times_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2436
	cmpq	$2147483647, -16(%rbp)
	jle	L2437
L2436:
	movl	$36865, %edi
	call	__m3_fault
L2437:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_u32
	.private_extern _A__uTimes_param_u32_u32
_A__uTimes_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_u32
	.private_extern _A__Times_param_u32_u32
_A__Times_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2442
	cmpq	$2147483647, -16(%rbp)
	jle	L2443
L2442:
	movl	$36929, %edi
	call	__m3_fault
L2443:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_i8
	.private_extern _A__uTimes_var_u32_i8
_A__uTimes_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_i8
	.private_extern _A__Times_var_u32_i8
_A__Times_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2448
	cmpq	$2147483647, -16(%rbp)
	jle	L2449
L2448:
	movl	$36993, %edi
	call	__m3_fault
L2449:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_i8
	.private_extern _A__uTimes_param_u32_i8
_A__uTimes_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_i8
	.private_extern _A__Times_param_u32_i8
_A__Times_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2454
	cmpq	$2147483647, -16(%rbp)
	jle	L2455
L2454:
	movl	$37057, %edi
	call	__m3_fault
L2455:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_L
	.private_extern _A__uTimes_var_u32_L
_A__uTimes_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_L
	.private_extern _A__Times_var_u32_L
_A__Times_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u32_L
	.private_extern _A__uTimes_param_u32_L
_A__uTimes_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_L
	.private_extern _A__Times_param_u32_L
_A__Times_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_u64
	.private_extern _A__uTimes_var_u32_u64
_A__uTimes_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_u64
	.private_extern _A__Times_var_u32_u64
_A__Times_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u32_u64
	.private_extern _A__uTimes_param_u32_u64
_A__uTimes_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_u64
	.private_extern _A__Times_param_u32_u64
_A__Times_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_u16
	.private_extern _A__uTimes_var_u32_u16
_A__uTimes_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_u16
	.private_extern _A__Times_var_u32_u16
_A__Times_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2476
	cmpq	$2147483647, -16(%rbp)
	jle	L2477
L2476:
	movl	$37377, %edi
	call	__m3_fault
L2477:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_u16
	.private_extern _A__uTimes_param_u32_u16
_A__uTimes_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_u16
	.private_extern _A__Times_param_u32_u16
_A__Times_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2482
	cmpq	$2147483647, -16(%rbp)
	jle	L2483
L2482:
	movl	$37441, %edi
	call	__m3_fault
L2483:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u32_i32
	.private_extern _A__uTimes_var_u32_i32
_A__uTimes_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u32_i32
	.private_extern _A__Times_var_u32_i32
_A__Times_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2488
	cmpq	$2147483647, -16(%rbp)
	jle	L2489
L2488:
	movl	$37505, %edi
	call	__m3_fault
L2489:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u32_i32
	.private_extern _A__uTimes_param_u32_i32
_A__uTimes_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u32_i32
	.private_extern _A__Times_param_u32_i32
_A__Times_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L2494
	cmpq	$2147483647, -16(%rbp)
	jle	L2495
L2494:
	movl	$37569, %edi
	call	__m3_fault
L2495:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_i16
	.private_extern _A__uTimes_var_i8_i16
_A__uTimes_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_i16
	.private_extern _A__Times_var_i8_i16
_A__Times_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2500
	cmpq	$255, -16(%rbp)
	jle	L2501
L2500:
	movl	$37633, %edi
	call	__m3_fault
L2501:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_i16
	.private_extern _A__uTimes_param_i8_i16
_A__uTimes_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_i16
	.private_extern _A__Times_param_i8_i16
_A__Times_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movzwl	-20(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2506
	cmpq	$255, -16(%rbp)
	jle	L2507
L2506:
	movl	$37697, %edi
	call	__m3_fault
L2507:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_LC
	.private_extern _A__uTimes_var_i8_LC
_A__uTimes_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_LC
	.private_extern _A__Times_var_i8_LC
_A__Times_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i8_LC
	.private_extern _A__uTimes_param_i8_LC
_A__uTimes_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i8_LC
	.private_extern _A__Times_param_i8_LC
_A__Times_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_i8_i64
	.private_extern _A__uTimes_var_i8_i64
_A__uTimes_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_i64
	.private_extern _A__Times_var_i8_i64
_A__Times_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i8_i64
	.private_extern _A__uTimes_param_i8_i64
_A__uTimes_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_i64
	.private_extern _A__Times_param_i8_i64
_A__Times_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_I
	.private_extern _A__uTimes_var_i8_I
_A__uTimes_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_I
	.private_extern _A__Times_var_i8_I
_A__Times_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2528
	cmpq	$255, -16(%rbp)
	jle	L2529
L2528:
	movl	$38017, %edi
	call	__m3_fault
L2529:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_I
	.private_extern _A__uTimes_param_i8_I
_A__uTimes_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_I
	.private_extern _A__Times_param_i8_I
_A__Times_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2534
	cmpq	$255, -16(%rbp)
	jle	L2535
L2534:
	movl	$38081, %edi
	call	__m3_fault
L2535:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_u8
	.private_extern _A__uTimes_var_i8_u8
_A__uTimes_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_u8
	.private_extern _A__Times_var_i8_u8
_A__Times_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2540
	cmpq	$255, -16(%rbp)
	jle	L2541
L2540:
	movl	$38145, %edi
	call	__m3_fault
L2541:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_u8
	.private_extern _A__uTimes_param_i8_u8
_A__uTimes_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_u8
	.private_extern _A__Times_param_i8_u8
_A__Times_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movsbq	-18(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2546
	cmpq	$255, -16(%rbp)
	jle	L2547
L2546:
	movl	$38209, %edi
	call	__m3_fault
L2547:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_C
	.private_extern _A__uTimes_var_i8_C
_A__uTimes_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_C
	.private_extern _A__Times_var_i8_C
_A__Times_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2552
	cmpq	$255, -16(%rbp)
	jle	L2553
L2552:
	movl	$38273, %edi
	call	__m3_fault
L2553:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_C
	.private_extern _A__uTimes_param_i8_C
_A__uTimes_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i8_C
	.private_extern _A__Times_param_i8_C
_A__Times_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2558
	cmpq	$255, -16(%rbp)
	jle	L2559
L2558:
	movl	$38337, %edi
	call	__m3_fault
L2559:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_u32
	.private_extern _A__uTimes_var_i8_u32
_A__uTimes_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_u32
	.private_extern _A__Times_var_i8_u32
_A__Times_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2564
	cmpq	$255, -16(%rbp)
	jle	L2565
L2564:
	movl	$38401, %edi
	call	__m3_fault
L2565:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_u32
	.private_extern _A__uTimes_param_i8_u32
_A__uTimes_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_u32
	.private_extern _A__Times_param_i8_u32
_A__Times_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2570
	cmpq	$255, -16(%rbp)
	jle	L2571
L2570:
	movl	$38465, %edi
	call	__m3_fault
L2571:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_i8
	.private_extern _A__uTimes_var_i8_i8
_A__uTimes_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_i8
	.private_extern _A__Times_var_i8_i8
_A__Times_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2576
	cmpq	$255, -16(%rbp)
	jle	L2577
L2576:
	movl	$38529, %edi
	call	__m3_fault
L2577:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_i8
	.private_extern _A__uTimes_param_i8_i8
_A__uTimes_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_i8
	.private_extern _A__Times_param_i8_i8
_A__Times_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movzbl	-18(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2582
	cmpq	$255, -16(%rbp)
	jle	L2583
L2582:
	movl	$38593, %edi
	call	__m3_fault
L2583:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_L
	.private_extern _A__uTimes_var_i8_L
_A__uTimes_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_L
	.private_extern _A__Times_var_i8_L
_A__Times_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i8_L
	.private_extern _A__uTimes_param_i8_L
_A__uTimes_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_L
	.private_extern _A__Times_param_i8_L
_A__Times_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_u64
	.private_extern _A__uTimes_var_i8_u64
_A__uTimes_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_u64
	.private_extern _A__Times_var_i8_u64
_A__Times_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i8_u64
	.private_extern _A__uTimes_param_i8_u64
_A__uTimes_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_u64
	.private_extern _A__Times_param_i8_u64
_A__Times_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_u16
	.private_extern _A__uTimes_var_i8_u16
_A__uTimes_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_u16
	.private_extern _A__Times_var_i8_u16
_A__Times_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2604
	cmpq	$255, -16(%rbp)
	jle	L2605
L2604:
	movl	$38913, %edi
	call	__m3_fault
L2605:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_u16
	.private_extern _A__uTimes_param_i8_u16
_A__uTimes_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_u16
	.private_extern _A__Times_param_i8_u16
_A__Times_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movswq	-20(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2610
	cmpq	$255, -16(%rbp)
	jle	L2611
L2610:
	movl	$38977, %edi
	call	__m3_fault
L2611:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i8_i32
	.private_extern _A__uTimes_var_i8_i32
_A__uTimes_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i8_i32
	.private_extern _A__Times_var_i8_i32
_A__Times_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2616
	cmpq	$255, -16(%rbp)
	jle	L2617
L2616:
	movl	$39041, %edi
	call	__m3_fault
L2617:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i8_i32
	.private_extern _A__uTimes_param_i8_i32
_A__uTimes_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i8_i32
	.private_extern _A__Times_param_i8_i32
_A__Times_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	mov	-24(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2622
	cmpq	$255, -16(%rbp)
	jle	L2623
L2622:
	movl	$39105, %edi
	call	__m3_fault
L2623:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_i16
	.private_extern _A__uTimes_var_L_i16
_A__uTimes_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_i16
	.private_extern _A__Times_var_L_i16
_A__Times_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_i16
	.private_extern _A__uTimes_param_L_i16
_A__uTimes_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_i16
	.private_extern _A__Times_param_L_i16
_A__Times_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_LC
	.private_extern _A__uTimes_var_L_LC
_A__uTimes_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_LC
	.private_extern _A__Times_var_L_LC
_A__Times_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_LC
	.private_extern _A__uTimes_param_L_LC
_A__uTimes_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_L_LC
	.private_extern _A__Times_param_L_LC
_A__Times_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_i64
	.private_extern _A__uTimes_var_L_i64
_A__uTimes_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_i64
	.private_extern _A__Times_var_L_i64
_A__Times_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_i64
	.private_extern _A__uTimes_param_L_i64
_A__uTimes_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_i64
	.private_extern _A__Times_param_L_i64
_A__Times_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_I
	.private_extern _A__uTimes_var_L_I
_A__uTimes_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_I
	.private_extern _A__Times_var_L_I
_A__Times_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_I
	.private_extern _A__uTimes_param_L_I
_A__uTimes_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_I
	.private_extern _A__Times_param_L_I
_A__Times_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_u8
	.private_extern _A__uTimes_var_L_u8
_A__uTimes_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_u8
	.private_extern _A__Times_var_L_u8
_A__Times_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_u8
	.private_extern _A__uTimes_param_L_u8
_A__uTimes_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_u8
	.private_extern _A__Times_param_L_u8
_A__Times_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_C
	.private_extern _A__uTimes_var_L_C
_A__uTimes_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_C
	.private_extern _A__Times_var_L_C
_A__Times_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_C
	.private_extern _A__uTimes_param_L_C
_A__uTimes_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_L_C
	.private_extern _A__Times_param_L_C
_A__Times_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_u32
	.private_extern _A__uTimes_var_L_u32
_A__uTimes_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_u32
	.private_extern _A__Times_var_L_u32
_A__Times_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_u32
	.private_extern _A__uTimes_param_L_u32
_A__uTimes_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_u32
	.private_extern _A__Times_param_L_u32
_A__Times_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_i8
	.private_extern _A__uTimes_var_L_i8
_A__uTimes_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_i8
	.private_extern _A__Times_var_L_i8
_A__Times_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_i8
	.private_extern _A__uTimes_param_L_i8
_A__uTimes_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_i8
	.private_extern _A__Times_param_L_i8
_A__Times_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_L
	.private_extern _A__uTimes_var_L_L
_A__uTimes_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_L
	.private_extern _A__Times_var_L_L
_A__Times_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_L
	.private_extern _A__uTimes_param_L_L
_A__uTimes_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_L
	.private_extern _A__Times_param_L_L
_A__Times_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_u64
	.private_extern _A__uTimes_var_L_u64
_A__uTimes_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_u64
	.private_extern _A__Times_var_L_u64
_A__Times_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_u64
	.private_extern _A__uTimes_param_L_u64
_A__uTimes_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_u64
	.private_extern _A__Times_param_L_u64
_A__Times_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_u16
	.private_extern _A__uTimes_var_L_u16
_A__uTimes_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_u16
	.private_extern _A__Times_var_L_u16
_A__Times_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_u16
	.private_extern _A__uTimes_param_L_u16
_A__uTimes_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_u16
	.private_extern _A__Times_param_L_u16
_A__Times_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_L_i32
	.private_extern _A__uTimes_var_L_i32
_A__uTimes_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_L_i32
	.private_extern _A__Times_var_L_i32
_A__Times_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_L_i32
	.private_extern _A__uTimes_param_L_i32
_A__uTimes_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_L_i32
	.private_extern _A__Times_param_L_i32
_A__Times_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_i16
	.private_extern _A__uTimes_var_u64_i16
_A__uTimes_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_i16
	.private_extern _A__Times_var_u64_i16
_A__Times_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_i16
	.private_extern _A__uTimes_param_u64_i16
_A__uTimes_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_i16
	.private_extern _A__Times_param_u64_i16
_A__Times_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_LC
	.private_extern _A__uTimes_var_u64_LC
_A__uTimes_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_LC
	.private_extern _A__Times_var_u64_LC
_A__Times_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_LC
	.private_extern _A__uTimes_param_u64_LC
_A__uTimes_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u64_LC
	.private_extern _A__Times_param_u64_LC
_A__Times_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_i64
	.private_extern _A__uTimes_var_u64_i64
_A__uTimes_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_i64
	.private_extern _A__Times_var_u64_i64
_A__Times_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_i64
	.private_extern _A__uTimes_param_u64_i64
_A__uTimes_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_i64
	.private_extern _A__Times_param_u64_i64
_A__Times_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_I
	.private_extern _A__uTimes_var_u64_I
_A__uTimes_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_I
	.private_extern _A__Times_var_u64_I
_A__Times_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_I
	.private_extern _A__uTimes_param_u64_I
_A__uTimes_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_I
	.private_extern _A__Times_param_u64_I
_A__Times_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_u8
	.private_extern _A__uTimes_var_u64_u8
_A__uTimes_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_u8
	.private_extern _A__Times_var_u64_u8
_A__Times_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_u8
	.private_extern _A__uTimes_param_u64_u8
_A__uTimes_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_u8
	.private_extern _A__Times_param_u64_u8
_A__Times_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_C
	.private_extern _A__uTimes_var_u64_C
_A__uTimes_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_C
	.private_extern _A__Times_var_u64_C
_A__Times_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_C
	.private_extern _A__uTimes_param_u64_C
_A__uTimes_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u64_C
	.private_extern _A__Times_param_u64_C
_A__Times_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_u32
	.private_extern _A__uTimes_var_u64_u32
_A__uTimes_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_u32
	.private_extern _A__Times_var_u64_u32
_A__Times_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_u32
	.private_extern _A__uTimes_param_u64_u32
_A__uTimes_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_u32
	.private_extern _A__Times_param_u64_u32
_A__Times_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_i8
	.private_extern _A__uTimes_var_u64_i8
_A__uTimes_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_i8
	.private_extern _A__Times_var_u64_i8
_A__Times_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_i8
	.private_extern _A__uTimes_param_u64_i8
_A__uTimes_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_i8
	.private_extern _A__Times_param_u64_i8
_A__Times_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_L
	.private_extern _A__uTimes_var_u64_L
_A__uTimes_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_L
	.private_extern _A__Times_var_u64_L
_A__Times_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_L
	.private_extern _A__uTimes_param_u64_L
_A__uTimes_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_L
	.private_extern _A__Times_param_u64_L
_A__Times_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_u64
	.private_extern _A__uTimes_var_u64_u64
_A__uTimes_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_u64
	.private_extern _A__Times_var_u64_u64
_A__Times_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_u64
	.private_extern _A__uTimes_param_u64_u64
_A__uTimes_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_u64
	.private_extern _A__Times_param_u64_u64
_A__Times_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_u16
	.private_extern _A__uTimes_var_u64_u16
_A__uTimes_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_u16
	.private_extern _A__Times_var_u64_u16
_A__Times_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_u16
	.private_extern _A__uTimes_param_u64_u16
_A__uTimes_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_u16
	.private_extern _A__Times_param_u64_u16
_A__Times_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u64_i32
	.private_extern _A__uTimes_var_u64_i32
_A__uTimes_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u64_i32
	.private_extern _A__Times_var_u64_i32
_A__Times_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u64_i32
	.private_extern _A__uTimes_param_u64_i32
_A__uTimes_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u64_i32
	.private_extern _A__Times_param_u64_i32
_A__Times_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	imulq	-24(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_i16
	.private_extern _A__uTimes_var_u16_i16
_A__uTimes_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_i16
	.private_extern _A__Times_var_u16_i16
_A__Times_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2820
	cmpq	$32767, -16(%rbp)
	jle	L2821
L2820:
	movl	$42241, %edi
	call	__m3_fault
L2821:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_i16
	.private_extern _A__uTimes_param_u16_i16
_A__uTimes_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_i16
	.private_extern _A__Times_param_u16_i16
_A__Times_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movzwl	-20(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2826
	cmpq	$32767, -16(%rbp)
	jle	L2827
L2826:
	movl	$42305, %edi
	call	__m3_fault
L2827:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_LC
	.private_extern _A__uTimes_var_u16_LC
_A__uTimes_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_LC
	.private_extern _A__Times_var_u16_LC
_A__Times_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u16_LC
	.private_extern _A__uTimes_param_u16_LC
_A__uTimes_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u16_LC
	.private_extern _A__Times_param_u16_LC
_A__Times_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_u16_i64
	.private_extern _A__uTimes_var_u16_i64
_A__uTimes_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_i64
	.private_extern _A__Times_var_u16_i64
_A__Times_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u16_i64
	.private_extern _A__uTimes_param_u16_i64
_A__uTimes_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_i64
	.private_extern _A__Times_param_u16_i64
_A__Times_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_I
	.private_extern _A__uTimes_var_u16_I
_A__uTimes_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_I
	.private_extern _A__Times_var_u16_I
_A__Times_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2848
	cmpq	$32767, -16(%rbp)
	jle	L2849
L2848:
	movl	$42625, %edi
	call	__m3_fault
L2849:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_I
	.private_extern _A__uTimes_param_u16_I
_A__uTimes_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_I
	.private_extern _A__Times_param_u16_I
_A__Times_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2854
	cmpq	$32767, -16(%rbp)
	jle	L2855
L2854:
	movl	$42689, %edi
	call	__m3_fault
L2855:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_u8
	.private_extern _A__uTimes_var_u16_u8
_A__uTimes_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_u8
	.private_extern _A__Times_var_u16_u8
_A__Times_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2860
	cmpq	$32767, -16(%rbp)
	jle	L2861
L2860:
	movl	$42753, %edi
	call	__m3_fault
L2861:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_u8
	.private_extern _A__uTimes_param_u16_u8
_A__uTimes_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_u8
	.private_extern _A__Times_param_u16_u8
_A__Times_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movsbq	-19(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2866
	cmpq	$32767, -16(%rbp)
	jle	L2867
L2866:
	movl	$42817, %edi
	call	__m3_fault
L2867:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_C
	.private_extern _A__uTimes_var_u16_C
_A__uTimes_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_C
	.private_extern _A__Times_var_u16_C
_A__Times_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2872
	cmpq	$32767, -16(%rbp)
	jle	L2873
L2872:
	movl	$42881, %edi
	call	__m3_fault
L2873:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_C
	.private_extern _A__uTimes_param_u16_C
_A__uTimes_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_u16_C
	.private_extern _A__Times_param_u16_C
_A__Times_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2878
	cmpq	$32767, -16(%rbp)
	jle	L2879
L2878:
	movl	$42945, %edi
	call	__m3_fault
L2879:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_u32
	.private_extern _A__uTimes_var_u16_u32
_A__uTimes_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_u32
	.private_extern _A__Times_var_u16_u32
_A__Times_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2884
	cmpq	$32767, -16(%rbp)
	jle	L2885
L2884:
	movl	$43009, %edi
	call	__m3_fault
L2885:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_u32
	.private_extern _A__uTimes_param_u16_u32
_A__uTimes_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_u32
	.private_extern _A__Times_param_u16_u32
_A__Times_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2890
	cmpq	$32767, -16(%rbp)
	jle	L2891
L2890:
	movl	$43073, %edi
	call	__m3_fault
L2891:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_i8
	.private_extern _A__uTimes_var_u16_i8
_A__uTimes_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_i8
	.private_extern _A__Times_var_u16_i8
_A__Times_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2896
	cmpq	$32767, -16(%rbp)
	jle	L2897
L2896:
	movl	$43137, %edi
	call	__m3_fault
L2897:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_i8
	.private_extern _A__uTimes_param_u16_i8
_A__uTimes_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_i8
	.private_extern _A__Times_param_u16_i8
_A__Times_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movzbl	-19(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2902
	cmpq	$32767, -16(%rbp)
	jle	L2903
L2902:
	movl	$43201, %edi
	call	__m3_fault
L2903:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_L
	.private_extern _A__uTimes_var_u16_L
_A__uTimes_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_L
	.private_extern _A__Times_var_u16_L
_A__Times_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u16_L
	.private_extern _A__uTimes_param_u16_L
_A__uTimes_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_L
	.private_extern _A__Times_param_u16_L
_A__Times_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_u64
	.private_extern _A__uTimes_var_u16_u64
_A__uTimes_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_u64
	.private_extern _A__Times_var_u16_u64
_A__Times_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_u16_u64
	.private_extern _A__uTimes_param_u16_u64
_A__uTimes_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_u64
	.private_extern _A__Times_param_u16_u64
_A__Times_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_u16
	.private_extern _A__uTimes_var_u16_u16
_A__uTimes_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_u16
	.private_extern _A__Times_var_u16_u16
_A__Times_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2924
	cmpq	$32767, -16(%rbp)
	jle	L2925
L2924:
	movl	$43521, %edi
	call	__m3_fault
L2925:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_u16
	.private_extern _A__uTimes_param_u16_u16
_A__uTimes_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_u16
	.private_extern _A__Times_param_u16_u16
_A__Times_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movswq	-20(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2930
	cmpq	$32767, -16(%rbp)
	jle	L2931
L2930:
	movl	$43585, %edi
	call	__m3_fault
L2931:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_u16_i32
	.private_extern _A__uTimes_var_u16_i32
_A__uTimes_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_u16_i32
	.private_extern _A__Times_var_u16_i32
_A__Times_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2936
	cmpq	$32767, -16(%rbp)
	jle	L2937
L2936:
	movl	$43649, %edi
	call	__m3_fault
L2937:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_u16_i32
	.private_extern _A__uTimes_param_u16_i32
_A__uTimes_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_u16_i32
	.private_extern _A__Times_param_u16_i32
_A__Times_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	mov	-24(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L2942
	cmpq	$32767, -16(%rbp)
	jle	L2943
L2942:
	movl	$43713, %edi
	call	__m3_fault
L2943:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_i16
	.private_extern _A__uTimes_var_i32_i16
_A__uTimes_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_i16
	.private_extern _A__Times_var_i32_i16
_A__Times_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2948
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2949
L2948:
	movl	$43777, %edi
	call	__m3_fault
L2949:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_i16
	.private_extern _A__uTimes_param_i32_i16
_A__uTimes_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_i16
	.private_extern _A__Times_param_i32_i16
_A__Times_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movzwl	-22(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2954
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2955
L2954:
	movl	$43841, %edi
	call	__m3_fault
L2955:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_LC
	.private_extern _A__uTimes_var_i32_LC
_A__uTimes_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_LC
	.private_extern _A__Times_var_i32_LC
_A__Times_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i32_LC
	.private_extern _A__uTimes_param_i32_LC
_A__uTimes_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i32_LC
	.private_extern _A__Times_param_i32_LC
_A__Times_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_var_i32_i64
	.private_extern _A__uTimes_var_i32_i64
_A__uTimes_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_i64
	.private_extern _A__Times_var_i32_i64
_A__Times_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i32_i64
	.private_extern _A__uTimes_param_i32_i64
_A__uTimes_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_i64
	.private_extern _A__Times_param_i32_i64
_A__Times_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_I
	.private_extern _A__uTimes_var_i32_I
_A__uTimes_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_I
	.private_extern _A__Times_var_i32_I
_A__Times_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2976
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2977
L2976:
	movl	$44161, %edi
	call	__m3_fault
L2977:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_I
	.private_extern _A__uTimes_param_i32_I
_A__uTimes_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_I
	.private_extern _A__Times_param_i32_I
_A__Times_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2982
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2983
L2982:
	movl	$44225, %edi
	call	__m3_fault
L2983:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_u8
	.private_extern _A__uTimes_var_i32_u8
_A__uTimes_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_u8
	.private_extern _A__Times_var_i32_u8
_A__Times_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2988
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2989
L2988:
	movl	$44289, %edi
	call	__m3_fault
L2989:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_u8
	.private_extern _A__uTimes_param_i32_u8
_A__uTimes_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_u8
	.private_extern _A__Times_param_i32_u8
_A__Times_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movsbq	-21(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L2994
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L2995
L2994:
	movl	$44353, %edi
	call	__m3_fault
L2995:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_C
	.private_extern _A__uTimes_var_i32_C
_A__uTimes_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_C
	.private_extern _A__Times_var_i32_C
_A__Times_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3000
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3001
L3000:
	movl	$44417, %edi
	call	__m3_fault
L3001:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_C
	.private_extern _A__uTimes_param_i32_C
_A__uTimes_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__Times_param_i32_C
	.private_extern _A__Times_param_i32_C
_A__Times_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	-32(%rbp), %rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3006
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3007
L3006:
	movl	$44481, %edi
	call	__m3_fault
L3007:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_u32
	.private_extern _A__uTimes_var_i32_u32
_A__uTimes_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_u32
	.private_extern _A__Times_var_i32_u32
_A__Times_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3012
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3013
L3012:
	movl	$44545, %edi
	call	__m3_fault
L3013:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_u32
	.private_extern _A__uTimes_param_i32_u32
_A__uTimes_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_u32
	.private_extern _A__Times_param_i32_u32
_A__Times_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3018
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3019
L3018:
	movl	$44609, %edi
	call	__m3_fault
L3019:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_i8
	.private_extern _A__uTimes_var_i32_i8
_A__uTimes_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_i8
	.private_extern _A__Times_var_i32_i8
_A__Times_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3024
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3025
L3024:
	movl	$44673, %edi
	call	__m3_fault
L3025:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_i8
	.private_extern _A__uTimes_param_i32_i8
_A__uTimes_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_i8
	.private_extern _A__Times_param_i32_i8
_A__Times_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movzbl	-21(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3030
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3031
L3030:
	movl	$44737, %edi
	call	__m3_fault
L3031:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_L
	.private_extern _A__uTimes_var_i32_L
_A__uTimes_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_L
	.private_extern _A__Times_var_i32_L
_A__Times_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i32_L
	.private_extern _A__uTimes_param_i32_L
_A__uTimes_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_L
	.private_extern _A__Times_param_i32_L
_A__Times_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_u64
	.private_extern _A__uTimes_var_i32_u64
_A__uTimes_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_u64
	.private_extern _A__Times_var_i32_u64
_A__Times_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__uTimes_param_i32_u64
	.private_extern _A__uTimes_param_i32_u64
_A__uTimes_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_u64
	.private_extern _A__Times_param_i32_u64
_A__Times_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	imulq	-32(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_u16
	.private_extern _A__uTimes_var_i32_u16
_A__uTimes_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_u16
	.private_extern _A__Times_var_i32_u16
_A__Times_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3052
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3053
L3052:
	movl	$45057, %edi
	call	__m3_fault
L3053:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_u16
	.private_extern _A__uTimes_param_i32_u16
_A__uTimes_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_u16
	.private_extern _A__Times_param_i32_u16
_A__Times_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movswq	-22(%rbp),%rdx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3058
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3059
L3058:
	movl	$45121, %edi
	call	__m3_fault
L3059:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_var_i32_i32
	.private_extern _A__uTimes_var_i32_i32
_A__uTimes_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_var_i32_i32
	.private_extern _A__Times_var_i32_i32
_A__Times_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3064
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3065
L3064:
	movl	$45185, %edi
	call	__m3_fault
L3065:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uTimes_param_i32_i32
	.private_extern _A__uTimes_param_i32_i32
_A__uTimes_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	imulq	%rdx, %rax
	leave
	ret
.globl _A__Times_param_i32_i32
	.private_extern _A__Times_param_i32_i32
_A__Times_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	mov	-24(%rbp), %edx
	imulq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3070
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L3071
L3070:
	movl	$45249, %edi
	call	__m3_fault
L3071:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_i16
	.private_extern _A__uMinus_var_i16_i16
_A__uMinus_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_i16_i16
	.private_extern _A__Minus_var_i16_i16
_A__Minus_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3076
	movl	$45409, %edi
	call	__m3_fault
L3076:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_i16
	.private_extern _A__uMinus_param_i16_i16
_A__uMinus_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_i16
	.private_extern _A__Minus_param_i16_i16
_A__Minus_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movzwl	-20(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3081
	movl	$45473, %edi
	call	__m3_fault
L3081:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_LC
	.private_extern _A__uMinus_var_i16_LC
_A__uMinus_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_LC
	.private_extern _A__Minus_var_i16_LC
_A__Minus_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i16_LC
	.private_extern _A__uMinus_param_i16_LC
_A__uMinus_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i16_LC
	.private_extern _A__Minus_param_i16_LC
_A__Minus_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_i16_i64
	.private_extern _A__uMinus_var_i16_i64
_A__uMinus_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_i64
	.private_extern _A__Minus_var_i16_i64
_A__Minus_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i16_i64
	.private_extern _A__uMinus_param_i16_i64
_A__uMinus_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_i64
	.private_extern _A__Minus_param_i16_i64
_A__Minus_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_I
	.private_extern _A__uMinus_var_i16_I
_A__uMinus_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_I
	.private_extern _A__Minus_var_i16_I
_A__Minus_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3102
	cmpq	$65535, -16(%rbp)
	jle	L3103
L3102:
	movl	$45793, %edi
	call	__m3_fault
L3103:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_I
	.private_extern _A__uMinus_param_i16_I
_A__uMinus_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_I
	.private_extern _A__Minus_param_i16_I
_A__Minus_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3108
	cmpq	$65535, -16(%rbp)
	jle	L3109
L3108:
	movl	$45857, %edi
	call	__m3_fault
L3109:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_u8
	.private_extern _A__uMinus_var_i16_u8
_A__uMinus_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_u8
	.private_extern _A__Minus_var_i16_u8
_A__Minus_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3114
	cmpq	$65535, -16(%rbp)
	jle	L3115
L3114:
	movl	$45921, %edi
	call	__m3_fault
L3115:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_u8
	.private_extern _A__uMinus_param_i16_u8
_A__uMinus_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_u8
	.private_extern _A__Minus_param_i16_u8
_A__Minus_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movsbq	-19(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3120
	cmpq	$65535, -16(%rbp)
	jle	L3121
L3120:
	movl	$45985, %edi
	call	__m3_fault
L3121:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_C
	.private_extern _A__uMinus_var_i16_C
_A__uMinus_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_C
	.private_extern _A__Minus_var_i16_C
_A__Minus_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3126
	movl	$46049, %edi
	call	__m3_fault
L3126:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_C
	.private_extern _A__uMinus_param_i16_C
_A__uMinus_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i16_C
	.private_extern _A__Minus_param_i16_C
_A__Minus_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3131
	movl	$46113, %edi
	call	__m3_fault
L3131:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_u32
	.private_extern _A__uMinus_var_i16_u32
_A__uMinus_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_u32
	.private_extern _A__Minus_var_i16_u32
_A__Minus_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3136
	cmpq	$65535, -16(%rbp)
	jle	L3137
L3136:
	movl	$46177, %edi
	call	__m3_fault
L3137:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_u32
	.private_extern _A__uMinus_param_i16_u32
_A__uMinus_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_u32
	.private_extern _A__Minus_param_i16_u32
_A__Minus_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3142
	cmpq	$65535, -16(%rbp)
	jle	L3143
L3142:
	movl	$46241, %edi
	call	__m3_fault
L3143:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_i8
	.private_extern _A__uMinus_var_i16_i8
_A__uMinus_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_i8
	.private_extern _A__Minus_var_i16_i8
_A__Minus_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3148
	movl	$46305, %edi
	call	__m3_fault
L3148:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_i8
	.private_extern _A__uMinus_param_i16_i8
_A__uMinus_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_i8
	.private_extern _A__Minus_param_i16_i8
_A__Minus_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movzbl	-19(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3153
	movl	$46369, %edi
	call	__m3_fault
L3153:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_L
	.private_extern _A__uMinus_var_i16_L
_A__uMinus_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_L
	.private_extern _A__Minus_var_i16_L
_A__Minus_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i16_L
	.private_extern _A__uMinus_param_i16_L
_A__uMinus_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_L
	.private_extern _A__Minus_param_i16_L
_A__Minus_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_u64
	.private_extern _A__uMinus_var_i16_u64
_A__uMinus_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_u64
	.private_extern _A__Minus_var_i16_u64
_A__Minus_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i16_u64
	.private_extern _A__uMinus_param_i16_u64
_A__uMinus_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_u64
	.private_extern _A__Minus_param_i16_u64
_A__Minus_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_u16
	.private_extern _A__uMinus_var_i16_u16
_A__uMinus_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_u16
	.private_extern _A__Minus_var_i16_u16
_A__Minus_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3174
	cmpq	$65535, -16(%rbp)
	jle	L3175
L3174:
	movl	$46689, %edi
	call	__m3_fault
L3175:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_u16
	.private_extern _A__uMinus_param_i16_u16
_A__uMinus_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_u16
	.private_extern _A__Minus_param_i16_u16
_A__Minus_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movswq	-20(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3180
	cmpq	$65535, -16(%rbp)
	jle	L3181
L3180:
	movl	$46753, %edi
	call	__m3_fault
L3181:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i16_i32
	.private_extern _A__uMinus_var_i16_i32
_A__uMinus_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i16_i32
	.private_extern _A__Minus_var_i16_i32
_A__Minus_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3186
	movl	$46817, %edi
	call	__m3_fault
L3186:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i16_i32
	.private_extern _A__uMinus_param_i16_i32
_A__uMinus_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i16_i32
	.private_extern _A__Minus_param_i16_i32
_A__Minus_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	mov	-24(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3191
	movl	$46881, %edi
	call	__m3_fault
L3191:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_LC_i16
	.private_extern _A__uMinus_var_LC_i16
_A__uMinus_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_i16
	.private_extern _A__Minus_var_LC_i16
_A__Minus_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_i16
	.private_extern _A__uMinus_param_LC_i16
_A__uMinus_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_i16
	.private_extern _A__Minus_param_LC_i16
_A__Minus_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_LC
	.private_extern _A__uMinus_var_LC_LC
_A__uMinus_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_LC_LC
	.private_extern _A__Minus_var_LC_LC
_A__Minus_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uMinus_param_LC_LC
	.private_extern _A__uMinus_param_LC_LC
_A__uMinus_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_LC
	.private_extern _A__Minus_param_LC_LC
_A__Minus_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_i64
	.private_extern _A__uMinus_var_LC_i64
_A__uMinus_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_i64
	.private_extern _A__Minus_var_LC_i64
_A__Minus_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_i64
	.private_extern _A__uMinus_param_LC_i64
_A__uMinus_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_i64
	.private_extern _A__Minus_param_LC_i64
_A__Minus_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_LC_I
	.private_extern _A__uMinus_var_LC_I
_A__uMinus_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_I
	.private_extern _A__Minus_var_LC_I
_A__Minus_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_I
	.private_extern _A__uMinus_param_LC_I
_A__uMinus_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_I
	.private_extern _A__Minus_param_LC_I
_A__Minus_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_LC_u8
	.private_extern _A__uMinus_var_LC_u8
_A__uMinus_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_u8
	.private_extern _A__Minus_var_LC_u8
_A__Minus_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_u8
	.private_extern _A__uMinus_param_LC_u8
_A__uMinus_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_u8
	.private_extern _A__Minus_param_LC_u8
_A__Minus_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_C
	.private_extern _A__uMinus_var_LC_C
_A__uMinus_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_C
	.private_extern _A__Minus_var_LC_C
_A__Minus_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_C
	.private_extern _A__uMinus_param_LC_C
_A__uMinus_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_C
	.private_extern _A__Minus_param_LC_C
_A__Minus_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_u32
	.private_extern _A__uMinus_var_LC_u32
_A__uMinus_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_u32
	.private_extern _A__Minus_var_LC_u32
_A__Minus_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_u32
	.private_extern _A__uMinus_param_LC_u32
_A__uMinus_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_u32
	.private_extern _A__Minus_param_LC_u32
_A__Minus_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_i8
	.private_extern _A__uMinus_var_LC_i8
_A__uMinus_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_i8
	.private_extern _A__Minus_var_LC_i8
_A__Minus_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_i8
	.private_extern _A__uMinus_param_LC_i8
_A__uMinus_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_i8
	.private_extern _A__Minus_param_LC_i8
_A__Minus_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_L
	.private_extern _A__uMinus_var_LC_L
_A__uMinus_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_L
	.private_extern _A__Minus_var_LC_L
_A__Minus_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_L
	.private_extern _A__uMinus_param_LC_L
_A__uMinus_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_L
	.private_extern _A__Minus_param_LC_L
_A__Minus_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_LC_u64
	.private_extern _A__uMinus_var_LC_u64
_A__uMinus_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_u64
	.private_extern _A__Minus_var_LC_u64
_A__Minus_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_u64
	.private_extern _A__uMinus_param_LC_u64
_A__uMinus_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_u64
	.private_extern _A__Minus_param_LC_u64
_A__Minus_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_LC_u16
	.private_extern _A__uMinus_var_LC_u16
_A__uMinus_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_u16
	.private_extern _A__Minus_var_LC_u16
_A__Minus_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_u16
	.private_extern _A__uMinus_param_LC_u16
_A__uMinus_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_u16
	.private_extern _A__Minus_param_LC_u16
_A__Minus_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_LC_i32
	.private_extern _A__uMinus_var_LC_i32
_A__uMinus_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_LC_i32
	.private_extern _A__Minus_var_LC_i32
_A__Minus_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_LC_i32
	.private_extern _A__uMinus_param_LC_i32
_A__uMinus_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_LC_i32
	.private_extern _A__Minus_param_LC_i32
_A__Minus_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_f64_f64
	.private_extern _A__Minus_var_f64_f64
_A__Minus_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	movapd	%xmm1, %xmm2
	subsd	%xmm0, %xmm2
	movapd	%xmm2, %xmm0
	leave
	ret
.globl _A__Minus_param_f64_f64
	.private_extern _A__Minus_param_f64_f64
_A__Minus_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	subsd	-32(%rbp), %xmm0
	leave
	ret
.globl _A__uMinus_var_i64_i16
	.private_extern _A__uMinus_var_i64_i16
_A__uMinus_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_i16
	.private_extern _A__Minus_var_i64_i16
_A__Minus_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_i16
	.private_extern _A__uMinus_param_i64_i16
_A__uMinus_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_i16
	.private_extern _A__Minus_param_i64_i16
_A__Minus_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_LC
	.private_extern _A__uMinus_var_i64_LC
_A__uMinus_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_LC
	.private_extern _A__Minus_var_i64_LC
_A__Minus_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_LC
	.private_extern _A__uMinus_param_i64_LC
_A__uMinus_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i64_LC
	.private_extern _A__Minus_param_i64_LC
_A__Minus_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_i64
	.private_extern _A__uMinus_var_i64_i64
_A__uMinus_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_i64_i64
	.private_extern _A__Minus_var_i64_i64
_A__Minus_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uMinus_param_i64_i64
	.private_extern _A__uMinus_param_i64_i64
_A__uMinus_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_i64
	.private_extern _A__Minus_param_i64_i64
_A__Minus_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_I
	.private_extern _A__uMinus_var_i64_I
_A__uMinus_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_I
	.private_extern _A__Minus_var_i64_I
_A__Minus_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_I
	.private_extern _A__uMinus_param_i64_I
_A__uMinus_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_I
	.private_extern _A__Minus_param_i64_I
_A__Minus_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_u8
	.private_extern _A__uMinus_var_i64_u8
_A__uMinus_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_u8
	.private_extern _A__Minus_var_i64_u8
_A__Minus_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_u8
	.private_extern _A__uMinus_param_i64_u8
_A__uMinus_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_u8
	.private_extern _A__Minus_param_i64_u8
_A__Minus_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_C
	.private_extern _A__uMinus_var_i64_C
_A__uMinus_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_C
	.private_extern _A__Minus_var_i64_C
_A__Minus_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_C
	.private_extern _A__uMinus_param_i64_C
_A__uMinus_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i64_C
	.private_extern _A__Minus_param_i64_C
_A__Minus_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_u32
	.private_extern _A__uMinus_var_i64_u32
_A__uMinus_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_u32
	.private_extern _A__Minus_var_i64_u32
_A__Minus_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_u32
	.private_extern _A__uMinus_param_i64_u32
_A__uMinus_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_u32
	.private_extern _A__Minus_param_i64_u32
_A__Minus_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_i8
	.private_extern _A__uMinus_var_i64_i8
_A__uMinus_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_i8
	.private_extern _A__Minus_var_i64_i8
_A__Minus_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_i8
	.private_extern _A__uMinus_param_i64_i8
_A__uMinus_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_i8
	.private_extern _A__Minus_param_i64_i8
_A__Minus_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_L
	.private_extern _A__uMinus_var_i64_L
_A__uMinus_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_L
	.private_extern _A__Minus_var_i64_L
_A__Minus_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_L
	.private_extern _A__uMinus_param_i64_L
_A__uMinus_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_L
	.private_extern _A__Minus_param_i64_L
_A__Minus_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_u64
	.private_extern _A__uMinus_var_i64_u64
_A__uMinus_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_u64
	.private_extern _A__Minus_var_i64_u64
_A__Minus_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_u64
	.private_extern _A__uMinus_param_i64_u64
_A__uMinus_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_u64
	.private_extern _A__Minus_param_i64_u64
_A__Minus_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_u16
	.private_extern _A__uMinus_var_i64_u16
_A__uMinus_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_u16
	.private_extern _A__Minus_var_i64_u16
_A__Minus_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_u16
	.private_extern _A__uMinus_param_i64_u16
_A__uMinus_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_u16
	.private_extern _A__Minus_param_i64_u16
_A__Minus_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_i64_i32
	.private_extern _A__uMinus_var_i64_i32
_A__uMinus_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i64_i32
	.private_extern _A__Minus_var_i64_i32
_A__Minus_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i64_i32
	.private_extern _A__uMinus_param_i64_i32
_A__uMinus_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i64_i32
	.private_extern _A__Minus_param_i64_i32
_A__Minus_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_i16
	.private_extern _A__uMinus_var_I_i16
_A__uMinus_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_i16
	.private_extern _A__Minus_var_I_i16
_A__Minus_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_i16
	.private_extern _A__uMinus_param_I_i16
_A__uMinus_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_i16
	.private_extern _A__Minus_param_I_i16
_A__Minus_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_LC
	.private_extern _A__uMinus_var_I_LC
_A__uMinus_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_LC
	.private_extern _A__Minus_var_I_LC
_A__Minus_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_LC
	.private_extern _A__uMinus_param_I_LC
_A__uMinus_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_I_LC
	.private_extern _A__Minus_param_I_LC
_A__Minus_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_i64
	.private_extern _A__uMinus_var_I_i64
_A__uMinus_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_i64
	.private_extern _A__Minus_var_I_i64
_A__Minus_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_i64
	.private_extern _A__uMinus_param_I_i64
_A__uMinus_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_i64
	.private_extern _A__Minus_param_I_i64
_A__Minus_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_I
	.private_extern _A__uMinus_var_I_I
_A__uMinus_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_I_I
	.private_extern _A__Minus_var_I_I
_A__Minus_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uMinus_param_I_I
	.private_extern _A__uMinus_param_I_I
_A__uMinus_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_I
	.private_extern _A__Minus_param_I_I
_A__Minus_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_u8
	.private_extern _A__uMinus_var_I_u8
_A__uMinus_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_u8
	.private_extern _A__Minus_var_I_u8
_A__Minus_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_u8
	.private_extern _A__uMinus_param_I_u8
_A__uMinus_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_u8
	.private_extern _A__Minus_param_I_u8
_A__Minus_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_C
	.private_extern _A__uMinus_var_I_C
_A__uMinus_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_C
	.private_extern _A__Minus_var_I_C
_A__Minus_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_C
	.private_extern _A__uMinus_param_I_C
_A__uMinus_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_I_C
	.private_extern _A__Minus_param_I_C
_A__Minus_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_u32
	.private_extern _A__uMinus_var_I_u32
_A__uMinus_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_u32
	.private_extern _A__Minus_var_I_u32
_A__Minus_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_u32
	.private_extern _A__uMinus_param_I_u32
_A__uMinus_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_u32
	.private_extern _A__Minus_param_I_u32
_A__Minus_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_i8
	.private_extern _A__uMinus_var_I_i8
_A__uMinus_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_i8
	.private_extern _A__Minus_var_I_i8
_A__Minus_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_i8
	.private_extern _A__uMinus_param_I_i8
_A__uMinus_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_i8
	.private_extern _A__Minus_param_I_i8
_A__Minus_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_L
	.private_extern _A__uMinus_var_I_L
_A__uMinus_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_L
	.private_extern _A__Minus_var_I_L
_A__Minus_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_L
	.private_extern _A__uMinus_param_I_L
_A__uMinus_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_L
	.private_extern _A__Minus_param_I_L
_A__Minus_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_u64
	.private_extern _A__uMinus_var_I_u64
_A__uMinus_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_u64
	.private_extern _A__Minus_var_I_u64
_A__Minus_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_u64
	.private_extern _A__uMinus_param_I_u64
_A__uMinus_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_u64
	.private_extern _A__Minus_param_I_u64
_A__Minus_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_u16
	.private_extern _A__uMinus_var_I_u16
_A__uMinus_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_u16
	.private_extern _A__Minus_var_I_u16
_A__Minus_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_u16
	.private_extern _A__uMinus_param_I_u16
_A__uMinus_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_u16
	.private_extern _A__Minus_param_I_u16
_A__Minus_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_I_i32
	.private_extern _A__uMinus_var_I_i32
_A__uMinus_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_I_i32
	.private_extern _A__Minus_var_I_i32
_A__Minus_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_I_i32
	.private_extern _A__uMinus_param_I_i32
_A__uMinus_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_I_i32
	.private_extern _A__Minus_param_I_i32
_A__Minus_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u8_i16
	.private_extern _A__uMinus_var_u8_i16
_A__uMinus_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_i16
	.private_extern _A__Minus_var_u8_i16
_A__Minus_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3488
	movl	$51617, %edi
	call	__m3_fault
L3488:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_i16
	.private_extern _A__uMinus_param_u8_i16
_A__uMinus_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_i16
	.private_extern _A__Minus_param_u8_i16
_A__Minus_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movzwl	-20(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3493
	movl	$51681, %edi
	call	__m3_fault
L3493:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_LC
	.private_extern _A__uMinus_var_u8_LC
_A__uMinus_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_LC
	.private_extern _A__Minus_var_u8_LC
_A__Minus_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u8_LC
	.private_extern _A__uMinus_param_u8_LC
_A__uMinus_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u8_LC
	.private_extern _A__Minus_param_u8_LC
_A__Minus_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_u8_i64
	.private_extern _A__uMinus_var_u8_i64
_A__uMinus_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_i64
	.private_extern _A__Minus_var_u8_i64
_A__Minus_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u8_i64
	.private_extern _A__uMinus_param_u8_i64
_A__uMinus_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_i64
	.private_extern _A__Minus_param_u8_i64
_A__Minus_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_I
	.private_extern _A__uMinus_var_u8_I
_A__uMinus_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_I
	.private_extern _A__Minus_var_u8_I
_A__Minus_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3514
	cmpq	$127, -16(%rbp)
	jle	L3515
L3514:
	movl	$52001, %edi
	call	__m3_fault
L3515:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_I
	.private_extern _A__uMinus_param_u8_I
_A__uMinus_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_I
	.private_extern _A__Minus_param_u8_I
_A__Minus_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3520
	cmpq	$127, -16(%rbp)
	jle	L3521
L3520:
	movl	$52065, %edi
	call	__m3_fault
L3521:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_u8
	.private_extern _A__uMinus_var_u8_u8
_A__uMinus_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_u8_u8
	.private_extern _A__Minus_var_u8_u8
_A__Minus_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3526
	cmpq	$127, -16(%rbp)
	jle	L3527
L3526:
	movl	$52129, %edi
	call	__m3_fault
L3527:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_u8
	.private_extern _A__uMinus_param_u8_u8
_A__uMinus_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_u8
	.private_extern _A__Minus_param_u8_u8
_A__Minus_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movsbq	-18(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3532
	cmpq	$127, -16(%rbp)
	jle	L3533
L3532:
	movl	$52193, %edi
	call	__m3_fault
L3533:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_C
	.private_extern _A__uMinus_var_u8_C
_A__uMinus_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_C
	.private_extern _A__Minus_var_u8_C
_A__Minus_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3538
	cmpq	$127, -16(%rbp)
	jle	L3539
L3538:
	movl	$52257, %edi
	call	__m3_fault
L3539:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_C
	.private_extern _A__uMinus_param_u8_C
_A__uMinus_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u8_C
	.private_extern _A__Minus_param_u8_C
_A__Minus_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3544
	cmpq	$127, -16(%rbp)
	jle	L3545
L3544:
	movl	$52321, %edi
	call	__m3_fault
L3545:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_u32
	.private_extern _A__uMinus_var_u8_u32
_A__uMinus_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_u32
	.private_extern _A__Minus_var_u8_u32
_A__Minus_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3550
	cmpq	$127, -16(%rbp)
	jle	L3551
L3550:
	movl	$52385, %edi
	call	__m3_fault
L3551:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_u32
	.private_extern _A__uMinus_param_u8_u32
_A__uMinus_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_u32
	.private_extern _A__Minus_param_u8_u32
_A__Minus_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3556
	cmpq	$127, -16(%rbp)
	jle	L3557
L3556:
	movl	$52449, %edi
	call	__m3_fault
L3557:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_i8
	.private_extern _A__uMinus_var_u8_i8
_A__uMinus_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_i8
	.private_extern _A__Minus_var_u8_i8
_A__Minus_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3562
	movl	$52513, %edi
	call	__m3_fault
L3562:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_i8
	.private_extern _A__uMinus_param_u8_i8
_A__uMinus_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_i8
	.private_extern _A__Minus_param_u8_i8
_A__Minus_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movzbl	-18(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3567
	movl	$52577, %edi
	call	__m3_fault
L3567:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_L
	.private_extern _A__uMinus_var_u8_L
_A__uMinus_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_L
	.private_extern _A__Minus_var_u8_L
_A__Minus_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u8_L
	.private_extern _A__uMinus_param_u8_L
_A__uMinus_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_L
	.private_extern _A__Minus_param_u8_L
_A__Minus_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_u64
	.private_extern _A__uMinus_var_u8_u64
_A__uMinus_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_u64
	.private_extern _A__Minus_var_u8_u64
_A__Minus_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u8_u64
	.private_extern _A__uMinus_param_u8_u64
_A__uMinus_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_u64
	.private_extern _A__Minus_param_u8_u64
_A__Minus_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_u16
	.private_extern _A__uMinus_var_u8_u16
_A__uMinus_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_u16
	.private_extern _A__Minus_var_u8_u16
_A__Minus_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3588
	cmpq	$127, -16(%rbp)
	jle	L3589
L3588:
	movl	$52897, %edi
	call	__m3_fault
L3589:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_u16
	.private_extern _A__uMinus_param_u8_u16
_A__uMinus_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_u16
	.private_extern _A__Minus_param_u8_u16
_A__Minus_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movswq	-20(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L3594
	cmpq	$127, -16(%rbp)
	jle	L3595
L3594:
	movl	$52961, %edi
	call	__m3_fault
L3595:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u8_i32
	.private_extern _A__uMinus_var_u8_i32
_A__uMinus_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u8_i32
	.private_extern _A__Minus_var_u8_i32
_A__Minus_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3600
	movl	$53025, %edi
	call	__m3_fault
L3600:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u8_i32
	.private_extern _A__uMinus_param_u8_i32
_A__uMinus_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u8_i32
	.private_extern _A__Minus_param_u8_i32
_A__Minus_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	mov	-24(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jge	L3605
	movl	$53089, %edi
	call	__m3_fault
L3605:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_i16
	.private_extern _A__uMinus_var_C_i16
_A__uMinus_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_i16
	.private_extern _A__Minus_var_C_i16
_A__Minus_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3610
	movl	$53153, %edi
	call	__m3_fault
L3610:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_i16
	.private_extern _A__uMinus_param_C_i16
_A__uMinus_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_i16
	.private_extern _A__Minus_param_C_i16
_A__Minus_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movzwl	-26(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3615
	movl	$53217, %edi
	call	__m3_fault
L3615:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_LC
	.private_extern _A__uMinus_var_C_LC
_A__uMinus_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_LC
	.private_extern _A__Minus_var_C_LC
_A__Minus_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_C_LC
	.private_extern _A__uMinus_param_C_LC
_A__uMinus_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_LC
	.private_extern _A__Minus_param_C_LC
_A__Minus_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_C_i64
	.private_extern _A__uMinus_var_C_i64
_A__uMinus_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_i64
	.private_extern _A__Minus_var_C_i64
_A__Minus_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_C_i64
	.private_extern _A__uMinus_param_C_i64
_A__uMinus_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_i64
	.private_extern _A__Minus_param_C_i64
_A__Minus_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_I
	.private_extern _A__uMinus_var_C_I
_A__uMinus_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_I
	.private_extern _A__Minus_var_C_I
_A__Minus_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3636
	movl	$53537, %edi
	call	__m3_fault
L3636:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_I
	.private_extern _A__uMinus_param_C_I
_A__uMinus_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_I
	.private_extern _A__Minus_param_C_I
_A__Minus_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3641
	movl	$53601, %edi
	call	__m3_fault
L3641:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_u8
	.private_extern _A__uMinus_var_C_u8
_A__uMinus_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_u8
	.private_extern _A__Minus_var_C_u8
_A__Minus_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3646
	movl	$53665, %edi
	call	__m3_fault
L3646:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_u8
	.private_extern _A__uMinus_param_C_u8
_A__uMinus_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_u8
	.private_extern _A__Minus_param_C_u8
_A__Minus_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movsbq	-25(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3651
	movl	$53729, %edi
	call	__m3_fault
L3651:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_C
	.private_extern _A__uMinus_var_C_C
_A__uMinus_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_C_C
	.private_extern _A__Minus_var_C_C
_A__Minus_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3656
	movl	$53793, %edi
	call	__m3_fault
L3656:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_C
	.private_extern _A__uMinus_param_C_C
_A__uMinus_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_C
	.private_extern _A__Minus_param_C_C
_A__Minus_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3661
	movl	$53857, %edi
	call	__m3_fault
L3661:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_u32
	.private_extern _A__uMinus_var_C_u32
_A__uMinus_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_u32
	.private_extern _A__Minus_var_C_u32
_A__Minus_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3666
	movl	$53921, %edi
	call	__m3_fault
L3666:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_u32
	.private_extern _A__uMinus_param_C_u32
_A__uMinus_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_u32
	.private_extern _A__Minus_param_C_u32
_A__Minus_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3671
	movl	$53985, %edi
	call	__m3_fault
L3671:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_i8
	.private_extern _A__uMinus_var_C_i8
_A__uMinus_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_i8
	.private_extern _A__Minus_var_C_i8
_A__Minus_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3676
	movl	$54049, %edi
	call	__m3_fault
L3676:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_i8
	.private_extern _A__uMinus_param_C_i8
_A__uMinus_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_i8
	.private_extern _A__Minus_param_C_i8
_A__Minus_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movzbl	-25(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3681
	movl	$54113, %edi
	call	__m3_fault
L3681:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_L
	.private_extern _A__uMinus_var_C_L
_A__uMinus_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_L
	.private_extern _A__Minus_var_C_L
_A__Minus_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_C_L
	.private_extern _A__uMinus_param_C_L
_A__uMinus_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_L
	.private_extern _A__Minus_param_C_L
_A__Minus_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_u64
	.private_extern _A__uMinus_var_C_u64
_A__uMinus_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_u64
	.private_extern _A__Minus_var_C_u64
_A__Minus_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_C_u64
	.private_extern _A__uMinus_param_C_u64
_A__uMinus_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_u64
	.private_extern _A__Minus_param_C_u64
_A__Minus_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_u16
	.private_extern _A__uMinus_var_C_u16
_A__uMinus_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_u16
	.private_extern _A__Minus_var_C_u16
_A__Minus_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3702
	movl	$54433, %edi
	call	__m3_fault
L3702:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_u16
	.private_extern _A__uMinus_param_C_u16
_A__uMinus_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_u16
	.private_extern _A__Minus_param_C_u16
_A__Minus_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movswq	-26(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3707
	movl	$54497, %edi
	call	__m3_fault
L3707:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_C_i32
	.private_extern _A__uMinus_var_C_i32
_A__uMinus_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_C_i32
	.private_extern _A__Minus_var_C_i32
_A__Minus_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3712
	movl	$54561, %edi
	call	__m3_fault
L3712:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_C_i32
	.private_extern _A__uMinus_param_C_i32
_A__uMinus_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__Minus_param_C_i32
	.private_extern _A__Minus_param_C_i32
_A__Minus_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	mov	-28(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3717
	movl	$54625, %edi
	call	__m3_fault
L3717:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__Minus_var_f32_f32
	.private_extern _A__Minus_var_f32_f32
_A__Minus_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	movaps	%xmm1, %xmm2
	subss	%xmm0, %xmm2
	movaps	%xmm2, %xmm0
	leave
	ret
.globl _A__Minus_param_f32_f32
	.private_extern _A__Minus_param_f32_f32
_A__Minus_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	subss	-24(%rbp), %xmm0
	leave
	ret
.globl _A__uMinus_var_u32_i16
	.private_extern _A__uMinus_var_u32_i16
_A__uMinus_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_i16
	.private_extern _A__Minus_var_u32_i16
_A__Minus_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3726
	movl	$54753, %edi
	call	__m3_fault
L3726:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_i16
	.private_extern _A__uMinus_param_u32_i16
_A__uMinus_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_i16
	.private_extern _A__Minus_param_u32_i16
_A__Minus_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3731
	movl	$54817, %edi
	call	__m3_fault
L3731:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_LC
	.private_extern _A__uMinus_var_u32_LC
_A__uMinus_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_LC
	.private_extern _A__Minus_var_u32_LC
_A__Minus_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u32_LC
	.private_extern _A__uMinus_param_u32_LC
_A__uMinus_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u32_LC
	.private_extern _A__Minus_param_u32_LC
_A__Minus_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_u32_i64
	.private_extern _A__uMinus_var_u32_i64
_A__uMinus_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_i64
	.private_extern _A__Minus_var_u32_i64
_A__Minus_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u32_i64
	.private_extern _A__uMinus_param_u32_i64
_A__uMinus_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_i64
	.private_extern _A__Minus_param_u32_i64
_A__Minus_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_I
	.private_extern _A__uMinus_var_u32_I
_A__uMinus_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_I
	.private_extern _A__Minus_var_u32_I
_A__Minus_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3752
	cmpq	$2147483647, -16(%rbp)
	jle	L3753
L3752:
	movl	$55137, %edi
	call	__m3_fault
L3753:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_I
	.private_extern _A__uMinus_param_u32_I
_A__uMinus_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_I
	.private_extern _A__Minus_param_u32_I
_A__Minus_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3758
	cmpq	$2147483647, -16(%rbp)
	jle	L3759
L3758:
	movl	$55201, %edi
	call	__m3_fault
L3759:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_u8
	.private_extern _A__uMinus_var_u32_u8
_A__uMinus_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_u8
	.private_extern _A__Minus_var_u32_u8
_A__Minus_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3764
	cmpq	$2147483647, -16(%rbp)
	jle	L3765
L3764:
	movl	$55265, %edi
	call	__m3_fault
L3765:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_u8
	.private_extern _A__uMinus_param_u32_u8
_A__uMinus_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_u8
	.private_extern _A__Minus_param_u32_u8
_A__Minus_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3770
	cmpq	$2147483647, -16(%rbp)
	jle	L3771
L3770:
	movl	$55329, %edi
	call	__m3_fault
L3771:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_C
	.private_extern _A__uMinus_var_u32_C
_A__uMinus_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_C
	.private_extern _A__Minus_var_u32_C
_A__Minus_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3776
	cmpq	$2147483647, -16(%rbp)
	jle	L3777
L3776:
	movl	$55393, %edi
	call	__m3_fault
L3777:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_C
	.private_extern _A__uMinus_param_u32_C
_A__uMinus_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u32_C
	.private_extern _A__Minus_param_u32_C
_A__Minus_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3782
	cmpq	$2147483647, -16(%rbp)
	jle	L3783
L3782:
	movl	$55457, %edi
	call	__m3_fault
L3783:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_u32
	.private_extern _A__uMinus_var_u32_u32
_A__uMinus_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_u32_u32
	.private_extern _A__Minus_var_u32_u32
_A__Minus_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3788
	cmpq	$2147483647, -16(%rbp)
	jle	L3789
L3788:
	movl	$55521, %edi
	call	__m3_fault
L3789:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_u32
	.private_extern _A__uMinus_param_u32_u32
_A__uMinus_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_u32
	.private_extern _A__Minus_param_u32_u32
_A__Minus_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3794
	cmpq	$2147483647, -16(%rbp)
	jle	L3795
L3794:
	movl	$55585, %edi
	call	__m3_fault
L3795:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_i8
	.private_extern _A__uMinus_var_u32_i8
_A__uMinus_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_i8
	.private_extern _A__Minus_var_u32_i8
_A__Minus_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3800
	movl	$55649, %edi
	call	__m3_fault
L3800:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_i8
	.private_extern _A__uMinus_param_u32_i8
_A__uMinus_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_i8
	.private_extern _A__Minus_param_u32_i8
_A__Minus_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3805
	movl	$55713, %edi
	call	__m3_fault
L3805:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_L
	.private_extern _A__uMinus_var_u32_L
_A__uMinus_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_L
	.private_extern _A__Minus_var_u32_L
_A__Minus_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u32_L
	.private_extern _A__uMinus_param_u32_L
_A__uMinus_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_L
	.private_extern _A__Minus_param_u32_L
_A__Minus_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_u64
	.private_extern _A__uMinus_var_u32_u64
_A__uMinus_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_u64
	.private_extern _A__Minus_var_u32_u64
_A__Minus_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u32_u64
	.private_extern _A__uMinus_param_u32_u64
_A__uMinus_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_u64
	.private_extern _A__Minus_param_u32_u64
_A__Minus_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_u16
	.private_extern _A__uMinus_var_u32_u16
_A__uMinus_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_u16
	.private_extern _A__Minus_var_u32_u16
_A__Minus_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3826
	cmpq	$2147483647, -16(%rbp)
	jle	L3827
L3826:
	movl	$56033, %edi
	call	__m3_fault
L3827:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_u16
	.private_extern _A__uMinus_param_u32_u16
_A__uMinus_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_u16
	.private_extern _A__Minus_param_u32_u16
_A__Minus_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L3832
	cmpq	$2147483647, -16(%rbp)
	jle	L3833
L3832:
	movl	$56097, %edi
	call	__m3_fault
L3833:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u32_i32
	.private_extern _A__uMinus_var_u32_i32
_A__uMinus_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u32_i32
	.private_extern _A__Minus_var_u32_i32
_A__Minus_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3838
	movl	$56161, %edi
	call	__m3_fault
L3838:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u32_i32
	.private_extern _A__uMinus_param_u32_i32
_A__uMinus_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u32_i32
	.private_extern _A__Minus_param_u32_i32
_A__Minus_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jge	L3843
	movl	$56225, %edi
	call	__m3_fault
L3843:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_i16
	.private_extern _A__uMinus_var_i8_i16
_A__uMinus_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_i16
	.private_extern _A__Minus_var_i8_i16
_A__Minus_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3848
	movl	$56289, %edi
	call	__m3_fault
L3848:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_i16
	.private_extern _A__uMinus_param_i8_i16
_A__uMinus_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_i16
	.private_extern _A__Minus_param_i8_i16
_A__Minus_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movzwl	-20(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3853
	movl	$56353, %edi
	call	__m3_fault
L3853:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_LC
	.private_extern _A__uMinus_var_i8_LC
_A__uMinus_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_LC
	.private_extern _A__Minus_var_i8_LC
_A__Minus_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i8_LC
	.private_extern _A__uMinus_param_i8_LC
_A__uMinus_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i8_LC
	.private_extern _A__Minus_param_i8_LC
_A__Minus_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_i8_i64
	.private_extern _A__uMinus_var_i8_i64
_A__uMinus_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_i64
	.private_extern _A__Minus_var_i8_i64
_A__Minus_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i8_i64
	.private_extern _A__uMinus_param_i8_i64
_A__uMinus_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_i64
	.private_extern _A__Minus_param_i8_i64
_A__Minus_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_I
	.private_extern _A__uMinus_var_i8_I
_A__uMinus_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_I
	.private_extern _A__Minus_var_i8_I
_A__Minus_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3874
	cmpq	$255, -16(%rbp)
	jle	L3875
L3874:
	movl	$56673, %edi
	call	__m3_fault
L3875:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_I
	.private_extern _A__uMinus_param_i8_I
_A__uMinus_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_I
	.private_extern _A__Minus_param_i8_I
_A__Minus_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3880
	cmpq	$255, -16(%rbp)
	jle	L3881
L3880:
	movl	$56737, %edi
	call	__m3_fault
L3881:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_u8
	.private_extern _A__uMinus_var_i8_u8
_A__uMinus_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_u8
	.private_extern _A__Minus_var_i8_u8
_A__Minus_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3886
	cmpq	$255, -16(%rbp)
	jle	L3887
L3886:
	movl	$56801, %edi
	call	__m3_fault
L3887:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_u8
	.private_extern _A__uMinus_param_i8_u8
_A__uMinus_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_u8
	.private_extern _A__Minus_param_i8_u8
_A__Minus_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movsbq	-18(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3892
	cmpq	$255, -16(%rbp)
	jle	L3893
L3892:
	movl	$56865, %edi
	call	__m3_fault
L3893:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_C
	.private_extern _A__uMinus_var_i8_C
_A__uMinus_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_C
	.private_extern _A__Minus_var_i8_C
_A__Minus_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3898
	movl	$56929, %edi
	call	__m3_fault
L3898:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_C
	.private_extern _A__uMinus_param_i8_C
_A__uMinus_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i8_C
	.private_extern _A__Minus_param_i8_C
_A__Minus_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3903
	movl	$56993, %edi
	call	__m3_fault
L3903:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_u32
	.private_extern _A__uMinus_var_i8_u32
_A__uMinus_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_u32
	.private_extern _A__Minus_var_i8_u32
_A__Minus_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3908
	cmpq	$255, -16(%rbp)
	jle	L3909
L3908:
	movl	$57057, %edi
	call	__m3_fault
L3909:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_u32
	.private_extern _A__uMinus_param_i8_u32
_A__uMinus_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_u32
	.private_extern _A__Minus_param_i8_u32
_A__Minus_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3914
	cmpq	$255, -16(%rbp)
	jle	L3915
L3914:
	movl	$57121, %edi
	call	__m3_fault
L3915:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_i8
	.private_extern _A__uMinus_var_i8_i8
_A__uMinus_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_i8_i8
	.private_extern _A__Minus_var_i8_i8
_A__Minus_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3920
	movl	$57185, %edi
	call	__m3_fault
L3920:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_i8
	.private_extern _A__uMinus_param_i8_i8
_A__uMinus_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_i8
	.private_extern _A__Minus_param_i8_i8
_A__Minus_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movzbl	-18(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3925
	movl	$57249, %edi
	call	__m3_fault
L3925:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_L
	.private_extern _A__uMinus_var_i8_L
_A__uMinus_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_L
	.private_extern _A__Minus_var_i8_L
_A__Minus_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i8_L
	.private_extern _A__uMinus_param_i8_L
_A__uMinus_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_L
	.private_extern _A__Minus_param_i8_L
_A__Minus_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_u64
	.private_extern _A__uMinus_var_i8_u64
_A__uMinus_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_u64
	.private_extern _A__Minus_var_i8_u64
_A__Minus_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i8_u64
	.private_extern _A__uMinus_param_i8_u64
_A__uMinus_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_u64
	.private_extern _A__Minus_param_i8_u64
_A__Minus_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_u16
	.private_extern _A__uMinus_var_i8_u16
_A__uMinus_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_u16
	.private_extern _A__Minus_var_i8_u16
_A__Minus_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3946
	cmpq	$255, -16(%rbp)
	jle	L3947
L3946:
	movl	$57569, %edi
	call	__m3_fault
L3947:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_u16
	.private_extern _A__uMinus_param_i8_u16
_A__uMinus_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_u16
	.private_extern _A__Minus_param_i8_u16
_A__Minus_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movswq	-20(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L3952
	cmpq	$255, -16(%rbp)
	jle	L3953
L3952:
	movl	$57633, %edi
	call	__m3_fault
L3953:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i8_i32
	.private_extern _A__uMinus_var_i8_i32
_A__uMinus_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i8_i32
	.private_extern _A__Minus_var_i8_i32
_A__Minus_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3958
	movl	$57697, %edi
	call	__m3_fault
L3958:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i8_i32
	.private_extern _A__uMinus_param_i8_i32
_A__uMinus_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i8_i32
	.private_extern _A__Minus_param_i8_i32
_A__Minus_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	mov	-24(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L3963
	movl	$57761, %edi
	call	__m3_fault
L3963:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_L_i16
	.private_extern _A__uMinus_var_L_i16
_A__uMinus_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_i16
	.private_extern _A__Minus_var_L_i16
_A__Minus_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_i16
	.private_extern _A__uMinus_param_L_i16
_A__uMinus_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_i16
	.private_extern _A__Minus_param_L_i16
_A__Minus_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_LC
	.private_extern _A__uMinus_var_L_LC
_A__uMinus_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_LC
	.private_extern _A__Minus_var_L_LC
_A__Minus_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_LC
	.private_extern _A__uMinus_param_L_LC
_A__uMinus_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_L_LC
	.private_extern _A__Minus_param_L_LC
_A__Minus_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_i64
	.private_extern _A__uMinus_var_L_i64
_A__uMinus_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_i64
	.private_extern _A__Minus_var_L_i64
_A__Minus_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_i64
	.private_extern _A__uMinus_param_L_i64
_A__uMinus_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_i64
	.private_extern _A__Minus_param_L_i64
_A__Minus_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_I
	.private_extern _A__uMinus_var_L_I
_A__uMinus_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_I
	.private_extern _A__Minus_var_L_I
_A__Minus_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_I
	.private_extern _A__uMinus_param_L_I
_A__uMinus_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_I
	.private_extern _A__Minus_param_L_I
_A__Minus_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_u8
	.private_extern _A__uMinus_var_L_u8
_A__uMinus_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_u8
	.private_extern _A__Minus_var_L_u8
_A__Minus_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_u8
	.private_extern _A__uMinus_param_L_u8
_A__uMinus_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_u8
	.private_extern _A__Minus_param_L_u8
_A__Minus_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_C
	.private_extern _A__uMinus_var_L_C
_A__uMinus_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_C
	.private_extern _A__Minus_var_L_C
_A__Minus_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_C
	.private_extern _A__uMinus_param_L_C
_A__uMinus_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_L_C
	.private_extern _A__Minus_param_L_C
_A__Minus_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_u32
	.private_extern _A__uMinus_var_L_u32
_A__uMinus_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_u32
	.private_extern _A__Minus_var_L_u32
_A__Minus_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_u32
	.private_extern _A__uMinus_param_L_u32
_A__uMinus_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_u32
	.private_extern _A__Minus_param_L_u32
_A__Minus_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_i8
	.private_extern _A__uMinus_var_L_i8
_A__uMinus_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_i8
	.private_extern _A__Minus_var_L_i8
_A__Minus_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_i8
	.private_extern _A__uMinus_param_L_i8
_A__uMinus_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_i8
	.private_extern _A__Minus_param_L_i8
_A__Minus_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_L
	.private_extern _A__uMinus_var_L_L
_A__uMinus_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_L_L
	.private_extern _A__Minus_var_L_L
_A__Minus_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uMinus_param_L_L
	.private_extern _A__uMinus_param_L_L
_A__uMinus_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_L
	.private_extern _A__Minus_param_L_L
_A__Minus_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_u64
	.private_extern _A__uMinus_var_L_u64
_A__uMinus_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_u64
	.private_extern _A__Minus_var_L_u64
_A__Minus_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_u64
	.private_extern _A__uMinus_param_L_u64
_A__uMinus_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_u64
	.private_extern _A__Minus_param_L_u64
_A__Minus_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_u16
	.private_extern _A__uMinus_var_L_u16
_A__uMinus_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_u16
	.private_extern _A__Minus_var_L_u16
_A__Minus_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_u16
	.private_extern _A__uMinus_param_L_u16
_A__uMinus_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_u16
	.private_extern _A__Minus_param_L_u16
_A__Minus_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_L_i32
	.private_extern _A__uMinus_var_L_i32
_A__uMinus_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_L_i32
	.private_extern _A__Minus_var_L_i32
_A__Minus_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_L_i32
	.private_extern _A__uMinus_param_L_i32
_A__uMinus_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_L_i32
	.private_extern _A__Minus_param_L_i32
_A__Minus_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_i16
	.private_extern _A__uMinus_var_u64_i16
_A__uMinus_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_i16
	.private_extern _A__Minus_var_u64_i16
_A__Minus_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_i16
	.private_extern _A__uMinus_param_u64_i16
_A__uMinus_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_i16
	.private_extern _A__Minus_param_u64_i16
_A__Minus_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_LC
	.private_extern _A__uMinus_var_u64_LC
_A__uMinus_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_LC
	.private_extern _A__Minus_var_u64_LC
_A__Minus_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_LC
	.private_extern _A__uMinus_param_u64_LC
_A__uMinus_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u64_LC
	.private_extern _A__Minus_param_u64_LC
_A__Minus_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_i64
	.private_extern _A__uMinus_var_u64_i64
_A__uMinus_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_i64
	.private_extern _A__Minus_var_u64_i64
_A__Minus_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_i64
	.private_extern _A__uMinus_param_u64_i64
_A__uMinus_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_i64
	.private_extern _A__Minus_param_u64_i64
_A__Minus_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_I
	.private_extern _A__uMinus_var_u64_I
_A__uMinus_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_I
	.private_extern _A__Minus_var_u64_I
_A__Minus_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_I
	.private_extern _A__uMinus_param_u64_I
_A__uMinus_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_I
	.private_extern _A__Minus_param_u64_I
_A__Minus_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_u8
	.private_extern _A__uMinus_var_u64_u8
_A__uMinus_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_u8
	.private_extern _A__Minus_var_u64_u8
_A__Minus_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_u8
	.private_extern _A__uMinus_param_u64_u8
_A__uMinus_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_u8
	.private_extern _A__Minus_param_u64_u8
_A__Minus_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_C
	.private_extern _A__uMinus_var_u64_C
_A__uMinus_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_C
	.private_extern _A__Minus_var_u64_C
_A__Minus_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_C
	.private_extern _A__uMinus_param_u64_C
_A__uMinus_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u64_C
	.private_extern _A__Minus_param_u64_C
_A__Minus_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_u32
	.private_extern _A__uMinus_var_u64_u32
_A__uMinus_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_u32
	.private_extern _A__Minus_var_u64_u32
_A__Minus_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_u32
	.private_extern _A__uMinus_param_u64_u32
_A__uMinus_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_u32
	.private_extern _A__Minus_param_u64_u32
_A__Minus_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_i8
	.private_extern _A__uMinus_var_u64_i8
_A__uMinus_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_i8
	.private_extern _A__Minus_var_u64_i8
_A__Minus_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_i8
	.private_extern _A__uMinus_param_u64_i8
_A__uMinus_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_i8
	.private_extern _A__Minus_param_u64_i8
_A__Minus_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_L
	.private_extern _A__uMinus_var_u64_L
_A__uMinus_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_L
	.private_extern _A__Minus_var_u64_L
_A__Minus_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_L
	.private_extern _A__uMinus_param_u64_L
_A__uMinus_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_L
	.private_extern _A__Minus_param_u64_L
_A__Minus_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_u64
	.private_extern _A__uMinus_var_u64_u64
_A__uMinus_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_u64_u64
	.private_extern _A__Minus_var_u64_u64
_A__Minus_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uMinus_param_u64_u64
	.private_extern _A__uMinus_param_u64_u64
_A__uMinus_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_u64
	.private_extern _A__Minus_param_u64_u64
_A__Minus_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_u16
	.private_extern _A__uMinus_var_u64_u16
_A__uMinus_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_u16
	.private_extern _A__Minus_var_u64_u16
_A__Minus_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_u16
	.private_extern _A__uMinus_param_u64_u16
_A__uMinus_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_u16
	.private_extern _A__Minus_param_u64_u16
_A__Minus_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u64_i32
	.private_extern _A__uMinus_var_u64_i32
_A__uMinus_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u64_i32
	.private_extern _A__Minus_var_u64_i32
_A__Minus_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u64_i32
	.private_extern _A__uMinus_param_u64_i32
_A__uMinus_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u64_i32
	.private_extern _A__Minus_param_u64_i32
_A__Minus_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	subq	%rdx, %rax
	leave
	ret
.globl _A__uMinus_var_u16_i16
	.private_extern _A__uMinus_var_u16_i16
_A__uMinus_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_i16
	.private_extern _A__Minus_var_u16_i16
_A__Minus_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4160
	movl	$60897, %edi
	call	__m3_fault
L4160:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_i16
	.private_extern _A__uMinus_param_u16_i16
_A__uMinus_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_i16
	.private_extern _A__Minus_param_u16_i16
_A__Minus_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movzwl	-20(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4165
	movl	$60961, %edi
	call	__m3_fault
L4165:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_LC
	.private_extern _A__uMinus_var_u16_LC
_A__uMinus_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_LC
	.private_extern _A__Minus_var_u16_LC
_A__Minus_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u16_LC
	.private_extern _A__uMinus_param_u16_LC
_A__uMinus_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u16_LC
	.private_extern _A__Minus_param_u16_LC
_A__Minus_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_u16_i64
	.private_extern _A__uMinus_var_u16_i64
_A__uMinus_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_i64
	.private_extern _A__Minus_var_u16_i64
_A__Minus_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u16_i64
	.private_extern _A__uMinus_param_u16_i64
_A__uMinus_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_i64
	.private_extern _A__Minus_param_u16_i64
_A__Minus_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_I
	.private_extern _A__uMinus_var_u16_I
_A__uMinus_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_I
	.private_extern _A__Minus_var_u16_I
_A__Minus_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4186
	cmpq	$32767, -16(%rbp)
	jle	L4187
L4186:
	movl	$61281, %edi
	call	__m3_fault
L4187:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_I
	.private_extern _A__uMinus_param_u16_I
_A__uMinus_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_I
	.private_extern _A__Minus_param_u16_I
_A__Minus_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4192
	cmpq	$32767, -16(%rbp)
	jle	L4193
L4192:
	movl	$61345, %edi
	call	__m3_fault
L4193:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_u8
	.private_extern _A__uMinus_var_u16_u8
_A__uMinus_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_u8
	.private_extern _A__Minus_var_u16_u8
_A__Minus_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4198
	cmpq	$32767, -16(%rbp)
	jle	L4199
L4198:
	movl	$61409, %edi
	call	__m3_fault
L4199:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_u8
	.private_extern _A__uMinus_param_u16_u8
_A__uMinus_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_u8
	.private_extern _A__Minus_param_u16_u8
_A__Minus_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movsbq	-19(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4204
	cmpq	$32767, -16(%rbp)
	jle	L4205
L4204:
	movl	$61473, %edi
	call	__m3_fault
L4205:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_C
	.private_extern _A__uMinus_var_u16_C
_A__uMinus_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_C
	.private_extern _A__Minus_var_u16_C
_A__Minus_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4210
	cmpq	$32767, -16(%rbp)
	jle	L4211
L4210:
	movl	$61537, %edi
	call	__m3_fault
L4211:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_C
	.private_extern _A__uMinus_param_u16_C
_A__uMinus_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_u16_C
	.private_extern _A__Minus_param_u16_C
_A__Minus_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4216
	cmpq	$32767, -16(%rbp)
	jle	L4217
L4216:
	movl	$61601, %edi
	call	__m3_fault
L4217:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_u32
	.private_extern _A__uMinus_var_u16_u32
_A__uMinus_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_u32
	.private_extern _A__Minus_var_u16_u32
_A__Minus_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4222
	cmpq	$32767, -16(%rbp)
	jle	L4223
L4222:
	movl	$61665, %edi
	call	__m3_fault
L4223:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_u32
	.private_extern _A__uMinus_param_u16_u32
_A__uMinus_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_u32
	.private_extern _A__Minus_param_u16_u32
_A__Minus_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4228
	cmpq	$32767, -16(%rbp)
	jle	L4229
L4228:
	movl	$61729, %edi
	call	__m3_fault
L4229:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_i8
	.private_extern _A__uMinus_var_u16_i8
_A__uMinus_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_i8
	.private_extern _A__Minus_var_u16_i8
_A__Minus_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4234
	movl	$61793, %edi
	call	__m3_fault
L4234:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_i8
	.private_extern _A__uMinus_param_u16_i8
_A__uMinus_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_i8
	.private_extern _A__Minus_param_u16_i8
_A__Minus_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movzbl	-19(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4239
	movl	$61857, %edi
	call	__m3_fault
L4239:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_L
	.private_extern _A__uMinus_var_u16_L
_A__uMinus_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_L
	.private_extern _A__Minus_var_u16_L
_A__Minus_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u16_L
	.private_extern _A__uMinus_param_u16_L
_A__uMinus_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_L
	.private_extern _A__Minus_param_u16_L
_A__Minus_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_u64
	.private_extern _A__uMinus_var_u16_u64
_A__uMinus_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_u64
	.private_extern _A__Minus_var_u16_u64
_A__Minus_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_u16_u64
	.private_extern _A__uMinus_param_u16_u64
_A__uMinus_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_u64
	.private_extern _A__Minus_param_u16_u64
_A__Minus_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_u16
	.private_extern _A__uMinus_var_u16_u16
_A__uMinus_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_u16_u16
	.private_extern _A__Minus_var_u16_u16
_A__Minus_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4260
	cmpq	$32767, -16(%rbp)
	jle	L4261
L4260:
	movl	$62177, %edi
	call	__m3_fault
L4261:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_u16
	.private_extern _A__uMinus_param_u16_u16
_A__uMinus_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_u16
	.private_extern _A__Minus_param_u16_u16
_A__Minus_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movswq	-20(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L4266
	cmpq	$32767, -16(%rbp)
	jle	L4267
L4266:
	movl	$62241, %edi
	call	__m3_fault
L4267:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_u16_i32
	.private_extern _A__uMinus_var_u16_i32
_A__uMinus_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_u16_i32
	.private_extern _A__Minus_var_u16_i32
_A__Minus_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4272
	movl	$62305, %edi
	call	__m3_fault
L4272:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_u16_i32
	.private_extern _A__uMinus_param_u16_i32
_A__uMinus_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_u16_i32
	.private_extern _A__Minus_param_u16_i32
_A__Minus_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	mov	-24(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jge	L4277
	movl	$62369, %edi
	call	__m3_fault
L4277:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_i16
	.private_extern _A__uMinus_var_i32_i16
_A__uMinus_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_i16
	.private_extern _A__Minus_var_i32_i16
_A__Minus_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4282
	movl	$62433, %edi
	call	__m3_fault
L4282:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_i16
	.private_extern _A__uMinus_param_i32_i16
_A__uMinus_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_i16
	.private_extern _A__Minus_param_i32_i16
_A__Minus_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movzwl	-22(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4287
	movl	$62497, %edi
	call	__m3_fault
L4287:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_LC
	.private_extern _A__uMinus_var_i32_LC
_A__uMinus_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_LC
	.private_extern _A__Minus_var_i32_LC
_A__Minus_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i32_LC
	.private_extern _A__uMinus_param_i32_LC
_A__uMinus_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i32_LC
	.private_extern _A__Minus_param_i32_LC
_A__Minus_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_var_i32_i64
	.private_extern _A__uMinus_var_i32_i64
_A__uMinus_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_i64
	.private_extern _A__Minus_var_i32_i64
_A__Minus_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i32_i64
	.private_extern _A__uMinus_param_i32_i64
_A__uMinus_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_i64
	.private_extern _A__Minus_param_i32_i64
_A__Minus_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_I
	.private_extern _A__uMinus_var_i32_I
_A__uMinus_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_I
	.private_extern _A__Minus_var_i32_I
_A__Minus_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4308
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4309
L4308:
	movl	$62817, %edi
	call	__m3_fault
L4309:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_I
	.private_extern _A__uMinus_param_i32_I
_A__uMinus_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_I
	.private_extern _A__Minus_param_i32_I
_A__Minus_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4314
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4315
L4314:
	movl	$62881, %edi
	call	__m3_fault
L4315:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_u8
	.private_extern _A__uMinus_var_i32_u8
_A__uMinus_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_u8
	.private_extern _A__Minus_var_i32_u8
_A__Minus_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4320
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4321
L4320:
	movl	$62945, %edi
	call	__m3_fault
L4321:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_u8
	.private_extern _A__uMinus_param_i32_u8
_A__uMinus_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_u8
	.private_extern _A__Minus_param_i32_u8
_A__Minus_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movsbq	-21(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4326
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4327
L4326:
	movl	$63009, %edi
	call	__m3_fault
L4327:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_C
	.private_extern _A__uMinus_var_i32_C
_A__uMinus_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_C
	.private_extern _A__Minus_var_i32_C
_A__Minus_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4332
	movl	$63073, %edi
	call	__m3_fault
L4332:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_C
	.private_extern _A__uMinus_param_i32_C
_A__uMinus_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__Minus_param_i32_C
	.private_extern _A__Minus_param_i32_C
_A__Minus_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	-32(%rbp), %rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4337
	movl	$63137, %edi
	call	__m3_fault
L4337:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_u32
	.private_extern _A__uMinus_var_i32_u32
_A__uMinus_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_u32
	.private_extern _A__Minus_var_i32_u32
_A__Minus_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4342
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4343
L4342:
	movl	$63201, %edi
	call	__m3_fault
L4343:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_u32
	.private_extern _A__uMinus_param_i32_u32
_A__uMinus_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_u32
	.private_extern _A__Minus_param_i32_u32
_A__Minus_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4348
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4349
L4348:
	movl	$63265, %edi
	call	__m3_fault
L4349:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_i8
	.private_extern _A__uMinus_var_i32_i8
_A__uMinus_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_i8
	.private_extern _A__Minus_var_i32_i8
_A__Minus_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4354
	movl	$63329, %edi
	call	__m3_fault
L4354:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_i8
	.private_extern _A__uMinus_param_i32_i8
_A__uMinus_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_i8
	.private_extern _A__Minus_param_i32_i8
_A__Minus_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movzbl	-21(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4359
	movl	$63393, %edi
	call	__m3_fault
L4359:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_L
	.private_extern _A__uMinus_var_i32_L
_A__uMinus_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_L
	.private_extern _A__Minus_var_i32_L
_A__Minus_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i32_L
	.private_extern _A__uMinus_param_i32_L
_A__uMinus_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_L
	.private_extern _A__Minus_param_i32_L
_A__Minus_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_u64
	.private_extern _A__uMinus_var_i32_u64
_A__uMinus_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_u64
	.private_extern _A__Minus_var_i32_u64
_A__Minus_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__uMinus_param_i32_u64
	.private_extern _A__uMinus_param_i32_u64
_A__uMinus_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_u64
	.private_extern _A__Minus_param_i32_u64
_A__Minus_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	subq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_u16
	.private_extern _A__uMinus_var_i32_u16
_A__uMinus_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_var_i32_u16
	.private_extern _A__Minus_var_i32_u16
_A__Minus_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4380
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4381
L4380:
	movl	$63713, %edi
	call	__m3_fault
L4381:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_u16
	.private_extern _A__uMinus_param_i32_u16
_A__uMinus_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_u16
	.private_extern _A__Minus_param_i32_u16
_A__Minus_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movswq	-22(%rbp),%rdx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4386
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L4387
L4386:
	movl	$63777, %edi
	call	__m3_fault
L4387:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_var_i32_i32
	.private_extern _A__uMinus_var_i32_i32
_A__uMinus_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__Minus_var_i32_i32
	.private_extern _A__Minus_var_i32_i32
_A__Minus_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	$0, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4392
	movl	$63841, %edi
	call	__m3_fault
L4392:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMinus_param_i32_i32
	.private_extern _A__uMinus_param_i32_i32
_A__uMinus_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	%rcx, %rax
	leave
	ret
.globl _A__Minus_param_i32_i32
	.private_extern _A__Minus_param_i32_i32
_A__Minus_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	mov	-24(%rbp), %edx
	subq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L4397
	movl	$63905, %edi
	call	__m3_fault
L4397:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_i16
	.private_extern _A__uDivide_var_i16_i16
_A__uDivide_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_i16
	.private_extern _A__Divide_var_i16_i16
_A__Divide_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4402
	cmpq	$65535, -16(%rbp)
	jle	L4403
L4402:
	movl	$64065, %edi
	call	__m3_fault
L4403:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_i16
	.private_extern _A__uDivide_param_i16_i16
_A__uDivide_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_i16
	.private_extern _A__Divide_param_i16_i16
_A__Divide_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4408
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4408
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4408:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4409
	cmpq	$65535, -16(%rbp)
	jle	L4410
L4409:
	movl	$64129, %edi
	call	__m3_fault
L4410:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_LC
	.private_extern _A__uDivide_var_i16_LC
_A__uDivide_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_LC
	.private_extern _A__Divide_var_i16_LC
_A__Divide_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4415
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4415
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4415:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_LC
	.private_extern _A__uDivide_param_i16_LC
_A__uDivide_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i16_LC
	.private_extern _A__Divide_param_i16_LC
_A__Divide_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4420
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4420
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4420:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_i64
	.private_extern _A__uDivide_var_i16_i64
_A__uDivide_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_i64
	.private_extern _A__Divide_var_i16_i64
_A__Divide_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4425
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4425
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4425:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_i64
	.private_extern _A__uDivide_param_i16_i64
_A__uDivide_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_i64
	.private_extern _A__Divide_param_i16_i64
_A__Divide_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4430
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4430
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4430:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_I
	.private_extern _A__uDivide_var_i16_I
_A__uDivide_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_I
	.private_extern _A__Divide_var_i16_I
_A__Divide_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4435
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4435
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4435:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4436
	cmpq	$65535, -16(%rbp)
	jle	L4437
L4436:
	movl	$64449, %edi
	call	__m3_fault
L4437:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_I
	.private_extern _A__uDivide_param_i16_I
_A__uDivide_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_I
	.private_extern _A__Divide_param_i16_I
_A__Divide_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4442
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4442
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4442:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4443
	cmpq	$65535, -16(%rbp)
	jle	L4444
L4443:
	movl	$64513, %edi
	call	__m3_fault
L4444:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_u8
	.private_extern _A__uDivide_var_i16_u8
_A__uDivide_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_u8
	.private_extern _A__Divide_var_i16_u8
_A__Divide_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4449
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4449
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4449:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4450
	cmpq	$65535, -16(%rbp)
	jle	L4451
L4450:
	movl	$64577, %edi
	call	__m3_fault
L4451:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_u8
	.private_extern _A__uDivide_param_i16_u8
_A__uDivide_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_u8
	.private_extern _A__Divide_param_i16_u8
_A__Divide_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4456
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4456
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4456:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4457
	cmpq	$65535, -16(%rbp)
	jle	L4458
L4457:
	movl	$64641, %edi
	call	__m3_fault
L4458:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_C
	.private_extern _A__uDivide_var_i16_C
_A__uDivide_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_C
	.private_extern _A__Divide_var_i16_C
_A__Divide_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4463
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4463
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4463:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4464
	cmpq	$65535, -16(%rbp)
	jle	L4465
L4464:
	movl	$64705, %edi
	call	__m3_fault
L4465:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_C
	.private_extern _A__uDivide_param_i16_C
_A__uDivide_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i16_C
	.private_extern _A__Divide_param_i16_C
_A__Divide_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4470
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4470
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4470:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4471
	cmpq	$65535, -16(%rbp)
	jle	L4472
L4471:
	movl	$64769, %edi
	call	__m3_fault
L4472:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_u32
	.private_extern _A__uDivide_var_i16_u32
_A__uDivide_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_u32
	.private_extern _A__Divide_var_i16_u32
_A__Divide_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4477
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4477
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4477:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4478
	cmpq	$65535, -16(%rbp)
	jle	L4479
L4478:
	movl	$64833, %edi
	call	__m3_fault
L4479:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_u32
	.private_extern _A__uDivide_param_i16_u32
_A__uDivide_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_u32
	.private_extern _A__Divide_param_i16_u32
_A__Divide_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4484
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4484
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4484:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4485
	cmpq	$65535, -16(%rbp)
	jle	L4486
L4485:
	movl	$64897, %edi
	call	__m3_fault
L4486:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_i8
	.private_extern _A__uDivide_var_i16_i8
_A__uDivide_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_i8
	.private_extern _A__Divide_var_i16_i8
_A__Divide_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4491
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4491
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4491:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4492
	cmpq	$65535, -16(%rbp)
	jle	L4493
L4492:
	movl	$64961, %edi
	call	__m3_fault
L4493:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_i8
	.private_extern _A__uDivide_param_i16_i8
_A__uDivide_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_i8
	.private_extern _A__Divide_param_i16_i8
_A__Divide_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4498
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4498
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4498:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4499
	cmpq	$65535, -16(%rbp)
	jle	L4500
L4499:
	movl	$65025, %edi
	call	__m3_fault
L4500:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_L
	.private_extern _A__uDivide_var_i16_L
_A__uDivide_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_L
	.private_extern _A__Divide_var_i16_L
_A__Divide_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4505
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4505
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4505:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_L
	.private_extern _A__uDivide_param_i16_L
_A__uDivide_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_L
	.private_extern _A__Divide_param_i16_L
_A__Divide_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4510
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4510
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4510:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_u64
	.private_extern _A__uDivide_var_i16_u64
_A__uDivide_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_u64
	.private_extern _A__Divide_var_i16_u64
_A__Divide_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4515
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4515
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4515:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_u64
	.private_extern _A__uDivide_param_i16_u64
_A__uDivide_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_u64
	.private_extern _A__Divide_param_i16_u64
_A__Divide_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4520
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4520
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4520:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_u16
	.private_extern _A__uDivide_var_i16_u16
_A__uDivide_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_u16
	.private_extern _A__Divide_var_i16_u16
_A__Divide_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4525
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4525
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4525:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4526
	cmpq	$65535, -16(%rbp)
	jle	L4527
L4526:
	movl	$65345, %edi
	call	__m3_fault
L4527:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_u16
	.private_extern _A__uDivide_param_i16_u16
_A__uDivide_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_u16
	.private_extern _A__Divide_param_i16_u16
_A__Divide_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4532
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4532
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4532:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4533
	cmpq	$65535, -16(%rbp)
	jle	L4534
L4533:
	movl	$65409, %edi
	call	__m3_fault
L4534:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i16_i32
	.private_extern _A__uDivide_var_i16_i32
_A__uDivide_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i16_i32
	.private_extern _A__Divide_var_i16_i32
_A__Divide_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4539
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4539
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4539:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4540
	cmpq	$65535, -16(%rbp)
	jle	L4541
L4540:
	movl	$65473, %edi
	call	__m3_fault
L4541:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i16_i32
	.private_extern _A__uDivide_param_i16_i32
_A__uDivide_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i16_i32
	.private_extern _A__Divide_param_i16_i32
_A__Divide_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4546
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4546
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4546:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L4547
	cmpq	$65535, -16(%rbp)
	jle	L4548
L4547:
	movl	$65537, %edi
	call	__m3_fault
L4548:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_i16
	.private_extern _A__uDivide_var_LC_i16
_A__uDivide_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_i16
	.private_extern _A__Divide_var_LC_i16
_A__Divide_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4553
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4553
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4553:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_i16
	.private_extern _A__uDivide_param_LC_i16
_A__uDivide_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_i16
	.private_extern _A__Divide_param_LC_i16
_A__Divide_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4558
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4558
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4558:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_LC
	.private_extern _A__uDivide_var_LC_LC
_A__uDivide_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_LC
	.private_extern _A__Divide_var_LC_LC
_A__Divide_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	leave
	ret
.globl _A__uDivide_param_LC_LC
	.private_extern _A__uDivide_param_LC_LC
_A__uDivide_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_LC
	.private_extern _A__Divide_param_LC_LC
_A__Divide_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4567
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4567
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4567:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_i64
	.private_extern _A__uDivide_var_LC_i64
_A__uDivide_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_i64
	.private_extern _A__Divide_var_LC_i64
_A__Divide_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4572
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4572
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4572:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_i64
	.private_extern _A__uDivide_param_LC_i64
_A__uDivide_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_i64
	.private_extern _A__Divide_param_LC_i64
_A__Divide_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4577
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4577
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4577:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_I
	.private_extern _A__uDivide_var_LC_I
_A__uDivide_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_I
	.private_extern _A__Divide_var_LC_I
_A__Divide_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4582
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4582
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4582:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_I
	.private_extern _A__uDivide_param_LC_I
_A__uDivide_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_I
	.private_extern _A__Divide_param_LC_I
_A__Divide_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4587
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4587
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4587:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_u8
	.private_extern _A__uDivide_var_LC_u8
_A__uDivide_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_u8
	.private_extern _A__Divide_var_LC_u8
_A__Divide_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4592
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4592
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4592:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_u8
	.private_extern _A__uDivide_param_LC_u8
_A__uDivide_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_u8
	.private_extern _A__Divide_param_LC_u8
_A__Divide_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4597
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4597
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4597:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_C
	.private_extern _A__uDivide_var_LC_C
_A__uDivide_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_C
	.private_extern _A__Divide_var_LC_C
_A__Divide_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4602
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4602
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4602:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_C
	.private_extern _A__uDivide_param_LC_C
_A__uDivide_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_C
	.private_extern _A__Divide_param_LC_C
_A__Divide_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4607
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4607
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4607:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_u32
	.private_extern _A__uDivide_var_LC_u32
_A__uDivide_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_u32
	.private_extern _A__Divide_var_LC_u32
_A__Divide_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4612
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4612
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4612:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_u32
	.private_extern _A__uDivide_param_LC_u32
_A__uDivide_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_u32
	.private_extern _A__Divide_param_LC_u32
_A__Divide_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4617
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4617
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4617:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_i8
	.private_extern _A__uDivide_var_LC_i8
_A__uDivide_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_i8
	.private_extern _A__Divide_var_LC_i8
_A__Divide_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4622
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4622
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4622:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_i8
	.private_extern _A__uDivide_param_LC_i8
_A__uDivide_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_i8
	.private_extern _A__Divide_param_LC_i8
_A__Divide_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4627
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4627
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4627:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_L
	.private_extern _A__uDivide_var_LC_L
_A__uDivide_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_L
	.private_extern _A__Divide_var_LC_L
_A__Divide_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4632
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4632
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4632:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_L
	.private_extern _A__uDivide_param_LC_L
_A__uDivide_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_L
	.private_extern _A__Divide_param_LC_L
_A__Divide_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4637
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4637
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4637:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_u64
	.private_extern _A__uDivide_var_LC_u64
_A__uDivide_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_u64
	.private_extern _A__Divide_var_LC_u64
_A__Divide_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4642
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4642
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4642:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_u64
	.private_extern _A__uDivide_param_LC_u64
_A__uDivide_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_u64
	.private_extern _A__Divide_param_LC_u64
_A__Divide_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4647
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4647
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4647:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_u16
	.private_extern _A__uDivide_var_LC_u16
_A__uDivide_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_u16
	.private_extern _A__Divide_var_LC_u16
_A__Divide_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4652
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4652
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4652:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_u16
	.private_extern _A__uDivide_param_LC_u16
_A__uDivide_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_u16
	.private_extern _A__Divide_param_LC_u16
_A__Divide_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4657
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4657
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4657:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_LC_i32
	.private_extern _A__uDivide_var_LC_i32
_A__uDivide_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_LC_i32
	.private_extern _A__Divide_var_LC_i32
_A__Divide_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4662
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4662
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4662:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_LC_i32
	.private_extern _A__uDivide_param_LC_i32
_A__uDivide_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_LC_i32
	.private_extern _A__Divide_param_LC_i32
_A__Divide_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4667
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4667
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4667:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_f64_f64
	.private_extern _A__Divide_var_f64_f64
_A__Divide_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	movapd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	movapd	%xmm2, %xmm0
	leave
	ret
.globl _A__Divide_param_f64_f64
	.private_extern _A__Divide_param_f64_f64
_A__Divide_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	divsd	-32(%rbp), %xmm0
	leave
	ret
.globl _A__uDivide_var_i64_i16
	.private_extern _A__uDivide_var_i64_i16
_A__uDivide_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_i16
	.private_extern _A__Divide_var_i64_i16
_A__Divide_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4676
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4676
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4676:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_i16
	.private_extern _A__uDivide_param_i64_i16
_A__uDivide_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_i16
	.private_extern _A__Divide_param_i64_i16
_A__Divide_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4681
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4681
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4681:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_LC
	.private_extern _A__uDivide_var_i64_LC
_A__uDivide_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_LC
	.private_extern _A__Divide_var_i64_LC
_A__Divide_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4686
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4686
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4686:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_LC
	.private_extern _A__uDivide_param_i64_LC
_A__uDivide_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i64_LC
	.private_extern _A__Divide_param_i64_LC
_A__Divide_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4691
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4691
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4691:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_i64
	.private_extern _A__uDivide_var_i64_i64
_A__uDivide_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_i64
	.private_extern _A__Divide_var_i64_i64
_A__Divide_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	leave
	ret
.globl _A__uDivide_param_i64_i64
	.private_extern _A__uDivide_param_i64_i64
_A__uDivide_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_i64
	.private_extern _A__Divide_param_i64_i64
_A__Divide_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4700
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4700
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4700:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_I
	.private_extern _A__uDivide_var_i64_I
_A__uDivide_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_I
	.private_extern _A__Divide_var_i64_I
_A__Divide_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4705
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4705
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4705:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_I
	.private_extern _A__uDivide_param_i64_I
_A__uDivide_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_I
	.private_extern _A__Divide_param_i64_I
_A__Divide_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4710
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4710
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4710:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_u8
	.private_extern _A__uDivide_var_i64_u8
_A__uDivide_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_u8
	.private_extern _A__Divide_var_i64_u8
_A__Divide_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4715
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4715
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4715:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_u8
	.private_extern _A__uDivide_param_i64_u8
_A__uDivide_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_u8
	.private_extern _A__Divide_param_i64_u8
_A__Divide_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4720
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4720
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4720:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_C
	.private_extern _A__uDivide_var_i64_C
_A__uDivide_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_C
	.private_extern _A__Divide_var_i64_C
_A__Divide_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4725
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4725
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4725:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_C
	.private_extern _A__uDivide_param_i64_C
_A__uDivide_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i64_C
	.private_extern _A__Divide_param_i64_C
_A__Divide_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4730
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4730
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4730:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_u32
	.private_extern _A__uDivide_var_i64_u32
_A__uDivide_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_u32
	.private_extern _A__Divide_var_i64_u32
_A__Divide_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4735
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4735
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4735:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_u32
	.private_extern _A__uDivide_param_i64_u32
_A__uDivide_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_u32
	.private_extern _A__Divide_param_i64_u32
_A__Divide_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4740
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4740
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4740:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_i8
	.private_extern _A__uDivide_var_i64_i8
_A__uDivide_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_i8
	.private_extern _A__Divide_var_i64_i8
_A__Divide_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4745
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4745
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4745:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_i8
	.private_extern _A__uDivide_param_i64_i8
_A__uDivide_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_i8
	.private_extern _A__Divide_param_i64_i8
_A__Divide_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4750
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4750
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4750:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_L
	.private_extern _A__uDivide_var_i64_L
_A__uDivide_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_L
	.private_extern _A__Divide_var_i64_L
_A__Divide_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4755
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4755
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4755:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_L
	.private_extern _A__uDivide_param_i64_L
_A__uDivide_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_L
	.private_extern _A__Divide_param_i64_L
_A__Divide_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4760
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4760
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4760:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_u64
	.private_extern _A__uDivide_var_i64_u64
_A__uDivide_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_u64
	.private_extern _A__Divide_var_i64_u64
_A__Divide_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4765
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4765
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4765:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_u64
	.private_extern _A__uDivide_param_i64_u64
_A__uDivide_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_u64
	.private_extern _A__Divide_param_i64_u64
_A__Divide_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4770
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4770
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4770:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_u16
	.private_extern _A__uDivide_var_i64_u16
_A__uDivide_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_u16
	.private_extern _A__Divide_var_i64_u16
_A__Divide_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4775
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4775
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4775:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_u16
	.private_extern _A__uDivide_param_i64_u16
_A__uDivide_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_u16
	.private_extern _A__Divide_param_i64_u16
_A__Divide_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4780
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4780
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4780:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i64_i32
	.private_extern _A__uDivide_var_i64_i32
_A__uDivide_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i64_i32
	.private_extern _A__Divide_var_i64_i32
_A__Divide_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4785
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4785
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4785:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i64_i32
	.private_extern _A__uDivide_param_i64_i32
_A__uDivide_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i64_i32
	.private_extern _A__Divide_param_i64_i32
_A__Divide_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4790
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4790
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4790:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_i16
	.private_extern _A__uDivide_var_I_i16
_A__uDivide_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_i16
	.private_extern _A__Divide_var_I_i16
_A__Divide_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4795
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4795
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4795:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_i16
	.private_extern _A__uDivide_param_I_i16
_A__uDivide_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_i16
	.private_extern _A__Divide_param_I_i16
_A__Divide_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4800
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4800
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4800:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_LC
	.private_extern _A__uDivide_var_I_LC
_A__uDivide_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_LC
	.private_extern _A__Divide_var_I_LC
_A__Divide_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4805
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4805
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4805:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_LC
	.private_extern _A__uDivide_param_I_LC
_A__uDivide_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_I_LC
	.private_extern _A__Divide_param_I_LC
_A__Divide_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4810
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4810
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4810:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_i64
	.private_extern _A__uDivide_var_I_i64
_A__uDivide_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_i64
	.private_extern _A__Divide_var_I_i64
_A__Divide_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4815
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4815
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4815:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_i64
	.private_extern _A__uDivide_param_I_i64
_A__uDivide_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_i64
	.private_extern _A__Divide_param_I_i64
_A__Divide_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4820
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4820
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4820:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_I
	.private_extern _A__uDivide_var_I_I
_A__uDivide_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_I
	.private_extern _A__Divide_var_I_I
_A__Divide_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	leave
	ret
.globl _A__uDivide_param_I_I
	.private_extern _A__uDivide_param_I_I
_A__uDivide_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_I
	.private_extern _A__Divide_param_I_I
_A__Divide_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4829
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4829
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4829:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_u8
	.private_extern _A__uDivide_var_I_u8
_A__uDivide_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_u8
	.private_extern _A__Divide_var_I_u8
_A__Divide_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4834
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4834
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4834:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_u8
	.private_extern _A__uDivide_param_I_u8
_A__uDivide_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_u8
	.private_extern _A__Divide_param_I_u8
_A__Divide_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4839
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4839
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4839:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_C
	.private_extern _A__uDivide_var_I_C
_A__uDivide_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_C
	.private_extern _A__Divide_var_I_C
_A__Divide_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4844
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4844
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4844:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_C
	.private_extern _A__uDivide_param_I_C
_A__uDivide_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_I_C
	.private_extern _A__Divide_param_I_C
_A__Divide_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4849
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4849
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4849:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_u32
	.private_extern _A__uDivide_var_I_u32
_A__uDivide_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_u32
	.private_extern _A__Divide_var_I_u32
_A__Divide_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4854
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4854
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4854:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_u32
	.private_extern _A__uDivide_param_I_u32
_A__uDivide_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_u32
	.private_extern _A__Divide_param_I_u32
_A__Divide_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4859
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4859
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4859:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_i8
	.private_extern _A__uDivide_var_I_i8
_A__uDivide_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_i8
	.private_extern _A__Divide_var_I_i8
_A__Divide_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4864
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4864
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4864:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_i8
	.private_extern _A__uDivide_param_I_i8
_A__uDivide_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_i8
	.private_extern _A__Divide_param_I_i8
_A__Divide_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4869
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4869
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4869:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_L
	.private_extern _A__uDivide_var_I_L
_A__uDivide_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_L
	.private_extern _A__Divide_var_I_L
_A__Divide_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4874
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4874
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4874:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_L
	.private_extern _A__uDivide_param_I_L
_A__uDivide_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_L
	.private_extern _A__Divide_param_I_L
_A__Divide_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4879
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4879
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4879:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_u64
	.private_extern _A__uDivide_var_I_u64
_A__uDivide_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_u64
	.private_extern _A__Divide_var_I_u64
_A__Divide_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4884
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4884
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4884:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_u64
	.private_extern _A__uDivide_param_I_u64
_A__uDivide_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_u64
	.private_extern _A__Divide_param_I_u64
_A__Divide_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4889
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L4889
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L4889:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_u16
	.private_extern _A__uDivide_var_I_u16
_A__uDivide_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_u16
	.private_extern _A__Divide_var_I_u16
_A__Divide_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4894
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4894
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4894:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_u16
	.private_extern _A__uDivide_param_I_u16
_A__uDivide_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_u16
	.private_extern _A__Divide_param_I_u16
_A__Divide_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4899
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4899
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4899:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_I_i32
	.private_extern _A__uDivide_var_I_i32
_A__uDivide_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_I_i32
	.private_extern _A__Divide_var_I_i32
_A__Divide_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4904
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4904
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4904:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_I_i32
	.private_extern _A__uDivide_param_I_i32
_A__uDivide_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_I_i32
	.private_extern _A__Divide_param_I_i32
_A__Divide_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4909
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4909
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L4909:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_i16
	.private_extern _A__uDivide_var_u8_i16
_A__uDivide_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_i16
	.private_extern _A__Divide_var_u8_i16
_A__Divide_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4914
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4914
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4914:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4915
	cmpq	$127, -16(%rbp)
	jle	L4916
L4915:
	movl	$70273, %edi
	call	__m3_fault
L4916:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_i16
	.private_extern _A__uDivide_param_u8_i16
_A__uDivide_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_i16
	.private_extern _A__Divide_param_u8_i16
_A__Divide_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4921
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4921
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4921:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4922
	cmpq	$127, -16(%rbp)
	jle	L4923
L4922:
	movl	$70337, %edi
	call	__m3_fault
L4923:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_LC
	.private_extern _A__uDivide_var_u8_LC
_A__uDivide_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_LC
	.private_extern _A__Divide_var_u8_LC
_A__Divide_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4928
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4928
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4928:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_LC
	.private_extern _A__uDivide_param_u8_LC
_A__uDivide_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u8_LC
	.private_extern _A__Divide_param_u8_LC
_A__Divide_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4933
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4933
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4933:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_i64
	.private_extern _A__uDivide_var_u8_i64
_A__uDivide_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_i64
	.private_extern _A__Divide_var_u8_i64
_A__Divide_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4938
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4938
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4938:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_i64
	.private_extern _A__uDivide_param_u8_i64
_A__uDivide_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_i64
	.private_extern _A__Divide_param_u8_i64
_A__Divide_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4943
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4943
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4943:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_I
	.private_extern _A__uDivide_var_u8_I
_A__uDivide_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_I
	.private_extern _A__Divide_var_u8_I
_A__Divide_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4948
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4948
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4948:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4949
	cmpq	$127, -16(%rbp)
	jle	L4950
L4949:
	movl	$70657, %edi
	call	__m3_fault
L4950:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_I
	.private_extern _A__uDivide_param_u8_I
_A__uDivide_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_I
	.private_extern _A__Divide_param_u8_I
_A__Divide_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4955
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4955
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4955:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4956
	cmpq	$127, -16(%rbp)
	jle	L4957
L4956:
	movl	$70721, %edi
	call	__m3_fault
L4957:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_u8
	.private_extern _A__uDivide_var_u8_u8
_A__uDivide_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_u8
	.private_extern _A__Divide_var_u8_u8
_A__Divide_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4962
	cmpq	$127, -16(%rbp)
	jle	L4963
L4962:
	movl	$70785, %edi
	call	__m3_fault
L4963:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_u8
	.private_extern _A__uDivide_param_u8_u8
_A__uDivide_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_u8
	.private_extern _A__Divide_param_u8_u8
_A__Divide_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4968
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4968
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4968:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4969
	cmpq	$127, -16(%rbp)
	jle	L4970
L4969:
	movl	$70849, %edi
	call	__m3_fault
L4970:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_C
	.private_extern _A__uDivide_var_u8_C
_A__uDivide_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_C
	.private_extern _A__Divide_var_u8_C
_A__Divide_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4975
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4975
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4975:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4976
	cmpq	$127, -16(%rbp)
	jle	L4977
L4976:
	movl	$70913, %edi
	call	__m3_fault
L4977:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_C
	.private_extern _A__uDivide_param_u8_C
_A__uDivide_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u8_C
	.private_extern _A__Divide_param_u8_C
_A__Divide_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L4982
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L4982
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L4982:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4983
	cmpq	$127, -16(%rbp)
	jle	L4984
L4983:
	movl	$70977, %edi
	call	__m3_fault
L4984:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_u32
	.private_extern _A__uDivide_var_u8_u32
_A__uDivide_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_u32
	.private_extern _A__Divide_var_u8_u32
_A__Divide_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L4989
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L4989
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L4989:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4990
	cmpq	$127, -16(%rbp)
	jle	L4991
L4990:
	movl	$71041, %edi
	call	__m3_fault
L4991:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_u32
	.private_extern _A__uDivide_param_u8_u32
_A__uDivide_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_u32
	.private_extern _A__Divide_param_u8_u32
_A__Divide_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L4996
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L4996
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L4996:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L4997
	cmpq	$127, -16(%rbp)
	jle	L4998
L4997:
	movl	$71105, %edi
	call	__m3_fault
L4998:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_i8
	.private_extern _A__uDivide_var_u8_i8
_A__uDivide_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_i8
	.private_extern _A__Divide_var_u8_i8
_A__Divide_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5003
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5003
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5003:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5004
	cmpq	$127, -16(%rbp)
	jle	L5005
L5004:
	movl	$71169, %edi
	call	__m3_fault
L5005:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_i8
	.private_extern _A__uDivide_param_u8_i8
_A__uDivide_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_i8
	.private_extern _A__Divide_param_u8_i8
_A__Divide_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5010
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5010
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5010:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5011
	cmpq	$127, -16(%rbp)
	jle	L5012
L5011:
	movl	$71233, %edi
	call	__m3_fault
L5012:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_L
	.private_extern _A__uDivide_var_u8_L
_A__uDivide_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_L
	.private_extern _A__Divide_var_u8_L
_A__Divide_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5017
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5017
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5017:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_L
	.private_extern _A__uDivide_param_u8_L
_A__uDivide_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_L
	.private_extern _A__Divide_param_u8_L
_A__Divide_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5022
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5022
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5022:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_u64
	.private_extern _A__uDivide_var_u8_u64
_A__uDivide_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_u64
	.private_extern _A__Divide_var_u8_u64
_A__Divide_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5027
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5027
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5027:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_u64
	.private_extern _A__uDivide_param_u8_u64
_A__uDivide_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_u64
	.private_extern _A__Divide_param_u8_u64
_A__Divide_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5032
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5032
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5032:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_u16
	.private_extern _A__uDivide_var_u8_u16
_A__uDivide_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_u16
	.private_extern _A__Divide_var_u8_u16
_A__Divide_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5037
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5037
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5037:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5038
	cmpq	$127, -16(%rbp)
	jle	L5039
L5038:
	movl	$71553, %edi
	call	__m3_fault
L5039:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_u16
	.private_extern _A__uDivide_param_u8_u16
_A__uDivide_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_u16
	.private_extern _A__Divide_param_u8_u16
_A__Divide_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5044
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5044
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5044:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5045
	cmpq	$127, -16(%rbp)
	jle	L5046
L5045:
	movl	$71617, %edi
	call	__m3_fault
L5046:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u8_i32
	.private_extern _A__uDivide_var_u8_i32
_A__uDivide_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u8_i32
	.private_extern _A__Divide_var_u8_i32
_A__Divide_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5051
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5051
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5051:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5052
	cmpq	$127, -16(%rbp)
	jle	L5053
L5052:
	movl	$71681, %edi
	call	__m3_fault
L5053:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u8_i32
	.private_extern _A__uDivide_param_u8_i32
_A__uDivide_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u8_i32
	.private_extern _A__Divide_param_u8_i32
_A__Divide_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5058
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5058
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5058:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L5059
	cmpq	$127, -16(%rbp)
	jle	L5060
L5059:
	movl	$71745, %edi
	call	__m3_fault
L5060:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_i16
	.private_extern _A__uDivide_var_C_i16
_A__uDivide_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_i16
	.private_extern _A__Divide_var_C_i16
_A__Divide_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5065
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5065
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5065:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5066
	movl	$71809, %edi
	call	__m3_fault
L5066:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_i16
	.private_extern _A__uDivide_param_C_i16
_A__uDivide_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_i16
	.private_extern _A__Divide_param_C_i16
_A__Divide_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5071
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5071
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5071:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5072
	movl	$71873, %edi
	call	__m3_fault
L5072:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_LC
	.private_extern _A__uDivide_var_C_LC
_A__uDivide_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_LC
	.private_extern _A__Divide_var_C_LC
_A__Divide_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5077
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5077
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5077:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_LC
	.private_extern _A__uDivide_param_C_LC
_A__uDivide_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_C_LC
	.private_extern _A__Divide_param_C_LC
_A__Divide_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5082
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5082
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5082:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_i64
	.private_extern _A__uDivide_var_C_i64
_A__uDivide_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_i64
	.private_extern _A__Divide_var_C_i64
_A__Divide_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5087
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5087
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5087:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_i64
	.private_extern _A__uDivide_param_C_i64
_A__uDivide_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_i64
	.private_extern _A__Divide_param_C_i64
_A__Divide_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5092
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5092
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5092:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_I
	.private_extern _A__uDivide_var_C_I
_A__uDivide_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_I
	.private_extern _A__Divide_var_C_I
_A__Divide_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5097
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5097
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5097:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5098
	movl	$72193, %edi
	call	__m3_fault
L5098:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_I
	.private_extern _A__uDivide_param_C_I
_A__uDivide_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_I
	.private_extern _A__Divide_param_C_I
_A__Divide_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5103
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5103
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5103:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5104
	movl	$72257, %edi
	call	__m3_fault
L5104:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_u8
	.private_extern _A__uDivide_var_C_u8
_A__uDivide_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_u8
	.private_extern _A__Divide_var_C_u8
_A__Divide_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5109
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5109
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5109:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5110
	movl	$72321, %edi
	call	__m3_fault
L5110:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_u8
	.private_extern _A__uDivide_param_C_u8
_A__uDivide_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_u8
	.private_extern _A__Divide_param_C_u8
_A__Divide_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5115
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5115
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5115:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5116
	movl	$72385, %edi
	call	__m3_fault
L5116:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_C
	.private_extern _A__uDivide_var_C_C
_A__uDivide_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_C
	.private_extern _A__Divide_var_C_C
_A__Divide_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5121
	movl	$72449, %edi
	call	__m3_fault
L5121:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_C
	.private_extern _A__uDivide_param_C_C
_A__uDivide_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_C_C
	.private_extern _A__Divide_param_C_C
_A__Divide_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5126
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5126
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5126:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5127
	movl	$72513, %edi
	call	__m3_fault
L5127:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_u32
	.private_extern _A__uDivide_var_C_u32
_A__uDivide_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_u32
	.private_extern _A__Divide_var_C_u32
_A__Divide_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5132
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5132
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5132:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5133
	movl	$72577, %edi
	call	__m3_fault
L5133:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_u32
	.private_extern _A__uDivide_param_C_u32
_A__uDivide_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_u32
	.private_extern _A__Divide_param_C_u32
_A__Divide_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5138
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5138
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5138:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5139
	movl	$72641, %edi
	call	__m3_fault
L5139:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_i8
	.private_extern _A__uDivide_var_C_i8
_A__uDivide_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_i8
	.private_extern _A__Divide_var_C_i8
_A__Divide_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5144
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5144
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5144:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5145
	movl	$72705, %edi
	call	__m3_fault
L5145:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_i8
	.private_extern _A__uDivide_param_C_i8
_A__uDivide_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_i8
	.private_extern _A__Divide_param_C_i8
_A__Divide_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5150
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5150
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5150:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5151
	movl	$72769, %edi
	call	__m3_fault
L5151:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_L
	.private_extern _A__uDivide_var_C_L
_A__uDivide_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_L
	.private_extern _A__Divide_var_C_L
_A__Divide_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5156
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5156
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5156:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_L
	.private_extern _A__uDivide_param_C_L
_A__uDivide_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_L
	.private_extern _A__Divide_param_C_L
_A__Divide_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5161
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5161
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5161:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_u64
	.private_extern _A__uDivide_var_C_u64
_A__uDivide_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_u64
	.private_extern _A__Divide_var_C_u64
_A__Divide_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5166
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5166
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5166:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_u64
	.private_extern _A__uDivide_param_C_u64
_A__uDivide_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_u64
	.private_extern _A__Divide_param_C_u64
_A__Divide_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5171
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5171
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5171:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_u16
	.private_extern _A__uDivide_var_C_u16
_A__uDivide_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_u16
	.private_extern _A__Divide_var_C_u16
_A__Divide_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5176
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5176
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5176:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5177
	movl	$73089, %edi
	call	__m3_fault
L5177:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_u16
	.private_extern _A__uDivide_param_C_u16
_A__uDivide_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_u16
	.private_extern _A__Divide_param_C_u16
_A__Divide_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5182
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5182
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5182:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5183
	movl	$73153, %edi
	call	__m3_fault
L5183:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_C_i32
	.private_extern _A__uDivide_var_C_i32
_A__uDivide_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_C_i32
	.private_extern _A__Divide_var_C_i32
_A__Divide_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5188
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5188
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5188:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5189
	movl	$73217, %edi
	call	__m3_fault
L5189:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_C_i32
	.private_extern _A__uDivide_param_C_i32
_A__uDivide_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	leave
	ret
.globl _A__Divide_param_C_i32
	.private_extern _A__Divide_param_C_i32
_A__Divide_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5194
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5194
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5194:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L5195
	movl	$73281, %edi
	call	__m3_fault
L5195:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_f32_f32
	.private_extern _A__Divide_var_f32_f32
_A__Divide_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	movaps	%xmm1, %xmm2
	divss	%xmm0, %xmm2
	movaps	%xmm2, %xmm0
	leave
	ret
.globl _A__Divide_param_f32_f32
	.private_extern _A__Divide_param_f32_f32
_A__Divide_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	divss	-24(%rbp), %xmm0
	leave
	ret
.globl _A__uDivide_var_u32_i16
	.private_extern _A__uDivide_var_u32_i16
_A__uDivide_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_i16
	.private_extern _A__Divide_var_u32_i16
_A__Divide_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5204
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5204
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5204:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5205
	cmpq	$2147483647, -16(%rbp)
	jle	L5206
L5205:
	movl	$73409, %edi
	call	__m3_fault
L5206:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_i16
	.private_extern _A__uDivide_param_u32_i16
_A__uDivide_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzwl	-22(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_i16
	.private_extern _A__Divide_param_u32_i16
_A__Divide_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movzwl	-22(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5211
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5211
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5211:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5212
	cmpq	$2147483647, -16(%rbp)
	jle	L5213
L5212:
	movl	$73473, %edi
	call	__m3_fault
L5213:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_LC
	.private_extern _A__uDivide_var_u32_LC
_A__uDivide_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_LC
	.private_extern _A__Divide_var_u32_LC
_A__Divide_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5218
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5218
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5218:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_LC
	.private_extern _A__uDivide_param_u32_LC
_A__uDivide_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u32_LC
	.private_extern _A__Divide_param_u32_LC
_A__Divide_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5223
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5223
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5223:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_i64
	.private_extern _A__uDivide_var_u32_i64
_A__uDivide_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_i64
	.private_extern _A__Divide_var_u32_i64
_A__Divide_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5228
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5228
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5228:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_i64
	.private_extern _A__uDivide_param_u32_i64
_A__uDivide_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_i64
	.private_extern _A__Divide_param_u32_i64
_A__Divide_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5233
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5233
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5233:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_I
	.private_extern _A__uDivide_var_u32_I
_A__uDivide_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_I
	.private_extern _A__Divide_var_u32_I
_A__Divide_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5238
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5238
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5238:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5239
	cmpq	$2147483647, -16(%rbp)
	jle	L5240
L5239:
	movl	$73793, %edi
	call	__m3_fault
L5240:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_I
	.private_extern _A__uDivide_param_u32_I
_A__uDivide_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_I
	.private_extern _A__Divide_param_u32_I
_A__Divide_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5245
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5245
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5245:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5246
	cmpq	$2147483647, -16(%rbp)
	jle	L5247
L5246:
	movl	$73857, %edi
	call	__m3_fault
L5247:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_u8
	.private_extern _A__uDivide_var_u32_u8
_A__uDivide_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_u8
	.private_extern _A__Divide_var_u32_u8
_A__Divide_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5252
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5252
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5252:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5253
	cmpq	$2147483647, -16(%rbp)
	jle	L5254
L5253:
	movl	$73921, %edi
	call	__m3_fault
L5254:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_u8
	.private_extern _A__uDivide_param_u32_u8
_A__uDivide_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movsbq	-21(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_u8
	.private_extern _A__Divide_param_u32_u8
_A__Divide_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movsbq	-21(%rbp),%rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5259
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5259
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5259:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5260
	cmpq	$2147483647, -16(%rbp)
	jle	L5261
L5260:
	movl	$73985, %edi
	call	__m3_fault
L5261:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_C
	.private_extern _A__uDivide_var_u32_C
_A__uDivide_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_C
	.private_extern _A__Divide_var_u32_C
_A__Divide_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5266
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5266
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5266:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5267
	cmpq	$2147483647, -16(%rbp)
	jle	L5268
L5267:
	movl	$74049, %edi
	call	__m3_fault
L5268:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_C
	.private_extern _A__uDivide_param_u32_C
_A__uDivide_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u32_C
	.private_extern _A__Divide_param_u32_C
_A__Divide_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5273
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5273
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5273:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5274
	cmpq	$2147483647, -16(%rbp)
	jle	L5275
L5274:
	movl	$74113, %edi
	call	__m3_fault
L5275:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_u32
	.private_extern _A__uDivide_var_u32_u32
_A__uDivide_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_u32
	.private_extern _A__Divide_var_u32_u32
_A__Divide_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5280
	cmpq	$2147483647, -16(%rbp)
	jle	L5281
L5280:
	movl	$74177, %edi
	call	__m3_fault
L5281:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_u32
	.private_extern _A__uDivide_param_u32_u32
_A__uDivide_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_u32
	.private_extern _A__Divide_param_u32_u32
_A__Divide_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5286
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5286
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5286:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5287
	cmpq	$2147483647, -16(%rbp)
	jle	L5288
L5287:
	movl	$74241, %edi
	call	__m3_fault
L5288:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_i8
	.private_extern _A__uDivide_var_u32_i8
_A__uDivide_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_i8
	.private_extern _A__Divide_var_u32_i8
_A__Divide_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5293
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5293
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5293:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5294
	cmpq	$2147483647, -16(%rbp)
	jle	L5295
L5294:
	movl	$74305, %edi
	call	__m3_fault
L5295:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_i8
	.private_extern _A__uDivide_param_u32_i8
_A__uDivide_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzbl	-21(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_i8
	.private_extern _A__Divide_param_u32_i8
_A__Divide_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movzbl	-21(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5300
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5300
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5300:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5301
	cmpq	$2147483647, -16(%rbp)
	jle	L5302
L5301:
	movl	$74369, %edi
	call	__m3_fault
L5302:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_L
	.private_extern _A__uDivide_var_u32_L
_A__uDivide_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_L
	.private_extern _A__Divide_var_u32_L
_A__Divide_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5307
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5307
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5307:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_L
	.private_extern _A__uDivide_param_u32_L
_A__uDivide_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_L
	.private_extern _A__Divide_param_u32_L
_A__Divide_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5312
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5312
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5312:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_u64
	.private_extern _A__uDivide_var_u32_u64
_A__uDivide_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_u64
	.private_extern _A__Divide_var_u32_u64
_A__Divide_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5317
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5317
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5317:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_u64
	.private_extern _A__uDivide_param_u32_u64
_A__uDivide_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_u64
	.private_extern _A__Divide_param_u32_u64
_A__Divide_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5322
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5322
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5322:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_u16
	.private_extern _A__uDivide_var_u32_u16
_A__uDivide_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_u16
	.private_extern _A__Divide_var_u32_u16
_A__Divide_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5327
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5327
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5327:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5328
	cmpq	$2147483647, -16(%rbp)
	jle	L5329
L5328:
	movl	$74689, %edi
	call	__m3_fault
L5329:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_u16
	.private_extern _A__uDivide_param_u32_u16
_A__uDivide_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movswq	-22(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_u16
	.private_extern _A__Divide_param_u32_u16
_A__Divide_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movswq	-22(%rbp),%rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5334
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5334
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5334:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5335
	cmpq	$2147483647, -16(%rbp)
	jle	L5336
L5335:
	movl	$74753, %edi
	call	__m3_fault
L5336:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u32_i32
	.private_extern _A__uDivide_var_u32_i32
_A__uDivide_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u32_i32
	.private_extern _A__Divide_var_u32_i32
_A__Divide_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5341
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5341
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5341:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5342
	cmpq	$2147483647, -16(%rbp)
	jle	L5343
L5342:
	movl	$74817, %edi
	call	__m3_fault
L5343:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u32_i32
	.private_extern _A__uDivide_param_u32_i32
_A__uDivide_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u32_i32
	.private_extern _A__Divide_param_u32_i32
_A__Divide_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5348
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5348
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5348:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L5349
	cmpq	$2147483647, -16(%rbp)
	jle	L5350
L5349:
	movl	$74881, %edi
	call	__m3_fault
L5350:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_i16
	.private_extern _A__uDivide_var_i8_i16
_A__uDivide_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_i16
	.private_extern _A__Divide_var_i8_i16
_A__Divide_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5355
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5355
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5355:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5356
	cmpq	$255, -16(%rbp)
	jle	L5357
L5356:
	movl	$74945, %edi
	call	__m3_fault
L5357:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_i16
	.private_extern _A__uDivide_param_i8_i16
_A__uDivide_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_i16
	.private_extern _A__Divide_param_i8_i16
_A__Divide_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5362
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5362
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5362:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5363
	cmpq	$255, -16(%rbp)
	jle	L5364
L5363:
	movl	$75009, %edi
	call	__m3_fault
L5364:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_LC
	.private_extern _A__uDivide_var_i8_LC
_A__uDivide_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_LC
	.private_extern _A__Divide_var_i8_LC
_A__Divide_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5369
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5369
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5369:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_LC
	.private_extern _A__uDivide_param_i8_LC
_A__uDivide_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i8_LC
	.private_extern _A__Divide_param_i8_LC
_A__Divide_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5374
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5374
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5374:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_i64
	.private_extern _A__uDivide_var_i8_i64
_A__uDivide_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_i64
	.private_extern _A__Divide_var_i8_i64
_A__Divide_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5379
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5379
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5379:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_i64
	.private_extern _A__uDivide_param_i8_i64
_A__uDivide_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_i64
	.private_extern _A__Divide_param_i8_i64
_A__Divide_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5384
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5384
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5384:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_I
	.private_extern _A__uDivide_var_i8_I
_A__uDivide_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_I
	.private_extern _A__Divide_var_i8_I
_A__Divide_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5389
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5389
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5389:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5390
	cmpq	$255, -16(%rbp)
	jle	L5391
L5390:
	movl	$75329, %edi
	call	__m3_fault
L5391:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_I
	.private_extern _A__uDivide_param_i8_I
_A__uDivide_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_I
	.private_extern _A__Divide_param_i8_I
_A__Divide_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5396
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5396
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5396:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5397
	cmpq	$255, -16(%rbp)
	jle	L5398
L5397:
	movl	$75393, %edi
	call	__m3_fault
L5398:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_u8
	.private_extern _A__uDivide_var_i8_u8
_A__uDivide_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_u8
	.private_extern _A__Divide_var_i8_u8
_A__Divide_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5403
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5403
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5403:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5404
	cmpq	$255, -16(%rbp)
	jle	L5405
L5404:
	movl	$75457, %edi
	call	__m3_fault
L5405:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_u8
	.private_extern _A__uDivide_param_i8_u8
_A__uDivide_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_u8
	.private_extern _A__Divide_param_i8_u8
_A__Divide_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5410
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5410
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5410:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5411
	cmpq	$255, -16(%rbp)
	jle	L5412
L5411:
	movl	$75521, %edi
	call	__m3_fault
L5412:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_C
	.private_extern _A__uDivide_var_i8_C
_A__uDivide_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_C
	.private_extern _A__Divide_var_i8_C
_A__Divide_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5417
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5417
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5417:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5418
	cmpq	$255, -16(%rbp)
	jle	L5419
L5418:
	movl	$75585, %edi
	call	__m3_fault
L5419:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_C
	.private_extern _A__uDivide_param_i8_C
_A__uDivide_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i8_C
	.private_extern _A__Divide_param_i8_C
_A__Divide_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5424
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5424
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5424:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5425
	cmpq	$255, -16(%rbp)
	jle	L5426
L5425:
	movl	$75649, %edi
	call	__m3_fault
L5426:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_u32
	.private_extern _A__uDivide_var_i8_u32
_A__uDivide_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_u32
	.private_extern _A__Divide_var_i8_u32
_A__Divide_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5431
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5431
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5431:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5432
	cmpq	$255, -16(%rbp)
	jle	L5433
L5432:
	movl	$75713, %edi
	call	__m3_fault
L5433:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_u32
	.private_extern _A__uDivide_param_i8_u32
_A__uDivide_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_u32
	.private_extern _A__Divide_param_i8_u32
_A__Divide_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5438
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5438
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5438:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5439
	cmpq	$255, -16(%rbp)
	jle	L5440
L5439:
	movl	$75777, %edi
	call	__m3_fault
L5440:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_i8
	.private_extern _A__uDivide_var_i8_i8
_A__uDivide_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_i8
	.private_extern _A__Divide_var_i8_i8
_A__Divide_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5445
	cmpq	$255, -16(%rbp)
	jle	L5446
L5445:
	movl	$75841, %edi
	call	__m3_fault
L5446:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_i8
	.private_extern _A__uDivide_param_i8_i8
_A__uDivide_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_i8
	.private_extern _A__Divide_param_i8_i8
_A__Divide_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5451
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5451
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5451:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5452
	cmpq	$255, -16(%rbp)
	jle	L5453
L5452:
	movl	$75905, %edi
	call	__m3_fault
L5453:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_L
	.private_extern _A__uDivide_var_i8_L
_A__uDivide_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_L
	.private_extern _A__Divide_var_i8_L
_A__Divide_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5458
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5458
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5458:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_L
	.private_extern _A__uDivide_param_i8_L
_A__uDivide_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_L
	.private_extern _A__Divide_param_i8_L
_A__Divide_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5463
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5463
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5463:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_u64
	.private_extern _A__uDivide_var_i8_u64
_A__uDivide_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_u64
	.private_extern _A__Divide_var_i8_u64
_A__Divide_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5468
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5468
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5468:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_u64
	.private_extern _A__uDivide_param_i8_u64
_A__uDivide_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_u64
	.private_extern _A__Divide_param_i8_u64
_A__Divide_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5473
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5473
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5473:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_u16
	.private_extern _A__uDivide_var_i8_u16
_A__uDivide_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_u16
	.private_extern _A__Divide_var_i8_u16
_A__Divide_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5478
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5478
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5478:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5479
	cmpq	$255, -16(%rbp)
	jle	L5480
L5479:
	movl	$76225, %edi
	call	__m3_fault
L5480:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_u16
	.private_extern _A__uDivide_param_i8_u16
_A__uDivide_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_u16
	.private_extern _A__Divide_param_i8_u16
_A__Divide_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5485
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5485
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5485:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5486
	cmpq	$255, -16(%rbp)
	jle	L5487
L5486:
	movl	$76289, %edi
	call	__m3_fault
L5487:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i8_i32
	.private_extern _A__uDivide_var_i8_i32
_A__uDivide_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i8_i32
	.private_extern _A__Divide_var_i8_i32
_A__Divide_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5492
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5492
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5492:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5493
	cmpq	$255, -16(%rbp)
	jle	L5494
L5493:
	movl	$76353, %edi
	call	__m3_fault
L5494:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i8_i32
	.private_extern _A__uDivide_param_i8_i32
_A__uDivide_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i8_i32
	.private_extern _A__Divide_param_i8_i32
_A__Divide_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5499
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5499
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5499:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5500
	cmpq	$255, -16(%rbp)
	jle	L5501
L5500:
	movl	$76417, %edi
	call	__m3_fault
L5501:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_i16
	.private_extern _A__uDivide_var_L_i16
_A__uDivide_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_i16
	.private_extern _A__Divide_var_L_i16
_A__Divide_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5506
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5506
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5506:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_i16
	.private_extern _A__uDivide_param_L_i16
_A__uDivide_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_i16
	.private_extern _A__Divide_param_L_i16
_A__Divide_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5511
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5511
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5511:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_LC
	.private_extern _A__uDivide_var_L_LC
_A__uDivide_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_LC
	.private_extern _A__Divide_var_L_LC
_A__Divide_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5516
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5516
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5516:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_LC
	.private_extern _A__uDivide_param_L_LC
_A__uDivide_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_L_LC
	.private_extern _A__Divide_param_L_LC
_A__Divide_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5521
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5521
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5521:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_i64
	.private_extern _A__uDivide_var_L_i64
_A__uDivide_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_i64
	.private_extern _A__Divide_var_L_i64
_A__Divide_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5526
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5526
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5526:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_i64
	.private_extern _A__uDivide_param_L_i64
_A__uDivide_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_i64
	.private_extern _A__Divide_param_L_i64
_A__Divide_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5531
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5531
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5531:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_I
	.private_extern _A__uDivide_var_L_I
_A__uDivide_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_I
	.private_extern _A__Divide_var_L_I
_A__Divide_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5536
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5536
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5536:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_I
	.private_extern _A__uDivide_param_L_I
_A__uDivide_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_I
	.private_extern _A__Divide_param_L_I
_A__Divide_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5541
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5541
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5541:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_u8
	.private_extern _A__uDivide_var_L_u8
_A__uDivide_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_u8
	.private_extern _A__Divide_var_L_u8
_A__Divide_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5546
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5546
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5546:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_u8
	.private_extern _A__uDivide_param_L_u8
_A__uDivide_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_u8
	.private_extern _A__Divide_param_L_u8
_A__Divide_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5551
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5551
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5551:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_C
	.private_extern _A__uDivide_var_L_C
_A__uDivide_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_C
	.private_extern _A__Divide_var_L_C
_A__Divide_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5556
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5556
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5556:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_C
	.private_extern _A__uDivide_param_L_C
_A__uDivide_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_L_C
	.private_extern _A__Divide_param_L_C
_A__Divide_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5561
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5561
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5561:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_u32
	.private_extern _A__uDivide_var_L_u32
_A__uDivide_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_u32
	.private_extern _A__Divide_var_L_u32
_A__Divide_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5566
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5566
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5566:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_u32
	.private_extern _A__uDivide_param_L_u32
_A__uDivide_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_u32
	.private_extern _A__Divide_param_L_u32
_A__Divide_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5571
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5571
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5571:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_i8
	.private_extern _A__uDivide_var_L_i8
_A__uDivide_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_i8
	.private_extern _A__Divide_var_L_i8
_A__Divide_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5576
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5576
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5576:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_i8
	.private_extern _A__uDivide_param_L_i8
_A__uDivide_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_i8
	.private_extern _A__Divide_param_L_i8
_A__Divide_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5581
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5581
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5581:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_L
	.private_extern _A__uDivide_var_L_L
_A__uDivide_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_L
	.private_extern _A__Divide_var_L_L
_A__Divide_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	leave
	ret
.globl _A__uDivide_param_L_L
	.private_extern _A__uDivide_param_L_L
_A__uDivide_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_L
	.private_extern _A__Divide_param_L_L
_A__Divide_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5590
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5590
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5590:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_u64
	.private_extern _A__uDivide_var_L_u64
_A__uDivide_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_u64
	.private_extern _A__Divide_var_L_u64
_A__Divide_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5595
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5595
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5595:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_u64
	.private_extern _A__uDivide_param_L_u64
_A__uDivide_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_u64
	.private_extern _A__Divide_param_L_u64
_A__Divide_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5600
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5600
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5600:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_u16
	.private_extern _A__uDivide_var_L_u16
_A__uDivide_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_u16
	.private_extern _A__Divide_var_L_u16
_A__Divide_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5605
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5605
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5605:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_u16
	.private_extern _A__uDivide_param_L_u16
_A__uDivide_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_u16
	.private_extern _A__Divide_param_L_u16
_A__Divide_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5610
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5610
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5610:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_L_i32
	.private_extern _A__uDivide_var_L_i32
_A__uDivide_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_L_i32
	.private_extern _A__Divide_var_L_i32
_A__Divide_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5615
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5615
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5615:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_L_i32
	.private_extern _A__uDivide_param_L_i32
_A__uDivide_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_L_i32
	.private_extern _A__Divide_param_L_i32
_A__Divide_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5620
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5620
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5620:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_i16
	.private_extern _A__uDivide_var_u64_i16
_A__uDivide_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_i16
	.private_extern _A__Divide_var_u64_i16
_A__Divide_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5625
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5625
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5625:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_i16
	.private_extern _A__uDivide_param_u64_i16
_A__uDivide_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_i16
	.private_extern _A__Divide_param_u64_i16
_A__Divide_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5630
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5630
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5630:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_LC
	.private_extern _A__uDivide_var_u64_LC
_A__uDivide_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_LC
	.private_extern _A__Divide_var_u64_LC
_A__Divide_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5635
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5635
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5635:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_LC
	.private_extern _A__uDivide_param_u64_LC
_A__uDivide_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u64_LC
	.private_extern _A__Divide_param_u64_LC
_A__Divide_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5640
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5640
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5640:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_i64
	.private_extern _A__uDivide_var_u64_i64
_A__uDivide_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_i64
	.private_extern _A__Divide_var_u64_i64
_A__Divide_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5645
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5645
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5645:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_i64
	.private_extern _A__uDivide_param_u64_i64
_A__uDivide_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_i64
	.private_extern _A__Divide_param_u64_i64
_A__Divide_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5650
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5650
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5650:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_I
	.private_extern _A__uDivide_var_u64_I
_A__uDivide_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_I
	.private_extern _A__Divide_var_u64_I
_A__Divide_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5655
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5655
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5655:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_I
	.private_extern _A__uDivide_param_u64_I
_A__uDivide_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_I
	.private_extern _A__Divide_param_u64_I
_A__Divide_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5660
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5660
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5660:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_u8
	.private_extern _A__uDivide_var_u64_u8
_A__uDivide_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_u8
	.private_extern _A__Divide_var_u64_u8
_A__Divide_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5665
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5665
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5665:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_u8
	.private_extern _A__uDivide_param_u64_u8
_A__uDivide_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_u8
	.private_extern _A__Divide_param_u64_u8
_A__Divide_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5670
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5670
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5670:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_C
	.private_extern _A__uDivide_var_u64_C
_A__uDivide_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_C
	.private_extern _A__Divide_var_u64_C
_A__Divide_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5675
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5675
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5675:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_C
	.private_extern _A__uDivide_param_u64_C
_A__uDivide_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u64_C
	.private_extern _A__Divide_param_u64_C
_A__Divide_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5680
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5680
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5680:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_u32
	.private_extern _A__uDivide_var_u64_u32
_A__uDivide_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_u32
	.private_extern _A__Divide_var_u64_u32
_A__Divide_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5685
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5685
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5685:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_u32
	.private_extern _A__uDivide_param_u64_u32
_A__uDivide_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_u32
	.private_extern _A__Divide_param_u64_u32
_A__Divide_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5690
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5690
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5690:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_i8
	.private_extern _A__uDivide_var_u64_i8
_A__uDivide_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_i8
	.private_extern _A__Divide_var_u64_i8
_A__Divide_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5695
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5695
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5695:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_i8
	.private_extern _A__uDivide_param_u64_i8
_A__uDivide_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_i8
	.private_extern _A__Divide_param_u64_i8
_A__Divide_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5700
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5700
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5700:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_L
	.private_extern _A__uDivide_var_u64_L
_A__uDivide_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_L
	.private_extern _A__Divide_var_u64_L
_A__Divide_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5705
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5705
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5705:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_L
	.private_extern _A__uDivide_param_u64_L
_A__uDivide_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_L
	.private_extern _A__Divide_param_u64_L
_A__Divide_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5710
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5710
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5710:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_u64
	.private_extern _A__uDivide_var_u64_u64
_A__uDivide_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_u64
	.private_extern _A__Divide_var_u64_u64
_A__Divide_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	leave
	ret
.globl _A__uDivide_param_u64_u64
	.private_extern _A__uDivide_param_u64_u64
_A__uDivide_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_u64
	.private_extern _A__Divide_param_u64_u64
_A__Divide_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5719
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	xorq	%rdx, %rax
	testq	%rax, %rax
	jns	L5719
	subq	$1, -40(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L5719:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_u16
	.private_extern _A__uDivide_var_u64_u16
_A__uDivide_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_u16
	.private_extern _A__Divide_var_u64_u16
_A__Divide_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5724
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5724
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5724:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_u16
	.private_extern _A__uDivide_param_u64_u16
_A__uDivide_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_u16
	.private_extern _A__Divide_param_u64_u16
_A__Divide_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5729
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5729
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5729:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u64_i32
	.private_extern _A__uDivide_var_u64_i32
_A__uDivide_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u64_i32
	.private_extern _A__Divide_var_u64_i32
_A__Divide_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5734
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5734
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5734:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u64_i32
	.private_extern _A__uDivide_param_u64_i32
_A__uDivide_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u64_i32
	.private_extern _A__Divide_param_u64_i32
_A__Divide_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -72(%rbp)
	movq	-72(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5739
	movq	-40(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5739
	subq	$1, -48(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L5739:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_i16
	.private_extern _A__uDivide_var_u16_i16
_A__uDivide_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_i16
	.private_extern _A__Divide_var_u16_i16
_A__Divide_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5744
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5744
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5744:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5745
	cmpq	$32767, -16(%rbp)
	jle	L5746
L5745:
	movl	$79553, %edi
	call	__m3_fault
L5746:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_i16
	.private_extern _A__uDivide_param_u16_i16
_A__uDivide_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_i16
	.private_extern _A__Divide_param_u16_i16
_A__Divide_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5751
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5751
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5751:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5752
	cmpq	$32767, -16(%rbp)
	jle	L5753
L5752:
	movl	$79617, %edi
	call	__m3_fault
L5753:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_LC
	.private_extern _A__uDivide_var_u16_LC
_A__uDivide_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_LC
	.private_extern _A__Divide_var_u16_LC
_A__Divide_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5758
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5758
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5758:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_LC
	.private_extern _A__uDivide_param_u16_LC
_A__uDivide_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u16_LC
	.private_extern _A__Divide_param_u16_LC
_A__Divide_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5763
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5763
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5763:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_i64
	.private_extern _A__uDivide_var_u16_i64
_A__uDivide_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_i64
	.private_extern _A__Divide_var_u16_i64
_A__Divide_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5768
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5768
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5768:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_i64
	.private_extern _A__uDivide_param_u16_i64
_A__uDivide_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_i64
	.private_extern _A__Divide_param_u16_i64
_A__Divide_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5773
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5773
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5773:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_I
	.private_extern _A__uDivide_var_u16_I
_A__uDivide_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_I
	.private_extern _A__Divide_var_u16_I
_A__Divide_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5778
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5778
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5778:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5779
	cmpq	$32767, -16(%rbp)
	jle	L5780
L5779:
	movl	$79937, %edi
	call	__m3_fault
L5780:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_I
	.private_extern _A__uDivide_param_u16_I
_A__uDivide_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_I
	.private_extern _A__Divide_param_u16_I
_A__Divide_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5785
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5785
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5785:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5786
	cmpq	$32767, -16(%rbp)
	jle	L5787
L5786:
	movl	$80001, %edi
	call	__m3_fault
L5787:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_u8
	.private_extern _A__uDivide_var_u16_u8
_A__uDivide_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_u8
	.private_extern _A__Divide_var_u16_u8
_A__Divide_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5792
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5792
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5792:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5793
	cmpq	$32767, -16(%rbp)
	jle	L5794
L5793:
	movl	$80065, %edi
	call	__m3_fault
L5794:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_u8
	.private_extern _A__uDivide_param_u16_u8
_A__uDivide_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_u8
	.private_extern _A__Divide_param_u16_u8
_A__Divide_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5799
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5799
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5799:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5800
	cmpq	$32767, -16(%rbp)
	jle	L5801
L5800:
	movl	$80129, %edi
	call	__m3_fault
L5801:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_C
	.private_extern _A__uDivide_var_u16_C
_A__uDivide_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_C
	.private_extern _A__Divide_var_u16_C
_A__Divide_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5806
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5806
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5806:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5807
	cmpq	$32767, -16(%rbp)
	jle	L5808
L5807:
	movl	$80193, %edi
	call	__m3_fault
L5808:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_C
	.private_extern _A__uDivide_param_u16_C
_A__uDivide_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_u16_C
	.private_extern _A__Divide_param_u16_C
_A__Divide_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5813
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5813
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5813:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5814
	cmpq	$32767, -16(%rbp)
	jle	L5815
L5814:
	movl	$80257, %edi
	call	__m3_fault
L5815:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_u32
	.private_extern _A__uDivide_var_u16_u32
_A__uDivide_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_u32
	.private_extern _A__Divide_var_u16_u32
_A__Divide_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5820
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5820
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5820:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5821
	cmpq	$32767, -16(%rbp)
	jle	L5822
L5821:
	movl	$80321, %edi
	call	__m3_fault
L5822:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_u32
	.private_extern _A__uDivide_param_u16_u32
_A__uDivide_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_u32
	.private_extern _A__Divide_param_u16_u32
_A__Divide_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5827
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5827
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5827:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5828
	cmpq	$32767, -16(%rbp)
	jle	L5829
L5828:
	movl	$80385, %edi
	call	__m3_fault
L5829:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_i8
	.private_extern _A__uDivide_var_u16_i8
_A__uDivide_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_i8
	.private_extern _A__Divide_var_u16_i8
_A__Divide_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5834
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5834
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5834:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5835
	cmpq	$32767, -16(%rbp)
	jle	L5836
L5835:
	movl	$80449, %edi
	call	__m3_fault
L5836:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_i8
	.private_extern _A__uDivide_param_u16_i8
_A__uDivide_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_i8
	.private_extern _A__Divide_param_u16_i8
_A__Divide_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5841
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5841
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5841:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5842
	cmpq	$32767, -16(%rbp)
	jle	L5843
L5842:
	movl	$80513, %edi
	call	__m3_fault
L5843:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_L
	.private_extern _A__uDivide_var_u16_L
_A__uDivide_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_L
	.private_extern _A__Divide_var_u16_L
_A__Divide_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5848
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5848
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5848:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_L
	.private_extern _A__uDivide_param_u16_L
_A__uDivide_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_L
	.private_extern _A__Divide_param_u16_L
_A__Divide_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5853
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5853
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5853:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_u64
	.private_extern _A__uDivide_var_u16_u64
_A__uDivide_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_u64
	.private_extern _A__Divide_var_u16_u64
_A__Divide_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5858
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5858
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5858:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_u64
	.private_extern _A__uDivide_param_u16_u64
_A__uDivide_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_u64
	.private_extern _A__Divide_param_u16_u64
_A__Divide_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5863
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5863
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5863:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_u16
	.private_extern _A__uDivide_var_u16_u16
_A__uDivide_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_u16
	.private_extern _A__Divide_var_u16_u16
_A__Divide_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5868
	cmpq	$32767, -16(%rbp)
	jle	L5869
L5868:
	movl	$80833, %edi
	call	__m3_fault
L5869:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_u16
	.private_extern _A__uDivide_param_u16_u16
_A__uDivide_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_u16
	.private_extern _A__Divide_param_u16_u16
_A__Divide_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5874
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5874
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5874:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5875
	cmpq	$32767, -16(%rbp)
	jle	L5876
L5875:
	movl	$80897, %edi
	call	__m3_fault
L5876:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_u16_i32
	.private_extern _A__uDivide_var_u16_i32
_A__uDivide_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_u16_i32
	.private_extern _A__Divide_var_u16_i32
_A__Divide_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5881
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5881
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5881:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5882
	cmpq	$32767, -16(%rbp)
	jle	L5883
L5882:
	movl	$80961, %edi
	call	__m3_fault
L5883:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_u16_i32
	.private_extern _A__uDivide_param_u16_i32
_A__uDivide_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_u16_i32
	.private_extern _A__Divide_param_u16_i32
_A__Divide_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5888
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5888
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5888:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L5889
	cmpq	$32767, -16(%rbp)
	jle	L5890
L5889:
	movl	$81025, %edi
	call	__m3_fault
L5890:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_i16
	.private_extern _A__uDivide_var_i32_i16
_A__uDivide_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_i16
	.private_extern _A__Divide_var_i32_i16
_A__Divide_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5895
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5895
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5895:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5896
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5897
L5896:
	movl	$81089, %edi
	call	__m3_fault
L5897:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_i16
	.private_extern _A__uDivide_param_i32_i16
_A__uDivide_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzwl	-22(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_i16
	.private_extern _A__Divide_param_i32_i16
_A__Divide_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzwl	-22(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5902
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5902
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5902:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5903
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5904
L5903:
	movl	$81153, %edi
	call	__m3_fault
L5904:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_LC
	.private_extern _A__uDivide_var_i32_LC
_A__uDivide_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_LC
	.private_extern _A__Divide_var_i32_LC
_A__Divide_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5909
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5909
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5909:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_LC
	.private_extern _A__uDivide_param_i32_LC
_A__uDivide_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i32_LC
	.private_extern _A__Divide_param_i32_LC
_A__Divide_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5914
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5914
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5914:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_i64
	.private_extern _A__uDivide_var_i32_i64
_A__uDivide_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_i64
	.private_extern _A__Divide_var_i32_i64
_A__Divide_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5919
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5919
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5919:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_i64
	.private_extern _A__uDivide_param_i32_i64
_A__uDivide_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_i64
	.private_extern _A__Divide_param_i32_i64
_A__Divide_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5924
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5924
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5924:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_I
	.private_extern _A__uDivide_var_i32_I
_A__uDivide_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_I
	.private_extern _A__Divide_var_i32_I
_A__Divide_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5929
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5929
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5929:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5930
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5931
L5930:
	movl	$81473, %edi
	call	__m3_fault
L5931:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_I
	.private_extern _A__uDivide_param_i32_I
_A__uDivide_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_I
	.private_extern _A__Divide_param_i32_I
_A__Divide_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5936
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5936
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5936:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5937
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5938
L5937:
	movl	$81537, %edi
	call	__m3_fault
L5938:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_u8
	.private_extern _A__uDivide_var_i32_u8
_A__uDivide_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_u8
	.private_extern _A__Divide_var_i32_u8
_A__Divide_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5943
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5943
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5943:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5944
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5945
L5944:
	movl	$81601, %edi
	call	__m3_fault
L5945:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_u8
	.private_extern _A__uDivide_param_i32_u8
_A__uDivide_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movsbq	-21(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_u8
	.private_extern _A__Divide_param_i32_u8
_A__Divide_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-21(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5950
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5950
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5950:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5951
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5952
L5951:
	movl	$81665, %edi
	call	__m3_fault
L5952:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_C
	.private_extern _A__uDivide_var_i32_C
_A__uDivide_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_C
	.private_extern _A__Divide_var_i32_C
_A__Divide_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5957
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5957
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5957:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5958
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5959
L5958:
	movl	$81729, %edi
	call	__m3_fault
L5959:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_C
	.private_extern _A__uDivide_param_i32_C
_A__uDivide_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movl	$0, %edx
	divq	-32(%rbp)
	leave
	ret
.globl _A__Divide_param_i32_C
	.private_extern _A__Divide_param_i32_C
_A__Divide_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -64(%rbp)
	movq	%rax, -56(%rbp)
	cmpq	$0, -64(%rbp)
	je	L5964
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L5964
	subq	$1, -56(%rbp)
	movq	-40(%rbp), %rax
	addq	%rax, -64(%rbp)
L5964:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5965
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5966
L5965:
	movl	$81793, %edi
	call	__m3_fault
L5966:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_u32
	.private_extern _A__uDivide_var_i32_u32
_A__uDivide_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_u32
	.private_extern _A__Divide_var_i32_u32
_A__Divide_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5971
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5971
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5971:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5972
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5973
L5972:
	movl	$81857, %edi
	call	__m3_fault
L5973:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_u32
	.private_extern _A__uDivide_param_i32_u32
_A__uDivide_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_u32
	.private_extern _A__Divide_param_i32_u32
_A__Divide_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5978
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5978
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5978:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5979
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5980
L5979:
	movl	$81921, %edi
	call	__m3_fault
L5980:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_i8
	.private_extern _A__uDivide_var_i32_i8
_A__uDivide_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_i8
	.private_extern _A__Divide_var_i32_i8
_A__Divide_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5985
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5985
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5985:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5986
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5987
L5986:
	movl	$81985, %edi
	call	__m3_fault
L5987:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_i8
	.private_extern _A__uDivide_param_i32_i8
_A__uDivide_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-21(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_i8
	.private_extern _A__Divide_param_i32_i8
_A__Divide_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzbl	-21(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L5992
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L5992
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L5992:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L5993
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L5994
L5993:
	movl	$82049, %edi
	call	__m3_fault
L5994:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_L
	.private_extern _A__uDivide_var_i32_L
_A__uDivide_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_L
	.private_extern _A__Divide_var_i32_L
_A__Divide_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L5999
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L5999
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L5999:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_L
	.private_extern _A__uDivide_param_i32_L
_A__uDivide_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_L
	.private_extern _A__Divide_param_i32_L
_A__Divide_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6004
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6004
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L6004:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_u64
	.private_extern _A__uDivide_var_i32_u64
_A__uDivide_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_u64
	.private_extern _A__Divide_var_i32_u64
_A__Divide_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6009
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6009
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L6009:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_u64
	.private_extern _A__uDivide_param_i32_u64
_A__uDivide_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -64(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -56(%rbp)
	movq	-64(%rbp), %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_u64
	.private_extern _A__Divide_param_i32_u64
_A__Divide_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6014
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6014
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L6014:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_u16
	.private_extern _A__uDivide_var_i32_u16
_A__uDivide_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_u16
	.private_extern _A__Divide_var_i32_u16
_A__Divide_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rax, -40(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6019
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6019
	subq	$1, -40(%rbp)
	movq	-24(%rbp), %rax
	addq	%rax, -48(%rbp)
L6019:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6020
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L6021
L6020:
	movl	$82369, %edi
	call	__m3_fault
L6021:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_u16
	.private_extern _A__uDivide_param_i32_u16
_A__uDivide_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movswq	-22(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_u16
	.private_extern _A__Divide_param_i32_u16
_A__Divide_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-22(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6026
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6026
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L6026:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6027
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L6028
L6027:
	movl	$82433, %edi
	call	__m3_fault
L6028:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_var_i32_i32
	.private_extern _A__uDivide_var_i32_i32
_A__uDivide_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -48(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_var_i32_i32
	.private_extern _A__Divide_var_i32_i32
_A__Divide_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	-40(%rbp), %rdx
	movq	%rax, %rcx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	%rcx
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6033
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L6034
L6033:
	movl	$82497, %edi
	call	__m3_fault
L6034:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uDivide_param_i32_i32
	.private_extern _A__uDivide_param_i32_i32
_A__uDivide_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Divide_param_i32_i32
	.private_extern _A__Divide_param_i32_i32
_A__Divide_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -56(%rbp)
	movq	%rax, -48(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6039
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6039
	subq	$1, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	%rax, -56(%rbp)
L6039:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6040
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L6041
L6040:
	movl	$82561, %edi
	call	__m3_fault
L6041:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_i16
	.private_extern _A__uMod_var_i16_i16
_A__uMod_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_i16
	.private_extern _A__Mod_var_i16_i16
_A__Mod_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6046
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6046
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6046:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_i16
	.private_extern _A__uMod_param_i16_i16
_A__uMod_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_i16
	.private_extern _A__Mod_param_i16_i16
_A__Mod_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L6051
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6051
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L6051:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_LC
	.private_extern _A__uMod_var_i16_LC
_A__uMod_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_LC
	.private_extern _A__Mod_var_i16_LC
_A__Mod_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6056
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6056
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6056:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_LC
	.private_extern _A__uMod_param_i16_LC
_A__uMod_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_LC
	.private_extern _A__Mod_param_i16_LC
_A__Mod_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6061
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6061
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6061:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_i64
	.private_extern _A__uMod_var_i16_i64
_A__uMod_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_i64
	.private_extern _A__Mod_var_i16_i64
_A__Mod_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6066
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6066
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6066:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_i64
	.private_extern _A__uMod_param_i16_i64
_A__uMod_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_i64
	.private_extern _A__Mod_param_i16_i64
_A__Mod_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6071
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6071
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6071:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_I
	.private_extern _A__uMod_var_i16_I
_A__uMod_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_I
	.private_extern _A__Mod_var_i16_I
_A__Mod_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6076
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6076
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6076:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6077
	cmpq	$65535, -16(%rbp)
	jle	L6078
L6077:
	movl	$83105, %edi
	call	__m3_fault
L6078:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_I
	.private_extern _A__uMod_param_i16_I
_A__uMod_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_I
	.private_extern _A__Mod_param_i16_I
_A__Mod_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6083
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6083
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6083:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6084
	cmpq	$65535, -16(%rbp)
	jle	L6085
L6084:
	movl	$83169, %edi
	call	__m3_fault
L6085:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_u8
	.private_extern _A__uMod_var_i16_u8
_A__uMod_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_u8
	.private_extern _A__Mod_var_i16_u8
_A__Mod_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6090
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6090
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6090:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6091
	cmpq	$65535, -16(%rbp)
	jle	L6092
L6091:
	movl	$83233, %edi
	call	__m3_fault
L6092:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_u8
	.private_extern _A__uMod_param_i16_u8
_A__uMod_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_u8
	.private_extern _A__Mod_param_i16_u8
_A__Mod_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6097
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6097
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6097:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6098
	cmpq	$65535, -16(%rbp)
	jle	L6099
L6098:
	movl	$83297, %edi
	call	__m3_fault
L6099:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_C
	.private_extern _A__uMod_var_i16_C
_A__uMod_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_C
	.private_extern _A__Mod_var_i16_C
_A__Mod_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6104
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6104
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6104:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L6105
	movl	$83361, %edi
	call	__m3_fault
L6105:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_C
	.private_extern _A__uMod_param_i16_C
_A__uMod_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_C
	.private_extern _A__Mod_param_i16_C
_A__Mod_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6110
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6110
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6110:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L6111
	movl	$83425, %edi
	call	__m3_fault
L6111:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_u32
	.private_extern _A__uMod_var_i16_u32
_A__uMod_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_u32
	.private_extern _A__Mod_var_i16_u32
_A__Mod_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6116
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6116
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6116:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6117
	cmpq	$65535, -16(%rbp)
	jle	L6118
L6117:
	movl	$83489, %edi
	call	__m3_fault
L6118:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_u32
	.private_extern _A__uMod_param_i16_u32
_A__uMod_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_u32
	.private_extern _A__Mod_param_i16_u32
_A__Mod_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6123
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6123
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6123:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6124
	cmpq	$65535, -16(%rbp)
	jle	L6125
L6124:
	movl	$83553, %edi
	call	__m3_fault
L6125:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_i8
	.private_extern _A__uMod_var_i16_i8
_A__uMod_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_i8
	.private_extern _A__Mod_var_i16_i8
_A__Mod_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6130
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6130
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6130:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_i8
	.private_extern _A__uMod_param_i16_i8
_A__uMod_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_i8
	.private_extern _A__Mod_param_i16_i8
_A__Mod_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L6135
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6135
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L6135:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_L
	.private_extern _A__uMod_var_i16_L
_A__uMod_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_L
	.private_extern _A__Mod_var_i16_L
_A__Mod_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6140
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6140
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6140:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_L
	.private_extern _A__uMod_param_i16_L
_A__uMod_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_L
	.private_extern _A__Mod_param_i16_L
_A__Mod_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6145
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6145
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6145:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_u64
	.private_extern _A__uMod_var_i16_u64
_A__uMod_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_u64
	.private_extern _A__Mod_var_i16_u64
_A__Mod_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6150
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6150
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6150:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_u64
	.private_extern _A__uMod_param_i16_u64
_A__uMod_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_u64
	.private_extern _A__Mod_param_i16_u64
_A__Mod_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6155
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6155
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6155:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_u16
	.private_extern _A__uMod_var_i16_u16
_A__uMod_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_u16
	.private_extern _A__Mod_var_i16_u16
_A__Mod_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6160
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6160
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6160:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6161
	cmpq	$65535, -16(%rbp)
	jle	L6162
L6161:
	movl	$84001, %edi
	call	__m3_fault
L6162:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_u16
	.private_extern _A__uMod_param_i16_u16
_A__uMod_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_u16
	.private_extern _A__Mod_param_i16_u16
_A__Mod_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6167
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6167
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6167:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L6168
	cmpq	$65535, -16(%rbp)
	jle	L6169
L6168:
	movl	$84065, %edi
	call	__m3_fault
L6169:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i16_i32
	.private_extern _A__uMod_var_i16_i32
_A__uMod_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i16_i32
	.private_extern _A__Mod_var_i16_i32
_A__Mod_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6174
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6174
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6174:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L6175
	movl	$84129, %edi
	call	__m3_fault
L6175:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i16_i32
	.private_extern _A__uMod_param_i16_i32
_A__uMod_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i16_i32
	.private_extern _A__Mod_param_i16_i32
_A__Mod_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6180
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6180
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6180:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$65535, -16(%rbp)
	jle	L6181
	movl	$84193, %edi
	call	__m3_fault
L6181:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_i16
	.private_extern _A__uMod_var_LC_i16
_A__uMod_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_i16
	.private_extern _A__Mod_var_LC_i16
_A__Mod_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6186
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6186
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6186:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_i16
	.private_extern _A__uMod_param_LC_i16
_A__uMod_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_i16
	.private_extern _A__Mod_param_LC_i16
_A__Mod_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6191
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6191
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6191:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_LC
	.private_extern _A__uMod_var_LC_LC
_A__uMod_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_LC
	.private_extern _A__Mod_var_LC_LC
_A__Mod_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6196
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6196
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6196:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_LC
	.private_extern _A__uMod_param_LC_LC
_A__uMod_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_LC
	.private_extern _A__Mod_param_LC_LC
_A__Mod_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6201
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6201
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6201:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_i64
	.private_extern _A__uMod_var_LC_i64
_A__uMod_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_i64
	.private_extern _A__Mod_var_LC_i64
_A__Mod_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6206
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6206
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6206:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_i64
	.private_extern _A__uMod_param_LC_i64
_A__uMod_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_i64
	.private_extern _A__Mod_param_LC_i64
_A__Mod_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6211
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6211
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6211:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_I
	.private_extern _A__uMod_var_LC_I
_A__uMod_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_I
	.private_extern _A__Mod_var_LC_I
_A__Mod_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6216
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6216
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6216:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_I
	.private_extern _A__uMod_param_LC_I
_A__uMod_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_I
	.private_extern _A__Mod_param_LC_I
_A__Mod_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6221
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6221
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6221:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_u8
	.private_extern _A__uMod_var_LC_u8
_A__uMod_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_u8
	.private_extern _A__Mod_var_LC_u8
_A__Mod_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6226
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6226
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6226:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_u8
	.private_extern _A__uMod_param_LC_u8
_A__uMod_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_u8
	.private_extern _A__Mod_param_LC_u8
_A__Mod_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6231
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6231
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6231:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_C
	.private_extern _A__uMod_var_LC_C
_A__uMod_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_C
	.private_extern _A__Mod_var_LC_C
_A__Mod_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6236
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6236
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6236:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_C
	.private_extern _A__uMod_param_LC_C
_A__uMod_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_C
	.private_extern _A__Mod_param_LC_C
_A__Mod_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6241
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6241
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6241:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_u32
	.private_extern _A__uMod_var_LC_u32
_A__uMod_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_u32
	.private_extern _A__Mod_var_LC_u32
_A__Mod_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6246
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6246
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6246:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_u32
	.private_extern _A__uMod_param_LC_u32
_A__uMod_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_u32
	.private_extern _A__Mod_param_LC_u32
_A__Mod_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6251
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6251
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6251:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_i8
	.private_extern _A__uMod_var_LC_i8
_A__uMod_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_i8
	.private_extern _A__Mod_var_LC_i8
_A__Mod_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6256
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6256
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6256:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_i8
	.private_extern _A__uMod_param_LC_i8
_A__uMod_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_i8
	.private_extern _A__Mod_param_LC_i8
_A__Mod_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6261
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6261
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6261:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_L
	.private_extern _A__uMod_var_LC_L
_A__uMod_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_L
	.private_extern _A__Mod_var_LC_L
_A__Mod_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6266
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6266
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6266:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_L
	.private_extern _A__uMod_param_LC_L
_A__uMod_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_L
	.private_extern _A__Mod_param_LC_L
_A__Mod_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6271
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6271
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6271:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_u64
	.private_extern _A__uMod_var_LC_u64
_A__uMod_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_u64
	.private_extern _A__Mod_var_LC_u64
_A__Mod_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6276
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6276
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6276:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_u64
	.private_extern _A__uMod_param_LC_u64
_A__uMod_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_u64
	.private_extern _A__Mod_param_LC_u64
_A__Mod_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6281
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6281
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6281:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_u16
	.private_extern _A__uMod_var_LC_u16
_A__uMod_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_u16
	.private_extern _A__Mod_var_LC_u16
_A__Mod_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6286
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6286
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6286:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_u16
	.private_extern _A__uMod_param_LC_u16
_A__uMod_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_u16
	.private_extern _A__Mod_param_LC_u16
_A__Mod_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6291
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6291
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6291:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_LC_i32
	.private_extern _A__uMod_var_LC_i32
_A__uMod_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_LC_i32
	.private_extern _A__Mod_var_LC_i32
_A__Mod_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6296
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6296
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6296:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_LC_i32
	.private_extern _A__uMod_param_LC_i32
_A__uMod_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_LC_i32
	.private_extern _A__Mod_param_LC_i32
_A__Mod_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6301
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6301
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6301:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__Mod_var_f64_f64
	.private_extern _A__Mod_var_f64_f64
_A__Mod_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	120+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	120+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movsd	-16(%rbp), %xmm0
	divsd	-24(%rbp), %xmm0
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0
	cvttsd2siq	%xmm0, %rax
	movq	%rax, -40(%rbp)
	cvtsi2sdq	-40(%rbp), %xmm1
	movsd	-32(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	jb	L6309
L6308:
	cvtsi2sdq	-40(%rbp), %xmm0
	movsd	%xmm0, -56(%rbp)
	jmp	L6306
L6309:
	movq	-40(%rbp), %rax
	subq	$1, %rax
	cvtsi2sdq	%rax, %xmm0
	movsd	%xmm0, -56(%rbp)
L6306:
	movsd	-56(%rbp), %xmm1
	mulsd	-24(%rbp), %xmm1
	movsd	-16(%rbp), %xmm0
	subsd	%xmm1, %xmm0
	leave
	ret
.globl _A__Mod_param_f64_f64
	.private_extern _A__Mod_param_f64_f64
_A__Mod_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -56(%rbp)
	movsd	%xmm1, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-64(%rbp), %rax
	movq	%rax, -24(%rbp)
	movsd	-16(%rbp), %xmm0
	divsd	-24(%rbp), %xmm0
	movsd	%xmm0, -32(%rbp)
	movsd	-32(%rbp), %xmm0
	cvttsd2siq	%xmm0, %rax
	movq	%rax, -40(%rbp)
	cvtsi2sdq	-40(%rbp), %xmm1
	movsd	-32(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	jb	L6316
L6315:
	cvtsi2sdq	-40(%rbp), %xmm0
	movsd	%xmm0, -72(%rbp)
	jmp	L6313
L6316:
	movq	-40(%rbp), %rax
	subq	$1, %rax
	cvtsi2sdq	%rax, %xmm0
	movsd	%xmm0, -72(%rbp)
L6313:
	movsd	-72(%rbp), %xmm1
	mulsd	-24(%rbp), %xmm1
	movsd	-16(%rbp), %xmm0
	subsd	%xmm1, %xmm0
	leave
	ret
.globl _A__uMod_var_i64_i16
	.private_extern _A__uMod_var_i64_i16
_A__uMod_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_i16
	.private_extern _A__Mod_var_i64_i16
_A__Mod_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6320
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6320
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6320:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_i16
	.private_extern _A__uMod_param_i64_i16
_A__uMod_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_i16
	.private_extern _A__Mod_param_i64_i16
_A__Mod_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6325
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6325
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6325:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_LC
	.private_extern _A__uMod_var_i64_LC
_A__uMod_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_LC
	.private_extern _A__Mod_var_i64_LC
_A__Mod_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6330
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6330
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6330:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_LC
	.private_extern _A__uMod_param_i64_LC
_A__uMod_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_LC
	.private_extern _A__Mod_param_i64_LC
_A__Mod_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6335
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6335
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6335:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_i64
	.private_extern _A__uMod_var_i64_i64
_A__uMod_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_i64
	.private_extern _A__Mod_var_i64_i64
_A__Mod_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6340
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6340
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6340:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_i64
	.private_extern _A__uMod_param_i64_i64
_A__uMod_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_i64
	.private_extern _A__Mod_param_i64_i64
_A__Mod_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6345
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6345
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6345:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_I
	.private_extern _A__uMod_var_i64_I
_A__uMod_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_I
	.private_extern _A__Mod_var_i64_I
_A__Mod_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6350
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6350
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6350:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_I
	.private_extern _A__uMod_param_i64_I
_A__uMod_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_I
	.private_extern _A__Mod_param_i64_I
_A__Mod_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6355
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6355
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6355:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_u8
	.private_extern _A__uMod_var_i64_u8
_A__uMod_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_u8
	.private_extern _A__Mod_var_i64_u8
_A__Mod_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6360
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6360
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6360:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_u8
	.private_extern _A__uMod_param_i64_u8
_A__uMod_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_u8
	.private_extern _A__Mod_param_i64_u8
_A__Mod_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6365
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6365
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6365:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_C
	.private_extern _A__uMod_var_i64_C
_A__uMod_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_C
	.private_extern _A__Mod_var_i64_C
_A__Mod_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6370
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6370
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6370:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_C
	.private_extern _A__uMod_param_i64_C
_A__uMod_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_C
	.private_extern _A__Mod_param_i64_C
_A__Mod_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6375
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6375
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6375:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_u32
	.private_extern _A__uMod_var_i64_u32
_A__uMod_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_u32
	.private_extern _A__Mod_var_i64_u32
_A__Mod_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6380
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6380
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6380:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_u32
	.private_extern _A__uMod_param_i64_u32
_A__uMod_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_u32
	.private_extern _A__Mod_param_i64_u32
_A__Mod_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6385
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6385
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6385:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_i8
	.private_extern _A__uMod_var_i64_i8
_A__uMod_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_i8
	.private_extern _A__Mod_var_i64_i8
_A__Mod_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6390
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6390
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6390:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_i8
	.private_extern _A__uMod_param_i64_i8
_A__uMod_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_i8
	.private_extern _A__Mod_param_i64_i8
_A__Mod_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6395
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6395
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6395:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_L
	.private_extern _A__uMod_var_i64_L
_A__uMod_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_L
	.private_extern _A__Mod_var_i64_L
_A__Mod_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6400
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6400
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6400:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_L
	.private_extern _A__uMod_param_i64_L
_A__uMod_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_L
	.private_extern _A__Mod_param_i64_L
_A__Mod_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6405
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6405
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6405:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_u64
	.private_extern _A__uMod_var_i64_u64
_A__uMod_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_u64
	.private_extern _A__Mod_var_i64_u64
_A__Mod_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6410
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6410
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6410:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_u64
	.private_extern _A__uMod_param_i64_u64
_A__uMod_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_u64
	.private_extern _A__Mod_param_i64_u64
_A__Mod_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6415
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6415
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6415:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_u16
	.private_extern _A__uMod_var_i64_u16
_A__uMod_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_u16
	.private_extern _A__Mod_var_i64_u16
_A__Mod_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6420
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6420
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6420:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_u16
	.private_extern _A__uMod_param_i64_u16
_A__uMod_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_u16
	.private_extern _A__Mod_param_i64_u16
_A__Mod_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6425
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6425
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6425:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i64_i32
	.private_extern _A__uMod_var_i64_i32
_A__uMod_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i64_i32
	.private_extern _A__Mod_var_i64_i32
_A__Mod_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6430
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6430
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6430:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i64_i32
	.private_extern _A__uMod_param_i64_i32
_A__uMod_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i64_i32
	.private_extern _A__Mod_param_i64_i32
_A__Mod_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6435
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6435
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6435:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_i16
	.private_extern _A__uMod_var_I_i16
_A__uMod_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_i16
	.private_extern _A__Mod_var_I_i16
_A__Mod_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6440
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6440
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6440:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_i16
	.private_extern _A__uMod_param_I_i16
_A__uMod_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_i16
	.private_extern _A__Mod_param_I_i16
_A__Mod_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6445
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6445
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6445:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_LC
	.private_extern _A__uMod_var_I_LC
_A__uMod_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_LC
	.private_extern _A__Mod_var_I_LC
_A__Mod_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6450
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6450
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6450:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_LC
	.private_extern _A__uMod_param_I_LC
_A__uMod_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_LC
	.private_extern _A__Mod_param_I_LC
_A__Mod_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6455
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6455
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6455:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_i64
	.private_extern _A__uMod_var_I_i64
_A__uMod_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_i64
	.private_extern _A__Mod_var_I_i64
_A__Mod_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6460
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6460
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6460:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_i64
	.private_extern _A__uMod_param_I_i64
_A__uMod_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_i64
	.private_extern _A__Mod_param_I_i64
_A__Mod_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6465
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6465
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6465:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_I
	.private_extern _A__uMod_var_I_I
_A__uMod_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_I
	.private_extern _A__Mod_var_I_I
_A__Mod_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6470
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6470
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6470:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_I
	.private_extern _A__uMod_param_I_I
_A__uMod_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_I
	.private_extern _A__Mod_param_I_I
_A__Mod_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6475
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6475
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6475:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_u8
	.private_extern _A__uMod_var_I_u8
_A__uMod_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_u8
	.private_extern _A__Mod_var_I_u8
_A__Mod_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6480
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6480
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6480:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_u8
	.private_extern _A__uMod_param_I_u8
_A__uMod_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_u8
	.private_extern _A__Mod_param_I_u8
_A__Mod_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6485
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6485
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6485:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_C
	.private_extern _A__uMod_var_I_C
_A__uMod_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_C
	.private_extern _A__Mod_var_I_C
_A__Mod_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6490
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6490
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6490:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_C
	.private_extern _A__uMod_param_I_C
_A__uMod_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_C
	.private_extern _A__Mod_param_I_C
_A__Mod_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6495
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6495
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6495:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_u32
	.private_extern _A__uMod_var_I_u32
_A__uMod_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_u32
	.private_extern _A__Mod_var_I_u32
_A__Mod_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6500
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6500
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6500:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_u32
	.private_extern _A__uMod_param_I_u32
_A__uMod_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_u32
	.private_extern _A__Mod_param_I_u32
_A__Mod_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6505
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6505
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6505:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_i8
	.private_extern _A__uMod_var_I_i8
_A__uMod_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_i8
	.private_extern _A__Mod_var_I_i8
_A__Mod_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6510
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6510
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6510:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_i8
	.private_extern _A__uMod_param_I_i8
_A__uMod_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_i8
	.private_extern _A__Mod_param_I_i8
_A__Mod_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6515
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6515
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6515:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_L
	.private_extern _A__uMod_var_I_L
_A__uMod_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_L
	.private_extern _A__Mod_var_I_L
_A__Mod_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6520
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6520
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6520:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_L
	.private_extern _A__uMod_param_I_L
_A__uMod_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_L
	.private_extern _A__Mod_param_I_L
_A__Mod_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6525
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6525
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6525:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_u64
	.private_extern _A__uMod_var_I_u64
_A__uMod_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_u64
	.private_extern _A__Mod_var_I_u64
_A__Mod_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6530
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6530
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6530:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_u64
	.private_extern _A__uMod_param_I_u64
_A__uMod_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_u64
	.private_extern _A__Mod_param_I_u64
_A__Mod_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6535
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6535
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6535:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_u16
	.private_extern _A__uMod_var_I_u16
_A__uMod_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_u16
	.private_extern _A__Mod_var_I_u16
_A__Mod_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6540
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6540
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6540:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_u16
	.private_extern _A__uMod_param_I_u16
_A__uMod_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_u16
	.private_extern _A__Mod_param_I_u16
_A__Mod_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6545
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6545
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6545:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_I_i32
	.private_extern _A__uMod_var_I_i32
_A__uMod_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_I_i32
	.private_extern _A__Mod_var_I_i32
_A__Mod_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6550
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6550
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6550:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_I_i32
	.private_extern _A__uMod_param_I_i32
_A__uMod_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_I_i32
	.private_extern _A__Mod_param_I_i32
_A__Mod_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6555
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6555
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6555:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_i16
	.private_extern _A__uMod_var_u8_i16
_A__uMod_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_i16
	.private_extern _A__Mod_var_u8_i16
_A__Mod_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6560
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6560
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6560:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6561
	movl	$88929, %edi
	call	__m3_fault
L6561:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_i16
	.private_extern _A__uMod_param_u8_i16
_A__uMod_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_i16
	.private_extern _A__Mod_param_u8_i16
_A__Mod_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6566
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6566
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6566:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6567
	movl	$88993, %edi
	call	__m3_fault
L6567:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_LC
	.private_extern _A__uMod_var_u8_LC
_A__uMod_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_LC
	.private_extern _A__Mod_var_u8_LC
_A__Mod_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6572
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6572
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6572:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_LC
	.private_extern _A__uMod_param_u8_LC
_A__uMod_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_LC
	.private_extern _A__Mod_param_u8_LC
_A__Mod_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6577
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6577
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6577:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_i64
	.private_extern _A__uMod_var_u8_i64
_A__uMod_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_i64
	.private_extern _A__Mod_var_u8_i64
_A__Mod_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6582
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6582
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6582:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_i64
	.private_extern _A__uMod_param_u8_i64
_A__uMod_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_i64
	.private_extern _A__Mod_param_u8_i64
_A__Mod_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6587
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6587
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6587:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_I
	.private_extern _A__uMod_var_u8_I
_A__uMod_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_I
	.private_extern _A__Mod_var_u8_I
_A__Mod_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6592
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6592
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6592:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6593
	cmpq	$127, -16(%rbp)
	jle	L6594
L6593:
	movl	$89313, %edi
	call	__m3_fault
L6594:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_I
	.private_extern _A__uMod_param_u8_I
_A__uMod_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_I
	.private_extern _A__Mod_param_u8_I
_A__Mod_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6599
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6599
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6599:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6600
	cmpq	$127, -16(%rbp)
	jle	L6601
L6600:
	movl	$89377, %edi
	call	__m3_fault
L6601:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_u8
	.private_extern _A__uMod_var_u8_u8
_A__uMod_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_u8
	.private_extern _A__Mod_var_u8_u8
_A__Mod_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6606
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6606
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6606:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6607
	cmpq	$127, -16(%rbp)
	jle	L6608
L6607:
	movl	$89441, %edi
	call	__m3_fault
L6608:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_u8
	.private_extern _A__uMod_param_u8_u8
_A__uMod_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_u8
	.private_extern _A__Mod_param_u8_u8
_A__Mod_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6613
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6613
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6613:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6614
	cmpq	$127, -16(%rbp)
	jle	L6615
L6614:
	movl	$89505, %edi
	call	__m3_fault
L6615:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_C
	.private_extern _A__uMod_var_u8_C
_A__uMod_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_C
	.private_extern _A__Mod_var_u8_C
_A__Mod_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6620
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6620
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6620:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6621
	movl	$89569, %edi
	call	__m3_fault
L6621:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_C
	.private_extern _A__uMod_param_u8_C
_A__uMod_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_C
	.private_extern _A__Mod_param_u8_C
_A__Mod_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6626
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6626
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6626:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6627
	movl	$89633, %edi
	call	__m3_fault
L6627:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_u32
	.private_extern _A__uMod_var_u8_u32
_A__uMod_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_u32
	.private_extern _A__Mod_var_u8_u32
_A__Mod_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6632
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6632
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6632:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6633
	cmpq	$127, -16(%rbp)
	jle	L6634
L6633:
	movl	$89697, %edi
	call	__m3_fault
L6634:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_u32
	.private_extern _A__uMod_param_u8_u32
_A__uMod_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_u32
	.private_extern _A__Mod_param_u8_u32
_A__Mod_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6639
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6639
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6639:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6640
	cmpq	$127, -16(%rbp)
	jle	L6641
L6640:
	movl	$89761, %edi
	call	__m3_fault
L6641:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_i8
	.private_extern _A__uMod_var_u8_i8
_A__uMod_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_i8
	.private_extern _A__Mod_var_u8_i8
_A__Mod_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6646
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6646
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6646:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6647
	movl	$89825, %edi
	call	__m3_fault
L6647:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_i8
	.private_extern _A__uMod_param_u8_i8
_A__uMod_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_i8
	.private_extern _A__Mod_param_u8_i8
_A__Mod_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6652
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6652
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6652:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6653
	movl	$89889, %edi
	call	__m3_fault
L6653:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_L
	.private_extern _A__uMod_var_u8_L
_A__uMod_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_L
	.private_extern _A__Mod_var_u8_L
_A__Mod_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6658
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6658
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6658:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_L
	.private_extern _A__uMod_param_u8_L
_A__uMod_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_L
	.private_extern _A__Mod_param_u8_L
_A__Mod_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6663
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6663
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6663:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_u64
	.private_extern _A__uMod_var_u8_u64
_A__uMod_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_u64
	.private_extern _A__Mod_var_u8_u64
_A__Mod_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6668
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6668
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6668:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_u64
	.private_extern _A__uMod_param_u8_u64
_A__uMod_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_u64
	.private_extern _A__Mod_param_u8_u64
_A__Mod_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6673
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6673
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6673:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_u16
	.private_extern _A__uMod_var_u8_u16
_A__uMod_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_u16
	.private_extern _A__Mod_var_u8_u16
_A__Mod_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6678
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6678
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6678:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6679
	cmpq	$127, -16(%rbp)
	jle	L6680
L6679:
	movl	$90209, %edi
	call	__m3_fault
L6680:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_u16
	.private_extern _A__uMod_param_u8_u16
_A__uMod_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_u16
	.private_extern _A__Mod_param_u8_u16
_A__Mod_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6685
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6685
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6685:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L6686
	cmpq	$127, -16(%rbp)
	jle	L6687
L6686:
	movl	$90273, %edi
	call	__m3_fault
L6687:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u8_i32
	.private_extern _A__uMod_var_u8_i32
_A__uMod_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u8_i32
	.private_extern _A__Mod_var_u8_i32
_A__Mod_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6692
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6692
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6692:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6693
	movl	$90337, %edi
	call	__m3_fault
L6693:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u8_i32
	.private_extern _A__uMod_param_u8_i32
_A__uMod_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u8_i32
	.private_extern _A__Mod_param_u8_i32
_A__Mod_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6698
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6698
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6698:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$127, -16(%rbp)
	jle	L6699
	movl	$90401, %edi
	call	__m3_fault
L6699:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_i16
	.private_extern _A__uMod_var_C_i16
_A__uMod_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_i16
	.private_extern _A__Mod_var_C_i16
_A__Mod_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6704
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6704
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6704:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_i16
	.private_extern _A__uMod_param_C_i16
_A__uMod_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_i16
	.private_extern _A__Mod_param_C_i16
_A__Mod_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movzwl	-26(%rbp), %edx
	movq	%rdx, -48(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-48(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6709
	movq	-56(%rbp), %rax
	xorq	-48(%rbp), %rax
	testq	%rax, %rax
	jns	L6709
	movq	-48(%rbp), %rax
	addq	%rax, -40(%rbp)
L6709:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_LC
	.private_extern _A__uMod_var_C_LC
_A__uMod_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_LC
	.private_extern _A__Mod_var_C_LC
_A__Mod_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6714
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6714
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6714:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_LC
	.private_extern _A__uMod_param_C_LC
_A__uMod_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_LC
	.private_extern _A__Mod_param_C_LC
_A__Mod_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6719
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6719
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6719:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_i64
	.private_extern _A__uMod_var_C_i64
_A__uMod_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_i64
	.private_extern _A__Mod_var_C_i64
_A__Mod_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6724
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6724
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6724:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_i64
	.private_extern _A__uMod_param_C_i64
_A__uMod_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_i64
	.private_extern _A__Mod_param_C_i64
_A__Mod_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6729
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6729
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6729:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_I
	.private_extern _A__uMod_var_C_I
_A__uMod_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_I
	.private_extern _A__Mod_var_C_I
_A__Mod_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6734
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6734
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6734:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6735
	movl	$90849, %edi
	call	__m3_fault
L6735:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_I
	.private_extern _A__uMod_param_C_I
_A__uMod_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_I
	.private_extern _A__Mod_param_C_I
_A__Mod_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6740
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6740
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6740:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6741
	movl	$90913, %edi
	call	__m3_fault
L6741:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_u8
	.private_extern _A__uMod_var_C_u8
_A__uMod_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_u8
	.private_extern _A__Mod_var_C_u8
_A__Mod_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6746
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6746
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6746:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6747
	movl	$90977, %edi
	call	__m3_fault
L6747:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_u8
	.private_extern _A__uMod_param_C_u8
_A__uMod_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_u8
	.private_extern _A__Mod_param_C_u8
_A__Mod_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6752
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6752
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6752:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6753
	movl	$91041, %edi
	call	__m3_fault
L6753:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_C
	.private_extern _A__uMod_var_C_C
_A__uMod_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_C
	.private_extern _A__Mod_var_C_C
_A__Mod_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6758
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6758
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6758:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_C
	.private_extern _A__uMod_param_C_C
_A__uMod_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_C
	.private_extern _A__Mod_param_C_C
_A__Mod_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-48(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6763
	movq	-56(%rbp), %rax
	xorq	-48(%rbp), %rax
	testq	%rax, %rax
	jns	L6763
	movq	-48(%rbp), %rax
	addq	%rax, -40(%rbp)
L6763:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_u32
	.private_extern _A__uMod_var_C_u32
_A__uMod_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_u32
	.private_extern _A__Mod_var_C_u32
_A__Mod_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6768
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6768
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6768:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6769
	movl	$91233, %edi
	call	__m3_fault
L6769:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_u32
	.private_extern _A__uMod_param_C_u32
_A__uMod_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_u32
	.private_extern _A__Mod_param_C_u32
_A__Mod_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6774
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6774
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6774:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6775
	movl	$91297, %edi
	call	__m3_fault
L6775:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_i8
	.private_extern _A__uMod_var_C_i8
_A__uMod_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_i8
	.private_extern _A__Mod_var_C_i8
_A__Mod_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6780
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6780
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6780:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_i8
	.private_extern _A__uMod_param_C_i8
_A__uMod_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_i8
	.private_extern _A__Mod_param_C_i8
_A__Mod_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movzbl	-25(%rbp), %edx
	movq	%rdx, -48(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-48(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6785
	movq	-56(%rbp), %rax
	xorq	-48(%rbp), %rax
	testq	%rax, %rax
	jns	L6785
	movq	-48(%rbp), %rax
	addq	%rax, -40(%rbp)
L6785:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_L
	.private_extern _A__uMod_var_C_L
_A__uMod_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_L
	.private_extern _A__Mod_var_C_L
_A__Mod_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6790
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6790
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6790:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_L
	.private_extern _A__uMod_param_C_L
_A__uMod_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_L
	.private_extern _A__Mod_param_C_L
_A__Mod_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6795
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6795
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6795:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_u64
	.private_extern _A__uMod_var_C_u64
_A__uMod_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_u64
	.private_extern _A__Mod_var_C_u64
_A__Mod_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6800
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6800
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6800:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_u64
	.private_extern _A__uMod_param_C_u64
_A__uMod_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_u64
	.private_extern _A__Mod_param_C_u64
_A__Mod_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6805
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6805
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6805:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_u16
	.private_extern _A__uMod_var_C_u16
_A__uMod_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_u16
	.private_extern _A__Mod_var_C_u16
_A__Mod_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6810
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6810
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6810:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6811
	movl	$91745, %edi
	call	__m3_fault
L6811:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_u16
	.private_extern _A__uMod_param_C_u16
_A__uMod_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_u16
	.private_extern _A__Mod_param_C_u16
_A__Mod_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movswq	-26(%rbp),%rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6816
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6816
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6816:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L6817
	movl	$91809, %edi
	call	__m3_fault
L6817:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_C_i32
	.private_extern _A__uMod_var_C_i32
_A__uMod_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_C_i32
	.private_extern _A__Mod_var_C_i32
_A__Mod_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L6822
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6822
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L6822:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_C_i32
	.private_extern _A__uMod_param_C_i32
_A__uMod_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rdx, %rcx
	movl	$0, %edx
	divq	%rcx
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_C_i32
	.private_extern _A__Mod_param_C_i32
_A__Mod_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	mov	-28(%rbp), %edx
	movq	%rdx, -48(%rbp)
	movq	-56(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-48(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6827
	movq	-56(%rbp), %rax
	xorq	-48(%rbp), %rax
	testq	%rax, %rax
	jns	L6827
	movq	-48(%rbp), %rax
	addq	%rax, -40(%rbp)
L6827:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__Mod_var_f32_f32
	.private_extern _A__Mod_var_f32_f32
_A__Mod_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	160+_MM_A(%rip), %eax
	movl	%eax, -8(%rbp)
	movl	160+_MM_A(%rip), %eax
	movl	%eax, -12(%rbp)
	movss	-8(%rbp), %xmm0
	divss	-12(%rbp), %xmm0
	movss	%xmm0, -16(%rbp)
	movss	-16(%rbp), %xmm0
	cvttss2siq	%xmm0, %rax
	movq	%rax, -24(%rbp)
	cvtsi2ssq	-24(%rbp), %xmm1
	movss	-16(%rbp), %xmm0
	ucomiss	%xmm1, %xmm0
	jb	L6835
L6834:
	cvtsi2ssq	-24(%rbp), %xmm0
	movss	%xmm0, -36(%rbp)
	jmp	L6832
L6835:
	movq	-24(%rbp), %rax
	subq	$1, %rax
	cvtsi2ssq	%rax, %xmm0
	movss	%xmm0, -36(%rbp)
L6832:
	movss	-36(%rbp), %xmm1
	mulss	-12(%rbp), %xmm1
	movss	-8(%rbp), %xmm0
	subss	%xmm1, %xmm0
	leave
	ret
.globl _A__Mod_param_f32_f32
	.private_extern _A__Mod_param_f32_f32
_A__Mod_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -36(%rbp)
	movss	%xmm1, -40(%rbp)
	movl	-36(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-40(%rbp), %eax
	movl	%eax, -12(%rbp)
	movss	-8(%rbp), %xmm0
	divss	-12(%rbp), %xmm0
	movss	%xmm0, -16(%rbp)
	movss	-16(%rbp), %xmm0
	cvttss2siq	%xmm0, %rax
	movq	%rax, -24(%rbp)
	cvtsi2ssq	-24(%rbp), %xmm1
	movss	-16(%rbp), %xmm0
	ucomiss	%xmm1, %xmm0
	jb	L6842
L6841:
	cvtsi2ssq	-24(%rbp), %xmm0
	movss	%xmm0, -44(%rbp)
	jmp	L6839
L6842:
	movq	-24(%rbp), %rax
	subq	$1, %rax
	cvtsi2ssq	%rax, %xmm0
	movss	%xmm0, -44(%rbp)
L6839:
	movss	-44(%rbp), %xmm1
	mulss	-12(%rbp), %xmm1
	movss	-8(%rbp), %xmm0
	subss	%xmm1, %xmm0
	leave
	ret
.globl _A__uMod_var_u32_i16
	.private_extern _A__uMod_var_u32_i16
_A__uMod_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_i16
	.private_extern _A__Mod_var_u32_i16
_A__Mod_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6846
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6846
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6846:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_i16
	.private_extern _A__uMod_param_u32_i16
_A__uMod_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_i16
	.private_extern _A__Mod_param_u32_i16
_A__Mod_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movzwl	-22(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6851
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6851
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6851:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_LC
	.private_extern _A__uMod_var_u32_LC
_A__uMod_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_LC
	.private_extern _A__Mod_var_u32_LC
_A__Mod_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6856
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6856
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6856:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_LC
	.private_extern _A__uMod_param_u32_LC
_A__uMod_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_LC
	.private_extern _A__Mod_param_u32_LC
_A__Mod_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6861
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6861
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6861:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_i64
	.private_extern _A__uMod_var_u32_i64
_A__uMod_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_i64
	.private_extern _A__Mod_var_u32_i64
_A__Mod_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6866
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6866
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6866:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_i64
	.private_extern _A__uMod_param_u32_i64
_A__uMod_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_i64
	.private_extern _A__Mod_param_u32_i64
_A__Mod_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6871
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6871
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6871:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_I
	.private_extern _A__uMod_var_u32_I
_A__uMod_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_I
	.private_extern _A__Mod_var_u32_I
_A__Mod_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6876
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6876
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6876:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6877
	cmpq	$2147483647, -16(%rbp)
	jle	L6878
L6877:
	movl	$92449, %edi
	call	__m3_fault
L6878:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_I
	.private_extern _A__uMod_param_u32_I
_A__uMod_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_I
	.private_extern _A__Mod_param_u32_I
_A__Mod_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6883
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6883
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6883:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6884
	cmpq	$2147483647, -16(%rbp)
	jle	L6885
L6884:
	movl	$92513, %edi
	call	__m3_fault
L6885:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_u8
	.private_extern _A__uMod_var_u32_u8
_A__uMod_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_u8
	.private_extern _A__Mod_var_u32_u8
_A__Mod_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6890
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6890
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6890:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6891
	cmpq	$2147483647, -16(%rbp)
	jle	L6892
L6891:
	movl	$92577, %edi
	call	__m3_fault
L6892:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_u8
	.private_extern _A__uMod_param_u32_u8
_A__uMod_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_u8
	.private_extern _A__Mod_param_u32_u8
_A__Mod_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movsbq	-21(%rbp),%rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6897
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6897
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6897:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6898
	cmpq	$2147483647, -16(%rbp)
	jle	L6899
L6898:
	movl	$92641, %edi
	call	__m3_fault
L6899:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_C
	.private_extern _A__uMod_var_u32_C
_A__uMod_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_C
	.private_extern _A__Mod_var_u32_C
_A__Mod_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6904
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6904
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6904:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L6905
	movl	$92705, %edi
	call	__m3_fault
L6905:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_C
	.private_extern _A__uMod_param_u32_C
_A__uMod_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_C
	.private_extern _A__Mod_param_u32_C
_A__Mod_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L6910
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L6910
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L6910:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L6911
	movl	$92769, %edi
	call	__m3_fault
L6911:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_u32
	.private_extern _A__uMod_var_u32_u32
_A__uMod_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_u32
	.private_extern _A__Mod_var_u32_u32
_A__Mod_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6916
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6916
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6916:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6917
	cmpq	$2147483647, -16(%rbp)
	jle	L6918
L6917:
	movl	$92833, %edi
	call	__m3_fault
L6918:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_u32
	.private_extern _A__uMod_param_u32_u32
_A__uMod_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_u32
	.private_extern _A__Mod_param_u32_u32
_A__Mod_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6923
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6923
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6923:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6924
	cmpq	$2147483647, -16(%rbp)
	jle	L6925
L6924:
	movl	$92897, %edi
	call	__m3_fault
L6925:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_i8
	.private_extern _A__uMod_var_u32_i8
_A__uMod_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_i8
	.private_extern _A__Mod_var_u32_i8
_A__Mod_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6930
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6930
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6930:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_i8
	.private_extern _A__uMod_param_u32_i8
_A__uMod_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_i8
	.private_extern _A__Mod_param_u32_i8
_A__Mod_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movzbl	-21(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6935
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6935
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6935:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_L
	.private_extern _A__uMod_var_u32_L
_A__uMod_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_L
	.private_extern _A__Mod_var_u32_L
_A__Mod_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6940
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6940
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6940:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_L
	.private_extern _A__uMod_param_u32_L
_A__uMod_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_L
	.private_extern _A__Mod_param_u32_L
_A__Mod_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6945
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6945
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6945:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_u64
	.private_extern _A__uMod_var_u32_u64
_A__uMod_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_u64
	.private_extern _A__Mod_var_u32_u64
_A__Mod_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6950
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6950
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6950:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_u64
	.private_extern _A__uMod_param_u32_u64
_A__uMod_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_u64
	.private_extern _A__Mod_param_u32_u64
_A__Mod_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6955
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6955
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6955:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_u16
	.private_extern _A__uMod_var_u32_u16
_A__uMod_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_u16
	.private_extern _A__Mod_var_u32_u16
_A__Mod_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6960
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6960
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6960:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6961
	cmpq	$2147483647, -16(%rbp)
	jle	L6962
L6961:
	movl	$93345, %edi
	call	__m3_fault
L6962:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_u16
	.private_extern _A__uMod_param_u32_u16
_A__uMod_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_u16
	.private_extern _A__Mod_param_u32_u16
_A__Mod_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movswq	-22(%rbp),%rax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6967
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6967
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6967:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L6968
	cmpq	$2147483647, -16(%rbp)
	jle	L6969
L6968:
	movl	$93409, %edi
	call	__m3_fault
L6969:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u32_i32
	.private_extern _A__uMod_var_u32_i32
_A__uMod_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u32_i32
	.private_extern _A__Mod_var_u32_i32
_A__Mod_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6974
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6974
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6974:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L6975
	movl	$93473, %edi
	call	__m3_fault
L6975:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u32_i32
	.private_extern _A__uMod_param_u32_i32
_A__uMod_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u32_i32
	.private_extern _A__Mod_param_u32_i32
_A__Mod_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6980
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6980
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6980:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$2147483647, -16(%rbp)
	jle	L6981
	movl	$93537, %edi
	call	__m3_fault
L6981:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_i16
	.private_extern _A__uMod_var_i8_i16
_A__uMod_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_i16
	.private_extern _A__Mod_var_i8_i16
_A__Mod_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6986
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6986
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6986:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L6987
	movl	$93601, %edi
	call	__m3_fault
L6987:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_i16
	.private_extern _A__uMod_param_i8_i16
_A__uMod_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_i16
	.private_extern _A__Mod_param_i8_i16
_A__Mod_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L6992
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L6992
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L6992:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L6993
	movl	$93665, %edi
	call	__m3_fault
L6993:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_LC
	.private_extern _A__uMod_var_i8_LC
_A__uMod_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_LC
	.private_extern _A__Mod_var_i8_LC
_A__Mod_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L6998
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L6998
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L6998:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_LC
	.private_extern _A__uMod_param_i8_LC
_A__uMod_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_LC
	.private_extern _A__Mod_param_i8_LC
_A__Mod_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7003
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7003
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7003:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_i64
	.private_extern _A__uMod_var_i8_i64
_A__uMod_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_i64
	.private_extern _A__Mod_var_i8_i64
_A__Mod_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7008
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7008
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7008:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_i64
	.private_extern _A__uMod_param_i8_i64
_A__uMod_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_i64
	.private_extern _A__Mod_param_i8_i64
_A__Mod_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7013
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7013
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7013:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_I
	.private_extern _A__uMod_var_i8_I
_A__uMod_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_I
	.private_extern _A__Mod_var_i8_I
_A__Mod_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7018
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7018
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7018:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7019
	cmpq	$255, -16(%rbp)
	jle	L7020
L7019:
	movl	$93985, %edi
	call	__m3_fault
L7020:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_I
	.private_extern _A__uMod_param_i8_I
_A__uMod_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_I
	.private_extern _A__Mod_param_i8_I
_A__Mod_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7025
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7025
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7025:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7026
	cmpq	$255, -16(%rbp)
	jle	L7027
L7026:
	movl	$94049, %edi
	call	__m3_fault
L7027:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_u8
	.private_extern _A__uMod_var_i8_u8
_A__uMod_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_u8
	.private_extern _A__Mod_var_i8_u8
_A__Mod_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7032
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7032
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7032:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7033
	cmpq	$255, -16(%rbp)
	jle	L7034
L7033:
	movl	$94113, %edi
	call	__m3_fault
L7034:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_u8
	.private_extern _A__uMod_param_i8_u8
_A__uMod_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_u8
	.private_extern _A__Mod_param_i8_u8
_A__Mod_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-18(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7039
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7039
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7039:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7040
	cmpq	$255, -16(%rbp)
	jle	L7041
L7040:
	movl	$94177, %edi
	call	__m3_fault
L7041:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_C
	.private_extern _A__uMod_var_i8_C
_A__uMod_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_C
	.private_extern _A__Mod_var_i8_C
_A__Mod_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7046
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7046
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7046:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L7047
	movl	$94241, %edi
	call	__m3_fault
L7047:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_C
	.private_extern _A__uMod_param_i8_C
_A__uMod_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_C
	.private_extern _A__Mod_param_i8_C
_A__Mod_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7052
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7052
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7052:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L7053
	movl	$94305, %edi
	call	__m3_fault
L7053:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_u32
	.private_extern _A__uMod_var_i8_u32
_A__uMod_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_u32
	.private_extern _A__Mod_var_i8_u32
_A__Mod_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7058
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7058
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7058:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7059
	cmpq	$255, -16(%rbp)
	jle	L7060
L7059:
	movl	$94369, %edi
	call	__m3_fault
L7060:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_u32
	.private_extern _A__uMod_param_i8_u32
_A__uMod_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_u32
	.private_extern _A__Mod_param_i8_u32
_A__Mod_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7065
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7065
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7065:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7066
	cmpq	$255, -16(%rbp)
	jle	L7067
L7066:
	movl	$94433, %edi
	call	__m3_fault
L7067:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_i8
	.private_extern _A__uMod_var_i8_i8
_A__uMod_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_i8
	.private_extern _A__Mod_var_i8_i8
_A__Mod_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L7072
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7072
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L7072:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_i8
	.private_extern _A__uMod_param_i8_i8
_A__uMod_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_i8
	.private_extern _A__Mod_param_i8_i8
_A__Mod_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-18(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L7077
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7077
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L7077:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_L
	.private_extern _A__uMod_var_i8_L
_A__uMod_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_L
	.private_extern _A__Mod_var_i8_L
_A__Mod_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7082
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7082
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7082:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_L
	.private_extern _A__uMod_param_i8_L
_A__uMod_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_L
	.private_extern _A__Mod_param_i8_L
_A__Mod_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7087
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7087
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7087:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_u64
	.private_extern _A__uMod_var_i8_u64
_A__uMod_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_u64
	.private_extern _A__Mod_var_i8_u64
_A__Mod_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7092
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7092
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7092:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_u64
	.private_extern _A__uMod_param_i8_u64
_A__uMod_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_u64
	.private_extern _A__Mod_param_i8_u64
_A__Mod_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7097
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7097
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7097:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_u16
	.private_extern _A__uMod_var_i8_u16
_A__uMod_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_u16
	.private_extern _A__Mod_var_i8_u16
_A__Mod_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7102
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7102
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7102:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7103
	cmpq	$255, -16(%rbp)
	jle	L7104
L7103:
	movl	$94881, %edi
	call	__m3_fault
L7104:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_u16
	.private_extern _A__uMod_param_i8_u16
_A__uMod_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_u16
	.private_extern _A__Mod_param_i8_u16
_A__Mod_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7109
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7109
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7109:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7110
	cmpq	$255, -16(%rbp)
	jle	L7111
L7110:
	movl	$94945, %edi
	call	__m3_fault
L7111:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i8_i32
	.private_extern _A__uMod_var_i8_i32
_A__uMod_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i8_i32
	.private_extern _A__Mod_var_i8_i32
_A__Mod_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7116
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7116
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7116:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L7117
	movl	$95009, %edi
	call	__m3_fault
L7117:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i8_i32
	.private_extern _A__uMod_param_i8_i32
_A__uMod_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i8_i32
	.private_extern _A__Mod_param_i8_i32
_A__Mod_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %eax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7122
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7122
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7122:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$255, -16(%rbp)
	jle	L7123
	movl	$95073, %edi
	call	__m3_fault
L7123:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_i16
	.private_extern _A__uMod_var_L_i16
_A__uMod_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_i16
	.private_extern _A__Mod_var_L_i16
_A__Mod_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7128
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7128
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7128:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_i16
	.private_extern _A__uMod_param_L_i16
_A__uMod_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_i16
	.private_extern _A__Mod_param_L_i16
_A__Mod_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7133
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7133
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7133:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_LC
	.private_extern _A__uMod_var_L_LC
_A__uMod_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_LC
	.private_extern _A__Mod_var_L_LC
_A__Mod_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7138
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7138
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7138:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_LC
	.private_extern _A__uMod_param_L_LC
_A__uMod_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_LC
	.private_extern _A__Mod_param_L_LC
_A__Mod_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7143
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7143
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7143:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_i64
	.private_extern _A__uMod_var_L_i64
_A__uMod_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_i64
	.private_extern _A__Mod_var_L_i64
_A__Mod_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7148
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7148
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7148:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_i64
	.private_extern _A__uMod_param_L_i64
_A__uMod_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_i64
	.private_extern _A__Mod_param_L_i64
_A__Mod_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7153
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7153
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7153:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_I
	.private_extern _A__uMod_var_L_I
_A__uMod_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_I
	.private_extern _A__Mod_var_L_I
_A__Mod_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7158
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7158
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7158:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_I
	.private_extern _A__uMod_param_L_I
_A__uMod_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_I
	.private_extern _A__Mod_param_L_I
_A__Mod_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7163
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7163
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7163:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_u8
	.private_extern _A__uMod_var_L_u8
_A__uMod_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_u8
	.private_extern _A__Mod_var_L_u8
_A__Mod_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7168
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7168
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7168:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_u8
	.private_extern _A__uMod_param_L_u8
_A__uMod_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_u8
	.private_extern _A__Mod_param_L_u8
_A__Mod_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7173
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7173
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7173:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_C
	.private_extern _A__uMod_var_L_C
_A__uMod_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_C
	.private_extern _A__Mod_var_L_C
_A__Mod_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7178
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7178
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7178:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_C
	.private_extern _A__uMod_param_L_C
_A__uMod_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_C
	.private_extern _A__Mod_param_L_C
_A__Mod_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7183
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7183
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7183:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_u32
	.private_extern _A__uMod_var_L_u32
_A__uMod_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_u32
	.private_extern _A__Mod_var_L_u32
_A__Mod_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7188
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7188
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7188:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_u32
	.private_extern _A__uMod_param_L_u32
_A__uMod_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_u32
	.private_extern _A__Mod_param_L_u32
_A__Mod_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7193
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7193
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7193:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_i8
	.private_extern _A__uMod_var_L_i8
_A__uMod_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_i8
	.private_extern _A__Mod_var_L_i8
_A__Mod_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7198
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7198
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7198:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_i8
	.private_extern _A__uMod_param_L_i8
_A__uMod_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_i8
	.private_extern _A__Mod_param_L_i8
_A__Mod_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7203
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7203
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7203:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_L
	.private_extern _A__uMod_var_L_L
_A__uMod_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_L
	.private_extern _A__Mod_var_L_L
_A__Mod_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7208
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7208
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7208:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_L
	.private_extern _A__uMod_param_L_L
_A__uMod_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_L
	.private_extern _A__Mod_param_L_L
_A__Mod_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7213
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7213
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7213:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_u64
	.private_extern _A__uMod_var_L_u64
_A__uMod_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_u64
	.private_extern _A__Mod_var_L_u64
_A__Mod_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7218
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7218
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7218:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_u64
	.private_extern _A__uMod_param_L_u64
_A__uMod_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_u64
	.private_extern _A__Mod_param_L_u64
_A__Mod_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7223
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7223
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7223:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_u16
	.private_extern _A__uMod_var_L_u16
_A__uMod_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_u16
	.private_extern _A__Mod_var_L_u16
_A__Mod_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7228
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7228
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7228:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_u16
	.private_extern _A__uMod_param_L_u16
_A__uMod_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_u16
	.private_extern _A__Mod_param_L_u16
_A__Mod_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7233
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7233
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7233:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_L_i32
	.private_extern _A__uMod_var_L_i32
_A__uMod_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_L_i32
	.private_extern _A__Mod_var_L_i32
_A__Mod_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7238
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7238
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7238:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_L_i32
	.private_extern _A__uMod_param_L_i32
_A__uMod_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_L_i32
	.private_extern _A__Mod_param_L_i32
_A__Mod_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7243
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7243
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7243:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_i16
	.private_extern _A__uMod_var_u64_i16
_A__uMod_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_i16
	.private_extern _A__Mod_var_u64_i16
_A__Mod_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7248
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7248
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7248:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_i16
	.private_extern _A__uMod_param_u64_i16
_A__uMod_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_i16
	.private_extern _A__Mod_param_u64_i16
_A__Mod_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7253
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7253
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7253:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_LC
	.private_extern _A__uMod_var_u64_LC
_A__uMod_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_LC
	.private_extern _A__Mod_var_u64_LC
_A__Mod_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7258
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7258
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7258:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_LC
	.private_extern _A__uMod_param_u64_LC
_A__uMod_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_LC
	.private_extern _A__Mod_param_u64_LC
_A__Mod_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7263
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7263
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7263:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_i64
	.private_extern _A__uMod_var_u64_i64
_A__uMod_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_i64
	.private_extern _A__Mod_var_u64_i64
_A__Mod_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7268
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7268
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7268:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_i64
	.private_extern _A__uMod_param_u64_i64
_A__uMod_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_i64
	.private_extern _A__Mod_param_u64_i64
_A__Mod_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7273
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7273
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7273:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_I
	.private_extern _A__uMod_var_u64_I
_A__uMod_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_I
	.private_extern _A__Mod_var_u64_I
_A__Mod_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7278
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7278
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7278:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_I
	.private_extern _A__uMod_param_u64_I
_A__uMod_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_I
	.private_extern _A__Mod_param_u64_I
_A__Mod_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7283
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7283
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7283:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_u8
	.private_extern _A__uMod_var_u64_u8
_A__uMod_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_u8
	.private_extern _A__Mod_var_u64_u8
_A__Mod_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7288
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7288
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7288:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_u8
	.private_extern _A__uMod_param_u64_u8
_A__uMod_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_u8
	.private_extern _A__Mod_param_u64_u8
_A__Mod_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7293
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7293
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7293:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_C
	.private_extern _A__uMod_var_u64_C
_A__uMod_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_C
	.private_extern _A__Mod_var_u64_C
_A__Mod_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7298
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7298
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7298:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_C
	.private_extern _A__uMod_param_u64_C
_A__uMod_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_C
	.private_extern _A__Mod_param_u64_C
_A__Mod_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7303
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7303
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7303:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_u32
	.private_extern _A__uMod_var_u64_u32
_A__uMod_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_u32
	.private_extern _A__Mod_var_u64_u32
_A__Mod_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7308
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7308
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7308:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_u32
	.private_extern _A__uMod_param_u64_u32
_A__uMod_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_u32
	.private_extern _A__Mod_param_u64_u32
_A__Mod_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7313
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7313
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7313:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_i8
	.private_extern _A__uMod_var_u64_i8
_A__uMod_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_i8
	.private_extern _A__Mod_var_u64_i8
_A__Mod_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7318
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7318
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7318:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_i8
	.private_extern _A__uMod_param_u64_i8
_A__uMod_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_i8
	.private_extern _A__Mod_param_u64_i8
_A__Mod_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7323
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7323
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7323:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_L
	.private_extern _A__uMod_var_u64_L
_A__uMod_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_L
	.private_extern _A__Mod_var_u64_L
_A__Mod_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7328
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7328
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7328:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_L
	.private_extern _A__uMod_param_u64_L
_A__uMod_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_L
	.private_extern _A__Mod_param_u64_L
_A__Mod_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7333
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7333
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7333:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_u64
	.private_extern _A__uMod_var_u64_u64
_A__uMod_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_u64
	.private_extern _A__Mod_var_u64_u64
_A__Mod_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rdx
	movq	%rdx, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7338
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7338
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7338:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_u64
	.private_extern _A__uMod_param_u64_u64
_A__uMod_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_u64
	.private_extern _A__Mod_param_u64_u64
_A__Mod_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7343
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7343
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7343:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_u16
	.private_extern _A__uMod_var_u64_u16
_A__uMod_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_u16
	.private_extern _A__Mod_var_u64_u16
_A__Mod_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7348
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7348
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7348:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_u16
	.private_extern _A__uMod_param_u64_u16
_A__uMod_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_u16
	.private_extern _A__Mod_param_u64_u16
_A__Mod_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7353
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7353
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7353:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u64_i32
	.private_extern _A__uMod_var_u64_i32
_A__uMod_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u64_i32
	.private_extern _A__Mod_var_u64_i32
_A__Mod_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7358
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7358
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7358:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u64_i32
	.private_extern _A__uMod_param_u64_i32
_A__uMod_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u64_i32
	.private_extern _A__Mod_param_u64_i32
_A__Mod_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, -48(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7363
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7363
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7363:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_i16
	.private_extern _A__uMod_var_u16_i16
_A__uMod_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_i16
	.private_extern _A__Mod_var_u16_i16
_A__Mod_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7368
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7368
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7368:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7369
	movl	$98209, %edi
	call	__m3_fault
L7369:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_i16
	.private_extern _A__uMod_param_u16_i16
_A__uMod_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_i16
	.private_extern _A__Mod_param_u16_i16
_A__Mod_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzwl	-20(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7374
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7374
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7374:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7375
	movl	$98273, %edi
	call	__m3_fault
L7375:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_LC
	.private_extern _A__uMod_var_u16_LC
_A__uMod_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_LC
	.private_extern _A__Mod_var_u16_LC
_A__Mod_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7380
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7380
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7380:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_LC
	.private_extern _A__uMod_param_u16_LC
_A__uMod_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_LC
	.private_extern _A__Mod_param_u16_LC
_A__Mod_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7385
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7385
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7385:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_i64
	.private_extern _A__uMod_var_u16_i64
_A__uMod_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_i64
	.private_extern _A__Mod_var_u16_i64
_A__Mod_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7390
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7390
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7390:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_i64
	.private_extern _A__uMod_param_u16_i64
_A__uMod_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_i64
	.private_extern _A__Mod_param_u16_i64
_A__Mod_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7395
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7395
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7395:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_I
	.private_extern _A__uMod_var_u16_I
_A__uMod_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_I
	.private_extern _A__Mod_var_u16_I
_A__Mod_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7400
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7400
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7400:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7401
	cmpq	$32767, -16(%rbp)
	jle	L7402
L7401:
	movl	$98593, %edi
	call	__m3_fault
L7402:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_I
	.private_extern _A__uMod_param_u16_I
_A__uMod_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_I
	.private_extern _A__Mod_param_u16_I
_A__Mod_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7407
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7407
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7407:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7408
	cmpq	$32767, -16(%rbp)
	jle	L7409
L7408:
	movl	$98657, %edi
	call	__m3_fault
L7409:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_u8
	.private_extern _A__uMod_var_u16_u8
_A__uMod_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_u8
	.private_extern _A__Mod_var_u16_u8
_A__Mod_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7414
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7414
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7414:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7415
	cmpq	$32767, -16(%rbp)
	jle	L7416
L7415:
	movl	$98721, %edi
	call	__m3_fault
L7416:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_u8
	.private_extern _A__uMod_param_u16_u8
_A__uMod_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_u8
	.private_extern _A__Mod_param_u16_u8
_A__Mod_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movsbq	-19(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7421
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7421
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7421:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7422
	cmpq	$32767, -16(%rbp)
	jle	L7423
L7422:
	movl	$98785, %edi
	call	__m3_fault
L7423:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_C
	.private_extern _A__uMod_var_u16_C
_A__uMod_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_C
	.private_extern _A__Mod_var_u16_C
_A__Mod_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7428
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7428
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7428:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7429
	movl	$98849, %edi
	call	__m3_fault
L7429:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_C
	.private_extern _A__uMod_param_u16_C
_A__uMod_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_C
	.private_extern _A__Mod_param_u16_C
_A__Mod_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7434
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7434
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7434:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7435
	movl	$98913, %edi
	call	__m3_fault
L7435:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_u32
	.private_extern _A__uMod_var_u16_u32
_A__uMod_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_u32
	.private_extern _A__Mod_var_u16_u32
_A__Mod_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7440
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7440
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7440:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7441
	cmpq	$32767, -16(%rbp)
	jle	L7442
L7441:
	movl	$98977, %edi
	call	__m3_fault
L7442:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_u32
	.private_extern _A__uMod_param_u16_u32
_A__uMod_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_u32
	.private_extern _A__Mod_param_u16_u32
_A__Mod_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7447
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7447
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7447:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7448
	cmpq	$32767, -16(%rbp)
	jle	L7449
L7448:
	movl	$99041, %edi
	call	__m3_fault
L7449:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_i8
	.private_extern _A__uMod_var_u16_i8
_A__uMod_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_i8
	.private_extern _A__Mod_var_u16_i8
_A__Mod_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7454
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7454
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7454:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_i8
	.private_extern _A__uMod_param_u16_i8
_A__uMod_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_i8
	.private_extern _A__Mod_param_u16_i8
_A__Mod_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movzbl	-19(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7459
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7459
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7459:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_L
	.private_extern _A__uMod_var_u16_L
_A__uMod_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_L
	.private_extern _A__Mod_var_u16_L
_A__Mod_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7464
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7464
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7464:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_L
	.private_extern _A__uMod_param_u16_L
_A__uMod_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_L
	.private_extern _A__Mod_param_u16_L
_A__Mod_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7469
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7469
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7469:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_u64
	.private_extern _A__uMod_var_u16_u64
_A__uMod_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_u64
	.private_extern _A__Mod_var_u16_u64
_A__Mod_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7474
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7474
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7474:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_u64
	.private_extern _A__uMod_param_u16_u64
_A__uMod_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_u64
	.private_extern _A__Mod_param_u16_u64
_A__Mod_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7479
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7479
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7479:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_u16
	.private_extern _A__uMod_var_u16_u16
_A__uMod_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_u16
	.private_extern _A__Mod_var_u16_u16
_A__Mod_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7484
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7484
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7484:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7485
	cmpq	$32767, -16(%rbp)
	jle	L7486
L7485:
	movl	$99489, %edi
	call	__m3_fault
L7486:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_u16
	.private_extern _A__uMod_param_u16_u16
_A__uMod_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_u16
	.private_extern _A__Mod_param_u16_u16
_A__Mod_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	movswq	-20(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7491
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7491
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7491:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L7492
	cmpq	$32767, -16(%rbp)
	jle	L7493
L7492:
	movl	$99553, %edi
	call	__m3_fault
L7493:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_u16_i32
	.private_extern _A__uMod_var_u16_i32
_A__uMod_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_u16_i32
	.private_extern _A__Mod_var_u16_i32
_A__Mod_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7498
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7498
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7498:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7499
	movl	$99617, %edi
	call	__m3_fault
L7499:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_u16_i32
	.private_extern _A__uMod_param_u16_i32
_A__uMod_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_u16_i32
	.private_extern _A__Mod_param_u16_i32
_A__Mod_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rax
	movq	%rax, -40(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7504
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7504
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7504:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$32767, -16(%rbp)
	jle	L7505
	movl	$99681, %edi
	call	__m3_fault
L7505:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_i16
	.private_extern _A__uMod_var_i32_i16
_A__uMod_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_i16
	.private_extern _A__Mod_var_i32_i16
_A__Mod_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L7510
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7510
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L7510:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_i16
	.private_extern _A__uMod_param_i32_i16
_A__uMod_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_i16
	.private_extern _A__Mod_param_i32_i16
_A__Mod_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzwl	-22(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L7515
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7515
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L7515:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_LC
	.private_extern _A__uMod_var_i32_LC
_A__uMod_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_LC
	.private_extern _A__Mod_var_i32_LC
_A__Mod_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7520
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7520
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7520:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_LC
	.private_extern _A__uMod_param_i32_LC
_A__uMod_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_LC
	.private_extern _A__Mod_param_i32_LC
_A__Mod_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7525
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7525
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7525:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_i64
	.private_extern _A__uMod_var_i32_i64
_A__uMod_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_i64
	.private_extern _A__Mod_var_i32_i64
_A__Mod_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7530
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7530
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7530:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_i64
	.private_extern _A__uMod_param_i32_i64
_A__uMod_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_i64
	.private_extern _A__Mod_param_i32_i64
_A__Mod_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7535
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7535
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7535:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_I
	.private_extern _A__uMod_var_i32_I
_A__uMod_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_I
	.private_extern _A__Mod_var_i32_I
_A__Mod_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7540
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7540
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7540:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7541
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7542
L7541:
	movl	$100129, %edi
	call	__m3_fault
L7542:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_I
	.private_extern _A__uMod_param_i32_I
_A__uMod_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_I
	.private_extern _A__Mod_param_i32_I
_A__Mod_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7547
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7547
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7547:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7548
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7549
L7548:
	movl	$100193, %edi
	call	__m3_fault
L7549:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_u8
	.private_extern _A__uMod_var_i32_u8
_A__uMod_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_u8
	.private_extern _A__Mod_var_i32_u8
_A__Mod_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7554
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7554
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7554:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7555
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7556
L7555:
	movl	$100257, %edi
	call	__m3_fault
L7556:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_u8
	.private_extern _A__uMod_param_i32_u8
_A__uMod_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_u8
	.private_extern _A__Mod_param_i32_u8
_A__Mod_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movsbq	-21(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7561
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7561
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7561:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7562
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7563
L7562:
	movl	$100321, %edi
	call	__m3_fault
L7563:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_C
	.private_extern _A__uMod_var_i32_C
_A__uMod_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_C
	.private_extern _A__Mod_var_i32_C
_A__Mod_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7568
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7568
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7568:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7569
	movl	$100385, %edi
	call	__m3_fault
L7569:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_C
	.private_extern _A__uMod_param_i32_C
_A__uMod_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movl	$0, %edx
	divq	-32(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_C
	.private_extern _A__Mod_param_i32_C
_A__Mod_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -56(%rbp)
	cmpq	$0, -56(%rbp)
	je	L7574
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7574
	movq	-40(%rbp), %rax
	addq	%rax, -56(%rbp)
L7574:
	movq	-56(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7575
	movl	$100449, %edi
	call	__m3_fault
L7575:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_u32
	.private_extern _A__uMod_var_i32_u32
_A__uMod_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_u32
	.private_extern _A__Mod_var_i32_u32
_A__Mod_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7580
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7580
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7580:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7581
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7582
L7581:
	movl	$100513, %edi
	call	__m3_fault
L7582:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_u32
	.private_extern _A__uMod_param_i32_u32
_A__uMod_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_u32
	.private_extern _A__Mod_param_i32_u32
_A__Mod_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7587
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7587
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7587:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7588
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7589
L7588:
	movl	$100577, %edi
	call	__m3_fault
L7589:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_i8
	.private_extern _A__uMod_var_i32_i8
_A__uMod_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_i8
	.private_extern _A__Mod_var_i32_i8
_A__Mod_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L7594
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7594
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L7594:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_i8
	.private_extern _A__uMod_param_i32_i8
_A__uMod_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_i8
	.private_extern _A__Mod_param_i32_i8
_A__Mod_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	movzbl	-21(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L7599
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7599
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L7599:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_L
	.private_extern _A__uMod_var_i32_L
_A__uMod_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_L
	.private_extern _A__Mod_var_i32_L
_A__Mod_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7604
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7604
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7604:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_L
	.private_extern _A__uMod_param_i32_L
_A__uMod_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_L
	.private_extern _A__Mod_param_i32_L
_A__Mod_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7609
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7609
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7609:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_u64
	.private_extern _A__uMod_var_i32_u64
_A__uMod_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_u64
	.private_extern _A__Mod_var_i32_u64
_A__Mod_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7614
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7614
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7614:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_u64
	.private_extern _A__uMod_param_i32_u64
_A__uMod_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-56(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_u64
	.private_extern _A__Mod_param_i32_u64
_A__Mod_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7619
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7619
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7619:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_u16
	.private_extern _A__uMod_var_i32_u16
_A__uMod_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_u16
	.private_extern _A__Mod_var_i32_u16
_A__Mod_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-24(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	L7624
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	testq	%rax, %rax
	jns	L7624
	movq	-24(%rbp), %rax
	addq	%rax, -40(%rbp)
L7624:
	movq	-40(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7625
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7626
L7625:
	movl	$101025, %edi
	call	__m3_fault
L7626:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_u16
	.private_extern _A__uMod_param_i32_u16
_A__uMod_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_u16
	.private_extern _A__Mod_param_i32_u16
_A__Mod_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -40(%rbp)
	movswq	-22(%rbp),%rdx
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	L7631
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7631
	movq	-32(%rbp), %rax
	addq	%rax, -48(%rbp)
L7631:
	movq	-48(%rbp), %rdx
	movq	%rdx, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L7632
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L7633
L7632:
	movl	$101089, %edi
	call	__m3_fault
L7633:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uMod_var_i32_i32
	.private_extern _A__uMod_var_i32_i32
_A__uMod_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_var_i32_i32
	.private_extern _A__Mod_var_i32_i32
_A__Mod_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -40(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-32(%rbp)
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	L7638
	movq	-40(%rbp), %rax
	xorq	-32(%rbp), %rax
	testq	%rax, %rax
	jns	L7638
	movq	-32(%rbp), %rax
	addq	%rax, -24(%rbp)
L7638:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uMod_param_i32_i32
	.private_extern _A__uMod_param_i32_i32
_A__uMod_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	movq	%rax, -40(%rbp)
	movq	%rdx, %rax
	movl	$0, %edx
	divq	-40(%rbp)
	movq	%rdx, %rax
	leave
	ret
.globl _A__Mod_param_i32_i32
	.private_extern _A__Mod_param_i32_i32
_A__Mod_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	mov	-24(%rbp), %edx
	movq	%rdx, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	%rdx, %rax
	sarq	$63, %rdx
	idivq	-40(%rbp)
	movq	%rdx, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	L7643
	movq	-48(%rbp), %rax
	xorq	-40(%rbp), %rax
	testq	%rax, %rax
	jns	L7643
	movq	-40(%rbp), %rax
	addq	%rax, -32(%rbp)
L7643:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uLT_var_i16_i16
	.private_extern _A__uLT_var_i16_i16
_A__uLT_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_i16_i16
	.private_extern _A__LT_var_i16_i16
_A__LT_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_i16_i16
	.private_extern _A__uLT_param_i16_i16
_A__uLT_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_i16
	.private_extern _A__LT_param_i16_i16
_A__LT_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_LC
	.private_extern _A__uLT_var_i16_LC
_A__uLT_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_LC
	.private_extern _A__LT_var_i16_LC
_A__LT_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_LC
	.private_extern _A__uLT_param_i16_LC
_A__uLT_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_LC
	.private_extern _A__LT_param_i16_LC
_A__LT_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_i64
	.private_extern _A__uLT_var_i16_i64
_A__uLT_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_i64
	.private_extern _A__LT_var_i16_i64
_A__LT_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_i64
	.private_extern _A__uLT_param_i16_i64
_A__uLT_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_i64
	.private_extern _A__LT_param_i16_i64
_A__LT_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_I
	.private_extern _A__uLT_var_i16_I
_A__uLT_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_I
	.private_extern _A__LT_var_i16_I
_A__LT_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_I
	.private_extern _A__uLT_param_i16_I
_A__uLT_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_I
	.private_extern _A__LT_param_i16_I
_A__LT_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_u8
	.private_extern _A__uLT_var_i16_u8
_A__uLT_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_u8
	.private_extern _A__LT_var_i16_u8
_A__LT_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_u8
	.private_extern _A__uLT_param_i16_u8
_A__uLT_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_u8
	.private_extern _A__LT_param_i16_u8
_A__LT_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_C
	.private_extern _A__uLT_var_i16_C
_A__uLT_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_C
	.private_extern _A__LT_var_i16_C
_A__LT_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_C
	.private_extern _A__uLT_param_i16_C
_A__uLT_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_C
	.private_extern _A__LT_param_i16_C
_A__LT_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_u32
	.private_extern _A__uLT_var_i16_u32
_A__uLT_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_u32
	.private_extern _A__LT_var_i16_u32
_A__LT_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_u32
	.private_extern _A__uLT_param_i16_u32
_A__uLT_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_u32
	.private_extern _A__LT_param_i16_u32
_A__LT_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_i8
	.private_extern _A__uLT_var_i16_i8
_A__uLT_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_i8
	.private_extern _A__LT_var_i16_i8
_A__LT_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_i8
	.private_extern _A__uLT_param_i16_i8
_A__uLT_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_i8
	.private_extern _A__LT_param_i16_i8
_A__LT_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_L
	.private_extern _A__uLT_var_i16_L
_A__uLT_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_L
	.private_extern _A__LT_var_i16_L
_A__LT_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_L
	.private_extern _A__uLT_param_i16_L
_A__uLT_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_L
	.private_extern _A__LT_param_i16_L
_A__LT_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_u64
	.private_extern _A__uLT_var_i16_u64
_A__uLT_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_u64
	.private_extern _A__LT_var_i16_u64
_A__LT_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_u64
	.private_extern _A__uLT_param_i16_u64
_A__uLT_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_u64
	.private_extern _A__LT_param_i16_u64
_A__LT_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_u16
	.private_extern _A__uLT_var_i16_u16
_A__uLT_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_u16
	.private_extern _A__LT_var_i16_u16
_A__LT_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_u16
	.private_extern _A__uLT_param_i16_u16
_A__uLT_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_u16
	.private_extern _A__LT_param_i16_u16
_A__LT_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i16_i32
	.private_extern _A__uLT_var_i16_i32
_A__uLT_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i16_i32
	.private_extern _A__LT_var_i16_i32
_A__LT_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i16_i32
	.private_extern _A__uLT_param_i16_i32
_A__uLT_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i16_i32
	.private_extern _A__LT_param_i16_i32
_A__LT_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_i16
	.private_extern _A__uLT_var_LC_i16
_A__uLT_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_i16
	.private_extern _A__LT_var_LC_i16
_A__LT_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_i16
	.private_extern _A__uLT_param_LC_i16
_A__uLT_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_i16
	.private_extern _A__LT_param_LC_i16
_A__LT_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_LC
	.private_extern _A__uLT_var_LC_LC
_A__uLT_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_LC_LC
	.private_extern _A__LT_var_LC_LC
_A__LT_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_LC_LC
	.private_extern _A__uLT_param_LC_LC
_A__uLT_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_LC
	.private_extern _A__LT_param_LC_LC
_A__LT_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_i64
	.private_extern _A__uLT_var_LC_i64
_A__uLT_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_i64
	.private_extern _A__LT_var_LC_i64
_A__LT_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_i64
	.private_extern _A__uLT_param_LC_i64
_A__uLT_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_i64
	.private_extern _A__LT_param_LC_i64
_A__LT_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_I
	.private_extern _A__uLT_var_LC_I
_A__uLT_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_I
	.private_extern _A__LT_var_LC_I
_A__LT_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_I
	.private_extern _A__uLT_param_LC_I
_A__uLT_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_I
	.private_extern _A__LT_param_LC_I
_A__LT_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_u8
	.private_extern _A__uLT_var_LC_u8
_A__uLT_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_u8
	.private_extern _A__LT_var_LC_u8
_A__LT_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_u8
	.private_extern _A__uLT_param_LC_u8
_A__uLT_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_u8
	.private_extern _A__LT_param_LC_u8
_A__LT_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_C
	.private_extern _A__uLT_var_LC_C
_A__uLT_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_C
	.private_extern _A__LT_var_LC_C
_A__LT_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_C
	.private_extern _A__uLT_param_LC_C
_A__uLT_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_C
	.private_extern _A__LT_param_LC_C
_A__LT_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_u32
	.private_extern _A__uLT_var_LC_u32
_A__uLT_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_u32
	.private_extern _A__LT_var_LC_u32
_A__LT_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_u32
	.private_extern _A__uLT_param_LC_u32
_A__uLT_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_u32
	.private_extern _A__LT_param_LC_u32
_A__LT_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_i8
	.private_extern _A__uLT_var_LC_i8
_A__uLT_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_i8
	.private_extern _A__LT_var_LC_i8
_A__LT_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_i8
	.private_extern _A__uLT_param_LC_i8
_A__uLT_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_i8
	.private_extern _A__LT_param_LC_i8
_A__LT_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_L
	.private_extern _A__uLT_var_LC_L
_A__uLT_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_L
	.private_extern _A__LT_var_LC_L
_A__LT_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_L
	.private_extern _A__uLT_param_LC_L
_A__uLT_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_L
	.private_extern _A__LT_param_LC_L
_A__LT_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_u64
	.private_extern _A__uLT_var_LC_u64
_A__uLT_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_u64
	.private_extern _A__LT_var_LC_u64
_A__LT_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_u64
	.private_extern _A__uLT_param_LC_u64
_A__uLT_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_u64
	.private_extern _A__LT_param_LC_u64
_A__LT_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_u16
	.private_extern _A__uLT_var_LC_u16
_A__uLT_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_u16
	.private_extern _A__LT_var_LC_u16
_A__LT_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_u16
	.private_extern _A__uLT_param_LC_u16
_A__uLT_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_u16
	.private_extern _A__LT_param_LC_u16
_A__LT_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_LC_i32
	.private_extern _A__uLT_var_LC_i32
_A__uLT_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_LC_i32
	.private_extern _A__LT_var_LC_i32
_A__LT_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_LC_i32
	.private_extern _A__uLT_param_LC_i32
_A__uLT_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_LC_i32
	.private_extern _A__LT_param_LC_i32
_A__LT_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_f64_f64
	.private_extern _A__LT_var_f64_f64
_A__LT_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_param_f64_f64
	.private_extern _A__LT_param_f64_f64
_A__LT_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm1
	movsd	-32(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_i16
	.private_extern _A__uLT_var_i64_i16
_A__uLT_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_i16
	.private_extern _A__LT_var_i64_i16
_A__LT_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_i16
	.private_extern _A__uLT_param_i64_i16
_A__uLT_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_i16
	.private_extern _A__LT_param_i64_i16
_A__LT_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_LC
	.private_extern _A__uLT_var_i64_LC
_A__uLT_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_LC
	.private_extern _A__LT_var_i64_LC
_A__LT_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_LC
	.private_extern _A__uLT_param_i64_LC
_A__uLT_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_LC
	.private_extern _A__LT_param_i64_LC
_A__LT_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_i64
	.private_extern _A__uLT_var_i64_i64
_A__uLT_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_i64_i64
	.private_extern _A__LT_var_i64_i64
_A__LT_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_i64_i64
	.private_extern _A__uLT_param_i64_i64
_A__uLT_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_i64
	.private_extern _A__LT_param_i64_i64
_A__LT_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_I
	.private_extern _A__uLT_var_i64_I
_A__uLT_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_I
	.private_extern _A__LT_var_i64_I
_A__LT_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_I
	.private_extern _A__uLT_param_i64_I
_A__uLT_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_I
	.private_extern _A__LT_param_i64_I
_A__LT_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_u8
	.private_extern _A__uLT_var_i64_u8
_A__uLT_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_u8
	.private_extern _A__LT_var_i64_u8
_A__LT_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_u8
	.private_extern _A__uLT_param_i64_u8
_A__uLT_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_u8
	.private_extern _A__LT_param_i64_u8
_A__LT_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_C
	.private_extern _A__uLT_var_i64_C
_A__uLT_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_C
	.private_extern _A__LT_var_i64_C
_A__LT_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_C
	.private_extern _A__uLT_param_i64_C
_A__uLT_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_C
	.private_extern _A__LT_param_i64_C
_A__LT_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_u32
	.private_extern _A__uLT_var_i64_u32
_A__uLT_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_u32
	.private_extern _A__LT_var_i64_u32
_A__LT_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_u32
	.private_extern _A__uLT_param_i64_u32
_A__uLT_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_u32
	.private_extern _A__LT_param_i64_u32
_A__LT_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_i8
	.private_extern _A__uLT_var_i64_i8
_A__uLT_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_i8
	.private_extern _A__LT_var_i64_i8
_A__LT_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_i8
	.private_extern _A__uLT_param_i64_i8
_A__uLT_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_i8
	.private_extern _A__LT_param_i64_i8
_A__LT_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_L
	.private_extern _A__uLT_var_i64_L
_A__uLT_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_L
	.private_extern _A__LT_var_i64_L
_A__LT_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_L
	.private_extern _A__uLT_param_i64_L
_A__uLT_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_L
	.private_extern _A__LT_param_i64_L
_A__LT_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_u64
	.private_extern _A__uLT_var_i64_u64
_A__uLT_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_u64
	.private_extern _A__LT_var_i64_u64
_A__LT_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_u64
	.private_extern _A__uLT_param_i64_u64
_A__uLT_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_u64
	.private_extern _A__LT_param_i64_u64
_A__LT_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_u16
	.private_extern _A__uLT_var_i64_u16
_A__uLT_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_u16
	.private_extern _A__LT_var_i64_u16
_A__LT_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_u16
	.private_extern _A__uLT_param_i64_u16
_A__uLT_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_u16
	.private_extern _A__LT_param_i64_u16
_A__LT_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i64_i32
	.private_extern _A__uLT_var_i64_i32
_A__uLT_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i64_i32
	.private_extern _A__LT_var_i64_i32
_A__LT_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i64_i32
	.private_extern _A__uLT_param_i64_i32
_A__uLT_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i64_i32
	.private_extern _A__LT_param_i64_i32
_A__LT_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_i16
	.private_extern _A__uLT_var_I_i16
_A__uLT_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_i16
	.private_extern _A__LT_var_I_i16
_A__LT_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_i16
	.private_extern _A__uLT_param_I_i16
_A__uLT_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_i16
	.private_extern _A__LT_param_I_i16
_A__LT_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_LC
	.private_extern _A__uLT_var_I_LC
_A__uLT_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_LC
	.private_extern _A__LT_var_I_LC
_A__LT_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_LC
	.private_extern _A__uLT_param_I_LC
_A__uLT_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_LC
	.private_extern _A__LT_param_I_LC
_A__LT_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_i64
	.private_extern _A__uLT_var_I_i64
_A__uLT_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_i64
	.private_extern _A__LT_var_I_i64
_A__LT_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_i64
	.private_extern _A__uLT_param_I_i64
_A__uLT_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_i64
	.private_extern _A__LT_param_I_i64
_A__LT_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_I
	.private_extern _A__uLT_var_I_I
_A__uLT_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_I_I
	.private_extern _A__LT_var_I_I
_A__LT_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_I_I
	.private_extern _A__uLT_param_I_I
_A__uLT_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_I
	.private_extern _A__LT_param_I_I
_A__LT_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_u8
	.private_extern _A__uLT_var_I_u8
_A__uLT_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_u8
	.private_extern _A__LT_var_I_u8
_A__LT_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_u8
	.private_extern _A__uLT_param_I_u8
_A__uLT_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_u8
	.private_extern _A__LT_param_I_u8
_A__LT_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_C
	.private_extern _A__uLT_var_I_C
_A__uLT_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_C
	.private_extern _A__LT_var_I_C
_A__LT_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_C
	.private_extern _A__uLT_param_I_C
_A__uLT_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_C
	.private_extern _A__LT_param_I_C
_A__LT_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_u32
	.private_extern _A__uLT_var_I_u32
_A__uLT_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_u32
	.private_extern _A__LT_var_I_u32
_A__LT_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_u32
	.private_extern _A__uLT_param_I_u32
_A__uLT_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_u32
	.private_extern _A__LT_param_I_u32
_A__LT_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_i8
	.private_extern _A__uLT_var_I_i8
_A__uLT_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_i8
	.private_extern _A__LT_var_I_i8
_A__LT_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_i8
	.private_extern _A__uLT_param_I_i8
_A__uLT_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_i8
	.private_extern _A__LT_param_I_i8
_A__LT_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_L
	.private_extern _A__uLT_var_I_L
_A__uLT_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_L
	.private_extern _A__LT_var_I_L
_A__LT_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_L
	.private_extern _A__uLT_param_I_L
_A__uLT_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_L
	.private_extern _A__LT_param_I_L
_A__LT_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_u64
	.private_extern _A__uLT_var_I_u64
_A__uLT_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_u64
	.private_extern _A__LT_var_I_u64
_A__LT_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_u64
	.private_extern _A__uLT_param_I_u64
_A__uLT_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_u64
	.private_extern _A__LT_param_I_u64
_A__LT_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_u16
	.private_extern _A__uLT_var_I_u16
_A__uLT_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_u16
	.private_extern _A__LT_var_I_u16
_A__LT_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_u16
	.private_extern _A__uLT_param_I_u16
_A__uLT_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_u16
	.private_extern _A__LT_param_I_u16
_A__LT_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_I_i32
	.private_extern _A__uLT_var_I_i32
_A__uLT_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_I_i32
	.private_extern _A__LT_var_I_i32
_A__LT_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_I_i32
	.private_extern _A__uLT_param_I_i32
_A__uLT_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_I_i32
	.private_extern _A__LT_param_I_i32
_A__LT_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_i16
	.private_extern _A__uLT_var_u8_i16
_A__uLT_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_i16
	.private_extern _A__LT_var_u8_i16
_A__LT_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_i16
	.private_extern _A__uLT_param_u8_i16
_A__uLT_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_i16
	.private_extern _A__LT_param_u8_i16
_A__LT_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_LC
	.private_extern _A__uLT_var_u8_LC
_A__uLT_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_LC
	.private_extern _A__LT_var_u8_LC
_A__LT_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_LC
	.private_extern _A__uLT_param_u8_LC
_A__uLT_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_LC
	.private_extern _A__LT_param_u8_LC
_A__LT_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_i64
	.private_extern _A__uLT_var_u8_i64
_A__uLT_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_i64
	.private_extern _A__LT_var_u8_i64
_A__LT_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_i64
	.private_extern _A__uLT_param_u8_i64
_A__uLT_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_i64
	.private_extern _A__LT_param_u8_i64
_A__LT_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_I
	.private_extern _A__uLT_var_u8_I
_A__uLT_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_I
	.private_extern _A__LT_var_u8_I
_A__LT_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_I
	.private_extern _A__uLT_param_u8_I
_A__uLT_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_I
	.private_extern _A__LT_param_u8_I
_A__LT_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_u8
	.private_extern _A__uLT_var_u8_u8
_A__uLT_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_u8_u8
	.private_extern _A__LT_var_u8_u8
_A__LT_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_u8_u8
	.private_extern _A__uLT_param_u8_u8
_A__uLT_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_u8
	.private_extern _A__LT_param_u8_u8
_A__LT_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_C
	.private_extern _A__uLT_var_u8_C
_A__uLT_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_C
	.private_extern _A__LT_var_u8_C
_A__LT_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_C
	.private_extern _A__uLT_param_u8_C
_A__uLT_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_C
	.private_extern _A__LT_param_u8_C
_A__LT_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_u32
	.private_extern _A__uLT_var_u8_u32
_A__uLT_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_u32
	.private_extern _A__LT_var_u8_u32
_A__LT_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_u32
	.private_extern _A__uLT_param_u8_u32
_A__uLT_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_u32
	.private_extern _A__LT_param_u8_u32
_A__LT_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_i8
	.private_extern _A__uLT_var_u8_i8
_A__uLT_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_i8
	.private_extern _A__LT_var_u8_i8
_A__LT_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_i8
	.private_extern _A__uLT_param_u8_i8
_A__uLT_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_i8
	.private_extern _A__LT_param_u8_i8
_A__LT_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_L
	.private_extern _A__uLT_var_u8_L
_A__uLT_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_L
	.private_extern _A__LT_var_u8_L
_A__LT_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_L
	.private_extern _A__uLT_param_u8_L
_A__uLT_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_L
	.private_extern _A__LT_param_u8_L
_A__LT_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_u64
	.private_extern _A__uLT_var_u8_u64
_A__uLT_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_u64
	.private_extern _A__LT_var_u8_u64
_A__LT_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_u64
	.private_extern _A__uLT_param_u8_u64
_A__uLT_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_u64
	.private_extern _A__LT_param_u8_u64
_A__LT_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_u16
	.private_extern _A__uLT_var_u8_u16
_A__uLT_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_u16
	.private_extern _A__LT_var_u8_u16
_A__LT_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_u16
	.private_extern _A__uLT_param_u8_u16
_A__uLT_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_u16
	.private_extern _A__LT_param_u8_u16
_A__LT_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u8_i32
	.private_extern _A__uLT_var_u8_i32
_A__uLT_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u8_i32
	.private_extern _A__LT_var_u8_i32
_A__LT_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u8_i32
	.private_extern _A__uLT_param_u8_i32
_A__uLT_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u8_i32
	.private_extern _A__LT_param_u8_i32
_A__LT_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_i16
	.private_extern _A__uLT_var_C_i16
_A__uLT_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_i16
	.private_extern _A__LT_var_C_i16
_A__LT_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_i16
	.private_extern _A__uLT_param_C_i16
_A__uLT_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_i16
	.private_extern _A__LT_param_C_i16
_A__LT_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_LC
	.private_extern _A__uLT_var_C_LC
_A__uLT_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_LC
	.private_extern _A__LT_var_C_LC
_A__LT_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_LC
	.private_extern _A__uLT_param_C_LC
_A__uLT_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_LC
	.private_extern _A__LT_param_C_LC
_A__LT_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_i64
	.private_extern _A__uLT_var_C_i64
_A__uLT_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_i64
	.private_extern _A__LT_var_C_i64
_A__LT_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_i64
	.private_extern _A__uLT_param_C_i64
_A__uLT_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_i64
	.private_extern _A__LT_param_C_i64
_A__LT_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_I
	.private_extern _A__uLT_var_C_I
_A__uLT_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_I
	.private_extern _A__LT_var_C_I
_A__LT_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_I
	.private_extern _A__uLT_param_C_I
_A__uLT_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_I
	.private_extern _A__LT_param_C_I
_A__LT_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_u8
	.private_extern _A__uLT_var_C_u8
_A__uLT_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_u8
	.private_extern _A__LT_var_C_u8
_A__LT_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_u8
	.private_extern _A__uLT_param_C_u8
_A__uLT_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_u8
	.private_extern _A__LT_param_C_u8
_A__LT_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_C
	.private_extern _A__uLT_var_C_C
_A__uLT_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_C_C
	.private_extern _A__LT_var_C_C
_A__LT_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_C_C
	.private_extern _A__uLT_param_C_C
_A__uLT_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_C
	.private_extern _A__LT_param_C_C
_A__LT_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_u32
	.private_extern _A__uLT_var_C_u32
_A__uLT_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_u32
	.private_extern _A__LT_var_C_u32
_A__LT_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_u32
	.private_extern _A__uLT_param_C_u32
_A__uLT_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_u32
	.private_extern _A__LT_param_C_u32
_A__LT_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_i8
	.private_extern _A__uLT_var_C_i8
_A__uLT_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_i8
	.private_extern _A__LT_var_C_i8
_A__LT_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_i8
	.private_extern _A__uLT_param_C_i8
_A__uLT_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_i8
	.private_extern _A__LT_param_C_i8
_A__LT_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_L
	.private_extern _A__uLT_var_C_L
_A__uLT_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_L
	.private_extern _A__LT_var_C_L
_A__LT_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_L
	.private_extern _A__uLT_param_C_L
_A__uLT_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_L
	.private_extern _A__LT_param_C_L
_A__LT_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_u64
	.private_extern _A__uLT_var_C_u64
_A__uLT_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_u64
	.private_extern _A__LT_var_C_u64
_A__LT_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_u64
	.private_extern _A__uLT_param_C_u64
_A__uLT_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_u64
	.private_extern _A__LT_param_C_u64
_A__LT_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_u16
	.private_extern _A__uLT_var_C_u16
_A__uLT_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_u16
	.private_extern _A__LT_var_C_u16
_A__LT_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_u16
	.private_extern _A__uLT_param_C_u16
_A__uLT_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_u16
	.private_extern _A__LT_param_C_u16
_A__LT_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_C_i32
	.private_extern _A__uLT_var_C_i32
_A__uLT_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_C_i32
	.private_extern _A__LT_var_C_i32
_A__LT_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_C_i32
	.private_extern _A__uLT_param_C_i32
_A__uLT_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_C_i32
	.private_extern _A__LT_param_C_i32
_A__LT_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_f32_f32
	.private_extern _A__LT_var_f32_f32
_A__LT_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_param_f32_f32
	.private_extern _A__LT_param_f32_f32
_A__LT_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm1
	movss	-24(%rbp), %xmm0
	ucomiss	%xmm1, %xmm0
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_i16
	.private_extern _A__uLT_var_u32_i16
_A__uLT_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_i16
	.private_extern _A__LT_var_u32_i16
_A__LT_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_i16
	.private_extern _A__uLT_param_u32_i16
_A__uLT_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_i16
	.private_extern _A__LT_param_u32_i16
_A__LT_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_LC
	.private_extern _A__uLT_var_u32_LC
_A__uLT_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_LC
	.private_extern _A__LT_var_u32_LC
_A__LT_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_LC
	.private_extern _A__uLT_param_u32_LC
_A__uLT_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_LC
	.private_extern _A__LT_param_u32_LC
_A__LT_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_i64
	.private_extern _A__uLT_var_u32_i64
_A__uLT_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_i64
	.private_extern _A__LT_var_u32_i64
_A__LT_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_i64
	.private_extern _A__uLT_param_u32_i64
_A__uLT_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_i64
	.private_extern _A__LT_param_u32_i64
_A__LT_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_I
	.private_extern _A__uLT_var_u32_I
_A__uLT_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_I
	.private_extern _A__LT_var_u32_I
_A__LT_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_I
	.private_extern _A__uLT_param_u32_I
_A__uLT_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_I
	.private_extern _A__LT_param_u32_I
_A__LT_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_u8
	.private_extern _A__uLT_var_u32_u8
_A__uLT_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_u8
	.private_extern _A__LT_var_u32_u8
_A__LT_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_u8
	.private_extern _A__uLT_param_u32_u8
_A__uLT_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_u8
	.private_extern _A__LT_param_u32_u8
_A__LT_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_C
	.private_extern _A__uLT_var_u32_C
_A__uLT_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_C
	.private_extern _A__LT_var_u32_C
_A__LT_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_C
	.private_extern _A__uLT_param_u32_C
_A__uLT_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_C
	.private_extern _A__LT_param_u32_C
_A__LT_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_u32
	.private_extern _A__uLT_var_u32_u32
_A__uLT_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_u32_u32
	.private_extern _A__LT_var_u32_u32
_A__LT_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_u32_u32
	.private_extern _A__uLT_param_u32_u32
_A__uLT_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_u32
	.private_extern _A__LT_param_u32_u32
_A__LT_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_i8
	.private_extern _A__uLT_var_u32_i8
_A__uLT_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_i8
	.private_extern _A__LT_var_u32_i8
_A__LT_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_i8
	.private_extern _A__uLT_param_u32_i8
_A__uLT_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_i8
	.private_extern _A__LT_param_u32_i8
_A__LT_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_L
	.private_extern _A__uLT_var_u32_L
_A__uLT_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_L
	.private_extern _A__LT_var_u32_L
_A__LT_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_L
	.private_extern _A__uLT_param_u32_L
_A__uLT_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_L
	.private_extern _A__LT_param_u32_L
_A__LT_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_u64
	.private_extern _A__uLT_var_u32_u64
_A__uLT_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_u64
	.private_extern _A__LT_var_u32_u64
_A__LT_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_u64
	.private_extern _A__uLT_param_u32_u64
_A__uLT_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_u64
	.private_extern _A__LT_param_u32_u64
_A__LT_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_u16
	.private_extern _A__uLT_var_u32_u16
_A__uLT_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_u16
	.private_extern _A__LT_var_u32_u16
_A__LT_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_u16
	.private_extern _A__uLT_param_u32_u16
_A__uLT_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_u16
	.private_extern _A__LT_param_u32_u16
_A__LT_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u32_i32
	.private_extern _A__uLT_var_u32_i32
_A__uLT_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u32_i32
	.private_extern _A__LT_var_u32_i32
_A__LT_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u32_i32
	.private_extern _A__uLT_param_u32_i32
_A__uLT_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u32_i32
	.private_extern _A__LT_param_u32_i32
_A__LT_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_i16
	.private_extern _A__uLT_var_i8_i16
_A__uLT_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_i16
	.private_extern _A__LT_var_i8_i16
_A__LT_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_i16
	.private_extern _A__uLT_param_i8_i16
_A__uLT_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_i16
	.private_extern _A__LT_param_i8_i16
_A__LT_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_LC
	.private_extern _A__uLT_var_i8_LC
_A__uLT_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_LC
	.private_extern _A__LT_var_i8_LC
_A__LT_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_LC
	.private_extern _A__uLT_param_i8_LC
_A__uLT_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_LC
	.private_extern _A__LT_param_i8_LC
_A__LT_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_i64
	.private_extern _A__uLT_var_i8_i64
_A__uLT_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_i64
	.private_extern _A__LT_var_i8_i64
_A__LT_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_i64
	.private_extern _A__uLT_param_i8_i64
_A__uLT_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_i64
	.private_extern _A__LT_param_i8_i64
_A__LT_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_I
	.private_extern _A__uLT_var_i8_I
_A__uLT_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_I
	.private_extern _A__LT_var_i8_I
_A__LT_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_I
	.private_extern _A__uLT_param_i8_I
_A__uLT_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_I
	.private_extern _A__LT_param_i8_I
_A__LT_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_u8
	.private_extern _A__uLT_var_i8_u8
_A__uLT_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_u8
	.private_extern _A__LT_var_i8_u8
_A__LT_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_u8
	.private_extern _A__uLT_param_i8_u8
_A__uLT_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_u8
	.private_extern _A__LT_param_i8_u8
_A__LT_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_C
	.private_extern _A__uLT_var_i8_C
_A__uLT_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_C
	.private_extern _A__LT_var_i8_C
_A__LT_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_C
	.private_extern _A__uLT_param_i8_C
_A__uLT_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_C
	.private_extern _A__LT_param_i8_C
_A__LT_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_u32
	.private_extern _A__uLT_var_i8_u32
_A__uLT_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_u32
	.private_extern _A__LT_var_i8_u32
_A__LT_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_u32
	.private_extern _A__uLT_param_i8_u32
_A__uLT_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_u32
	.private_extern _A__LT_param_i8_u32
_A__LT_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_i8
	.private_extern _A__uLT_var_i8_i8
_A__uLT_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_i8_i8
	.private_extern _A__LT_var_i8_i8
_A__LT_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_i8_i8
	.private_extern _A__uLT_param_i8_i8
_A__uLT_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_i8
	.private_extern _A__LT_param_i8_i8
_A__LT_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_L
	.private_extern _A__uLT_var_i8_L
_A__uLT_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_L
	.private_extern _A__LT_var_i8_L
_A__LT_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_L
	.private_extern _A__uLT_param_i8_L
_A__uLT_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_L
	.private_extern _A__LT_param_i8_L
_A__LT_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_u64
	.private_extern _A__uLT_var_i8_u64
_A__uLT_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_u64
	.private_extern _A__LT_var_i8_u64
_A__LT_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_u64
	.private_extern _A__uLT_param_i8_u64
_A__uLT_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_u64
	.private_extern _A__LT_param_i8_u64
_A__LT_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_u16
	.private_extern _A__uLT_var_i8_u16
_A__uLT_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_u16
	.private_extern _A__LT_var_i8_u16
_A__LT_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_u16
	.private_extern _A__uLT_param_i8_u16
_A__uLT_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_u16
	.private_extern _A__LT_param_i8_u16
_A__LT_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i8_i32
	.private_extern _A__uLT_var_i8_i32
_A__uLT_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i8_i32
	.private_extern _A__LT_var_i8_i32
_A__LT_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i8_i32
	.private_extern _A__uLT_param_i8_i32
_A__uLT_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i8_i32
	.private_extern _A__LT_param_i8_i32
_A__LT_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_i16
	.private_extern _A__uLT_var_L_i16
_A__uLT_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_i16
	.private_extern _A__LT_var_L_i16
_A__LT_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_i16
	.private_extern _A__uLT_param_L_i16
_A__uLT_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_i16
	.private_extern _A__LT_param_L_i16
_A__LT_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_LC
	.private_extern _A__uLT_var_L_LC
_A__uLT_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_LC
	.private_extern _A__LT_var_L_LC
_A__LT_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_LC
	.private_extern _A__uLT_param_L_LC
_A__uLT_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_LC
	.private_extern _A__LT_param_L_LC
_A__LT_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_i64
	.private_extern _A__uLT_var_L_i64
_A__uLT_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_i64
	.private_extern _A__LT_var_L_i64
_A__LT_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_i64
	.private_extern _A__uLT_param_L_i64
_A__uLT_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_i64
	.private_extern _A__LT_param_L_i64
_A__LT_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_I
	.private_extern _A__uLT_var_L_I
_A__uLT_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_I
	.private_extern _A__LT_var_L_I
_A__LT_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_I
	.private_extern _A__uLT_param_L_I
_A__uLT_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_I
	.private_extern _A__LT_param_L_I
_A__LT_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_u8
	.private_extern _A__uLT_var_L_u8
_A__uLT_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_u8
	.private_extern _A__LT_var_L_u8
_A__LT_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_u8
	.private_extern _A__uLT_param_L_u8
_A__uLT_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_u8
	.private_extern _A__LT_param_L_u8
_A__LT_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_C
	.private_extern _A__uLT_var_L_C
_A__uLT_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_C
	.private_extern _A__LT_var_L_C
_A__LT_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_C
	.private_extern _A__uLT_param_L_C
_A__uLT_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_C
	.private_extern _A__LT_param_L_C
_A__LT_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_u32
	.private_extern _A__uLT_var_L_u32
_A__uLT_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_u32
	.private_extern _A__LT_var_L_u32
_A__LT_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_u32
	.private_extern _A__uLT_param_L_u32
_A__uLT_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_u32
	.private_extern _A__LT_param_L_u32
_A__LT_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_i8
	.private_extern _A__uLT_var_L_i8
_A__uLT_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_i8
	.private_extern _A__LT_var_L_i8
_A__LT_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_i8
	.private_extern _A__uLT_param_L_i8
_A__uLT_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_i8
	.private_extern _A__LT_param_L_i8
_A__LT_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_L
	.private_extern _A__uLT_var_L_L
_A__uLT_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_L_L
	.private_extern _A__LT_var_L_L
_A__LT_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_L_L
	.private_extern _A__uLT_param_L_L
_A__uLT_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_L
	.private_extern _A__LT_param_L_L
_A__LT_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_u64
	.private_extern _A__uLT_var_L_u64
_A__uLT_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_u64
	.private_extern _A__LT_var_L_u64
_A__LT_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_u64
	.private_extern _A__uLT_param_L_u64
_A__uLT_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_u64
	.private_extern _A__LT_param_L_u64
_A__LT_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_u16
	.private_extern _A__uLT_var_L_u16
_A__uLT_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_u16
	.private_extern _A__LT_var_L_u16
_A__LT_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_u16
	.private_extern _A__uLT_param_L_u16
_A__uLT_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_u16
	.private_extern _A__LT_param_L_u16
_A__LT_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_L_i32
	.private_extern _A__uLT_var_L_i32
_A__uLT_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_L_i32
	.private_extern _A__LT_var_L_i32
_A__LT_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_L_i32
	.private_extern _A__uLT_param_L_i32
_A__uLT_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_L_i32
	.private_extern _A__LT_param_L_i32
_A__LT_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_i16
	.private_extern _A__uLT_var_u64_i16
_A__uLT_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_i16
	.private_extern _A__LT_var_u64_i16
_A__LT_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_i16
	.private_extern _A__uLT_param_u64_i16
_A__uLT_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_i16
	.private_extern _A__LT_param_u64_i16
_A__LT_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_LC
	.private_extern _A__uLT_var_u64_LC
_A__uLT_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_LC
	.private_extern _A__LT_var_u64_LC
_A__LT_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_LC
	.private_extern _A__uLT_param_u64_LC
_A__uLT_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_LC
	.private_extern _A__LT_param_u64_LC
_A__LT_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_i64
	.private_extern _A__uLT_var_u64_i64
_A__uLT_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_i64
	.private_extern _A__LT_var_u64_i64
_A__LT_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_i64
	.private_extern _A__uLT_param_u64_i64
_A__uLT_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_i64
	.private_extern _A__LT_param_u64_i64
_A__LT_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_I
	.private_extern _A__uLT_var_u64_I
_A__uLT_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_I
	.private_extern _A__LT_var_u64_I
_A__LT_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_I
	.private_extern _A__uLT_param_u64_I
_A__uLT_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_I
	.private_extern _A__LT_param_u64_I
_A__LT_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_u8
	.private_extern _A__uLT_var_u64_u8
_A__uLT_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_u8
	.private_extern _A__LT_var_u64_u8
_A__LT_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_u8
	.private_extern _A__uLT_param_u64_u8
_A__uLT_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_u8
	.private_extern _A__LT_param_u64_u8
_A__LT_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_C
	.private_extern _A__uLT_var_u64_C
_A__uLT_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_C
	.private_extern _A__LT_var_u64_C
_A__LT_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_C
	.private_extern _A__uLT_param_u64_C
_A__uLT_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_C
	.private_extern _A__LT_param_u64_C
_A__LT_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_u32
	.private_extern _A__uLT_var_u64_u32
_A__uLT_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_u32
	.private_extern _A__LT_var_u64_u32
_A__LT_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_u32
	.private_extern _A__uLT_param_u64_u32
_A__uLT_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_u32
	.private_extern _A__LT_param_u64_u32
_A__LT_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_i8
	.private_extern _A__uLT_var_u64_i8
_A__uLT_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_i8
	.private_extern _A__LT_var_u64_i8
_A__LT_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_i8
	.private_extern _A__uLT_param_u64_i8
_A__uLT_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_i8
	.private_extern _A__LT_param_u64_i8
_A__LT_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_L
	.private_extern _A__uLT_var_u64_L
_A__uLT_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_L
	.private_extern _A__LT_var_u64_L
_A__LT_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_L
	.private_extern _A__uLT_param_u64_L
_A__uLT_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_L
	.private_extern _A__LT_param_u64_L
_A__LT_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_u64
	.private_extern _A__uLT_var_u64_u64
_A__uLT_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_u64_u64
	.private_extern _A__LT_var_u64_u64
_A__LT_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_u64_u64
	.private_extern _A__uLT_param_u64_u64
_A__uLT_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_u64
	.private_extern _A__LT_param_u64_u64
_A__LT_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_u16
	.private_extern _A__uLT_var_u64_u16
_A__uLT_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_u16
	.private_extern _A__LT_var_u64_u16
_A__LT_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_u16
	.private_extern _A__uLT_param_u64_u16
_A__uLT_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_u16
	.private_extern _A__LT_param_u64_u16
_A__LT_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u64_i32
	.private_extern _A__uLT_var_u64_i32
_A__uLT_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u64_i32
	.private_extern _A__LT_var_u64_i32
_A__LT_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u64_i32
	.private_extern _A__uLT_param_u64_i32
_A__uLT_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u64_i32
	.private_extern _A__LT_param_u64_i32
_A__LT_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_i16
	.private_extern _A__uLT_var_u16_i16
_A__uLT_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_i16
	.private_extern _A__LT_var_u16_i16
_A__LT_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_i16
	.private_extern _A__uLT_param_u16_i16
_A__uLT_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_i16
	.private_extern _A__LT_param_u16_i16
_A__LT_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_LC
	.private_extern _A__uLT_var_u16_LC
_A__uLT_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_LC
	.private_extern _A__LT_var_u16_LC
_A__LT_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_LC
	.private_extern _A__uLT_param_u16_LC
_A__uLT_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_LC
	.private_extern _A__LT_param_u16_LC
_A__LT_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_i64
	.private_extern _A__uLT_var_u16_i64
_A__uLT_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_i64
	.private_extern _A__LT_var_u16_i64
_A__LT_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_i64
	.private_extern _A__uLT_param_u16_i64
_A__uLT_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_i64
	.private_extern _A__LT_param_u16_i64
_A__LT_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_I
	.private_extern _A__uLT_var_u16_I
_A__uLT_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_I
	.private_extern _A__LT_var_u16_I
_A__LT_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_I
	.private_extern _A__uLT_param_u16_I
_A__uLT_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_I
	.private_extern _A__LT_param_u16_I
_A__LT_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_u8
	.private_extern _A__uLT_var_u16_u8
_A__uLT_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_u8
	.private_extern _A__LT_var_u16_u8
_A__LT_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_u8
	.private_extern _A__uLT_param_u16_u8
_A__uLT_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_u8
	.private_extern _A__LT_param_u16_u8
_A__LT_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_C
	.private_extern _A__uLT_var_u16_C
_A__uLT_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_C
	.private_extern _A__LT_var_u16_C
_A__LT_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_C
	.private_extern _A__uLT_param_u16_C
_A__uLT_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_C
	.private_extern _A__LT_param_u16_C
_A__LT_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_u32
	.private_extern _A__uLT_var_u16_u32
_A__uLT_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_u32
	.private_extern _A__LT_var_u16_u32
_A__LT_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_u32
	.private_extern _A__uLT_param_u16_u32
_A__uLT_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_u32
	.private_extern _A__LT_param_u16_u32
_A__LT_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_i8
	.private_extern _A__uLT_var_u16_i8
_A__uLT_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_i8
	.private_extern _A__LT_var_u16_i8
_A__LT_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_i8
	.private_extern _A__uLT_param_u16_i8
_A__uLT_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_i8
	.private_extern _A__LT_param_u16_i8
_A__LT_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_L
	.private_extern _A__uLT_var_u16_L
_A__uLT_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_L
	.private_extern _A__LT_var_u16_L
_A__LT_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_L
	.private_extern _A__uLT_param_u16_L
_A__uLT_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_L
	.private_extern _A__LT_param_u16_L
_A__LT_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_u64
	.private_extern _A__uLT_var_u16_u64
_A__uLT_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_u64
	.private_extern _A__LT_var_u16_u64
_A__LT_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_u64
	.private_extern _A__uLT_param_u16_u64
_A__uLT_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_u64
	.private_extern _A__LT_param_u16_u64
_A__LT_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_u16
	.private_extern _A__uLT_var_u16_u16
_A__uLT_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_u16_u16
	.private_extern _A__LT_var_u16_u16
_A__LT_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_u16_u16
	.private_extern _A__uLT_param_u16_u16
_A__uLT_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_u16
	.private_extern _A__LT_param_u16_u16
_A__LT_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_u16_i32
	.private_extern _A__uLT_var_u16_i32
_A__uLT_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_u16_i32
	.private_extern _A__LT_var_u16_i32
_A__LT_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_u16_i32
	.private_extern _A__uLT_param_u16_i32
_A__uLT_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_u16_i32
	.private_extern _A__LT_param_u16_i32
_A__LT_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_i16
	.private_extern _A__uLT_var_i32_i16
_A__uLT_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_i16
	.private_extern _A__LT_var_i32_i16
_A__LT_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_i16
	.private_extern _A__uLT_param_i32_i16
_A__uLT_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_i16
	.private_extern _A__LT_param_i32_i16
_A__LT_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_LC
	.private_extern _A__uLT_var_i32_LC
_A__uLT_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_LC
	.private_extern _A__LT_var_i32_LC
_A__LT_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_LC
	.private_extern _A__uLT_param_i32_LC
_A__uLT_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_LC
	.private_extern _A__LT_param_i32_LC
_A__LT_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_i64
	.private_extern _A__uLT_var_i32_i64
_A__uLT_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_i64
	.private_extern _A__LT_var_i32_i64
_A__LT_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_i64
	.private_extern _A__uLT_param_i32_i64
_A__uLT_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_i64
	.private_extern _A__LT_param_i32_i64
_A__LT_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_I
	.private_extern _A__uLT_var_i32_I
_A__uLT_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_I
	.private_extern _A__LT_var_i32_I
_A__LT_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_I
	.private_extern _A__uLT_param_i32_I
_A__uLT_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_I
	.private_extern _A__LT_param_i32_I
_A__LT_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_u8
	.private_extern _A__uLT_var_i32_u8
_A__uLT_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_u8
	.private_extern _A__LT_var_i32_u8
_A__LT_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_u8
	.private_extern _A__uLT_param_i32_u8
_A__uLT_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_u8
	.private_extern _A__LT_param_i32_u8
_A__LT_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_C
	.private_extern _A__uLT_var_i32_C
_A__uLT_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_C
	.private_extern _A__LT_var_i32_C
_A__LT_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_C
	.private_extern _A__uLT_param_i32_C
_A__uLT_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_C
	.private_extern _A__LT_param_i32_C
_A__LT_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_u32
	.private_extern _A__uLT_var_i32_u32
_A__uLT_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_u32
	.private_extern _A__LT_var_i32_u32
_A__LT_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_u32
	.private_extern _A__uLT_param_i32_u32
_A__uLT_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_u32
	.private_extern _A__LT_param_i32_u32
_A__LT_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_i8
	.private_extern _A__uLT_var_i32_i8
_A__uLT_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_i8
	.private_extern _A__LT_var_i32_i8
_A__LT_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_i8
	.private_extern _A__uLT_param_i32_i8
_A__uLT_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_i8
	.private_extern _A__LT_param_i32_i8
_A__LT_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_L
	.private_extern _A__uLT_var_i32_L
_A__uLT_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_L
	.private_extern _A__LT_var_i32_L
_A__LT_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_L
	.private_extern _A__uLT_param_i32_L
_A__uLT_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_L
	.private_extern _A__LT_param_i32_L
_A__LT_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_u64
	.private_extern _A__uLT_var_i32_u64
_A__uLT_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_u64
	.private_extern _A__LT_var_i32_u64
_A__LT_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_u64
	.private_extern _A__uLT_param_i32_u64
_A__uLT_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_u64
	.private_extern _A__LT_param_i32_u64
_A__LT_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_u16
	.private_extern _A__uLT_var_i32_u16
_A__uLT_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_var_i32_u16
	.private_extern _A__LT_var_i32_u16
_A__LT_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_param_i32_u16
	.private_extern _A__uLT_param_i32_u16
_A__uLT_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_u16
	.private_extern _A__LT_param_i32_u16
_A__LT_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLT_var_i32_i32
	.private_extern _A__uLT_var_i32_i32
_A__uLT_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__LT_var_i32_i32
	.private_extern _A__LT_var_i32_i32
_A__LT_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uLT_param_i32_i32
	.private_extern _A__uLT_param_i32_i32
_A__uLT_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LT_param_i32_i32
	.private_extern _A__LT_param_i32_i32
_A__LT_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_i16
	.private_extern _A__uLE_var_i16_i16
_A__uLE_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_i16_i16
	.private_extern _A__LE_var_i16_i16
_A__LE_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_i16_i16
	.private_extern _A__uLE_param_i16_i16
_A__uLE_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_i16
	.private_extern _A__LE_param_i16_i16
_A__LE_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_LC
	.private_extern _A__uLE_var_i16_LC
_A__uLE_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_LC
	.private_extern _A__LE_var_i16_LC
_A__LE_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_LC
	.private_extern _A__uLE_param_i16_LC
_A__uLE_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_LC
	.private_extern _A__LE_param_i16_LC
_A__LE_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_i64
	.private_extern _A__uLE_var_i16_i64
_A__uLE_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_i64
	.private_extern _A__LE_var_i16_i64
_A__LE_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_i64
	.private_extern _A__uLE_param_i16_i64
_A__uLE_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_i64
	.private_extern _A__LE_param_i16_i64
_A__LE_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_I
	.private_extern _A__uLE_var_i16_I
_A__uLE_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_I
	.private_extern _A__LE_var_i16_I
_A__LE_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_I
	.private_extern _A__uLE_param_i16_I
_A__uLE_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_I
	.private_extern _A__LE_param_i16_I
_A__LE_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_u8
	.private_extern _A__uLE_var_i16_u8
_A__uLE_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_u8
	.private_extern _A__LE_var_i16_u8
_A__LE_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_u8
	.private_extern _A__uLE_param_i16_u8
_A__uLE_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_u8
	.private_extern _A__LE_param_i16_u8
_A__LE_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_C
	.private_extern _A__uLE_var_i16_C
_A__uLE_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_C
	.private_extern _A__LE_var_i16_C
_A__LE_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_C
	.private_extern _A__uLE_param_i16_C
_A__uLE_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_C
	.private_extern _A__LE_param_i16_C
_A__LE_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_u32
	.private_extern _A__uLE_var_i16_u32
_A__uLE_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_u32
	.private_extern _A__LE_var_i16_u32
_A__LE_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_u32
	.private_extern _A__uLE_param_i16_u32
_A__uLE_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_u32
	.private_extern _A__LE_param_i16_u32
_A__LE_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_i8
	.private_extern _A__uLE_var_i16_i8
_A__uLE_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_i8
	.private_extern _A__LE_var_i16_i8
_A__LE_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_i8
	.private_extern _A__uLE_param_i16_i8
_A__uLE_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_i8
	.private_extern _A__LE_param_i16_i8
_A__LE_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_L
	.private_extern _A__uLE_var_i16_L
_A__uLE_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_L
	.private_extern _A__LE_var_i16_L
_A__LE_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_L
	.private_extern _A__uLE_param_i16_L
_A__uLE_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_L
	.private_extern _A__LE_param_i16_L
_A__LE_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_u64
	.private_extern _A__uLE_var_i16_u64
_A__uLE_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_u64
	.private_extern _A__LE_var_i16_u64
_A__LE_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_u64
	.private_extern _A__uLE_param_i16_u64
_A__uLE_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_u64
	.private_extern _A__LE_param_i16_u64
_A__LE_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_u16
	.private_extern _A__uLE_var_i16_u16
_A__uLE_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_u16
	.private_extern _A__LE_var_i16_u16
_A__LE_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_u16
	.private_extern _A__uLE_param_i16_u16
_A__uLE_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_u16
	.private_extern _A__LE_param_i16_u16
_A__LE_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i16_i32
	.private_extern _A__uLE_var_i16_i32
_A__uLE_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i16_i32
	.private_extern _A__LE_var_i16_i32
_A__LE_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i16_i32
	.private_extern _A__uLE_param_i16_i32
_A__uLE_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i16_i32
	.private_extern _A__LE_param_i16_i32
_A__LE_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_i16
	.private_extern _A__uLE_var_LC_i16
_A__uLE_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_i16
	.private_extern _A__LE_var_LC_i16
_A__LE_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_i16
	.private_extern _A__uLE_param_LC_i16
_A__uLE_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_i16
	.private_extern _A__LE_param_LC_i16
_A__LE_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_LC
	.private_extern _A__uLE_var_LC_LC
_A__uLE_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_LC_LC
	.private_extern _A__LE_var_LC_LC
_A__LE_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_LC_LC
	.private_extern _A__uLE_param_LC_LC
_A__uLE_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_LC
	.private_extern _A__LE_param_LC_LC
_A__LE_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_i64
	.private_extern _A__uLE_var_LC_i64
_A__uLE_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_i64
	.private_extern _A__LE_var_LC_i64
_A__LE_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_i64
	.private_extern _A__uLE_param_LC_i64
_A__uLE_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_i64
	.private_extern _A__LE_param_LC_i64
_A__LE_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_I
	.private_extern _A__uLE_var_LC_I
_A__uLE_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_I
	.private_extern _A__LE_var_LC_I
_A__LE_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_I
	.private_extern _A__uLE_param_LC_I
_A__uLE_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_I
	.private_extern _A__LE_param_LC_I
_A__LE_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_u8
	.private_extern _A__uLE_var_LC_u8
_A__uLE_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_u8
	.private_extern _A__LE_var_LC_u8
_A__LE_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_u8
	.private_extern _A__uLE_param_LC_u8
_A__uLE_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_u8
	.private_extern _A__LE_param_LC_u8
_A__LE_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_C
	.private_extern _A__uLE_var_LC_C
_A__uLE_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_C
	.private_extern _A__LE_var_LC_C
_A__LE_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_C
	.private_extern _A__uLE_param_LC_C
_A__uLE_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_C
	.private_extern _A__LE_param_LC_C
_A__LE_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_u32
	.private_extern _A__uLE_var_LC_u32
_A__uLE_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_u32
	.private_extern _A__LE_var_LC_u32
_A__LE_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_u32
	.private_extern _A__uLE_param_LC_u32
_A__uLE_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_u32
	.private_extern _A__LE_param_LC_u32
_A__LE_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_i8
	.private_extern _A__uLE_var_LC_i8
_A__uLE_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_i8
	.private_extern _A__LE_var_LC_i8
_A__LE_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_i8
	.private_extern _A__uLE_param_LC_i8
_A__uLE_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_i8
	.private_extern _A__LE_param_LC_i8
_A__LE_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_L
	.private_extern _A__uLE_var_LC_L
_A__uLE_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_L
	.private_extern _A__LE_var_LC_L
_A__LE_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_L
	.private_extern _A__uLE_param_LC_L
_A__uLE_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_L
	.private_extern _A__LE_param_LC_L
_A__LE_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_u64
	.private_extern _A__uLE_var_LC_u64
_A__uLE_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_u64
	.private_extern _A__LE_var_LC_u64
_A__LE_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_u64
	.private_extern _A__uLE_param_LC_u64
_A__uLE_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_u64
	.private_extern _A__LE_param_LC_u64
_A__LE_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_u16
	.private_extern _A__uLE_var_LC_u16
_A__uLE_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_u16
	.private_extern _A__LE_var_LC_u16
_A__LE_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_u16
	.private_extern _A__uLE_param_LC_u16
_A__uLE_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_u16
	.private_extern _A__LE_param_LC_u16
_A__LE_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_LC_i32
	.private_extern _A__uLE_var_LC_i32
_A__uLE_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_LC_i32
	.private_extern _A__LE_var_LC_i32
_A__LE_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_LC_i32
	.private_extern _A__uLE_param_LC_i32
_A__uLE_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_LC_i32
	.private_extern _A__LE_param_LC_i32
_A__LE_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_f64_f64
	.private_extern _A__LE_var_f64_f64
_A__LE_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	ucomisd	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_f64_f64
	.private_extern _A__LE_param_f64_f64
_A__LE_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm1
	movsd	-32(%rbp), %xmm0
	ucomisd	%xmm1, %xmm0
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_i16
	.private_extern _A__uLE_var_i64_i16
_A__uLE_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_i16
	.private_extern _A__LE_var_i64_i16
_A__LE_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_i16
	.private_extern _A__uLE_param_i64_i16
_A__uLE_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_i16
	.private_extern _A__LE_param_i64_i16
_A__LE_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_LC
	.private_extern _A__uLE_var_i64_LC
_A__uLE_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_LC
	.private_extern _A__LE_var_i64_LC
_A__LE_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_LC
	.private_extern _A__uLE_param_i64_LC
_A__uLE_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_LC
	.private_extern _A__LE_param_i64_LC
_A__LE_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_i64
	.private_extern _A__uLE_var_i64_i64
_A__uLE_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_i64_i64
	.private_extern _A__LE_var_i64_i64
_A__LE_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_i64_i64
	.private_extern _A__uLE_param_i64_i64
_A__uLE_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_i64
	.private_extern _A__LE_param_i64_i64
_A__LE_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_I
	.private_extern _A__uLE_var_i64_I
_A__uLE_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_I
	.private_extern _A__LE_var_i64_I
_A__LE_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_I
	.private_extern _A__uLE_param_i64_I
_A__uLE_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_I
	.private_extern _A__LE_param_i64_I
_A__LE_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_u8
	.private_extern _A__uLE_var_i64_u8
_A__uLE_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_u8
	.private_extern _A__LE_var_i64_u8
_A__LE_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_u8
	.private_extern _A__uLE_param_i64_u8
_A__uLE_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_u8
	.private_extern _A__LE_param_i64_u8
_A__LE_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_C
	.private_extern _A__uLE_var_i64_C
_A__uLE_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_C
	.private_extern _A__LE_var_i64_C
_A__LE_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_C
	.private_extern _A__uLE_param_i64_C
_A__uLE_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_C
	.private_extern _A__LE_param_i64_C
_A__LE_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_u32
	.private_extern _A__uLE_var_i64_u32
_A__uLE_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_u32
	.private_extern _A__LE_var_i64_u32
_A__LE_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_u32
	.private_extern _A__uLE_param_i64_u32
_A__uLE_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_u32
	.private_extern _A__LE_param_i64_u32
_A__LE_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_i8
	.private_extern _A__uLE_var_i64_i8
_A__uLE_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_i8
	.private_extern _A__LE_var_i64_i8
_A__LE_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_i8
	.private_extern _A__uLE_param_i64_i8
_A__uLE_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_i8
	.private_extern _A__LE_param_i64_i8
_A__LE_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_L
	.private_extern _A__uLE_var_i64_L
_A__uLE_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_L
	.private_extern _A__LE_var_i64_L
_A__LE_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_L
	.private_extern _A__uLE_param_i64_L
_A__uLE_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_L
	.private_extern _A__LE_param_i64_L
_A__LE_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_u64
	.private_extern _A__uLE_var_i64_u64
_A__uLE_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_u64
	.private_extern _A__LE_var_i64_u64
_A__LE_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_u64
	.private_extern _A__uLE_param_i64_u64
_A__uLE_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_u64
	.private_extern _A__LE_param_i64_u64
_A__LE_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_u16
	.private_extern _A__uLE_var_i64_u16
_A__uLE_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_u16
	.private_extern _A__LE_var_i64_u16
_A__LE_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_u16
	.private_extern _A__uLE_param_i64_u16
_A__uLE_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_u16
	.private_extern _A__LE_param_i64_u16
_A__LE_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i64_i32
	.private_extern _A__uLE_var_i64_i32
_A__uLE_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i64_i32
	.private_extern _A__LE_var_i64_i32
_A__LE_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i64_i32
	.private_extern _A__uLE_param_i64_i32
_A__uLE_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i64_i32
	.private_extern _A__LE_param_i64_i32
_A__LE_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_i16
	.private_extern _A__uLE_var_I_i16
_A__uLE_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_i16
	.private_extern _A__LE_var_I_i16
_A__LE_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_i16
	.private_extern _A__uLE_param_I_i16
_A__uLE_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_i16
	.private_extern _A__LE_param_I_i16
_A__LE_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_LC
	.private_extern _A__uLE_var_I_LC
_A__uLE_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_LC
	.private_extern _A__LE_var_I_LC
_A__LE_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_LC
	.private_extern _A__uLE_param_I_LC
_A__uLE_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_LC
	.private_extern _A__LE_param_I_LC
_A__LE_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_i64
	.private_extern _A__uLE_var_I_i64
_A__uLE_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_i64
	.private_extern _A__LE_var_I_i64
_A__LE_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_i64
	.private_extern _A__uLE_param_I_i64
_A__uLE_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_i64
	.private_extern _A__LE_param_I_i64
_A__LE_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_I
	.private_extern _A__uLE_var_I_I
_A__uLE_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_I_I
	.private_extern _A__LE_var_I_I
_A__LE_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_I_I
	.private_extern _A__uLE_param_I_I
_A__uLE_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_I
	.private_extern _A__LE_param_I_I
_A__LE_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_u8
	.private_extern _A__uLE_var_I_u8
_A__uLE_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_u8
	.private_extern _A__LE_var_I_u8
_A__LE_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_u8
	.private_extern _A__uLE_param_I_u8
_A__uLE_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_u8
	.private_extern _A__LE_param_I_u8
_A__LE_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_C
	.private_extern _A__uLE_var_I_C
_A__uLE_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_C
	.private_extern _A__LE_var_I_C
_A__LE_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_C
	.private_extern _A__uLE_param_I_C
_A__uLE_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_C
	.private_extern _A__LE_param_I_C
_A__LE_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_u32
	.private_extern _A__uLE_var_I_u32
_A__uLE_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_u32
	.private_extern _A__LE_var_I_u32
_A__LE_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_u32
	.private_extern _A__uLE_param_I_u32
_A__uLE_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_u32
	.private_extern _A__LE_param_I_u32
_A__LE_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_i8
	.private_extern _A__uLE_var_I_i8
_A__uLE_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_i8
	.private_extern _A__LE_var_I_i8
_A__LE_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_i8
	.private_extern _A__uLE_param_I_i8
_A__uLE_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_i8
	.private_extern _A__LE_param_I_i8
_A__LE_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_L
	.private_extern _A__uLE_var_I_L
_A__uLE_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_L
	.private_extern _A__LE_var_I_L
_A__LE_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_L
	.private_extern _A__uLE_param_I_L
_A__uLE_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_L
	.private_extern _A__LE_param_I_L
_A__LE_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_u64
	.private_extern _A__uLE_var_I_u64
_A__uLE_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_u64
	.private_extern _A__LE_var_I_u64
_A__LE_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_u64
	.private_extern _A__uLE_param_I_u64
_A__uLE_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_u64
	.private_extern _A__LE_param_I_u64
_A__LE_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_u16
	.private_extern _A__uLE_var_I_u16
_A__uLE_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_u16
	.private_extern _A__LE_var_I_u16
_A__LE_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_u16
	.private_extern _A__uLE_param_I_u16
_A__uLE_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_u16
	.private_extern _A__LE_param_I_u16
_A__LE_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_I_i32
	.private_extern _A__uLE_var_I_i32
_A__uLE_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_I_i32
	.private_extern _A__LE_var_I_i32
_A__LE_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_I_i32
	.private_extern _A__uLE_param_I_i32
_A__uLE_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_I_i32
	.private_extern _A__LE_param_I_i32
_A__LE_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_i16
	.private_extern _A__uLE_var_u8_i16
_A__uLE_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_i16
	.private_extern _A__LE_var_u8_i16
_A__LE_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_i16
	.private_extern _A__uLE_param_u8_i16
_A__uLE_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_i16
	.private_extern _A__LE_param_u8_i16
_A__LE_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_LC
	.private_extern _A__uLE_var_u8_LC
_A__uLE_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_LC
	.private_extern _A__LE_var_u8_LC
_A__LE_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_LC
	.private_extern _A__uLE_param_u8_LC
_A__uLE_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_LC
	.private_extern _A__LE_param_u8_LC
_A__LE_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_i64
	.private_extern _A__uLE_var_u8_i64
_A__uLE_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_i64
	.private_extern _A__LE_var_u8_i64
_A__LE_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_i64
	.private_extern _A__uLE_param_u8_i64
_A__uLE_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_i64
	.private_extern _A__LE_param_u8_i64
_A__LE_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_I
	.private_extern _A__uLE_var_u8_I
_A__uLE_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_I
	.private_extern _A__LE_var_u8_I
_A__LE_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_I
	.private_extern _A__uLE_param_u8_I
_A__uLE_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_I
	.private_extern _A__LE_param_u8_I
_A__LE_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_u8
	.private_extern _A__uLE_var_u8_u8
_A__uLE_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_u8_u8
	.private_extern _A__LE_var_u8_u8
_A__LE_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_u8_u8
	.private_extern _A__uLE_param_u8_u8
_A__uLE_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_u8
	.private_extern _A__LE_param_u8_u8
_A__LE_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_C
	.private_extern _A__uLE_var_u8_C
_A__uLE_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_C
	.private_extern _A__LE_var_u8_C
_A__LE_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_C
	.private_extern _A__uLE_param_u8_C
_A__uLE_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_C
	.private_extern _A__LE_param_u8_C
_A__LE_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_u32
	.private_extern _A__uLE_var_u8_u32
_A__uLE_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_u32
	.private_extern _A__LE_var_u8_u32
_A__LE_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_u32
	.private_extern _A__uLE_param_u8_u32
_A__uLE_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_u32
	.private_extern _A__LE_param_u8_u32
_A__LE_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_i8
	.private_extern _A__uLE_var_u8_i8
_A__uLE_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_i8
	.private_extern _A__LE_var_u8_i8
_A__LE_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_i8
	.private_extern _A__uLE_param_u8_i8
_A__uLE_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_i8
	.private_extern _A__LE_param_u8_i8
_A__LE_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_L
	.private_extern _A__uLE_var_u8_L
_A__uLE_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_L
	.private_extern _A__LE_var_u8_L
_A__LE_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_L
	.private_extern _A__uLE_param_u8_L
_A__uLE_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_L
	.private_extern _A__LE_param_u8_L
_A__LE_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_u64
	.private_extern _A__uLE_var_u8_u64
_A__uLE_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_u64
	.private_extern _A__LE_var_u8_u64
_A__LE_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_u64
	.private_extern _A__uLE_param_u8_u64
_A__uLE_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_u64
	.private_extern _A__LE_param_u8_u64
_A__LE_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_u16
	.private_extern _A__uLE_var_u8_u16
_A__uLE_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_u16
	.private_extern _A__LE_var_u8_u16
_A__LE_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_u16
	.private_extern _A__uLE_param_u8_u16
_A__uLE_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_u16
	.private_extern _A__LE_param_u8_u16
_A__LE_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u8_i32
	.private_extern _A__uLE_var_u8_i32
_A__uLE_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u8_i32
	.private_extern _A__LE_var_u8_i32
_A__LE_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u8_i32
	.private_extern _A__uLE_param_u8_i32
_A__uLE_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u8_i32
	.private_extern _A__LE_param_u8_i32
_A__LE_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_i16
	.private_extern _A__uLE_var_C_i16
_A__uLE_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_i16
	.private_extern _A__LE_var_C_i16
_A__LE_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_i16
	.private_extern _A__uLE_param_C_i16
_A__uLE_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_i16
	.private_extern _A__LE_param_C_i16
_A__LE_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_LC
	.private_extern _A__uLE_var_C_LC
_A__uLE_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_LC
	.private_extern _A__LE_var_C_LC
_A__LE_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_LC
	.private_extern _A__uLE_param_C_LC
_A__uLE_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_LC
	.private_extern _A__LE_param_C_LC
_A__LE_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_i64
	.private_extern _A__uLE_var_C_i64
_A__uLE_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_i64
	.private_extern _A__LE_var_C_i64
_A__LE_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_i64
	.private_extern _A__uLE_param_C_i64
_A__uLE_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_i64
	.private_extern _A__LE_param_C_i64
_A__LE_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_I
	.private_extern _A__uLE_var_C_I
_A__uLE_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_I
	.private_extern _A__LE_var_C_I
_A__LE_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_I
	.private_extern _A__uLE_param_C_I
_A__uLE_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_I
	.private_extern _A__LE_param_C_I
_A__LE_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_u8
	.private_extern _A__uLE_var_C_u8
_A__uLE_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_u8
	.private_extern _A__LE_var_C_u8
_A__LE_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_u8
	.private_extern _A__uLE_param_C_u8
_A__uLE_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_u8
	.private_extern _A__LE_param_C_u8
_A__LE_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_C
	.private_extern _A__uLE_var_C_C
_A__uLE_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_C_C
	.private_extern _A__LE_var_C_C
_A__LE_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_C_C
	.private_extern _A__uLE_param_C_C
_A__uLE_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_C
	.private_extern _A__LE_param_C_C
_A__LE_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_u32
	.private_extern _A__uLE_var_C_u32
_A__uLE_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_u32
	.private_extern _A__LE_var_C_u32
_A__LE_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_u32
	.private_extern _A__uLE_param_C_u32
_A__uLE_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_u32
	.private_extern _A__LE_param_C_u32
_A__LE_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_i8
	.private_extern _A__uLE_var_C_i8
_A__uLE_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_i8
	.private_extern _A__LE_var_C_i8
_A__LE_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_i8
	.private_extern _A__uLE_param_C_i8
_A__uLE_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_i8
	.private_extern _A__LE_param_C_i8
_A__LE_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_L
	.private_extern _A__uLE_var_C_L
_A__uLE_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_L
	.private_extern _A__LE_var_C_L
_A__LE_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_L
	.private_extern _A__uLE_param_C_L
_A__uLE_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_L
	.private_extern _A__LE_param_C_L
_A__LE_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_u64
	.private_extern _A__uLE_var_C_u64
_A__uLE_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_u64
	.private_extern _A__LE_var_C_u64
_A__LE_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_u64
	.private_extern _A__uLE_param_C_u64
_A__uLE_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_u64
	.private_extern _A__LE_param_C_u64
_A__LE_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_u16
	.private_extern _A__uLE_var_C_u16
_A__uLE_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_u16
	.private_extern _A__LE_var_C_u16
_A__LE_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_u16
	.private_extern _A__uLE_param_C_u16
_A__uLE_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_u16
	.private_extern _A__LE_param_C_u16
_A__LE_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_C_i32
	.private_extern _A__uLE_var_C_i32
_A__uLE_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_C_i32
	.private_extern _A__LE_var_C_i32
_A__LE_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_C_i32
	.private_extern _A__uLE_param_C_i32
_A__uLE_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_C_i32
	.private_extern _A__LE_param_C_i32
_A__LE_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_f32_f32
	.private_extern _A__LE_var_f32_f32
_A__LE_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	ucomiss	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_f32_f32
	.private_extern _A__LE_param_f32_f32
_A__LE_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm1
	movss	-24(%rbp), %xmm0
	ucomiss	%xmm1, %xmm0
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_i16
	.private_extern _A__uLE_var_u32_i16
_A__uLE_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_i16
	.private_extern _A__LE_var_u32_i16
_A__LE_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_i16
	.private_extern _A__uLE_param_u32_i16
_A__uLE_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_i16
	.private_extern _A__LE_param_u32_i16
_A__LE_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_LC
	.private_extern _A__uLE_var_u32_LC
_A__uLE_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_LC
	.private_extern _A__LE_var_u32_LC
_A__LE_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_LC
	.private_extern _A__uLE_param_u32_LC
_A__uLE_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_LC
	.private_extern _A__LE_param_u32_LC
_A__LE_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_i64
	.private_extern _A__uLE_var_u32_i64
_A__uLE_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_i64
	.private_extern _A__LE_var_u32_i64
_A__LE_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_i64
	.private_extern _A__uLE_param_u32_i64
_A__uLE_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_i64
	.private_extern _A__LE_param_u32_i64
_A__LE_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_I
	.private_extern _A__uLE_var_u32_I
_A__uLE_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_I
	.private_extern _A__LE_var_u32_I
_A__LE_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_I
	.private_extern _A__uLE_param_u32_I
_A__uLE_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_I
	.private_extern _A__LE_param_u32_I
_A__LE_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_u8
	.private_extern _A__uLE_var_u32_u8
_A__uLE_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_u8
	.private_extern _A__LE_var_u32_u8
_A__LE_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_u8
	.private_extern _A__uLE_param_u32_u8
_A__uLE_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_u8
	.private_extern _A__LE_param_u32_u8
_A__LE_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_C
	.private_extern _A__uLE_var_u32_C
_A__uLE_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_C
	.private_extern _A__LE_var_u32_C
_A__LE_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_C
	.private_extern _A__uLE_param_u32_C
_A__uLE_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_C
	.private_extern _A__LE_param_u32_C
_A__LE_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_u32
	.private_extern _A__uLE_var_u32_u32
_A__uLE_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_u32_u32
	.private_extern _A__LE_var_u32_u32
_A__LE_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_u32_u32
	.private_extern _A__uLE_param_u32_u32
_A__uLE_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_u32
	.private_extern _A__LE_param_u32_u32
_A__LE_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_i8
	.private_extern _A__uLE_var_u32_i8
_A__uLE_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_i8
	.private_extern _A__LE_var_u32_i8
_A__LE_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_i8
	.private_extern _A__uLE_param_u32_i8
_A__uLE_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_i8
	.private_extern _A__LE_param_u32_i8
_A__LE_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_L
	.private_extern _A__uLE_var_u32_L
_A__uLE_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_L
	.private_extern _A__LE_var_u32_L
_A__LE_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_L
	.private_extern _A__uLE_param_u32_L
_A__uLE_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_L
	.private_extern _A__LE_param_u32_L
_A__LE_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_u64
	.private_extern _A__uLE_var_u32_u64
_A__uLE_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_u64
	.private_extern _A__LE_var_u32_u64
_A__LE_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_u64
	.private_extern _A__uLE_param_u32_u64
_A__uLE_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_u64
	.private_extern _A__LE_param_u32_u64
_A__LE_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_u16
	.private_extern _A__uLE_var_u32_u16
_A__uLE_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_u16
	.private_extern _A__LE_var_u32_u16
_A__LE_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_u16
	.private_extern _A__uLE_param_u32_u16
_A__uLE_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_u16
	.private_extern _A__LE_param_u32_u16
_A__LE_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u32_i32
	.private_extern _A__uLE_var_u32_i32
_A__uLE_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u32_i32
	.private_extern _A__LE_var_u32_i32
_A__LE_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u32_i32
	.private_extern _A__uLE_param_u32_i32
_A__uLE_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u32_i32
	.private_extern _A__LE_param_u32_i32
_A__LE_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_i16
	.private_extern _A__uLE_var_i8_i16
_A__uLE_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_i16
	.private_extern _A__LE_var_i8_i16
_A__LE_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_i16
	.private_extern _A__uLE_param_i8_i16
_A__uLE_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_i16
	.private_extern _A__LE_param_i8_i16
_A__LE_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_LC
	.private_extern _A__uLE_var_i8_LC
_A__uLE_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_LC
	.private_extern _A__LE_var_i8_LC
_A__LE_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_LC
	.private_extern _A__uLE_param_i8_LC
_A__uLE_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_LC
	.private_extern _A__LE_param_i8_LC
_A__LE_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_i64
	.private_extern _A__uLE_var_i8_i64
_A__uLE_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_i64
	.private_extern _A__LE_var_i8_i64
_A__LE_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_i64
	.private_extern _A__uLE_param_i8_i64
_A__uLE_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_i64
	.private_extern _A__LE_param_i8_i64
_A__LE_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_I
	.private_extern _A__uLE_var_i8_I
_A__uLE_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_I
	.private_extern _A__LE_var_i8_I
_A__LE_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_I
	.private_extern _A__uLE_param_i8_I
_A__uLE_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_I
	.private_extern _A__LE_param_i8_I
_A__LE_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_u8
	.private_extern _A__uLE_var_i8_u8
_A__uLE_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_u8
	.private_extern _A__LE_var_i8_u8
_A__LE_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_u8
	.private_extern _A__uLE_param_i8_u8
_A__uLE_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_u8
	.private_extern _A__LE_param_i8_u8
_A__LE_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_C
	.private_extern _A__uLE_var_i8_C
_A__uLE_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_C
	.private_extern _A__LE_var_i8_C
_A__LE_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_C
	.private_extern _A__uLE_param_i8_C
_A__uLE_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_C
	.private_extern _A__LE_param_i8_C
_A__LE_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_u32
	.private_extern _A__uLE_var_i8_u32
_A__uLE_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_u32
	.private_extern _A__LE_var_i8_u32
_A__LE_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_u32
	.private_extern _A__uLE_param_i8_u32
_A__uLE_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_u32
	.private_extern _A__LE_param_i8_u32
_A__LE_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_i8
	.private_extern _A__uLE_var_i8_i8
_A__uLE_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_i8_i8
	.private_extern _A__LE_var_i8_i8
_A__LE_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_i8_i8
	.private_extern _A__uLE_param_i8_i8
_A__uLE_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_i8
	.private_extern _A__LE_param_i8_i8
_A__LE_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_L
	.private_extern _A__uLE_var_i8_L
_A__uLE_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_L
	.private_extern _A__LE_var_i8_L
_A__LE_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_L
	.private_extern _A__uLE_param_i8_L
_A__uLE_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_L
	.private_extern _A__LE_param_i8_L
_A__LE_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_u64
	.private_extern _A__uLE_var_i8_u64
_A__uLE_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_u64
	.private_extern _A__LE_var_i8_u64
_A__LE_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_u64
	.private_extern _A__uLE_param_i8_u64
_A__uLE_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_u64
	.private_extern _A__LE_param_i8_u64
_A__LE_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_u16
	.private_extern _A__uLE_var_i8_u16
_A__uLE_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_u16
	.private_extern _A__LE_var_i8_u16
_A__LE_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_u16
	.private_extern _A__uLE_param_i8_u16
_A__uLE_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_u16
	.private_extern _A__LE_param_i8_u16
_A__LE_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i8_i32
	.private_extern _A__uLE_var_i8_i32
_A__uLE_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i8_i32
	.private_extern _A__LE_var_i8_i32
_A__LE_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i8_i32
	.private_extern _A__uLE_param_i8_i32
_A__uLE_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i8_i32
	.private_extern _A__LE_param_i8_i32
_A__LE_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_i16
	.private_extern _A__uLE_var_L_i16
_A__uLE_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_i16
	.private_extern _A__LE_var_L_i16
_A__LE_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_i16
	.private_extern _A__uLE_param_L_i16
_A__uLE_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_i16
	.private_extern _A__LE_param_L_i16
_A__LE_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_LC
	.private_extern _A__uLE_var_L_LC
_A__uLE_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_LC
	.private_extern _A__LE_var_L_LC
_A__LE_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_LC
	.private_extern _A__uLE_param_L_LC
_A__uLE_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_LC
	.private_extern _A__LE_param_L_LC
_A__LE_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_i64
	.private_extern _A__uLE_var_L_i64
_A__uLE_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_i64
	.private_extern _A__LE_var_L_i64
_A__LE_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_i64
	.private_extern _A__uLE_param_L_i64
_A__uLE_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_i64
	.private_extern _A__LE_param_L_i64
_A__LE_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_I
	.private_extern _A__uLE_var_L_I
_A__uLE_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_I
	.private_extern _A__LE_var_L_I
_A__LE_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_I
	.private_extern _A__uLE_param_L_I
_A__uLE_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_I
	.private_extern _A__LE_param_L_I
_A__LE_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_u8
	.private_extern _A__uLE_var_L_u8
_A__uLE_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_u8
	.private_extern _A__LE_var_L_u8
_A__LE_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_u8
	.private_extern _A__uLE_param_L_u8
_A__uLE_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_u8
	.private_extern _A__LE_param_L_u8
_A__LE_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_C
	.private_extern _A__uLE_var_L_C
_A__uLE_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_C
	.private_extern _A__LE_var_L_C
_A__LE_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_C
	.private_extern _A__uLE_param_L_C
_A__uLE_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_C
	.private_extern _A__LE_param_L_C
_A__LE_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_u32
	.private_extern _A__uLE_var_L_u32
_A__uLE_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_u32
	.private_extern _A__LE_var_L_u32
_A__LE_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_u32
	.private_extern _A__uLE_param_L_u32
_A__uLE_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_u32
	.private_extern _A__LE_param_L_u32
_A__LE_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_i8
	.private_extern _A__uLE_var_L_i8
_A__uLE_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_i8
	.private_extern _A__LE_var_L_i8
_A__LE_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_i8
	.private_extern _A__uLE_param_L_i8
_A__uLE_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_i8
	.private_extern _A__LE_param_L_i8
_A__LE_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_L
	.private_extern _A__uLE_var_L_L
_A__uLE_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_L_L
	.private_extern _A__LE_var_L_L
_A__LE_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_L_L
	.private_extern _A__uLE_param_L_L
_A__uLE_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_L
	.private_extern _A__LE_param_L_L
_A__LE_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_u64
	.private_extern _A__uLE_var_L_u64
_A__uLE_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_u64
	.private_extern _A__LE_var_L_u64
_A__LE_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_u64
	.private_extern _A__uLE_param_L_u64
_A__uLE_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_u64
	.private_extern _A__LE_param_L_u64
_A__LE_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_u16
	.private_extern _A__uLE_var_L_u16
_A__uLE_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_u16
	.private_extern _A__LE_var_L_u16
_A__LE_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_u16
	.private_extern _A__uLE_param_L_u16
_A__uLE_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_u16
	.private_extern _A__LE_param_L_u16
_A__LE_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_L_i32
	.private_extern _A__uLE_var_L_i32
_A__uLE_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_L_i32
	.private_extern _A__LE_var_L_i32
_A__LE_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_L_i32
	.private_extern _A__uLE_param_L_i32
_A__uLE_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_L_i32
	.private_extern _A__LE_param_L_i32
_A__LE_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_i16
	.private_extern _A__uLE_var_u64_i16
_A__uLE_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_i16
	.private_extern _A__LE_var_u64_i16
_A__LE_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_i16
	.private_extern _A__uLE_param_u64_i16
_A__uLE_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_i16
	.private_extern _A__LE_param_u64_i16
_A__LE_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_LC
	.private_extern _A__uLE_var_u64_LC
_A__uLE_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_LC
	.private_extern _A__LE_var_u64_LC
_A__LE_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_LC
	.private_extern _A__uLE_param_u64_LC
_A__uLE_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_LC
	.private_extern _A__LE_param_u64_LC
_A__LE_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_i64
	.private_extern _A__uLE_var_u64_i64
_A__uLE_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_i64
	.private_extern _A__LE_var_u64_i64
_A__LE_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_i64
	.private_extern _A__uLE_param_u64_i64
_A__uLE_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_i64
	.private_extern _A__LE_param_u64_i64
_A__LE_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_I
	.private_extern _A__uLE_var_u64_I
_A__uLE_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_I
	.private_extern _A__LE_var_u64_I
_A__LE_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_I
	.private_extern _A__uLE_param_u64_I
_A__uLE_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_I
	.private_extern _A__LE_param_u64_I
_A__LE_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_u8
	.private_extern _A__uLE_var_u64_u8
_A__uLE_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_u8
	.private_extern _A__LE_var_u64_u8
_A__LE_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_u8
	.private_extern _A__uLE_param_u64_u8
_A__uLE_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_u8
	.private_extern _A__LE_param_u64_u8
_A__LE_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_C
	.private_extern _A__uLE_var_u64_C
_A__uLE_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_C
	.private_extern _A__LE_var_u64_C
_A__LE_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_C
	.private_extern _A__uLE_param_u64_C
_A__uLE_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_C
	.private_extern _A__LE_param_u64_C
_A__LE_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_u32
	.private_extern _A__uLE_var_u64_u32
_A__uLE_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_u32
	.private_extern _A__LE_var_u64_u32
_A__LE_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_u32
	.private_extern _A__uLE_param_u64_u32
_A__uLE_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_u32
	.private_extern _A__LE_param_u64_u32
_A__LE_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_i8
	.private_extern _A__uLE_var_u64_i8
_A__uLE_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_i8
	.private_extern _A__LE_var_u64_i8
_A__LE_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_i8
	.private_extern _A__uLE_param_u64_i8
_A__uLE_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_i8
	.private_extern _A__LE_param_u64_i8
_A__LE_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_L
	.private_extern _A__uLE_var_u64_L
_A__uLE_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_L
	.private_extern _A__LE_var_u64_L
_A__LE_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_L
	.private_extern _A__uLE_param_u64_L
_A__uLE_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_L
	.private_extern _A__LE_param_u64_L
_A__LE_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_u64
	.private_extern _A__uLE_var_u64_u64
_A__uLE_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_u64_u64
	.private_extern _A__LE_var_u64_u64
_A__LE_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_u64_u64
	.private_extern _A__uLE_param_u64_u64
_A__uLE_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_u64
	.private_extern _A__LE_param_u64_u64
_A__LE_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_u16
	.private_extern _A__uLE_var_u64_u16
_A__uLE_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_u16
	.private_extern _A__LE_var_u64_u16
_A__LE_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_u16
	.private_extern _A__uLE_param_u64_u16
_A__uLE_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_u16
	.private_extern _A__LE_param_u64_u16
_A__LE_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u64_i32
	.private_extern _A__uLE_var_u64_i32
_A__uLE_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u64_i32
	.private_extern _A__LE_var_u64_i32
_A__LE_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u64_i32
	.private_extern _A__uLE_param_u64_i32
_A__uLE_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u64_i32
	.private_extern _A__LE_param_u64_i32
_A__LE_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_i16
	.private_extern _A__uLE_var_u16_i16
_A__uLE_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_i16
	.private_extern _A__LE_var_u16_i16
_A__LE_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_i16
	.private_extern _A__uLE_param_u16_i16
_A__uLE_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_i16
	.private_extern _A__LE_param_u16_i16
_A__LE_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_LC
	.private_extern _A__uLE_var_u16_LC
_A__uLE_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_LC
	.private_extern _A__LE_var_u16_LC
_A__LE_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_LC
	.private_extern _A__uLE_param_u16_LC
_A__uLE_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_LC
	.private_extern _A__LE_param_u16_LC
_A__LE_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_i64
	.private_extern _A__uLE_var_u16_i64
_A__uLE_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_i64
	.private_extern _A__LE_var_u16_i64
_A__LE_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_i64
	.private_extern _A__uLE_param_u16_i64
_A__uLE_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_i64
	.private_extern _A__LE_param_u16_i64
_A__LE_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_I
	.private_extern _A__uLE_var_u16_I
_A__uLE_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_I
	.private_extern _A__LE_var_u16_I
_A__LE_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_I
	.private_extern _A__uLE_param_u16_I
_A__uLE_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_I
	.private_extern _A__LE_param_u16_I
_A__LE_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_u8
	.private_extern _A__uLE_var_u16_u8
_A__uLE_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_u8
	.private_extern _A__LE_var_u16_u8
_A__LE_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_u8
	.private_extern _A__uLE_param_u16_u8
_A__uLE_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_u8
	.private_extern _A__LE_param_u16_u8
_A__LE_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_C
	.private_extern _A__uLE_var_u16_C
_A__uLE_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_C
	.private_extern _A__LE_var_u16_C
_A__LE_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_C
	.private_extern _A__uLE_param_u16_C
_A__uLE_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_C
	.private_extern _A__LE_param_u16_C
_A__LE_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_u32
	.private_extern _A__uLE_var_u16_u32
_A__uLE_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_u32
	.private_extern _A__LE_var_u16_u32
_A__LE_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_u32
	.private_extern _A__uLE_param_u16_u32
_A__uLE_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_u32
	.private_extern _A__LE_param_u16_u32
_A__LE_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_i8
	.private_extern _A__uLE_var_u16_i8
_A__uLE_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_i8
	.private_extern _A__LE_var_u16_i8
_A__LE_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_i8
	.private_extern _A__uLE_param_u16_i8
_A__uLE_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_i8
	.private_extern _A__LE_param_u16_i8
_A__LE_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_L
	.private_extern _A__uLE_var_u16_L
_A__uLE_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_L
	.private_extern _A__LE_var_u16_L
_A__LE_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_L
	.private_extern _A__uLE_param_u16_L
_A__uLE_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_L
	.private_extern _A__LE_param_u16_L
_A__LE_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_u64
	.private_extern _A__uLE_var_u16_u64
_A__uLE_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_u64
	.private_extern _A__LE_var_u16_u64
_A__LE_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_u64
	.private_extern _A__uLE_param_u16_u64
_A__uLE_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_u64
	.private_extern _A__LE_param_u16_u64
_A__LE_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_u16
	.private_extern _A__uLE_var_u16_u16
_A__uLE_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_u16_u16
	.private_extern _A__LE_var_u16_u16
_A__LE_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_u16_u16
	.private_extern _A__uLE_param_u16_u16
_A__uLE_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_u16
	.private_extern _A__LE_param_u16_u16
_A__LE_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_u16_i32
	.private_extern _A__uLE_var_u16_i32
_A__uLE_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_u16_i32
	.private_extern _A__LE_var_u16_i32
_A__LE_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_u16_i32
	.private_extern _A__uLE_param_u16_i32
_A__uLE_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_u16_i32
	.private_extern _A__LE_param_u16_i32
_A__LE_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_i16
	.private_extern _A__uLE_var_i32_i16
_A__uLE_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_i16
	.private_extern _A__LE_var_i32_i16
_A__LE_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_i16
	.private_extern _A__uLE_param_i32_i16
_A__uLE_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_i16
	.private_extern _A__LE_param_i32_i16
_A__LE_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_LC
	.private_extern _A__uLE_var_i32_LC
_A__uLE_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_LC
	.private_extern _A__LE_var_i32_LC
_A__LE_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_LC
	.private_extern _A__uLE_param_i32_LC
_A__uLE_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_LC
	.private_extern _A__LE_param_i32_LC
_A__LE_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_i64
	.private_extern _A__uLE_var_i32_i64
_A__uLE_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_i64
	.private_extern _A__LE_var_i32_i64
_A__LE_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_i64
	.private_extern _A__uLE_param_i32_i64
_A__uLE_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_i64
	.private_extern _A__LE_param_i32_i64
_A__LE_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_I
	.private_extern _A__uLE_var_i32_I
_A__uLE_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_I
	.private_extern _A__LE_var_i32_I
_A__LE_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_I
	.private_extern _A__uLE_param_i32_I
_A__uLE_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_I
	.private_extern _A__LE_param_i32_I
_A__LE_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_u8
	.private_extern _A__uLE_var_i32_u8
_A__uLE_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_u8
	.private_extern _A__LE_var_i32_u8
_A__LE_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_u8
	.private_extern _A__uLE_param_i32_u8
_A__uLE_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_u8
	.private_extern _A__LE_param_i32_u8
_A__LE_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_C
	.private_extern _A__uLE_var_i32_C
_A__uLE_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_C
	.private_extern _A__LE_var_i32_C
_A__LE_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_C
	.private_extern _A__uLE_param_i32_C
_A__uLE_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_C
	.private_extern _A__LE_param_i32_C
_A__LE_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_u32
	.private_extern _A__uLE_var_i32_u32
_A__uLE_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_u32
	.private_extern _A__LE_var_i32_u32
_A__LE_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_u32
	.private_extern _A__uLE_param_i32_u32
_A__uLE_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_u32
	.private_extern _A__LE_param_i32_u32
_A__LE_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_i8
	.private_extern _A__uLE_var_i32_i8
_A__uLE_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_i8
	.private_extern _A__LE_var_i32_i8
_A__LE_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_i8
	.private_extern _A__uLE_param_i32_i8
_A__uLE_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_i8
	.private_extern _A__LE_param_i32_i8
_A__LE_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_L
	.private_extern _A__uLE_var_i32_L
_A__uLE_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_L
	.private_extern _A__LE_var_i32_L
_A__LE_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_L
	.private_extern _A__uLE_param_i32_L
_A__uLE_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_L
	.private_extern _A__LE_param_i32_L
_A__LE_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_u64
	.private_extern _A__uLE_var_i32_u64
_A__uLE_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_u64
	.private_extern _A__LE_var_i32_u64
_A__LE_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_u64
	.private_extern _A__uLE_param_i32_u64
_A__uLE_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_u64
	.private_extern _A__LE_param_i32_u64
_A__LE_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_u16
	.private_extern _A__uLE_var_i32_u16
_A__uLE_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_var_i32_u16
	.private_extern _A__LE_var_i32_u16
_A__LE_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_param_i32_u16
	.private_extern _A__uLE_param_i32_u16
_A__uLE_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_u16
	.private_extern _A__LE_param_i32_u16
_A__LE_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uLE_var_i32_i32
	.private_extern _A__uLE_var_i32_i32
_A__uLE_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__LE_var_i32_i32
	.private_extern _A__LE_var_i32_i32
_A__LE_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uLE_param_i32_i32
	.private_extern _A__uLE_param_i32_i32
_A__uLE_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__LE_param_i32_i32
	.private_extern _A__LE_param_i32_i32
_A__LE_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_i16
	.private_extern _A__uGT_var_i16_i16
_A__uGT_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_i16_i16
	.private_extern _A__GT_var_i16_i16
_A__GT_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_i16_i16
	.private_extern _A__uGT_param_i16_i16
_A__uGT_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_i16
	.private_extern _A__GT_param_i16_i16
_A__GT_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_LC
	.private_extern _A__uGT_var_i16_LC
_A__uGT_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_LC
	.private_extern _A__GT_var_i16_LC
_A__GT_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_LC
	.private_extern _A__uGT_param_i16_LC
_A__uGT_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_LC
	.private_extern _A__GT_param_i16_LC
_A__GT_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_i64
	.private_extern _A__uGT_var_i16_i64
_A__uGT_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_i64
	.private_extern _A__GT_var_i16_i64
_A__GT_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_i64
	.private_extern _A__uGT_param_i16_i64
_A__uGT_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_i64
	.private_extern _A__GT_param_i16_i64
_A__GT_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_I
	.private_extern _A__uGT_var_i16_I
_A__uGT_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_I
	.private_extern _A__GT_var_i16_I
_A__GT_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_I
	.private_extern _A__uGT_param_i16_I
_A__uGT_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_I
	.private_extern _A__GT_param_i16_I
_A__GT_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_u8
	.private_extern _A__uGT_var_i16_u8
_A__uGT_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_u8
	.private_extern _A__GT_var_i16_u8
_A__GT_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_u8
	.private_extern _A__uGT_param_i16_u8
_A__uGT_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_u8
	.private_extern _A__GT_param_i16_u8
_A__GT_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_C
	.private_extern _A__uGT_var_i16_C
_A__uGT_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_C
	.private_extern _A__GT_var_i16_C
_A__GT_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_C
	.private_extern _A__uGT_param_i16_C
_A__uGT_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_C
	.private_extern _A__GT_param_i16_C
_A__GT_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_u32
	.private_extern _A__uGT_var_i16_u32
_A__uGT_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_u32
	.private_extern _A__GT_var_i16_u32
_A__GT_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_u32
	.private_extern _A__uGT_param_i16_u32
_A__uGT_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_u32
	.private_extern _A__GT_param_i16_u32
_A__GT_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_i8
	.private_extern _A__uGT_var_i16_i8
_A__uGT_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_i8
	.private_extern _A__GT_var_i16_i8
_A__GT_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_i8
	.private_extern _A__uGT_param_i16_i8
_A__uGT_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_i8
	.private_extern _A__GT_param_i16_i8
_A__GT_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_L
	.private_extern _A__uGT_var_i16_L
_A__uGT_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_L
	.private_extern _A__GT_var_i16_L
_A__GT_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_L
	.private_extern _A__uGT_param_i16_L
_A__uGT_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_L
	.private_extern _A__GT_param_i16_L
_A__GT_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_u64
	.private_extern _A__uGT_var_i16_u64
_A__uGT_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_u64
	.private_extern _A__GT_var_i16_u64
_A__GT_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_u64
	.private_extern _A__uGT_param_i16_u64
_A__uGT_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_u64
	.private_extern _A__GT_param_i16_u64
_A__GT_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_u16
	.private_extern _A__uGT_var_i16_u16
_A__uGT_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_u16
	.private_extern _A__GT_var_i16_u16
_A__GT_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_u16
	.private_extern _A__uGT_param_i16_u16
_A__uGT_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_u16
	.private_extern _A__GT_param_i16_u16
_A__GT_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i16_i32
	.private_extern _A__uGT_var_i16_i32
_A__uGT_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i16_i32
	.private_extern _A__GT_var_i16_i32
_A__GT_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i16_i32
	.private_extern _A__uGT_param_i16_i32
_A__uGT_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i16_i32
	.private_extern _A__GT_param_i16_i32
_A__GT_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_i16
	.private_extern _A__uGT_var_LC_i16
_A__uGT_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_i16
	.private_extern _A__GT_var_LC_i16
_A__GT_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_i16
	.private_extern _A__uGT_param_LC_i16
_A__uGT_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_i16
	.private_extern _A__GT_param_LC_i16
_A__GT_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_LC
	.private_extern _A__uGT_var_LC_LC
_A__uGT_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_LC_LC
	.private_extern _A__GT_var_LC_LC
_A__GT_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_LC_LC
	.private_extern _A__uGT_param_LC_LC
_A__uGT_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_LC
	.private_extern _A__GT_param_LC_LC
_A__GT_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_i64
	.private_extern _A__uGT_var_LC_i64
_A__uGT_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_i64
	.private_extern _A__GT_var_LC_i64
_A__GT_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_i64
	.private_extern _A__uGT_param_LC_i64
_A__uGT_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_i64
	.private_extern _A__GT_param_LC_i64
_A__GT_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_I
	.private_extern _A__uGT_var_LC_I
_A__uGT_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_I
	.private_extern _A__GT_var_LC_I
_A__GT_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_I
	.private_extern _A__uGT_param_LC_I
_A__uGT_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_I
	.private_extern _A__GT_param_LC_I
_A__GT_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_u8
	.private_extern _A__uGT_var_LC_u8
_A__uGT_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_u8
	.private_extern _A__GT_var_LC_u8
_A__GT_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_u8
	.private_extern _A__uGT_param_LC_u8
_A__uGT_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_u8
	.private_extern _A__GT_param_LC_u8
_A__GT_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_C
	.private_extern _A__uGT_var_LC_C
_A__uGT_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_C
	.private_extern _A__GT_var_LC_C
_A__GT_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_C
	.private_extern _A__uGT_param_LC_C
_A__uGT_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_C
	.private_extern _A__GT_param_LC_C
_A__GT_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_u32
	.private_extern _A__uGT_var_LC_u32
_A__uGT_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_u32
	.private_extern _A__GT_var_LC_u32
_A__GT_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_u32
	.private_extern _A__uGT_param_LC_u32
_A__uGT_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_u32
	.private_extern _A__GT_param_LC_u32
_A__GT_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_i8
	.private_extern _A__uGT_var_LC_i8
_A__uGT_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_i8
	.private_extern _A__GT_var_LC_i8
_A__GT_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_i8
	.private_extern _A__uGT_param_LC_i8
_A__uGT_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_i8
	.private_extern _A__GT_param_LC_i8
_A__GT_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_L
	.private_extern _A__uGT_var_LC_L
_A__uGT_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_L
	.private_extern _A__GT_var_LC_L
_A__GT_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_L
	.private_extern _A__uGT_param_LC_L
_A__uGT_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_L
	.private_extern _A__GT_param_LC_L
_A__GT_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_u64
	.private_extern _A__uGT_var_LC_u64
_A__uGT_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_u64
	.private_extern _A__GT_var_LC_u64
_A__GT_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_u64
	.private_extern _A__uGT_param_LC_u64
_A__uGT_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_u64
	.private_extern _A__GT_param_LC_u64
_A__GT_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_u16
	.private_extern _A__uGT_var_LC_u16
_A__uGT_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_u16
	.private_extern _A__GT_var_LC_u16
_A__GT_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_u16
	.private_extern _A__uGT_param_LC_u16
_A__uGT_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_u16
	.private_extern _A__GT_param_LC_u16
_A__GT_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_LC_i32
	.private_extern _A__uGT_var_LC_i32
_A__uGT_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_LC_i32
	.private_extern _A__GT_var_LC_i32
_A__GT_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_LC_i32
	.private_extern _A__uGT_param_LC_i32
_A__uGT_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_LC_i32
	.private_extern _A__GT_param_LC_i32
_A__GT_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_f64_f64
	.private_extern _A__GT_var_f64_f64
_A__GT_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_param_f64_f64
	.private_extern _A__GT_param_f64_f64
_A__GT_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	ucomisd	-32(%rbp), %xmm0
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_i16
	.private_extern _A__uGT_var_i64_i16
_A__uGT_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_i16
	.private_extern _A__GT_var_i64_i16
_A__GT_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_i16
	.private_extern _A__uGT_param_i64_i16
_A__uGT_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_i16
	.private_extern _A__GT_param_i64_i16
_A__GT_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_LC
	.private_extern _A__uGT_var_i64_LC
_A__uGT_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_LC
	.private_extern _A__GT_var_i64_LC
_A__GT_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_LC
	.private_extern _A__uGT_param_i64_LC
_A__uGT_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_LC
	.private_extern _A__GT_param_i64_LC
_A__GT_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_i64
	.private_extern _A__uGT_var_i64_i64
_A__uGT_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_i64_i64
	.private_extern _A__GT_var_i64_i64
_A__GT_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_i64_i64
	.private_extern _A__uGT_param_i64_i64
_A__uGT_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_i64
	.private_extern _A__GT_param_i64_i64
_A__GT_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_I
	.private_extern _A__uGT_var_i64_I
_A__uGT_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_I
	.private_extern _A__GT_var_i64_I
_A__GT_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_I
	.private_extern _A__uGT_param_i64_I
_A__uGT_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_I
	.private_extern _A__GT_param_i64_I
_A__GT_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_u8
	.private_extern _A__uGT_var_i64_u8
_A__uGT_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_u8
	.private_extern _A__GT_var_i64_u8
_A__GT_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_u8
	.private_extern _A__uGT_param_i64_u8
_A__uGT_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_u8
	.private_extern _A__GT_param_i64_u8
_A__GT_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_C
	.private_extern _A__uGT_var_i64_C
_A__uGT_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_C
	.private_extern _A__GT_var_i64_C
_A__GT_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_C
	.private_extern _A__uGT_param_i64_C
_A__uGT_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_C
	.private_extern _A__GT_param_i64_C
_A__GT_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_u32
	.private_extern _A__uGT_var_i64_u32
_A__uGT_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_u32
	.private_extern _A__GT_var_i64_u32
_A__GT_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_u32
	.private_extern _A__uGT_param_i64_u32
_A__uGT_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_u32
	.private_extern _A__GT_param_i64_u32
_A__GT_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_i8
	.private_extern _A__uGT_var_i64_i8
_A__uGT_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_i8
	.private_extern _A__GT_var_i64_i8
_A__GT_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_i8
	.private_extern _A__uGT_param_i64_i8
_A__uGT_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_i8
	.private_extern _A__GT_param_i64_i8
_A__GT_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_L
	.private_extern _A__uGT_var_i64_L
_A__uGT_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_L
	.private_extern _A__GT_var_i64_L
_A__GT_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_L
	.private_extern _A__uGT_param_i64_L
_A__uGT_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_L
	.private_extern _A__GT_param_i64_L
_A__GT_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_u64
	.private_extern _A__uGT_var_i64_u64
_A__uGT_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_u64
	.private_extern _A__GT_var_i64_u64
_A__GT_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_u64
	.private_extern _A__uGT_param_i64_u64
_A__uGT_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_u64
	.private_extern _A__GT_param_i64_u64
_A__GT_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_u16
	.private_extern _A__uGT_var_i64_u16
_A__uGT_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_u16
	.private_extern _A__GT_var_i64_u16
_A__GT_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_u16
	.private_extern _A__uGT_param_i64_u16
_A__uGT_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_u16
	.private_extern _A__GT_param_i64_u16
_A__GT_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i64_i32
	.private_extern _A__uGT_var_i64_i32
_A__uGT_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i64_i32
	.private_extern _A__GT_var_i64_i32
_A__GT_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i64_i32
	.private_extern _A__uGT_param_i64_i32
_A__uGT_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i64_i32
	.private_extern _A__GT_param_i64_i32
_A__GT_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_i16
	.private_extern _A__uGT_var_I_i16
_A__uGT_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_i16
	.private_extern _A__GT_var_I_i16
_A__GT_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_i16
	.private_extern _A__uGT_param_I_i16
_A__uGT_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_i16
	.private_extern _A__GT_param_I_i16
_A__GT_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_LC
	.private_extern _A__uGT_var_I_LC
_A__uGT_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_LC
	.private_extern _A__GT_var_I_LC
_A__GT_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_LC
	.private_extern _A__uGT_param_I_LC
_A__uGT_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_LC
	.private_extern _A__GT_param_I_LC
_A__GT_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_i64
	.private_extern _A__uGT_var_I_i64
_A__uGT_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_i64
	.private_extern _A__GT_var_I_i64
_A__GT_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_i64
	.private_extern _A__uGT_param_I_i64
_A__uGT_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_i64
	.private_extern _A__GT_param_I_i64
_A__GT_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_I
	.private_extern _A__uGT_var_I_I
_A__uGT_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_I_I
	.private_extern _A__GT_var_I_I
_A__GT_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_I_I
	.private_extern _A__uGT_param_I_I
_A__uGT_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_I
	.private_extern _A__GT_param_I_I
_A__GT_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_u8
	.private_extern _A__uGT_var_I_u8
_A__uGT_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_u8
	.private_extern _A__GT_var_I_u8
_A__GT_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_u8
	.private_extern _A__uGT_param_I_u8
_A__uGT_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_u8
	.private_extern _A__GT_param_I_u8
_A__GT_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_C
	.private_extern _A__uGT_var_I_C
_A__uGT_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_C
	.private_extern _A__GT_var_I_C
_A__GT_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_C
	.private_extern _A__uGT_param_I_C
_A__uGT_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_C
	.private_extern _A__GT_param_I_C
_A__GT_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_u32
	.private_extern _A__uGT_var_I_u32
_A__uGT_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_u32
	.private_extern _A__GT_var_I_u32
_A__GT_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_u32
	.private_extern _A__uGT_param_I_u32
_A__uGT_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_u32
	.private_extern _A__GT_param_I_u32
_A__GT_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_i8
	.private_extern _A__uGT_var_I_i8
_A__uGT_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_i8
	.private_extern _A__GT_var_I_i8
_A__GT_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_i8
	.private_extern _A__uGT_param_I_i8
_A__uGT_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_i8
	.private_extern _A__GT_param_I_i8
_A__GT_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_L
	.private_extern _A__uGT_var_I_L
_A__uGT_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_L
	.private_extern _A__GT_var_I_L
_A__GT_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_L
	.private_extern _A__uGT_param_I_L
_A__uGT_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_L
	.private_extern _A__GT_param_I_L
_A__GT_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_u64
	.private_extern _A__uGT_var_I_u64
_A__uGT_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_u64
	.private_extern _A__GT_var_I_u64
_A__GT_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_u64
	.private_extern _A__uGT_param_I_u64
_A__uGT_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_u64
	.private_extern _A__GT_param_I_u64
_A__GT_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_u16
	.private_extern _A__uGT_var_I_u16
_A__uGT_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_u16
	.private_extern _A__GT_var_I_u16
_A__GT_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_u16
	.private_extern _A__uGT_param_I_u16
_A__uGT_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_u16
	.private_extern _A__GT_param_I_u16
_A__GT_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_I_i32
	.private_extern _A__uGT_var_I_i32
_A__uGT_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_I_i32
	.private_extern _A__GT_var_I_i32
_A__GT_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_I_i32
	.private_extern _A__uGT_param_I_i32
_A__uGT_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_I_i32
	.private_extern _A__GT_param_I_i32
_A__GT_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_i16
	.private_extern _A__uGT_var_u8_i16
_A__uGT_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_i16
	.private_extern _A__GT_var_u8_i16
_A__GT_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_i16
	.private_extern _A__uGT_param_u8_i16
_A__uGT_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_i16
	.private_extern _A__GT_param_u8_i16
_A__GT_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_LC
	.private_extern _A__uGT_var_u8_LC
_A__uGT_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_LC
	.private_extern _A__GT_var_u8_LC
_A__GT_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_LC
	.private_extern _A__uGT_param_u8_LC
_A__uGT_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_LC
	.private_extern _A__GT_param_u8_LC
_A__GT_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_i64
	.private_extern _A__uGT_var_u8_i64
_A__uGT_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_i64
	.private_extern _A__GT_var_u8_i64
_A__GT_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_i64
	.private_extern _A__uGT_param_u8_i64
_A__uGT_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_i64
	.private_extern _A__GT_param_u8_i64
_A__GT_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_I
	.private_extern _A__uGT_var_u8_I
_A__uGT_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_I
	.private_extern _A__GT_var_u8_I
_A__GT_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_I
	.private_extern _A__uGT_param_u8_I
_A__uGT_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_I
	.private_extern _A__GT_param_u8_I
_A__GT_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_u8
	.private_extern _A__uGT_var_u8_u8
_A__uGT_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_u8_u8
	.private_extern _A__GT_var_u8_u8
_A__GT_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_u8_u8
	.private_extern _A__uGT_param_u8_u8
_A__uGT_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_u8
	.private_extern _A__GT_param_u8_u8
_A__GT_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_C
	.private_extern _A__uGT_var_u8_C
_A__uGT_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_C
	.private_extern _A__GT_var_u8_C
_A__GT_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_C
	.private_extern _A__uGT_param_u8_C
_A__uGT_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_C
	.private_extern _A__GT_param_u8_C
_A__GT_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_u32
	.private_extern _A__uGT_var_u8_u32
_A__uGT_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_u32
	.private_extern _A__GT_var_u8_u32
_A__GT_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_u32
	.private_extern _A__uGT_param_u8_u32
_A__uGT_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_u32
	.private_extern _A__GT_param_u8_u32
_A__GT_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_i8
	.private_extern _A__uGT_var_u8_i8
_A__uGT_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_i8
	.private_extern _A__GT_var_u8_i8
_A__GT_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_i8
	.private_extern _A__uGT_param_u8_i8
_A__uGT_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_i8
	.private_extern _A__GT_param_u8_i8
_A__GT_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_L
	.private_extern _A__uGT_var_u8_L
_A__uGT_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_L
	.private_extern _A__GT_var_u8_L
_A__GT_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_L
	.private_extern _A__uGT_param_u8_L
_A__uGT_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_L
	.private_extern _A__GT_param_u8_L
_A__GT_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_u64
	.private_extern _A__uGT_var_u8_u64
_A__uGT_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_u64
	.private_extern _A__GT_var_u8_u64
_A__GT_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_u64
	.private_extern _A__uGT_param_u8_u64
_A__uGT_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_u64
	.private_extern _A__GT_param_u8_u64
_A__GT_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_u16
	.private_extern _A__uGT_var_u8_u16
_A__uGT_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_u16
	.private_extern _A__GT_var_u8_u16
_A__GT_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_u16
	.private_extern _A__uGT_param_u8_u16
_A__uGT_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_u16
	.private_extern _A__GT_param_u8_u16
_A__GT_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u8_i32
	.private_extern _A__uGT_var_u8_i32
_A__uGT_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u8_i32
	.private_extern _A__GT_var_u8_i32
_A__GT_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u8_i32
	.private_extern _A__uGT_param_u8_i32
_A__uGT_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u8_i32
	.private_extern _A__GT_param_u8_i32
_A__GT_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_i16
	.private_extern _A__uGT_var_C_i16
_A__uGT_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_i16
	.private_extern _A__GT_var_C_i16
_A__GT_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_i16
	.private_extern _A__uGT_param_C_i16
_A__uGT_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_i16
	.private_extern _A__GT_param_C_i16
_A__GT_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_LC
	.private_extern _A__uGT_var_C_LC
_A__uGT_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_LC
	.private_extern _A__GT_var_C_LC
_A__GT_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_LC
	.private_extern _A__uGT_param_C_LC
_A__uGT_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_LC
	.private_extern _A__GT_param_C_LC
_A__GT_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_i64
	.private_extern _A__uGT_var_C_i64
_A__uGT_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_i64
	.private_extern _A__GT_var_C_i64
_A__GT_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_i64
	.private_extern _A__uGT_param_C_i64
_A__uGT_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_i64
	.private_extern _A__GT_param_C_i64
_A__GT_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_I
	.private_extern _A__uGT_var_C_I
_A__uGT_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_I
	.private_extern _A__GT_var_C_I
_A__GT_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_I
	.private_extern _A__uGT_param_C_I
_A__uGT_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_I
	.private_extern _A__GT_param_C_I
_A__GT_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_u8
	.private_extern _A__uGT_var_C_u8
_A__uGT_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_u8
	.private_extern _A__GT_var_C_u8
_A__GT_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_u8
	.private_extern _A__uGT_param_C_u8
_A__uGT_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_u8
	.private_extern _A__GT_param_C_u8
_A__GT_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_C
	.private_extern _A__uGT_var_C_C
_A__uGT_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_C_C
	.private_extern _A__GT_var_C_C
_A__GT_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_C_C
	.private_extern _A__uGT_param_C_C
_A__uGT_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_C
	.private_extern _A__GT_param_C_C
_A__GT_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_u32
	.private_extern _A__uGT_var_C_u32
_A__uGT_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_u32
	.private_extern _A__GT_var_C_u32
_A__GT_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_u32
	.private_extern _A__uGT_param_C_u32
_A__uGT_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_u32
	.private_extern _A__GT_param_C_u32
_A__GT_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_i8
	.private_extern _A__uGT_var_C_i8
_A__uGT_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_i8
	.private_extern _A__GT_var_C_i8
_A__GT_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_i8
	.private_extern _A__uGT_param_C_i8
_A__uGT_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_i8
	.private_extern _A__GT_param_C_i8
_A__GT_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_L
	.private_extern _A__uGT_var_C_L
_A__uGT_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_L
	.private_extern _A__GT_var_C_L
_A__GT_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_L
	.private_extern _A__uGT_param_C_L
_A__uGT_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_L
	.private_extern _A__GT_param_C_L
_A__GT_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_u64
	.private_extern _A__uGT_var_C_u64
_A__uGT_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_u64
	.private_extern _A__GT_var_C_u64
_A__GT_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_u64
	.private_extern _A__uGT_param_C_u64
_A__uGT_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_u64
	.private_extern _A__GT_param_C_u64
_A__GT_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_u16
	.private_extern _A__uGT_var_C_u16
_A__uGT_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_u16
	.private_extern _A__GT_var_C_u16
_A__GT_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_u16
	.private_extern _A__uGT_param_C_u16
_A__uGT_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_u16
	.private_extern _A__GT_param_C_u16
_A__GT_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_C_i32
	.private_extern _A__uGT_var_C_i32
_A__uGT_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_C_i32
	.private_extern _A__GT_var_C_i32
_A__GT_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_C_i32
	.private_extern _A__uGT_param_C_i32
_A__uGT_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_C_i32
	.private_extern _A__GT_param_C_i32
_A__GT_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_f32_f32
	.private_extern _A__GT_var_f32_f32
_A__GT_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_param_f32_f32
	.private_extern _A__GT_param_f32_f32
_A__GT_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	ucomiss	-24(%rbp), %xmm0
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_i16
	.private_extern _A__uGT_var_u32_i16
_A__uGT_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_i16
	.private_extern _A__GT_var_u32_i16
_A__GT_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_i16
	.private_extern _A__uGT_param_u32_i16
_A__uGT_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_i16
	.private_extern _A__GT_param_u32_i16
_A__GT_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_LC
	.private_extern _A__uGT_var_u32_LC
_A__uGT_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_LC
	.private_extern _A__GT_var_u32_LC
_A__GT_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_LC
	.private_extern _A__uGT_param_u32_LC
_A__uGT_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_LC
	.private_extern _A__GT_param_u32_LC
_A__GT_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_i64
	.private_extern _A__uGT_var_u32_i64
_A__uGT_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_i64
	.private_extern _A__GT_var_u32_i64
_A__GT_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_i64
	.private_extern _A__uGT_param_u32_i64
_A__uGT_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_i64
	.private_extern _A__GT_param_u32_i64
_A__GT_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_I
	.private_extern _A__uGT_var_u32_I
_A__uGT_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_I
	.private_extern _A__GT_var_u32_I
_A__GT_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_I
	.private_extern _A__uGT_param_u32_I
_A__uGT_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_I
	.private_extern _A__GT_param_u32_I
_A__GT_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_u8
	.private_extern _A__uGT_var_u32_u8
_A__uGT_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_u8
	.private_extern _A__GT_var_u32_u8
_A__GT_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_u8
	.private_extern _A__uGT_param_u32_u8
_A__uGT_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_u8
	.private_extern _A__GT_param_u32_u8
_A__GT_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_C
	.private_extern _A__uGT_var_u32_C
_A__uGT_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_C
	.private_extern _A__GT_var_u32_C
_A__GT_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_C
	.private_extern _A__uGT_param_u32_C
_A__uGT_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_C
	.private_extern _A__GT_param_u32_C
_A__GT_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_u32
	.private_extern _A__uGT_var_u32_u32
_A__uGT_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_u32_u32
	.private_extern _A__GT_var_u32_u32
_A__GT_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_u32_u32
	.private_extern _A__uGT_param_u32_u32
_A__uGT_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_u32
	.private_extern _A__GT_param_u32_u32
_A__GT_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_i8
	.private_extern _A__uGT_var_u32_i8
_A__uGT_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_i8
	.private_extern _A__GT_var_u32_i8
_A__GT_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_i8
	.private_extern _A__uGT_param_u32_i8
_A__uGT_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_i8
	.private_extern _A__GT_param_u32_i8
_A__GT_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_L
	.private_extern _A__uGT_var_u32_L
_A__uGT_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_L
	.private_extern _A__GT_var_u32_L
_A__GT_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_L
	.private_extern _A__uGT_param_u32_L
_A__uGT_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_L
	.private_extern _A__GT_param_u32_L
_A__GT_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_u64
	.private_extern _A__uGT_var_u32_u64
_A__uGT_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_u64
	.private_extern _A__GT_var_u32_u64
_A__GT_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_u64
	.private_extern _A__uGT_param_u32_u64
_A__uGT_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_u64
	.private_extern _A__GT_param_u32_u64
_A__GT_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_u16
	.private_extern _A__uGT_var_u32_u16
_A__uGT_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_u16
	.private_extern _A__GT_var_u32_u16
_A__GT_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_u16
	.private_extern _A__uGT_param_u32_u16
_A__uGT_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_u16
	.private_extern _A__GT_param_u32_u16
_A__GT_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u32_i32
	.private_extern _A__uGT_var_u32_i32
_A__uGT_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u32_i32
	.private_extern _A__GT_var_u32_i32
_A__GT_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u32_i32
	.private_extern _A__uGT_param_u32_i32
_A__uGT_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u32_i32
	.private_extern _A__GT_param_u32_i32
_A__GT_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_i16
	.private_extern _A__uGT_var_i8_i16
_A__uGT_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_i16
	.private_extern _A__GT_var_i8_i16
_A__GT_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_i16
	.private_extern _A__uGT_param_i8_i16
_A__uGT_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_i16
	.private_extern _A__GT_param_i8_i16
_A__GT_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_LC
	.private_extern _A__uGT_var_i8_LC
_A__uGT_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_LC
	.private_extern _A__GT_var_i8_LC
_A__GT_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_LC
	.private_extern _A__uGT_param_i8_LC
_A__uGT_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_LC
	.private_extern _A__GT_param_i8_LC
_A__GT_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_i64
	.private_extern _A__uGT_var_i8_i64
_A__uGT_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_i64
	.private_extern _A__GT_var_i8_i64
_A__GT_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_i64
	.private_extern _A__uGT_param_i8_i64
_A__uGT_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_i64
	.private_extern _A__GT_param_i8_i64
_A__GT_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_I
	.private_extern _A__uGT_var_i8_I
_A__uGT_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_I
	.private_extern _A__GT_var_i8_I
_A__GT_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_I
	.private_extern _A__uGT_param_i8_I
_A__uGT_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_I
	.private_extern _A__GT_param_i8_I
_A__GT_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_u8
	.private_extern _A__uGT_var_i8_u8
_A__uGT_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_u8
	.private_extern _A__GT_var_i8_u8
_A__GT_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_u8
	.private_extern _A__uGT_param_i8_u8
_A__uGT_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_u8
	.private_extern _A__GT_param_i8_u8
_A__GT_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_C
	.private_extern _A__uGT_var_i8_C
_A__uGT_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_C
	.private_extern _A__GT_var_i8_C
_A__GT_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_C
	.private_extern _A__uGT_param_i8_C
_A__uGT_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_C
	.private_extern _A__GT_param_i8_C
_A__GT_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_u32
	.private_extern _A__uGT_var_i8_u32
_A__uGT_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_u32
	.private_extern _A__GT_var_i8_u32
_A__GT_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_u32
	.private_extern _A__uGT_param_i8_u32
_A__uGT_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_u32
	.private_extern _A__GT_param_i8_u32
_A__GT_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_i8
	.private_extern _A__uGT_var_i8_i8
_A__uGT_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_i8_i8
	.private_extern _A__GT_var_i8_i8
_A__GT_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_i8_i8
	.private_extern _A__uGT_param_i8_i8
_A__uGT_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_i8
	.private_extern _A__GT_param_i8_i8
_A__GT_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_L
	.private_extern _A__uGT_var_i8_L
_A__uGT_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_L
	.private_extern _A__GT_var_i8_L
_A__GT_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_L
	.private_extern _A__uGT_param_i8_L
_A__uGT_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_L
	.private_extern _A__GT_param_i8_L
_A__GT_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_u64
	.private_extern _A__uGT_var_i8_u64
_A__uGT_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_u64
	.private_extern _A__GT_var_i8_u64
_A__GT_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_u64
	.private_extern _A__uGT_param_i8_u64
_A__uGT_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_u64
	.private_extern _A__GT_param_i8_u64
_A__GT_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_u16
	.private_extern _A__uGT_var_i8_u16
_A__uGT_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_u16
	.private_extern _A__GT_var_i8_u16
_A__GT_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_u16
	.private_extern _A__uGT_param_i8_u16
_A__uGT_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_u16
	.private_extern _A__GT_param_i8_u16
_A__GT_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i8_i32
	.private_extern _A__uGT_var_i8_i32
_A__uGT_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i8_i32
	.private_extern _A__GT_var_i8_i32
_A__GT_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i8_i32
	.private_extern _A__uGT_param_i8_i32
_A__uGT_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i8_i32
	.private_extern _A__GT_param_i8_i32
_A__GT_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_i16
	.private_extern _A__uGT_var_L_i16
_A__uGT_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_i16
	.private_extern _A__GT_var_L_i16
_A__GT_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_i16
	.private_extern _A__uGT_param_L_i16
_A__uGT_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_i16
	.private_extern _A__GT_param_L_i16
_A__GT_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_LC
	.private_extern _A__uGT_var_L_LC
_A__uGT_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_LC
	.private_extern _A__GT_var_L_LC
_A__GT_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_LC
	.private_extern _A__uGT_param_L_LC
_A__uGT_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_LC
	.private_extern _A__GT_param_L_LC
_A__GT_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_i64
	.private_extern _A__uGT_var_L_i64
_A__uGT_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_i64
	.private_extern _A__GT_var_L_i64
_A__GT_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_i64
	.private_extern _A__uGT_param_L_i64
_A__uGT_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_i64
	.private_extern _A__GT_param_L_i64
_A__GT_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_I
	.private_extern _A__uGT_var_L_I
_A__uGT_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_I
	.private_extern _A__GT_var_L_I
_A__GT_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_I
	.private_extern _A__uGT_param_L_I
_A__uGT_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_I
	.private_extern _A__GT_param_L_I
_A__GT_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_u8
	.private_extern _A__uGT_var_L_u8
_A__uGT_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_u8
	.private_extern _A__GT_var_L_u8
_A__GT_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_u8
	.private_extern _A__uGT_param_L_u8
_A__uGT_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_u8
	.private_extern _A__GT_param_L_u8
_A__GT_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_C
	.private_extern _A__uGT_var_L_C
_A__uGT_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_C
	.private_extern _A__GT_var_L_C
_A__GT_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_C
	.private_extern _A__uGT_param_L_C
_A__uGT_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_C
	.private_extern _A__GT_param_L_C
_A__GT_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_u32
	.private_extern _A__uGT_var_L_u32
_A__uGT_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_u32
	.private_extern _A__GT_var_L_u32
_A__GT_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_u32
	.private_extern _A__uGT_param_L_u32
_A__uGT_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_u32
	.private_extern _A__GT_param_L_u32
_A__GT_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_i8
	.private_extern _A__uGT_var_L_i8
_A__uGT_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_i8
	.private_extern _A__GT_var_L_i8
_A__GT_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_i8
	.private_extern _A__uGT_param_L_i8
_A__uGT_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_i8
	.private_extern _A__GT_param_L_i8
_A__GT_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_L
	.private_extern _A__uGT_var_L_L
_A__uGT_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_L_L
	.private_extern _A__GT_var_L_L
_A__GT_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_L_L
	.private_extern _A__uGT_param_L_L
_A__uGT_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_L
	.private_extern _A__GT_param_L_L
_A__GT_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_u64
	.private_extern _A__uGT_var_L_u64
_A__uGT_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_u64
	.private_extern _A__GT_var_L_u64
_A__GT_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_u64
	.private_extern _A__uGT_param_L_u64
_A__uGT_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_u64
	.private_extern _A__GT_param_L_u64
_A__GT_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_u16
	.private_extern _A__uGT_var_L_u16
_A__uGT_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_u16
	.private_extern _A__GT_var_L_u16
_A__GT_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_u16
	.private_extern _A__uGT_param_L_u16
_A__uGT_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_u16
	.private_extern _A__GT_param_L_u16
_A__GT_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_L_i32
	.private_extern _A__uGT_var_L_i32
_A__uGT_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_L_i32
	.private_extern _A__GT_var_L_i32
_A__GT_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_L_i32
	.private_extern _A__uGT_param_L_i32
_A__uGT_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_L_i32
	.private_extern _A__GT_param_L_i32
_A__GT_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_i16
	.private_extern _A__uGT_var_u64_i16
_A__uGT_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_i16
	.private_extern _A__GT_var_u64_i16
_A__GT_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_i16
	.private_extern _A__uGT_param_u64_i16
_A__uGT_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_i16
	.private_extern _A__GT_param_u64_i16
_A__GT_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_LC
	.private_extern _A__uGT_var_u64_LC
_A__uGT_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_LC
	.private_extern _A__GT_var_u64_LC
_A__GT_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_LC
	.private_extern _A__uGT_param_u64_LC
_A__uGT_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_LC
	.private_extern _A__GT_param_u64_LC
_A__GT_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_i64
	.private_extern _A__uGT_var_u64_i64
_A__uGT_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_i64
	.private_extern _A__GT_var_u64_i64
_A__GT_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_i64
	.private_extern _A__uGT_param_u64_i64
_A__uGT_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_i64
	.private_extern _A__GT_param_u64_i64
_A__GT_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_I
	.private_extern _A__uGT_var_u64_I
_A__uGT_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_I
	.private_extern _A__GT_var_u64_I
_A__GT_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_I
	.private_extern _A__uGT_param_u64_I
_A__uGT_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_I
	.private_extern _A__GT_param_u64_I
_A__GT_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_u8
	.private_extern _A__uGT_var_u64_u8
_A__uGT_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_u8
	.private_extern _A__GT_var_u64_u8
_A__GT_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_u8
	.private_extern _A__uGT_param_u64_u8
_A__uGT_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_u8
	.private_extern _A__GT_param_u64_u8
_A__GT_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_C
	.private_extern _A__uGT_var_u64_C
_A__uGT_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_C
	.private_extern _A__GT_var_u64_C
_A__GT_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_C
	.private_extern _A__uGT_param_u64_C
_A__uGT_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_C
	.private_extern _A__GT_param_u64_C
_A__GT_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_u32
	.private_extern _A__uGT_var_u64_u32
_A__uGT_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_u32
	.private_extern _A__GT_var_u64_u32
_A__GT_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_u32
	.private_extern _A__uGT_param_u64_u32
_A__uGT_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_u32
	.private_extern _A__GT_param_u64_u32
_A__GT_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_i8
	.private_extern _A__uGT_var_u64_i8
_A__uGT_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_i8
	.private_extern _A__GT_var_u64_i8
_A__GT_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_i8
	.private_extern _A__uGT_param_u64_i8
_A__uGT_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_i8
	.private_extern _A__GT_param_u64_i8
_A__GT_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_L
	.private_extern _A__uGT_var_u64_L
_A__uGT_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_L
	.private_extern _A__GT_var_u64_L
_A__GT_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_L
	.private_extern _A__uGT_param_u64_L
_A__uGT_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_L
	.private_extern _A__GT_param_u64_L
_A__GT_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_u64
	.private_extern _A__uGT_var_u64_u64
_A__uGT_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_u64_u64
	.private_extern _A__GT_var_u64_u64
_A__GT_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_u64_u64
	.private_extern _A__uGT_param_u64_u64
_A__uGT_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_u64
	.private_extern _A__GT_param_u64_u64
_A__GT_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_u16
	.private_extern _A__uGT_var_u64_u16
_A__uGT_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_u16
	.private_extern _A__GT_var_u64_u16
_A__GT_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_u16
	.private_extern _A__uGT_param_u64_u16
_A__uGT_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_u16
	.private_extern _A__GT_param_u64_u16
_A__GT_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u64_i32
	.private_extern _A__uGT_var_u64_i32
_A__uGT_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u64_i32
	.private_extern _A__GT_var_u64_i32
_A__GT_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u64_i32
	.private_extern _A__uGT_param_u64_i32
_A__uGT_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u64_i32
	.private_extern _A__GT_param_u64_i32
_A__GT_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_i16
	.private_extern _A__uGT_var_u16_i16
_A__uGT_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_i16
	.private_extern _A__GT_var_u16_i16
_A__GT_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_i16
	.private_extern _A__uGT_param_u16_i16
_A__uGT_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_i16
	.private_extern _A__GT_param_u16_i16
_A__GT_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_LC
	.private_extern _A__uGT_var_u16_LC
_A__uGT_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_LC
	.private_extern _A__GT_var_u16_LC
_A__GT_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_LC
	.private_extern _A__uGT_param_u16_LC
_A__uGT_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_LC
	.private_extern _A__GT_param_u16_LC
_A__GT_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_i64
	.private_extern _A__uGT_var_u16_i64
_A__uGT_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_i64
	.private_extern _A__GT_var_u16_i64
_A__GT_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_i64
	.private_extern _A__uGT_param_u16_i64
_A__uGT_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_i64
	.private_extern _A__GT_param_u16_i64
_A__GT_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_I
	.private_extern _A__uGT_var_u16_I
_A__uGT_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_I
	.private_extern _A__GT_var_u16_I
_A__GT_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_I
	.private_extern _A__uGT_param_u16_I
_A__uGT_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_I
	.private_extern _A__GT_param_u16_I
_A__GT_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_u8
	.private_extern _A__uGT_var_u16_u8
_A__uGT_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_u8
	.private_extern _A__GT_var_u16_u8
_A__GT_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_u8
	.private_extern _A__uGT_param_u16_u8
_A__uGT_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_u8
	.private_extern _A__GT_param_u16_u8
_A__GT_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_C
	.private_extern _A__uGT_var_u16_C
_A__uGT_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_C
	.private_extern _A__GT_var_u16_C
_A__GT_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_C
	.private_extern _A__uGT_param_u16_C
_A__uGT_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_C
	.private_extern _A__GT_param_u16_C
_A__GT_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_u32
	.private_extern _A__uGT_var_u16_u32
_A__uGT_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_u32
	.private_extern _A__GT_var_u16_u32
_A__GT_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_u32
	.private_extern _A__uGT_param_u16_u32
_A__uGT_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_u32
	.private_extern _A__GT_param_u16_u32
_A__GT_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_i8
	.private_extern _A__uGT_var_u16_i8
_A__uGT_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_i8
	.private_extern _A__GT_var_u16_i8
_A__GT_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_i8
	.private_extern _A__uGT_param_u16_i8
_A__uGT_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_i8
	.private_extern _A__GT_param_u16_i8
_A__GT_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setl	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_L
	.private_extern _A__uGT_var_u16_L
_A__uGT_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_L
	.private_extern _A__GT_var_u16_L
_A__GT_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_L
	.private_extern _A__uGT_param_u16_L
_A__uGT_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_L
	.private_extern _A__GT_param_u16_L
_A__GT_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_u64
	.private_extern _A__uGT_var_u16_u64
_A__uGT_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_u64
	.private_extern _A__GT_var_u16_u64
_A__GT_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_u64
	.private_extern _A__uGT_param_u16_u64
_A__uGT_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_u64
	.private_extern _A__GT_param_u16_u64
_A__GT_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_u16
	.private_extern _A__uGT_var_u16_u16
_A__uGT_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_u16_u16
	.private_extern _A__GT_var_u16_u16
_A__GT_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_u16_u16
	.private_extern _A__uGT_param_u16_u16
_A__uGT_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_u16
	.private_extern _A__GT_param_u16_u16
_A__GT_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_u16_i32
	.private_extern _A__uGT_var_u16_i32
_A__uGT_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_u16_i32
	.private_extern _A__GT_var_u16_i32
_A__GT_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_u16_i32
	.private_extern _A__uGT_param_u16_i32
_A__uGT_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_u16_i32
	.private_extern _A__GT_param_u16_i32
_A__GT_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_i16
	.private_extern _A__uGT_var_i32_i16
_A__uGT_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_i16
	.private_extern _A__GT_var_i32_i16
_A__GT_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_i16
	.private_extern _A__uGT_param_i32_i16
_A__uGT_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_i16
	.private_extern _A__GT_param_i32_i16
_A__GT_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_LC
	.private_extern _A__uGT_var_i32_LC
_A__uGT_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_LC
	.private_extern _A__GT_var_i32_LC
_A__GT_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_LC
	.private_extern _A__uGT_param_i32_LC
_A__uGT_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_LC
	.private_extern _A__GT_param_i32_LC
_A__GT_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_i64
	.private_extern _A__uGT_var_i32_i64
_A__uGT_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_i64
	.private_extern _A__GT_var_i32_i64
_A__GT_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_i64
	.private_extern _A__uGT_param_i32_i64
_A__uGT_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_i64
	.private_extern _A__GT_param_i32_i64
_A__GT_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_I
	.private_extern _A__uGT_var_i32_I
_A__uGT_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_I
	.private_extern _A__GT_var_i32_I
_A__GT_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_I
	.private_extern _A__uGT_param_i32_I
_A__uGT_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_I
	.private_extern _A__GT_param_i32_I
_A__GT_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_u8
	.private_extern _A__uGT_var_i32_u8
_A__uGT_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_u8
	.private_extern _A__GT_var_i32_u8
_A__GT_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_u8
	.private_extern _A__uGT_param_i32_u8
_A__uGT_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_u8
	.private_extern _A__GT_param_i32_u8
_A__GT_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_C
	.private_extern _A__uGT_var_i32_C
_A__uGT_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_C
	.private_extern _A__GT_var_i32_C
_A__GT_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_C
	.private_extern _A__uGT_param_i32_C
_A__uGT_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_C
	.private_extern _A__GT_param_i32_C
_A__GT_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_u32
	.private_extern _A__uGT_var_i32_u32
_A__uGT_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_u32
	.private_extern _A__GT_var_i32_u32
_A__GT_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_u32
	.private_extern _A__uGT_param_i32_u32
_A__uGT_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_u32
	.private_extern _A__GT_param_i32_u32
_A__GT_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_i8
	.private_extern _A__uGT_var_i32_i8
_A__uGT_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_i8
	.private_extern _A__GT_var_i32_i8
_A__GT_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_i8
	.private_extern _A__uGT_param_i32_i8
_A__uGT_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_i8
	.private_extern _A__GT_param_i32_i8
_A__GT_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_L
	.private_extern _A__uGT_var_i32_L
_A__uGT_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_L
	.private_extern _A__GT_var_i32_L
_A__GT_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_L
	.private_extern _A__uGT_param_i32_L
_A__uGT_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_L
	.private_extern _A__GT_param_i32_L
_A__GT_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_u64
	.private_extern _A__uGT_var_i32_u64
_A__uGT_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_u64
	.private_extern _A__GT_var_i32_u64
_A__GT_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_u64
	.private_extern _A__uGT_param_i32_u64
_A__uGT_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_u64
	.private_extern _A__GT_param_i32_u64
_A__GT_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_u16
	.private_extern _A__uGT_var_i32_u16
_A__uGT_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_var_i32_u16
	.private_extern _A__GT_var_i32_u16
_A__GT_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_param_i32_u16
	.private_extern _A__uGT_param_i32_u16
_A__uGT_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setb	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_u16
	.private_extern _A__GT_param_i32_u16
_A__GT_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGT_var_i32_i32
	.private_extern _A__uGT_var_i32_i32
_A__uGT_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__GT_var_i32_i32
	.private_extern _A__GT_var_i32_i32
_A__GT_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uGT_param_i32_i32
	.private_extern _A__uGT_param_i32_i32
_A__uGT_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	seta	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GT_param_i32_i32
	.private_extern _A__GT_param_i32_i32
_A__GT_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setg	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_i16
	.private_extern _A__uGE_var_i16_i16
_A__uGE_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_i16_i16
	.private_extern _A__GE_var_i16_i16
_A__GE_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_i16_i16
	.private_extern _A__uGE_param_i16_i16
_A__uGE_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_i16
	.private_extern _A__GE_param_i16_i16
_A__GE_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_LC
	.private_extern _A__uGE_var_i16_LC
_A__uGE_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_LC
	.private_extern _A__GE_var_i16_LC
_A__GE_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_LC
	.private_extern _A__uGE_param_i16_LC
_A__uGE_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_LC
	.private_extern _A__GE_param_i16_LC
_A__GE_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_i64
	.private_extern _A__uGE_var_i16_i64
_A__uGE_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_i64
	.private_extern _A__GE_var_i16_i64
_A__GE_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_i64
	.private_extern _A__uGE_param_i16_i64
_A__uGE_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_i64
	.private_extern _A__GE_param_i16_i64
_A__GE_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_I
	.private_extern _A__uGE_var_i16_I
_A__uGE_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_I
	.private_extern _A__GE_var_i16_I
_A__GE_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_I
	.private_extern _A__uGE_param_i16_I
_A__uGE_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_I
	.private_extern _A__GE_param_i16_I
_A__GE_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_u8
	.private_extern _A__uGE_var_i16_u8
_A__uGE_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_u8
	.private_extern _A__GE_var_i16_u8
_A__GE_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_u8
	.private_extern _A__uGE_param_i16_u8
_A__uGE_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_u8
	.private_extern _A__GE_param_i16_u8
_A__GE_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_C
	.private_extern _A__uGE_var_i16_C
_A__uGE_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_C
	.private_extern _A__GE_var_i16_C
_A__GE_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_C
	.private_extern _A__uGE_param_i16_C
_A__uGE_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_C
	.private_extern _A__GE_param_i16_C
_A__GE_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_u32
	.private_extern _A__uGE_var_i16_u32
_A__uGE_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_u32
	.private_extern _A__GE_var_i16_u32
_A__GE_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_u32
	.private_extern _A__uGE_param_i16_u32
_A__uGE_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_u32
	.private_extern _A__GE_param_i16_u32
_A__GE_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_i8
	.private_extern _A__uGE_var_i16_i8
_A__uGE_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_i8
	.private_extern _A__GE_var_i16_i8
_A__GE_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_i8
	.private_extern _A__uGE_param_i16_i8
_A__uGE_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_i8
	.private_extern _A__GE_param_i16_i8
_A__GE_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_L
	.private_extern _A__uGE_var_i16_L
_A__uGE_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_L
	.private_extern _A__GE_var_i16_L
_A__GE_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_L
	.private_extern _A__uGE_param_i16_L
_A__uGE_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_L
	.private_extern _A__GE_param_i16_L
_A__GE_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_u64
	.private_extern _A__uGE_var_i16_u64
_A__uGE_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_u64
	.private_extern _A__GE_var_i16_u64
_A__GE_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_u64
	.private_extern _A__uGE_param_i16_u64
_A__uGE_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_u64
	.private_extern _A__GE_param_i16_u64
_A__GE_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_u16
	.private_extern _A__uGE_var_i16_u16
_A__uGE_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_u16
	.private_extern _A__GE_var_i16_u16
_A__GE_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_u16
	.private_extern _A__uGE_param_i16_u16
_A__uGE_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_u16
	.private_extern _A__GE_param_i16_u16
_A__GE_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i16_i32
	.private_extern _A__uGE_var_i16_i32
_A__uGE_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i16_i32
	.private_extern _A__GE_var_i16_i32
_A__GE_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i16_i32
	.private_extern _A__uGE_param_i16_i32
_A__uGE_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i16_i32
	.private_extern _A__GE_param_i16_i32
_A__GE_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_i16
	.private_extern _A__uGE_var_LC_i16
_A__uGE_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_i16
	.private_extern _A__GE_var_LC_i16
_A__GE_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_i16
	.private_extern _A__uGE_param_LC_i16
_A__uGE_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_i16
	.private_extern _A__GE_param_LC_i16
_A__GE_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_LC
	.private_extern _A__uGE_var_LC_LC
_A__uGE_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_LC_LC
	.private_extern _A__GE_var_LC_LC
_A__GE_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_LC_LC
	.private_extern _A__uGE_param_LC_LC
_A__uGE_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_LC
	.private_extern _A__GE_param_LC_LC
_A__GE_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_i64
	.private_extern _A__uGE_var_LC_i64
_A__uGE_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_i64
	.private_extern _A__GE_var_LC_i64
_A__GE_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_i64
	.private_extern _A__uGE_param_LC_i64
_A__uGE_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_i64
	.private_extern _A__GE_param_LC_i64
_A__GE_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_I
	.private_extern _A__uGE_var_LC_I
_A__uGE_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_I
	.private_extern _A__GE_var_LC_I
_A__GE_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_I
	.private_extern _A__uGE_param_LC_I
_A__uGE_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_I
	.private_extern _A__GE_param_LC_I
_A__GE_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_u8
	.private_extern _A__uGE_var_LC_u8
_A__uGE_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_u8
	.private_extern _A__GE_var_LC_u8
_A__GE_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_u8
	.private_extern _A__uGE_param_LC_u8
_A__uGE_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_u8
	.private_extern _A__GE_param_LC_u8
_A__GE_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_C
	.private_extern _A__uGE_var_LC_C
_A__uGE_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_C
	.private_extern _A__GE_var_LC_C
_A__GE_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_C
	.private_extern _A__uGE_param_LC_C
_A__uGE_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_C
	.private_extern _A__GE_param_LC_C
_A__GE_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_u32
	.private_extern _A__uGE_var_LC_u32
_A__uGE_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_u32
	.private_extern _A__GE_var_LC_u32
_A__GE_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_u32
	.private_extern _A__uGE_param_LC_u32
_A__uGE_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_u32
	.private_extern _A__GE_param_LC_u32
_A__GE_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_i8
	.private_extern _A__uGE_var_LC_i8
_A__uGE_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_i8
	.private_extern _A__GE_var_LC_i8
_A__GE_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_i8
	.private_extern _A__uGE_param_LC_i8
_A__uGE_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_i8
	.private_extern _A__GE_param_LC_i8
_A__GE_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_L
	.private_extern _A__uGE_var_LC_L
_A__uGE_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_L
	.private_extern _A__GE_var_LC_L
_A__GE_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_L
	.private_extern _A__uGE_param_LC_L
_A__uGE_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_L
	.private_extern _A__GE_param_LC_L
_A__GE_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_u64
	.private_extern _A__uGE_var_LC_u64
_A__uGE_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_u64
	.private_extern _A__GE_var_LC_u64
_A__GE_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_u64
	.private_extern _A__uGE_param_LC_u64
_A__uGE_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_u64
	.private_extern _A__GE_param_LC_u64
_A__GE_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_u16
	.private_extern _A__uGE_var_LC_u16
_A__uGE_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_u16
	.private_extern _A__GE_var_LC_u16
_A__GE_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_u16
	.private_extern _A__uGE_param_LC_u16
_A__uGE_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_u16
	.private_extern _A__GE_param_LC_u16
_A__GE_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_LC_i32
	.private_extern _A__uGE_var_LC_i32
_A__uGE_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_LC_i32
	.private_extern _A__GE_var_LC_i32
_A__GE_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_LC_i32
	.private_extern _A__uGE_param_LC_i32
_A__uGE_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_LC_i32
	.private_extern _A__GE_param_LC_i32
_A__GE_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_f64_f64
	.private_extern _A__GE_var_f64_f64
_A__GE_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	ucomisd	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_f64_f64
	.private_extern _A__GE_param_f64_f64
_A__GE_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	ucomisd	-32(%rbp), %xmm0
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_i16
	.private_extern _A__uGE_var_i64_i16
_A__uGE_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_i16
	.private_extern _A__GE_var_i64_i16
_A__GE_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_i16
	.private_extern _A__uGE_param_i64_i16
_A__uGE_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_i16
	.private_extern _A__GE_param_i64_i16
_A__GE_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_LC
	.private_extern _A__uGE_var_i64_LC
_A__uGE_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_LC
	.private_extern _A__GE_var_i64_LC
_A__GE_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_LC
	.private_extern _A__uGE_param_i64_LC
_A__uGE_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_LC
	.private_extern _A__GE_param_i64_LC
_A__GE_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_i64
	.private_extern _A__uGE_var_i64_i64
_A__uGE_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_i64_i64
	.private_extern _A__GE_var_i64_i64
_A__GE_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_i64_i64
	.private_extern _A__uGE_param_i64_i64
_A__uGE_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_i64
	.private_extern _A__GE_param_i64_i64
_A__GE_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_I
	.private_extern _A__uGE_var_i64_I
_A__uGE_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_I
	.private_extern _A__GE_var_i64_I
_A__GE_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_I
	.private_extern _A__uGE_param_i64_I
_A__uGE_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_I
	.private_extern _A__GE_param_i64_I
_A__GE_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_u8
	.private_extern _A__uGE_var_i64_u8
_A__uGE_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_u8
	.private_extern _A__GE_var_i64_u8
_A__GE_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_u8
	.private_extern _A__uGE_param_i64_u8
_A__uGE_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_u8
	.private_extern _A__GE_param_i64_u8
_A__GE_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_C
	.private_extern _A__uGE_var_i64_C
_A__uGE_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_C
	.private_extern _A__GE_var_i64_C
_A__GE_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_C
	.private_extern _A__uGE_param_i64_C
_A__uGE_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_C
	.private_extern _A__GE_param_i64_C
_A__GE_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_u32
	.private_extern _A__uGE_var_i64_u32
_A__uGE_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_u32
	.private_extern _A__GE_var_i64_u32
_A__GE_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_u32
	.private_extern _A__uGE_param_i64_u32
_A__uGE_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_u32
	.private_extern _A__GE_param_i64_u32
_A__GE_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_i8
	.private_extern _A__uGE_var_i64_i8
_A__uGE_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_i8
	.private_extern _A__GE_var_i64_i8
_A__GE_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_i8
	.private_extern _A__uGE_param_i64_i8
_A__uGE_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_i8
	.private_extern _A__GE_param_i64_i8
_A__GE_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_L
	.private_extern _A__uGE_var_i64_L
_A__uGE_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_L
	.private_extern _A__GE_var_i64_L
_A__GE_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_L
	.private_extern _A__uGE_param_i64_L
_A__uGE_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_L
	.private_extern _A__GE_param_i64_L
_A__GE_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_u64
	.private_extern _A__uGE_var_i64_u64
_A__uGE_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_u64
	.private_extern _A__GE_var_i64_u64
_A__GE_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_u64
	.private_extern _A__uGE_param_i64_u64
_A__uGE_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_u64
	.private_extern _A__GE_param_i64_u64
_A__GE_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_u16
	.private_extern _A__uGE_var_i64_u16
_A__uGE_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_u16
	.private_extern _A__GE_var_i64_u16
_A__GE_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_u16
	.private_extern _A__uGE_param_i64_u16
_A__uGE_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_u16
	.private_extern _A__GE_param_i64_u16
_A__GE_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i64_i32
	.private_extern _A__uGE_var_i64_i32
_A__uGE_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i64_i32
	.private_extern _A__GE_var_i64_i32
_A__GE_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i64_i32
	.private_extern _A__uGE_param_i64_i32
_A__uGE_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i64_i32
	.private_extern _A__GE_param_i64_i32
_A__GE_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_i16
	.private_extern _A__uGE_var_I_i16
_A__uGE_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_i16
	.private_extern _A__GE_var_I_i16
_A__GE_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_i16
	.private_extern _A__uGE_param_I_i16
_A__uGE_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_i16
	.private_extern _A__GE_param_I_i16
_A__GE_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_LC
	.private_extern _A__uGE_var_I_LC
_A__uGE_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_LC
	.private_extern _A__GE_var_I_LC
_A__GE_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_LC
	.private_extern _A__uGE_param_I_LC
_A__uGE_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_LC
	.private_extern _A__GE_param_I_LC
_A__GE_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_i64
	.private_extern _A__uGE_var_I_i64
_A__uGE_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_i64
	.private_extern _A__GE_var_I_i64
_A__GE_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_i64
	.private_extern _A__uGE_param_I_i64
_A__uGE_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_i64
	.private_extern _A__GE_param_I_i64
_A__GE_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_I
	.private_extern _A__uGE_var_I_I
_A__uGE_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_I_I
	.private_extern _A__GE_var_I_I
_A__GE_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_I_I
	.private_extern _A__uGE_param_I_I
_A__uGE_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_I
	.private_extern _A__GE_param_I_I
_A__GE_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_u8
	.private_extern _A__uGE_var_I_u8
_A__uGE_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_u8
	.private_extern _A__GE_var_I_u8
_A__GE_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_u8
	.private_extern _A__uGE_param_I_u8
_A__uGE_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_u8
	.private_extern _A__GE_param_I_u8
_A__GE_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_C
	.private_extern _A__uGE_var_I_C
_A__uGE_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_C
	.private_extern _A__GE_var_I_C
_A__GE_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_C
	.private_extern _A__uGE_param_I_C
_A__uGE_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_C
	.private_extern _A__GE_param_I_C
_A__GE_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_u32
	.private_extern _A__uGE_var_I_u32
_A__uGE_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_u32
	.private_extern _A__GE_var_I_u32
_A__GE_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_u32
	.private_extern _A__uGE_param_I_u32
_A__uGE_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_u32
	.private_extern _A__GE_param_I_u32
_A__GE_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_i8
	.private_extern _A__uGE_var_I_i8
_A__uGE_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_i8
	.private_extern _A__GE_var_I_i8
_A__GE_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_i8
	.private_extern _A__uGE_param_I_i8
_A__uGE_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_i8
	.private_extern _A__GE_param_I_i8
_A__GE_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_L
	.private_extern _A__uGE_var_I_L
_A__uGE_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_L
	.private_extern _A__GE_var_I_L
_A__GE_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_L
	.private_extern _A__uGE_param_I_L
_A__uGE_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_L
	.private_extern _A__GE_param_I_L
_A__GE_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_u64
	.private_extern _A__uGE_var_I_u64
_A__uGE_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_u64
	.private_extern _A__GE_var_I_u64
_A__GE_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_u64
	.private_extern _A__uGE_param_I_u64
_A__uGE_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_u64
	.private_extern _A__GE_param_I_u64
_A__GE_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_u16
	.private_extern _A__uGE_var_I_u16
_A__uGE_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_u16
	.private_extern _A__GE_var_I_u16
_A__GE_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_u16
	.private_extern _A__uGE_param_I_u16
_A__uGE_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_u16
	.private_extern _A__GE_param_I_u16
_A__GE_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_I_i32
	.private_extern _A__uGE_var_I_i32
_A__uGE_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_I_i32
	.private_extern _A__GE_var_I_i32
_A__GE_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_I_i32
	.private_extern _A__uGE_param_I_i32
_A__uGE_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_I_i32
	.private_extern _A__GE_param_I_i32
_A__GE_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_i16
	.private_extern _A__uGE_var_u8_i16
_A__uGE_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_i16
	.private_extern _A__GE_var_u8_i16
_A__GE_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_i16
	.private_extern _A__uGE_param_u8_i16
_A__uGE_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_i16
	.private_extern _A__GE_param_u8_i16
_A__GE_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_LC
	.private_extern _A__uGE_var_u8_LC
_A__uGE_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_LC
	.private_extern _A__GE_var_u8_LC
_A__GE_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_LC
	.private_extern _A__uGE_param_u8_LC
_A__uGE_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_LC
	.private_extern _A__GE_param_u8_LC
_A__GE_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_i64
	.private_extern _A__uGE_var_u8_i64
_A__uGE_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_i64
	.private_extern _A__GE_var_u8_i64
_A__GE_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_i64
	.private_extern _A__uGE_param_u8_i64
_A__uGE_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_i64
	.private_extern _A__GE_param_u8_i64
_A__GE_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_I
	.private_extern _A__uGE_var_u8_I
_A__uGE_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_I
	.private_extern _A__GE_var_u8_I
_A__GE_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_I
	.private_extern _A__uGE_param_u8_I
_A__uGE_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_I
	.private_extern _A__GE_param_u8_I
_A__GE_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_u8
	.private_extern _A__uGE_var_u8_u8
_A__uGE_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_u8_u8
	.private_extern _A__GE_var_u8_u8
_A__GE_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_u8_u8
	.private_extern _A__uGE_param_u8_u8
_A__uGE_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_u8
	.private_extern _A__GE_param_u8_u8
_A__GE_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_C
	.private_extern _A__uGE_var_u8_C
_A__uGE_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_C
	.private_extern _A__GE_var_u8_C
_A__GE_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_C
	.private_extern _A__uGE_param_u8_C
_A__uGE_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_C
	.private_extern _A__GE_param_u8_C
_A__GE_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_u32
	.private_extern _A__uGE_var_u8_u32
_A__uGE_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_u32
	.private_extern _A__GE_var_u8_u32
_A__GE_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_u32
	.private_extern _A__uGE_param_u8_u32
_A__uGE_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_u32
	.private_extern _A__GE_param_u8_u32
_A__GE_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_i8
	.private_extern _A__uGE_var_u8_i8
_A__uGE_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_i8
	.private_extern _A__GE_var_u8_i8
_A__GE_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_i8
	.private_extern _A__uGE_param_u8_i8
_A__uGE_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_i8
	.private_extern _A__GE_param_u8_i8
_A__GE_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_L
	.private_extern _A__uGE_var_u8_L
_A__uGE_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_L
	.private_extern _A__GE_var_u8_L
_A__GE_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_L
	.private_extern _A__uGE_param_u8_L
_A__uGE_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_L
	.private_extern _A__GE_param_u8_L
_A__GE_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_u64
	.private_extern _A__uGE_var_u8_u64
_A__uGE_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_u64
	.private_extern _A__GE_var_u8_u64
_A__GE_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_u64
	.private_extern _A__uGE_param_u8_u64
_A__uGE_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_u64
	.private_extern _A__GE_param_u8_u64
_A__GE_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_u16
	.private_extern _A__uGE_var_u8_u16
_A__uGE_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_u16
	.private_extern _A__GE_var_u8_u16
_A__GE_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_u16
	.private_extern _A__uGE_param_u8_u16
_A__uGE_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_u16
	.private_extern _A__GE_param_u8_u16
_A__GE_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u8_i32
	.private_extern _A__uGE_var_u8_i32
_A__uGE_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u8_i32
	.private_extern _A__GE_var_u8_i32
_A__GE_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u8_i32
	.private_extern _A__uGE_param_u8_i32
_A__uGE_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u8_i32
	.private_extern _A__GE_param_u8_i32
_A__GE_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_i16
	.private_extern _A__uGE_var_C_i16
_A__uGE_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_i16
	.private_extern _A__GE_var_C_i16
_A__GE_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_i16
	.private_extern _A__uGE_param_C_i16
_A__uGE_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_i16
	.private_extern _A__GE_param_C_i16
_A__GE_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movzwl	-26(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_LC
	.private_extern _A__uGE_var_C_LC
_A__uGE_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_LC
	.private_extern _A__GE_var_C_LC
_A__GE_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_LC
	.private_extern _A__uGE_param_C_LC
_A__uGE_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_LC
	.private_extern _A__GE_param_C_LC
_A__GE_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_i64
	.private_extern _A__uGE_var_C_i64
_A__uGE_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_i64
	.private_extern _A__GE_var_C_i64
_A__GE_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_i64
	.private_extern _A__uGE_param_C_i64
_A__uGE_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_i64
	.private_extern _A__GE_param_C_i64
_A__GE_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_I
	.private_extern _A__uGE_var_C_I
_A__uGE_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_I
	.private_extern _A__GE_var_C_I
_A__GE_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_I
	.private_extern _A__uGE_param_C_I
_A__uGE_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_I
	.private_extern _A__GE_param_C_I
_A__GE_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_u8
	.private_extern _A__uGE_var_C_u8
_A__uGE_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_u8
	.private_extern _A__GE_var_C_u8
_A__GE_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_u8
	.private_extern _A__uGE_param_C_u8
_A__uGE_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_u8
	.private_extern _A__GE_param_C_u8
_A__GE_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movsbq	-25(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_C
	.private_extern _A__uGE_var_C_C
_A__uGE_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_C_C
	.private_extern _A__GE_var_C_C
_A__GE_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_C_C
	.private_extern _A__uGE_param_C_C
_A__uGE_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_C
	.private_extern _A__GE_param_C_C
_A__GE_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_u32
	.private_extern _A__uGE_var_C_u32
_A__uGE_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_u32
	.private_extern _A__GE_var_C_u32
_A__GE_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_u32
	.private_extern _A__uGE_param_C_u32
_A__uGE_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_u32
	.private_extern _A__GE_param_C_u32
_A__GE_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	movl	-28(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_i8
	.private_extern _A__uGE_var_C_i8
_A__uGE_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_i8
	.private_extern _A__GE_var_C_i8
_A__GE_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_i8
	.private_extern _A__uGE_param_C_i8
_A__uGE_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_i8
	.private_extern _A__GE_param_C_i8
_A__GE_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movq	-24(%rbp), %rdx
	movzbl	-25(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_L
	.private_extern _A__uGE_var_C_L
_A__uGE_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_L
	.private_extern _A__GE_var_C_L
_A__GE_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_L
	.private_extern _A__uGE_param_C_L
_A__uGE_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_L
	.private_extern _A__GE_param_C_L
_A__GE_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_u64
	.private_extern _A__uGE_var_C_u64
_A__uGE_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_u64
	.private_extern _A__GE_var_C_u64
_A__GE_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_u64
	.private_extern _A__uGE_param_C_u64
_A__uGE_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_u64
	.private_extern _A__GE_param_C_u64
_A__GE_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_u16
	.private_extern _A__uGE_var_C_u16
_A__uGE_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_u16
	.private_extern _A__GE_var_C_u16
_A__GE_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_u16
	.private_extern _A__uGE_param_C_u16
_A__uGE_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_u16
	.private_extern _A__GE_param_C_u16
_A__GE_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movq	-24(%rbp), %rdx
	movswq	-26(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_C_i32
	.private_extern _A__uGE_var_C_i32
_A__uGE_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_C_i32
	.private_extern _A__GE_var_C_i32
_A__GE_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_C_i32
	.private_extern _A__uGE_param_C_i32
_A__uGE_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_C_i32
	.private_extern _A__GE_param_C_i32
_A__GE_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movq	-24(%rbp), %rdx
	mov	-28(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_f32_f32
	.private_extern _A__GE_var_f32_f32
_A__GE_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	ucomiss	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_f32_f32
	.private_extern _A__GE_param_f32_f32
_A__GE_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	ucomiss	-24(%rbp), %xmm0
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_i16
	.private_extern _A__uGE_var_u32_i16
_A__uGE_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_i16
	.private_extern _A__GE_var_u32_i16
_A__GE_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_i16
	.private_extern _A__uGE_param_u32_i16
_A__uGE_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_i16
	.private_extern _A__GE_param_u32_i16
_A__GE_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_LC
	.private_extern _A__uGE_var_u32_LC
_A__uGE_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_LC
	.private_extern _A__GE_var_u32_LC
_A__GE_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_LC
	.private_extern _A__uGE_param_u32_LC
_A__uGE_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_LC
	.private_extern _A__GE_param_u32_LC
_A__GE_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_i64
	.private_extern _A__uGE_var_u32_i64
_A__uGE_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_i64
	.private_extern _A__GE_var_u32_i64
_A__GE_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_i64
	.private_extern _A__uGE_param_u32_i64
_A__uGE_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_i64
	.private_extern _A__GE_param_u32_i64
_A__GE_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_I
	.private_extern _A__uGE_var_u32_I
_A__uGE_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_I
	.private_extern _A__GE_var_u32_I
_A__GE_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_I
	.private_extern _A__uGE_param_u32_I
_A__uGE_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_I
	.private_extern _A__GE_param_u32_I
_A__GE_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_u8
	.private_extern _A__uGE_var_u32_u8
_A__uGE_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_u8
	.private_extern _A__GE_var_u32_u8
_A__GE_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_u8
	.private_extern _A__uGE_param_u32_u8
_A__uGE_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_u8
	.private_extern _A__GE_param_u32_u8
_A__GE_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_C
	.private_extern _A__uGE_var_u32_C
_A__uGE_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_C
	.private_extern _A__GE_var_u32_C
_A__GE_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_C
	.private_extern _A__uGE_param_u32_C
_A__uGE_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_C
	.private_extern _A__GE_param_u32_C
_A__GE_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_u32
	.private_extern _A__uGE_var_u32_u32
_A__uGE_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_u32_u32
	.private_extern _A__GE_var_u32_u32
_A__GE_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_u32_u32
	.private_extern _A__uGE_param_u32_u32
_A__uGE_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_u32
	.private_extern _A__GE_param_u32_u32
_A__GE_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_i8
	.private_extern _A__uGE_var_u32_i8
_A__uGE_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_i8
	.private_extern _A__GE_var_u32_i8
_A__GE_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_i8
	.private_extern _A__uGE_param_u32_i8
_A__uGE_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_i8
	.private_extern _A__GE_param_u32_i8
_A__GE_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_L
	.private_extern _A__uGE_var_u32_L
_A__uGE_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_L
	.private_extern _A__GE_var_u32_L
_A__GE_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_L
	.private_extern _A__uGE_param_u32_L
_A__uGE_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_L
	.private_extern _A__GE_param_u32_L
_A__GE_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_u64
	.private_extern _A__uGE_var_u32_u64
_A__uGE_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_u64
	.private_extern _A__GE_var_u32_u64
_A__GE_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_u64
	.private_extern _A__uGE_param_u32_u64
_A__uGE_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_u64
	.private_extern _A__GE_param_u32_u64
_A__GE_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_u16
	.private_extern _A__uGE_var_u32_u16
_A__uGE_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_u16
	.private_extern _A__GE_var_u32_u16
_A__GE_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_u16
	.private_extern _A__uGE_param_u32_u16
_A__uGE_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_u16
	.private_extern _A__GE_param_u32_u16
_A__GE_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u32_i32
	.private_extern _A__uGE_var_u32_i32
_A__uGE_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u32_i32
	.private_extern _A__GE_var_u32_i32
_A__GE_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u32_i32
	.private_extern _A__uGE_param_u32_i32
_A__uGE_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u32_i32
	.private_extern _A__GE_param_u32_i32
_A__GE_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_i16
	.private_extern _A__uGE_var_i8_i16
_A__uGE_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_i16
	.private_extern _A__GE_var_i8_i16
_A__GE_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_i16
	.private_extern _A__uGE_param_i8_i16
_A__uGE_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_i16
	.private_extern _A__GE_param_i8_i16
_A__GE_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_LC
	.private_extern _A__uGE_var_i8_LC
_A__uGE_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_LC
	.private_extern _A__GE_var_i8_LC
_A__GE_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_LC
	.private_extern _A__uGE_param_i8_LC
_A__uGE_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_LC
	.private_extern _A__GE_param_i8_LC
_A__GE_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_i64
	.private_extern _A__uGE_var_i8_i64
_A__uGE_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_i64
	.private_extern _A__GE_var_i8_i64
_A__GE_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_i64
	.private_extern _A__uGE_param_i8_i64
_A__uGE_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_i64
	.private_extern _A__GE_param_i8_i64
_A__GE_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_I
	.private_extern _A__uGE_var_i8_I
_A__uGE_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_I
	.private_extern _A__GE_var_i8_I
_A__GE_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_I
	.private_extern _A__uGE_param_i8_I
_A__uGE_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_I
	.private_extern _A__GE_param_i8_I
_A__GE_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_u8
	.private_extern _A__uGE_var_i8_u8
_A__uGE_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_u8
	.private_extern _A__GE_var_i8_u8
_A__GE_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_u8
	.private_extern _A__uGE_param_i8_u8
_A__uGE_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_u8
	.private_extern _A__GE_param_i8_u8
_A__GE_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_C
	.private_extern _A__uGE_var_i8_C
_A__uGE_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_C
	.private_extern _A__GE_var_i8_C
_A__GE_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_C
	.private_extern _A__uGE_param_i8_C
_A__uGE_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_C
	.private_extern _A__GE_param_i8_C
_A__GE_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_u32
	.private_extern _A__uGE_var_i8_u32
_A__uGE_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_u32
	.private_extern _A__GE_var_i8_u32
_A__GE_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_u32
	.private_extern _A__uGE_param_i8_u32
_A__uGE_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_u32
	.private_extern _A__GE_param_i8_u32
_A__GE_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_i8
	.private_extern _A__uGE_var_i8_i8
_A__uGE_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_i8_i8
	.private_extern _A__GE_var_i8_i8
_A__GE_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_i8_i8
	.private_extern _A__uGE_param_i8_i8
_A__uGE_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_i8
	.private_extern _A__GE_param_i8_i8
_A__GE_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_L
	.private_extern _A__uGE_var_i8_L
_A__uGE_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_L
	.private_extern _A__GE_var_i8_L
_A__GE_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_L
	.private_extern _A__uGE_param_i8_L
_A__uGE_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_L
	.private_extern _A__GE_param_i8_L
_A__GE_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_u64
	.private_extern _A__uGE_var_i8_u64
_A__uGE_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_u64
	.private_extern _A__GE_var_i8_u64
_A__GE_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_u64
	.private_extern _A__uGE_param_i8_u64
_A__uGE_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_u64
	.private_extern _A__GE_param_i8_u64
_A__GE_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_u16
	.private_extern _A__uGE_var_i8_u16
_A__uGE_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_u16
	.private_extern _A__GE_var_i8_u16
_A__GE_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_u16
	.private_extern _A__uGE_param_i8_u16
_A__uGE_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_u16
	.private_extern _A__GE_param_i8_u16
_A__GE_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i8_i32
	.private_extern _A__uGE_var_i8_i32
_A__uGE_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i8_i32
	.private_extern _A__GE_var_i8_i32
_A__GE_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i8_i32
	.private_extern _A__uGE_param_i8_i32
_A__uGE_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i8_i32
	.private_extern _A__GE_param_i8_i32
_A__GE_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_i16
	.private_extern _A__uGE_var_L_i16
_A__uGE_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_i16
	.private_extern _A__GE_var_L_i16
_A__GE_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_i16
	.private_extern _A__uGE_param_L_i16
_A__uGE_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_i16
	.private_extern _A__GE_param_L_i16
_A__GE_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_LC
	.private_extern _A__uGE_var_L_LC
_A__uGE_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_LC
	.private_extern _A__GE_var_L_LC
_A__GE_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_LC
	.private_extern _A__uGE_param_L_LC
_A__uGE_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_LC
	.private_extern _A__GE_param_L_LC
_A__GE_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_i64
	.private_extern _A__uGE_var_L_i64
_A__uGE_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_i64
	.private_extern _A__GE_var_L_i64
_A__GE_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_i64
	.private_extern _A__uGE_param_L_i64
_A__uGE_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_i64
	.private_extern _A__GE_param_L_i64
_A__GE_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_I
	.private_extern _A__uGE_var_L_I
_A__uGE_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_I
	.private_extern _A__GE_var_L_I
_A__GE_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_I
	.private_extern _A__uGE_param_L_I
_A__uGE_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_I
	.private_extern _A__GE_param_L_I
_A__GE_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_u8
	.private_extern _A__uGE_var_L_u8
_A__uGE_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_u8
	.private_extern _A__GE_var_L_u8
_A__GE_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_u8
	.private_extern _A__uGE_param_L_u8
_A__uGE_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_u8
	.private_extern _A__GE_param_L_u8
_A__GE_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_C
	.private_extern _A__uGE_var_L_C
_A__uGE_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_C
	.private_extern _A__GE_var_L_C
_A__GE_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_C
	.private_extern _A__uGE_param_L_C
_A__uGE_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_C
	.private_extern _A__GE_param_L_C
_A__GE_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_u32
	.private_extern _A__uGE_var_L_u32
_A__uGE_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_u32
	.private_extern _A__GE_var_L_u32
_A__GE_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_u32
	.private_extern _A__uGE_param_L_u32
_A__uGE_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_u32
	.private_extern _A__GE_param_L_u32
_A__GE_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_i8
	.private_extern _A__uGE_var_L_i8
_A__uGE_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_i8
	.private_extern _A__GE_var_L_i8
_A__GE_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_i8
	.private_extern _A__uGE_param_L_i8
_A__uGE_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_i8
	.private_extern _A__GE_param_L_i8
_A__GE_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_L
	.private_extern _A__uGE_var_L_L
_A__uGE_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_L_L
	.private_extern _A__GE_var_L_L
_A__GE_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_L_L
	.private_extern _A__uGE_param_L_L
_A__uGE_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_L
	.private_extern _A__GE_param_L_L
_A__GE_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_u64
	.private_extern _A__uGE_var_L_u64
_A__uGE_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_u64
	.private_extern _A__GE_var_L_u64
_A__GE_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_u64
	.private_extern _A__uGE_param_L_u64
_A__uGE_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_u64
	.private_extern _A__GE_param_L_u64
_A__GE_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_u16
	.private_extern _A__uGE_var_L_u16
_A__uGE_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_u16
	.private_extern _A__GE_var_L_u16
_A__GE_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_u16
	.private_extern _A__uGE_param_L_u16
_A__uGE_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_u16
	.private_extern _A__GE_param_L_u16
_A__GE_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_L_i32
	.private_extern _A__uGE_var_L_i32
_A__uGE_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_L_i32
	.private_extern _A__GE_var_L_i32
_A__GE_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_L_i32
	.private_extern _A__uGE_param_L_i32
_A__uGE_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_L_i32
	.private_extern _A__GE_param_L_i32
_A__GE_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_i16
	.private_extern _A__uGE_var_u64_i16
_A__uGE_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_i16
	.private_extern _A__GE_var_u64_i16
_A__GE_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_i16
	.private_extern _A__uGE_param_u64_i16
_A__uGE_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_i16
	.private_extern _A__GE_param_u64_i16
_A__GE_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_LC
	.private_extern _A__uGE_var_u64_LC
_A__uGE_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_LC
	.private_extern _A__GE_var_u64_LC
_A__GE_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_LC
	.private_extern _A__uGE_param_u64_LC
_A__uGE_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_LC
	.private_extern _A__GE_param_u64_LC
_A__GE_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_i64
	.private_extern _A__uGE_var_u64_i64
_A__uGE_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_i64
	.private_extern _A__GE_var_u64_i64
_A__GE_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_i64
	.private_extern _A__uGE_param_u64_i64
_A__uGE_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_i64
	.private_extern _A__GE_param_u64_i64
_A__GE_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_I
	.private_extern _A__uGE_var_u64_I
_A__uGE_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_I
	.private_extern _A__GE_var_u64_I
_A__GE_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_I
	.private_extern _A__uGE_param_u64_I
_A__uGE_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_I
	.private_extern _A__GE_param_u64_I
_A__GE_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_u8
	.private_extern _A__uGE_var_u64_u8
_A__uGE_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_u8
	.private_extern _A__GE_var_u64_u8
_A__GE_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_u8
	.private_extern _A__uGE_param_u64_u8
_A__uGE_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_u8
	.private_extern _A__GE_param_u64_u8
_A__GE_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_C
	.private_extern _A__uGE_var_u64_C
_A__uGE_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_C
	.private_extern _A__GE_var_u64_C
_A__GE_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_C
	.private_extern _A__uGE_param_u64_C
_A__uGE_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_C
	.private_extern _A__GE_param_u64_C
_A__GE_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_u32
	.private_extern _A__uGE_var_u64_u32
_A__uGE_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_u32
	.private_extern _A__GE_var_u64_u32
_A__GE_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_u32
	.private_extern _A__uGE_param_u64_u32
_A__uGE_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_u32
	.private_extern _A__GE_param_u64_u32
_A__GE_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_i8
	.private_extern _A__uGE_var_u64_i8
_A__uGE_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_i8
	.private_extern _A__GE_var_u64_i8
_A__GE_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_i8
	.private_extern _A__uGE_param_u64_i8
_A__uGE_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_i8
	.private_extern _A__GE_param_u64_i8
_A__GE_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_L
	.private_extern _A__uGE_var_u64_L
_A__uGE_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_L
	.private_extern _A__GE_var_u64_L
_A__GE_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_L
	.private_extern _A__uGE_param_u64_L
_A__uGE_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_L
	.private_extern _A__GE_param_u64_L
_A__GE_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_u64
	.private_extern _A__uGE_var_u64_u64
_A__uGE_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_u64_u64
	.private_extern _A__GE_var_u64_u64
_A__GE_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_u64_u64
	.private_extern _A__uGE_param_u64_u64
_A__uGE_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_u64
	.private_extern _A__GE_param_u64_u64
_A__GE_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_u16
	.private_extern _A__uGE_var_u64_u16
_A__uGE_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_u16
	.private_extern _A__GE_var_u64_u16
_A__GE_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_u16
	.private_extern _A__uGE_param_u64_u16
_A__uGE_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_u16
	.private_extern _A__GE_param_u64_u16
_A__GE_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u64_i32
	.private_extern _A__uGE_var_u64_i32
_A__uGE_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u64_i32
	.private_extern _A__GE_var_u64_i32
_A__GE_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u64_i32
	.private_extern _A__uGE_param_u64_i32
_A__uGE_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	cmpq	%rax, %rdx
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u64_i32
	.private_extern _A__GE_param_u64_i32
_A__GE_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_i16
	.private_extern _A__uGE_var_u16_i16
_A__uGE_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_i16
	.private_extern _A__GE_var_u16_i16
_A__GE_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_i16
	.private_extern _A__uGE_param_u16_i16
_A__uGE_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_i16
	.private_extern _A__GE_param_u16_i16
_A__GE_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_LC
	.private_extern _A__uGE_var_u16_LC
_A__uGE_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_LC
	.private_extern _A__GE_var_u16_LC
_A__GE_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_LC
	.private_extern _A__uGE_param_u16_LC
_A__uGE_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_LC
	.private_extern _A__GE_param_u16_LC
_A__GE_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_i64
	.private_extern _A__uGE_var_u16_i64
_A__uGE_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_i64
	.private_extern _A__GE_var_u16_i64
_A__GE_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_i64
	.private_extern _A__uGE_param_u16_i64
_A__uGE_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_i64
	.private_extern _A__GE_param_u16_i64
_A__GE_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_I
	.private_extern _A__uGE_var_u16_I
_A__uGE_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_I
	.private_extern _A__GE_var_u16_I
_A__GE_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_I
	.private_extern _A__uGE_param_u16_I
_A__uGE_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_I
	.private_extern _A__GE_param_u16_I
_A__GE_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_u8
	.private_extern _A__uGE_var_u16_u8
_A__uGE_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_u8
	.private_extern _A__GE_var_u16_u8
_A__GE_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_u8
	.private_extern _A__uGE_param_u16_u8
_A__uGE_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_u8
	.private_extern _A__GE_param_u16_u8
_A__GE_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_C
	.private_extern _A__uGE_var_u16_C
_A__uGE_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_C
	.private_extern _A__GE_var_u16_C
_A__GE_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_C
	.private_extern _A__uGE_param_u16_C
_A__uGE_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_C
	.private_extern _A__GE_param_u16_C
_A__GE_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_u32
	.private_extern _A__uGE_var_u16_u32
_A__uGE_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_u32
	.private_extern _A__GE_var_u16_u32
_A__GE_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_u32
	.private_extern _A__uGE_param_u16_u32
_A__uGE_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_u32
	.private_extern _A__GE_param_u16_u32
_A__GE_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_i8
	.private_extern _A__uGE_var_u16_i8
_A__uGE_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_i8
	.private_extern _A__GE_var_u16_i8
_A__GE_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_i8
	.private_extern _A__uGE_param_u16_i8
_A__uGE_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_i8
	.private_extern _A__GE_param_u16_i8
_A__GE_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setle	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_L
	.private_extern _A__uGE_var_u16_L
_A__uGE_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_L
	.private_extern _A__GE_var_u16_L
_A__GE_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_L
	.private_extern _A__uGE_param_u16_L
_A__uGE_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_L
	.private_extern _A__GE_param_u16_L
_A__GE_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_u64
	.private_extern _A__uGE_var_u16_u64
_A__uGE_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_u64
	.private_extern _A__GE_var_u16_u64
_A__GE_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_u64
	.private_extern _A__uGE_param_u16_u64
_A__uGE_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_u64
	.private_extern _A__GE_param_u16_u64
_A__GE_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_u16
	.private_extern _A__uGE_var_u16_u16
_A__uGE_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_u16_u16
	.private_extern _A__GE_var_u16_u16
_A__GE_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_u16_u16
	.private_extern _A__uGE_param_u16_u16
_A__uGE_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_u16
	.private_extern _A__GE_param_u16_u16
_A__GE_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_u16_i32
	.private_extern _A__uGE_var_u16_i32
_A__uGE_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_u16_i32
	.private_extern _A__GE_var_u16_i32
_A__GE_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_u16_i32
	.private_extern _A__uGE_param_u16_i32
_A__uGE_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_u16_i32
	.private_extern _A__GE_param_u16_i32
_A__GE_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_i16
	.private_extern _A__uGE_var_i32_i16
_A__uGE_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_i16
	.private_extern _A__GE_var_i32_i16
_A__GE_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_i16
	.private_extern _A__uGE_param_i32_i16
_A__uGE_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_i16
	.private_extern _A__GE_param_i32_i16
_A__GE_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_LC
	.private_extern _A__uGE_var_i32_LC
_A__uGE_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_LC
	.private_extern _A__GE_var_i32_LC
_A__GE_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_LC
	.private_extern _A__uGE_param_i32_LC
_A__uGE_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_LC
	.private_extern _A__GE_param_i32_LC
_A__GE_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_i64
	.private_extern _A__uGE_var_i32_i64
_A__uGE_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_i64
	.private_extern _A__GE_var_i32_i64
_A__GE_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_i64
	.private_extern _A__uGE_param_i32_i64
_A__uGE_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_i64
	.private_extern _A__GE_param_i32_i64
_A__GE_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_I
	.private_extern _A__uGE_var_i32_I
_A__uGE_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_I
	.private_extern _A__GE_var_i32_I
_A__GE_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_I
	.private_extern _A__uGE_param_i32_I
_A__uGE_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_I
	.private_extern _A__GE_param_i32_I
_A__GE_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_u8
	.private_extern _A__uGE_var_i32_u8
_A__uGE_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_u8
	.private_extern _A__GE_var_i32_u8
_A__GE_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_u8
	.private_extern _A__uGE_param_i32_u8
_A__uGE_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_u8
	.private_extern _A__GE_param_i32_u8
_A__GE_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_C
	.private_extern _A__uGE_var_i32_C
_A__uGE_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_C
	.private_extern _A__GE_var_i32_C
_A__GE_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_C
	.private_extern _A__uGE_param_i32_C
_A__uGE_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_C
	.private_extern _A__GE_param_i32_C
_A__GE_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_u32
	.private_extern _A__uGE_var_i32_u32
_A__uGE_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_u32
	.private_extern _A__GE_var_i32_u32
_A__GE_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_u32
	.private_extern _A__uGE_param_i32_u32
_A__uGE_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_u32
	.private_extern _A__GE_param_i32_u32
_A__GE_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_i8
	.private_extern _A__uGE_var_i32_i8
_A__uGE_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_i8
	.private_extern _A__GE_var_i32_i8
_A__GE_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_i8
	.private_extern _A__uGE_param_i32_i8
_A__uGE_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_i8
	.private_extern _A__GE_param_i32_i8
_A__GE_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_L
	.private_extern _A__uGE_var_i32_L
_A__uGE_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_L
	.private_extern _A__GE_var_i32_L
_A__GE_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_L
	.private_extern _A__uGE_param_i32_L
_A__uGE_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_L
	.private_extern _A__GE_param_i32_L
_A__GE_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_u64
	.private_extern _A__uGE_var_i32_u64
_A__uGE_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_u64
	.private_extern _A__GE_var_i32_u64
_A__GE_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_u64
	.private_extern _A__uGE_param_i32_u64
_A__uGE_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_u64
	.private_extern _A__GE_param_i32_u64
_A__GE_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_u16
	.private_extern _A__uGE_var_i32_u16
_A__uGE_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_var_i32_u16
	.private_extern _A__GE_var_i32_u16
_A__GE_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_param_i32_u16
	.private_extern _A__uGE_param_i32_u16
_A__uGE_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setbe	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_u16
	.private_extern _A__GE_param_i32_u16
_A__GE_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uGE_var_i32_i32
	.private_extern _A__uGE_var_i32_i32
_A__uGE_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__GE_var_i32_i32
	.private_extern _A__GE_var_i32_i32
_A__GE_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__uGE_param_i32_i32
	.private_extern _A__uGE_param_i32_i32
_A__uGE_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setae	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__GE_param_i32_i32
	.private_extern _A__GE_param_i32_i32
_A__GE_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setge	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uAnd_var_i16_i16
	.private_extern _A__uAnd_var_i16_i16
_A__uAnd_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leave
	ret
.globl _A__uAnd_param_i16_i16
	.private_extern _A__uAnd_param_i16_i16
_A__uAnd_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_LC
	.private_extern _A__uAnd_var_i16_LC
_A__uAnd_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_LC
	.private_extern _A__uAnd_param_i16_LC
_A__uAnd_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i16_i64
	.private_extern _A__uAnd_var_i16_i64
_A__uAnd_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_i64
	.private_extern _A__uAnd_param_i16_i64
_A__uAnd_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_I
	.private_extern _A__uAnd_var_i16_I
_A__uAnd_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_I
	.private_extern _A__uAnd_param_i16_I
_A__uAnd_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_u8
	.private_extern _A__uAnd_var_i16_u8
_A__uAnd_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_u8
	.private_extern _A__uAnd_param_i16_u8
_A__uAnd_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_C
	.private_extern _A__uAnd_var_i16_C
_A__uAnd_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_C
	.private_extern _A__uAnd_param_i16_C
_A__uAnd_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i16_u32
	.private_extern _A__uAnd_var_i16_u32
_A__uAnd_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_u32
	.private_extern _A__uAnd_param_i16_u32
_A__uAnd_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_i8
	.private_extern _A__uAnd_var_i16_i8
_A__uAnd_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_i8
	.private_extern _A__uAnd_param_i16_i8
_A__uAnd_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_L
	.private_extern _A__uAnd_var_i16_L
_A__uAnd_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_L
	.private_extern _A__uAnd_param_i16_L
_A__uAnd_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_u64
	.private_extern _A__uAnd_var_i16_u64
_A__uAnd_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_u64
	.private_extern _A__uAnd_param_i16_u64
_A__uAnd_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_u16
	.private_extern _A__uAnd_var_i16_u16
_A__uAnd_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_u16
	.private_extern _A__uAnd_param_i16_u16
_A__uAnd_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i16_i32
	.private_extern _A__uAnd_var_i16_i32
_A__uAnd_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i16_i32
	.private_extern _A__uAnd_param_i16_i32
_A__uAnd_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_LC_i16
	.private_extern _A__uAnd_var_LC_i16
_A__uAnd_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_i16
	.private_extern _A__uAnd_param_LC_i16
_A__uAnd_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_LC
	.private_extern _A__uAnd_var_LC_LC
_A__uAnd_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_LC_LC
	.private_extern _A__uAnd_param_LC_LC
_A__uAnd_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_LC_i64
	.private_extern _A__uAnd_var_LC_i64
_A__uAnd_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_i64
	.private_extern _A__uAnd_param_LC_i64
_A__uAnd_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_I
	.private_extern _A__uAnd_var_LC_I
_A__uAnd_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_I
	.private_extern _A__uAnd_param_LC_I
_A__uAnd_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_u8
	.private_extern _A__uAnd_var_LC_u8
_A__uAnd_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_u8
	.private_extern _A__uAnd_param_LC_u8
_A__uAnd_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_C
	.private_extern _A__uAnd_var_LC_C
_A__uAnd_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_C
	.private_extern _A__uAnd_param_LC_C
_A__uAnd_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_LC_u32
	.private_extern _A__uAnd_var_LC_u32
_A__uAnd_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_u32
	.private_extern _A__uAnd_param_LC_u32
_A__uAnd_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_i8
	.private_extern _A__uAnd_var_LC_i8
_A__uAnd_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_i8
	.private_extern _A__uAnd_param_LC_i8
_A__uAnd_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_L
	.private_extern _A__uAnd_var_LC_L
_A__uAnd_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_L
	.private_extern _A__uAnd_param_LC_L
_A__uAnd_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_u64
	.private_extern _A__uAnd_var_LC_u64
_A__uAnd_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_u64
	.private_extern _A__uAnd_param_LC_u64
_A__uAnd_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_u16
	.private_extern _A__uAnd_var_LC_u16
_A__uAnd_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_u16
	.private_extern _A__uAnd_param_LC_u16
_A__uAnd_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_LC_i32
	.private_extern _A__uAnd_var_LC_i32
_A__uAnd_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_LC_i32
	.private_extern _A__uAnd_param_LC_i32
_A__uAnd_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i64_i16
	.private_extern _A__uAnd_var_i64_i16
_A__uAnd_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_i16
	.private_extern _A__uAnd_param_i64_i16
_A__uAnd_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_LC
	.private_extern _A__uAnd_var_i64_LC
_A__uAnd_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_LC
	.private_extern _A__uAnd_param_i64_LC
_A__uAnd_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i64_i64
	.private_extern _A__uAnd_var_i64_i64
_A__uAnd_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_i64_i64
	.private_extern _A__uAnd_param_i64_i64
_A__uAnd_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_I
	.private_extern _A__uAnd_var_i64_I
_A__uAnd_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_I
	.private_extern _A__uAnd_param_i64_I
_A__uAnd_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_u8
	.private_extern _A__uAnd_var_i64_u8
_A__uAnd_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_u8
	.private_extern _A__uAnd_param_i64_u8
_A__uAnd_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_C
	.private_extern _A__uAnd_var_i64_C
_A__uAnd_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_C
	.private_extern _A__uAnd_param_i64_C
_A__uAnd_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i64_u32
	.private_extern _A__uAnd_var_i64_u32
_A__uAnd_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_u32
	.private_extern _A__uAnd_param_i64_u32
_A__uAnd_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_i8
	.private_extern _A__uAnd_var_i64_i8
_A__uAnd_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_i8
	.private_extern _A__uAnd_param_i64_i8
_A__uAnd_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_L
	.private_extern _A__uAnd_var_i64_L
_A__uAnd_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_L
	.private_extern _A__uAnd_param_i64_L
_A__uAnd_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_u64
	.private_extern _A__uAnd_var_i64_u64
_A__uAnd_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_u64
	.private_extern _A__uAnd_param_i64_u64
_A__uAnd_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_u16
	.private_extern _A__uAnd_var_i64_u16
_A__uAnd_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_u16
	.private_extern _A__uAnd_param_i64_u16
_A__uAnd_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i64_i32
	.private_extern _A__uAnd_var_i64_i32
_A__uAnd_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i64_i32
	.private_extern _A__uAnd_param_i64_i32
_A__uAnd_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_i16
	.private_extern _A__uAnd_var_I_i16
_A__uAnd_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_i16
	.private_extern _A__uAnd_param_I_i16
_A__uAnd_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_LC
	.private_extern _A__uAnd_var_I_LC
_A__uAnd_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_LC
	.private_extern _A__uAnd_param_I_LC
_A__uAnd_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_I_i64
	.private_extern _A__uAnd_var_I_i64
_A__uAnd_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_i64
	.private_extern _A__uAnd_param_I_i64
_A__uAnd_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_I
	.private_extern _A__uAnd_var_I_I
_A__uAnd_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_I_I
	.private_extern _A__uAnd_param_I_I
_A__uAnd_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_u8
	.private_extern _A__uAnd_var_I_u8
_A__uAnd_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_u8
	.private_extern _A__uAnd_param_I_u8
_A__uAnd_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_C
	.private_extern _A__uAnd_var_I_C
_A__uAnd_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_C
	.private_extern _A__uAnd_param_I_C
_A__uAnd_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_I_u32
	.private_extern _A__uAnd_var_I_u32
_A__uAnd_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_u32
	.private_extern _A__uAnd_param_I_u32
_A__uAnd_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_i8
	.private_extern _A__uAnd_var_I_i8
_A__uAnd_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_i8
	.private_extern _A__uAnd_param_I_i8
_A__uAnd_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_L
	.private_extern _A__uAnd_var_I_L
_A__uAnd_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_L
	.private_extern _A__uAnd_param_I_L
_A__uAnd_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_u64
	.private_extern _A__uAnd_var_I_u64
_A__uAnd_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_u64
	.private_extern _A__uAnd_param_I_u64
_A__uAnd_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_u16
	.private_extern _A__uAnd_var_I_u16
_A__uAnd_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_u16
	.private_extern _A__uAnd_param_I_u16
_A__uAnd_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_I_i32
	.private_extern _A__uAnd_var_I_i32
_A__uAnd_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_I_i32
	.private_extern _A__uAnd_param_I_i32
_A__uAnd_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_i16
	.private_extern _A__uAnd_var_u8_i16
_A__uAnd_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_i16
	.private_extern _A__uAnd_param_u8_i16
_A__uAnd_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_LC
	.private_extern _A__uAnd_var_u8_LC
_A__uAnd_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_LC
	.private_extern _A__uAnd_param_u8_LC
_A__uAnd_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u8_i64
	.private_extern _A__uAnd_var_u8_i64
_A__uAnd_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_i64
	.private_extern _A__uAnd_param_u8_i64
_A__uAnd_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_I
	.private_extern _A__uAnd_var_u8_I
_A__uAnd_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_I
	.private_extern _A__uAnd_param_u8_I
_A__uAnd_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_u8
	.private_extern _A__uAnd_var_u8_u8
_A__uAnd_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leave
	ret
.globl _A__uAnd_param_u8_u8
	.private_extern _A__uAnd_param_u8_u8
_A__uAnd_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_C
	.private_extern _A__uAnd_var_u8_C
_A__uAnd_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_C
	.private_extern _A__uAnd_param_u8_C
_A__uAnd_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u8_u32
	.private_extern _A__uAnd_var_u8_u32
_A__uAnd_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_u32
	.private_extern _A__uAnd_param_u8_u32
_A__uAnd_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_i8
	.private_extern _A__uAnd_var_u8_i8
_A__uAnd_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_i8
	.private_extern _A__uAnd_param_u8_i8
_A__uAnd_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_L
	.private_extern _A__uAnd_var_u8_L
_A__uAnd_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_L
	.private_extern _A__uAnd_param_u8_L
_A__uAnd_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_u64
	.private_extern _A__uAnd_var_u8_u64
_A__uAnd_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_u64
	.private_extern _A__uAnd_param_u8_u64
_A__uAnd_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_u16
	.private_extern _A__uAnd_var_u8_u16
_A__uAnd_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_u16
	.private_extern _A__uAnd_param_u8_u16
_A__uAnd_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u8_i32
	.private_extern _A__uAnd_var_u8_i32
_A__uAnd_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u8_i32
	.private_extern _A__uAnd_param_u8_i32
_A__uAnd_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_C_i16
	.private_extern _A__uAnd_var_C_i16
_A__uAnd_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_i16
	.private_extern _A__uAnd_param_C_i16
_A__uAnd_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_LC
	.private_extern _A__uAnd_var_C_LC
_A__uAnd_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_LC
	.private_extern _A__uAnd_param_C_LC
_A__uAnd_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_C_i64
	.private_extern _A__uAnd_var_C_i64
_A__uAnd_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_i64
	.private_extern _A__uAnd_param_C_i64
_A__uAnd_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_I
	.private_extern _A__uAnd_var_C_I
_A__uAnd_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_I
	.private_extern _A__uAnd_param_C_I
_A__uAnd_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_u8
	.private_extern _A__uAnd_var_C_u8
_A__uAnd_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_u8
	.private_extern _A__uAnd_param_C_u8
_A__uAnd_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_C
	.private_extern _A__uAnd_var_C_C
_A__uAnd_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_C_C
	.private_extern _A__uAnd_param_C_C
_A__uAnd_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_C_u32
	.private_extern _A__uAnd_var_C_u32
_A__uAnd_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_u32
	.private_extern _A__uAnd_param_C_u32
_A__uAnd_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_i8
	.private_extern _A__uAnd_var_C_i8
_A__uAnd_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_i8
	.private_extern _A__uAnd_param_C_i8
_A__uAnd_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_L
	.private_extern _A__uAnd_var_C_L
_A__uAnd_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_L
	.private_extern _A__uAnd_param_C_L
_A__uAnd_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_u64
	.private_extern _A__uAnd_var_C_u64
_A__uAnd_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_u64
	.private_extern _A__uAnd_param_C_u64
_A__uAnd_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_u16
	.private_extern _A__uAnd_var_C_u16
_A__uAnd_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_u16
	.private_extern _A__uAnd_param_C_u16
_A__uAnd_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_C_i32
	.private_extern _A__uAnd_var_C_i32
_A__uAnd_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_C_i32
	.private_extern _A__uAnd_param_C_i32
_A__uAnd_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	andq	-24(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u32_i16
	.private_extern _A__uAnd_var_u32_i16
_A__uAnd_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_i16
	.private_extern _A__uAnd_param_u32_i16
_A__uAnd_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_LC
	.private_extern _A__uAnd_var_u32_LC
_A__uAnd_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_LC
	.private_extern _A__uAnd_param_u32_LC
_A__uAnd_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u32_i64
	.private_extern _A__uAnd_var_u32_i64
_A__uAnd_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_i64
	.private_extern _A__uAnd_param_u32_i64
_A__uAnd_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_I
	.private_extern _A__uAnd_var_u32_I
_A__uAnd_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_I
	.private_extern _A__uAnd_param_u32_I
_A__uAnd_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_u8
	.private_extern _A__uAnd_var_u32_u8
_A__uAnd_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_u8
	.private_extern _A__uAnd_param_u32_u8
_A__uAnd_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_C
	.private_extern _A__uAnd_var_u32_C
_A__uAnd_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_C
	.private_extern _A__uAnd_param_u32_C
_A__uAnd_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u32_u32
	.private_extern _A__uAnd_var_u32_u32
_A__uAnd_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	leave
	ret
.globl _A__uAnd_param_u32_u32
	.private_extern _A__uAnd_param_u32_u32
_A__uAnd_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_i8
	.private_extern _A__uAnd_var_u32_i8
_A__uAnd_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_i8
	.private_extern _A__uAnd_param_u32_i8
_A__uAnd_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_L
	.private_extern _A__uAnd_var_u32_L
_A__uAnd_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_L
	.private_extern _A__uAnd_param_u32_L
_A__uAnd_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_u64
	.private_extern _A__uAnd_var_u32_u64
_A__uAnd_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_u64
	.private_extern _A__uAnd_param_u32_u64
_A__uAnd_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_u16
	.private_extern _A__uAnd_var_u32_u16
_A__uAnd_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_u16
	.private_extern _A__uAnd_param_u32_u16
_A__uAnd_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u32_i32
	.private_extern _A__uAnd_var_u32_i32
_A__uAnd_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u32_i32
	.private_extern _A__uAnd_param_u32_i32
_A__uAnd_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_i16
	.private_extern _A__uAnd_var_i8_i16
_A__uAnd_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_i16
	.private_extern _A__uAnd_param_i8_i16
_A__uAnd_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_LC
	.private_extern _A__uAnd_var_i8_LC
_A__uAnd_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_LC
	.private_extern _A__uAnd_param_i8_LC
_A__uAnd_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i8_i64
	.private_extern _A__uAnd_var_i8_i64
_A__uAnd_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_i64
	.private_extern _A__uAnd_param_i8_i64
_A__uAnd_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_I
	.private_extern _A__uAnd_var_i8_I
_A__uAnd_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_I
	.private_extern _A__uAnd_param_i8_I
_A__uAnd_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_u8
	.private_extern _A__uAnd_var_i8_u8
_A__uAnd_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_u8
	.private_extern _A__uAnd_param_i8_u8
_A__uAnd_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_C
	.private_extern _A__uAnd_var_i8_C
_A__uAnd_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_C
	.private_extern _A__uAnd_param_i8_C
_A__uAnd_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i8_u32
	.private_extern _A__uAnd_var_i8_u32
_A__uAnd_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_u32
	.private_extern _A__uAnd_param_i8_u32
_A__uAnd_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_i8
	.private_extern _A__uAnd_var_i8_i8
_A__uAnd_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__uAnd_param_i8_i8
	.private_extern _A__uAnd_param_i8_i8
_A__uAnd_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_L
	.private_extern _A__uAnd_var_i8_L
_A__uAnd_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_L
	.private_extern _A__uAnd_param_i8_L
_A__uAnd_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_u64
	.private_extern _A__uAnd_var_i8_u64
_A__uAnd_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_u64
	.private_extern _A__uAnd_param_i8_u64
_A__uAnd_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_u16
	.private_extern _A__uAnd_var_i8_u16
_A__uAnd_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_u16
	.private_extern _A__uAnd_param_i8_u16
_A__uAnd_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i8_i32
	.private_extern _A__uAnd_var_i8_i32
_A__uAnd_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i8_i32
	.private_extern _A__uAnd_param_i8_i32
_A__uAnd_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_i16
	.private_extern _A__uAnd_var_L_i16
_A__uAnd_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_i16
	.private_extern _A__uAnd_param_L_i16
_A__uAnd_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_LC
	.private_extern _A__uAnd_var_L_LC
_A__uAnd_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_LC
	.private_extern _A__uAnd_param_L_LC
_A__uAnd_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_L_i64
	.private_extern _A__uAnd_var_L_i64
_A__uAnd_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_i64
	.private_extern _A__uAnd_param_L_i64
_A__uAnd_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_I
	.private_extern _A__uAnd_var_L_I
_A__uAnd_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_I
	.private_extern _A__uAnd_param_L_I
_A__uAnd_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_u8
	.private_extern _A__uAnd_var_L_u8
_A__uAnd_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_u8
	.private_extern _A__uAnd_param_L_u8
_A__uAnd_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_C
	.private_extern _A__uAnd_var_L_C
_A__uAnd_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_C
	.private_extern _A__uAnd_param_L_C
_A__uAnd_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_L_u32
	.private_extern _A__uAnd_var_L_u32
_A__uAnd_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_u32
	.private_extern _A__uAnd_param_L_u32
_A__uAnd_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_i8
	.private_extern _A__uAnd_var_L_i8
_A__uAnd_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_i8
	.private_extern _A__uAnd_param_L_i8
_A__uAnd_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_L
	.private_extern _A__uAnd_var_L_L
_A__uAnd_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_L_L
	.private_extern _A__uAnd_param_L_L
_A__uAnd_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_u64
	.private_extern _A__uAnd_var_L_u64
_A__uAnd_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_u64
	.private_extern _A__uAnd_param_L_u64
_A__uAnd_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_u16
	.private_extern _A__uAnd_var_L_u16
_A__uAnd_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_u16
	.private_extern _A__uAnd_param_L_u16
_A__uAnd_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_L_i32
	.private_extern _A__uAnd_var_L_i32
_A__uAnd_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_L_i32
	.private_extern _A__uAnd_param_L_i32
_A__uAnd_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_i16
	.private_extern _A__uAnd_var_u64_i16
_A__uAnd_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_i16
	.private_extern _A__uAnd_param_u64_i16
_A__uAnd_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_LC
	.private_extern _A__uAnd_var_u64_LC
_A__uAnd_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_LC
	.private_extern _A__uAnd_param_u64_LC
_A__uAnd_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u64_i64
	.private_extern _A__uAnd_var_u64_i64
_A__uAnd_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_i64
	.private_extern _A__uAnd_param_u64_i64
_A__uAnd_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_I
	.private_extern _A__uAnd_var_u64_I
_A__uAnd_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_I
	.private_extern _A__uAnd_param_u64_I
_A__uAnd_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_u8
	.private_extern _A__uAnd_var_u64_u8
_A__uAnd_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_u8
	.private_extern _A__uAnd_param_u64_u8
_A__uAnd_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_C
	.private_extern _A__uAnd_var_u64_C
_A__uAnd_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_C
	.private_extern _A__uAnd_param_u64_C
_A__uAnd_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u64_u32
	.private_extern _A__uAnd_var_u64_u32
_A__uAnd_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_u32
	.private_extern _A__uAnd_param_u64_u32
_A__uAnd_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_i8
	.private_extern _A__uAnd_var_u64_i8
_A__uAnd_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_i8
	.private_extern _A__uAnd_param_u64_i8
_A__uAnd_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_L
	.private_extern _A__uAnd_var_u64_L
_A__uAnd_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_L
	.private_extern _A__uAnd_param_u64_L
_A__uAnd_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_u64
	.private_extern _A__uAnd_var_u64_u64
_A__uAnd_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uAnd_param_u64_u64
	.private_extern _A__uAnd_param_u64_u64
_A__uAnd_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_u16
	.private_extern _A__uAnd_var_u64_u16
_A__uAnd_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_u16
	.private_extern _A__uAnd_param_u64_u16
_A__uAnd_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u64_i32
	.private_extern _A__uAnd_var_u64_i32
_A__uAnd_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u64_i32
	.private_extern _A__uAnd_param_u64_i32
_A__uAnd_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_i16
	.private_extern _A__uAnd_var_u16_i16
_A__uAnd_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_i16
	.private_extern _A__uAnd_param_u16_i16
_A__uAnd_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_LC
	.private_extern _A__uAnd_var_u16_LC
_A__uAnd_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_LC
	.private_extern _A__uAnd_param_u16_LC
_A__uAnd_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u16_i64
	.private_extern _A__uAnd_var_u16_i64
_A__uAnd_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_i64
	.private_extern _A__uAnd_param_u16_i64
_A__uAnd_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_I
	.private_extern _A__uAnd_var_u16_I
_A__uAnd_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_I
	.private_extern _A__uAnd_param_u16_I
_A__uAnd_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_u8
	.private_extern _A__uAnd_var_u16_u8
_A__uAnd_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_u8
	.private_extern _A__uAnd_param_u16_u8
_A__uAnd_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_C
	.private_extern _A__uAnd_var_u16_C
_A__uAnd_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_C
	.private_extern _A__uAnd_param_u16_C
_A__uAnd_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_u16_u32
	.private_extern _A__uAnd_var_u16_u32
_A__uAnd_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_u32
	.private_extern _A__uAnd_param_u16_u32
_A__uAnd_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_i8
	.private_extern _A__uAnd_var_u16_i8
_A__uAnd_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_i8
	.private_extern _A__uAnd_param_u16_i8
_A__uAnd_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_L
	.private_extern _A__uAnd_var_u16_L
_A__uAnd_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_L
	.private_extern _A__uAnd_param_u16_L
_A__uAnd_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_u64
	.private_extern _A__uAnd_var_u16_u64
_A__uAnd_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_u64
	.private_extern _A__uAnd_param_u16_u64
_A__uAnd_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_u16
	.private_extern _A__uAnd_var_u16_u16
_A__uAnd_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leave
	ret
.globl _A__uAnd_param_u16_u16
	.private_extern _A__uAnd_param_u16_u16
_A__uAnd_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_u16_i32
	.private_extern _A__uAnd_var_u16_i32
_A__uAnd_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_u16_i32
	.private_extern _A__uAnd_param_u16_i32
_A__uAnd_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_i16
	.private_extern _A__uAnd_var_i32_i16
_A__uAnd_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_i16
	.private_extern _A__uAnd_param_i32_i16
_A__uAnd_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_LC
	.private_extern _A__uAnd_var_i32_LC
_A__uAnd_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_LC
	.private_extern _A__uAnd_param_i32_LC
_A__uAnd_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i32_i64
	.private_extern _A__uAnd_var_i32_i64
_A__uAnd_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_i64
	.private_extern _A__uAnd_param_i32_i64
_A__uAnd_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_I
	.private_extern _A__uAnd_var_i32_I
_A__uAnd_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_I
	.private_extern _A__uAnd_param_i32_I
_A__uAnd_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_u8
	.private_extern _A__uAnd_var_i32_u8
_A__uAnd_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_u8
	.private_extern _A__uAnd_param_i32_u8
_A__uAnd_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_C
	.private_extern _A__uAnd_var_i32_C
_A__uAnd_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_C
	.private_extern _A__uAnd_param_i32_C
_A__uAnd_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	andq	-32(%rbp), %rax
	leave
	ret
.globl _A__uAnd_var_i32_u32
	.private_extern _A__uAnd_var_i32_u32
_A__uAnd_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_u32
	.private_extern _A__uAnd_param_i32_u32
_A__uAnd_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_i8
	.private_extern _A__uAnd_var_i32_i8
_A__uAnd_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_i8
	.private_extern _A__uAnd_param_i32_i8
_A__uAnd_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_L
	.private_extern _A__uAnd_var_i32_L
_A__uAnd_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_L
	.private_extern _A__uAnd_param_i32_L
_A__uAnd_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_u64
	.private_extern _A__uAnd_var_i32_u64
_A__uAnd_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_u64
	.private_extern _A__uAnd_param_i32_u64
_A__uAnd_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_u16
	.private_extern _A__uAnd_var_i32_u16
_A__uAnd_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_param_i32_u16
	.private_extern _A__uAnd_param_i32_u16
_A__uAnd_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uAnd_var_i32_i32
	.private_extern _A__uAnd_var_i32_i32
_A__uAnd_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leave
	ret
.globl _A__uAnd_param_i32_i32
	.private_extern _A__uAnd_param_i32_i32
_A__uAnd_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	andq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_i16
	.private_extern _A__uOr_var_i16_i16
_A__uOr_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	leave
	ret
.globl _A__uOr_param_i16_i16
	.private_extern _A__uOr_param_i16_i16
_A__uOr_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_LC
	.private_extern _A__uOr_var_i16_LC
_A__uOr_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_LC
	.private_extern _A__uOr_param_i16_LC
_A__uOr_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i16_i64
	.private_extern _A__uOr_var_i16_i64
_A__uOr_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_i64
	.private_extern _A__uOr_param_i16_i64
_A__uOr_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_I
	.private_extern _A__uOr_var_i16_I
_A__uOr_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_I
	.private_extern _A__uOr_param_i16_I
_A__uOr_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_u8
	.private_extern _A__uOr_var_i16_u8
_A__uOr_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_u8
	.private_extern _A__uOr_param_i16_u8
_A__uOr_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_C
	.private_extern _A__uOr_var_i16_C
_A__uOr_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_C
	.private_extern _A__uOr_param_i16_C
_A__uOr_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i16_u32
	.private_extern _A__uOr_var_i16_u32
_A__uOr_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_u32
	.private_extern _A__uOr_param_i16_u32
_A__uOr_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_i8
	.private_extern _A__uOr_var_i16_i8
_A__uOr_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_i8
	.private_extern _A__uOr_param_i16_i8
_A__uOr_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_L
	.private_extern _A__uOr_var_i16_L
_A__uOr_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_L
	.private_extern _A__uOr_param_i16_L
_A__uOr_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_u64
	.private_extern _A__uOr_var_i16_u64
_A__uOr_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_u64
	.private_extern _A__uOr_param_i16_u64
_A__uOr_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_u16
	.private_extern _A__uOr_var_i16_u16
_A__uOr_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_u16
	.private_extern _A__uOr_param_i16_u16
_A__uOr_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i16_i32
	.private_extern _A__uOr_var_i16_i32
_A__uOr_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i16_i32
	.private_extern _A__uOr_param_i16_i32
_A__uOr_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_LC_i16
	.private_extern _A__uOr_var_LC_i16
_A__uOr_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_i16
	.private_extern _A__uOr_param_LC_i16
_A__uOr_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_LC
	.private_extern _A__uOr_var_LC_LC
_A__uOr_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_LC_LC
	.private_extern _A__uOr_param_LC_LC
_A__uOr_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_LC_i64
	.private_extern _A__uOr_var_LC_i64
_A__uOr_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_i64
	.private_extern _A__uOr_param_LC_i64
_A__uOr_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_I
	.private_extern _A__uOr_var_LC_I
_A__uOr_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_I
	.private_extern _A__uOr_param_LC_I
_A__uOr_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_u8
	.private_extern _A__uOr_var_LC_u8
_A__uOr_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_u8
	.private_extern _A__uOr_param_LC_u8
_A__uOr_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_C
	.private_extern _A__uOr_var_LC_C
_A__uOr_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_C
	.private_extern _A__uOr_param_LC_C
_A__uOr_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_LC_u32
	.private_extern _A__uOr_var_LC_u32
_A__uOr_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_u32
	.private_extern _A__uOr_param_LC_u32
_A__uOr_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_i8
	.private_extern _A__uOr_var_LC_i8
_A__uOr_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_i8
	.private_extern _A__uOr_param_LC_i8
_A__uOr_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_L
	.private_extern _A__uOr_var_LC_L
_A__uOr_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_L
	.private_extern _A__uOr_param_LC_L
_A__uOr_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_u64
	.private_extern _A__uOr_var_LC_u64
_A__uOr_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_u64
	.private_extern _A__uOr_param_LC_u64
_A__uOr_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_u16
	.private_extern _A__uOr_var_LC_u16
_A__uOr_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_u16
	.private_extern _A__uOr_param_LC_u16
_A__uOr_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_LC_i32
	.private_extern _A__uOr_var_LC_i32
_A__uOr_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_LC_i32
	.private_extern _A__uOr_param_LC_i32
_A__uOr_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i64_i16
	.private_extern _A__uOr_var_i64_i16
_A__uOr_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_i16
	.private_extern _A__uOr_param_i64_i16
_A__uOr_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_LC
	.private_extern _A__uOr_var_i64_LC
_A__uOr_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_LC
	.private_extern _A__uOr_param_i64_LC
_A__uOr_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i64_i64
	.private_extern _A__uOr_var_i64_i64
_A__uOr_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_i64_i64
	.private_extern _A__uOr_param_i64_i64
_A__uOr_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_I
	.private_extern _A__uOr_var_i64_I
_A__uOr_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_I
	.private_extern _A__uOr_param_i64_I
_A__uOr_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_u8
	.private_extern _A__uOr_var_i64_u8
_A__uOr_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_u8
	.private_extern _A__uOr_param_i64_u8
_A__uOr_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_C
	.private_extern _A__uOr_var_i64_C
_A__uOr_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_C
	.private_extern _A__uOr_param_i64_C
_A__uOr_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i64_u32
	.private_extern _A__uOr_var_i64_u32
_A__uOr_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_u32
	.private_extern _A__uOr_param_i64_u32
_A__uOr_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_i8
	.private_extern _A__uOr_var_i64_i8
_A__uOr_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_i8
	.private_extern _A__uOr_param_i64_i8
_A__uOr_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_L
	.private_extern _A__uOr_var_i64_L
_A__uOr_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_L
	.private_extern _A__uOr_param_i64_L
_A__uOr_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_u64
	.private_extern _A__uOr_var_i64_u64
_A__uOr_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_u64
	.private_extern _A__uOr_param_i64_u64
_A__uOr_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_u16
	.private_extern _A__uOr_var_i64_u16
_A__uOr_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_u16
	.private_extern _A__uOr_param_i64_u16
_A__uOr_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i64_i32
	.private_extern _A__uOr_var_i64_i32
_A__uOr_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i64_i32
	.private_extern _A__uOr_param_i64_i32
_A__uOr_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_i16
	.private_extern _A__uOr_var_I_i16
_A__uOr_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_i16
	.private_extern _A__uOr_param_I_i16
_A__uOr_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_LC
	.private_extern _A__uOr_var_I_LC
_A__uOr_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_LC
	.private_extern _A__uOr_param_I_LC
_A__uOr_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_I_i64
	.private_extern _A__uOr_var_I_i64
_A__uOr_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_i64
	.private_extern _A__uOr_param_I_i64
_A__uOr_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_I
	.private_extern _A__uOr_var_I_I
_A__uOr_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_I_I
	.private_extern _A__uOr_param_I_I
_A__uOr_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_u8
	.private_extern _A__uOr_var_I_u8
_A__uOr_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_u8
	.private_extern _A__uOr_param_I_u8
_A__uOr_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_C
	.private_extern _A__uOr_var_I_C
_A__uOr_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_C
	.private_extern _A__uOr_param_I_C
_A__uOr_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_I_u32
	.private_extern _A__uOr_var_I_u32
_A__uOr_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_u32
	.private_extern _A__uOr_param_I_u32
_A__uOr_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_i8
	.private_extern _A__uOr_var_I_i8
_A__uOr_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_i8
	.private_extern _A__uOr_param_I_i8
_A__uOr_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_L
	.private_extern _A__uOr_var_I_L
_A__uOr_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_L
	.private_extern _A__uOr_param_I_L
_A__uOr_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_u64
	.private_extern _A__uOr_var_I_u64
_A__uOr_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_u64
	.private_extern _A__uOr_param_I_u64
_A__uOr_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_u16
	.private_extern _A__uOr_var_I_u16
_A__uOr_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_u16
	.private_extern _A__uOr_param_I_u16
_A__uOr_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_I_i32
	.private_extern _A__uOr_var_I_i32
_A__uOr_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_I_i32
	.private_extern _A__uOr_param_I_i32
_A__uOr_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_i16
	.private_extern _A__uOr_var_u8_i16
_A__uOr_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_i16
	.private_extern _A__uOr_param_u8_i16
_A__uOr_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_LC
	.private_extern _A__uOr_var_u8_LC
_A__uOr_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_LC
	.private_extern _A__uOr_param_u8_LC
_A__uOr_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u8_i64
	.private_extern _A__uOr_var_u8_i64
_A__uOr_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_i64
	.private_extern _A__uOr_param_u8_i64
_A__uOr_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_I
	.private_extern _A__uOr_var_u8_I
_A__uOr_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_I
	.private_extern _A__uOr_param_u8_I
_A__uOr_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_u8
	.private_extern _A__uOr_var_u8_u8
_A__uOr_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	leave
	ret
.globl _A__uOr_param_u8_u8
	.private_extern _A__uOr_param_u8_u8
_A__uOr_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_C
	.private_extern _A__uOr_var_u8_C
_A__uOr_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_C
	.private_extern _A__uOr_param_u8_C
_A__uOr_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u8_u32
	.private_extern _A__uOr_var_u8_u32
_A__uOr_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_u32
	.private_extern _A__uOr_param_u8_u32
_A__uOr_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_i8
	.private_extern _A__uOr_var_u8_i8
_A__uOr_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_i8
	.private_extern _A__uOr_param_u8_i8
_A__uOr_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_L
	.private_extern _A__uOr_var_u8_L
_A__uOr_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_L
	.private_extern _A__uOr_param_u8_L
_A__uOr_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_u64
	.private_extern _A__uOr_var_u8_u64
_A__uOr_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_u64
	.private_extern _A__uOr_param_u8_u64
_A__uOr_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_u16
	.private_extern _A__uOr_var_u8_u16
_A__uOr_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_u16
	.private_extern _A__uOr_param_u8_u16
_A__uOr_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u8_i32
	.private_extern _A__uOr_var_u8_i32
_A__uOr_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u8_i32
	.private_extern _A__uOr_param_u8_i32
_A__uOr_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_C_i16
	.private_extern _A__uOr_var_C_i16
_A__uOr_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_i16
	.private_extern _A__uOr_param_C_i16
_A__uOr_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_LC
	.private_extern _A__uOr_var_C_LC
_A__uOr_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_LC
	.private_extern _A__uOr_param_C_LC
_A__uOr_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_C_i64
	.private_extern _A__uOr_var_C_i64
_A__uOr_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_i64
	.private_extern _A__uOr_param_C_i64
_A__uOr_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_I
	.private_extern _A__uOr_var_C_I
_A__uOr_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_I
	.private_extern _A__uOr_param_C_I
_A__uOr_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_u8
	.private_extern _A__uOr_var_C_u8
_A__uOr_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_u8
	.private_extern _A__uOr_param_C_u8
_A__uOr_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_C
	.private_extern _A__uOr_var_C_C
_A__uOr_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_C_C
	.private_extern _A__uOr_param_C_C
_A__uOr_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_C_u32
	.private_extern _A__uOr_var_C_u32
_A__uOr_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_u32
	.private_extern _A__uOr_param_C_u32
_A__uOr_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_i8
	.private_extern _A__uOr_var_C_i8
_A__uOr_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_i8
	.private_extern _A__uOr_param_C_i8
_A__uOr_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_L
	.private_extern _A__uOr_var_C_L
_A__uOr_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_L
	.private_extern _A__uOr_param_C_L
_A__uOr_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_u64
	.private_extern _A__uOr_var_C_u64
_A__uOr_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_u64
	.private_extern _A__uOr_param_C_u64
_A__uOr_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_u16
	.private_extern _A__uOr_var_C_u16
_A__uOr_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_u16
	.private_extern _A__uOr_param_C_u16
_A__uOr_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_C_i32
	.private_extern _A__uOr_var_C_i32
_A__uOr_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_C_i32
	.private_extern _A__uOr_param_C_i32
_A__uOr_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	orq	-24(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u32_i16
	.private_extern _A__uOr_var_u32_i16
_A__uOr_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_i16
	.private_extern _A__uOr_param_u32_i16
_A__uOr_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_LC
	.private_extern _A__uOr_var_u32_LC
_A__uOr_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_LC
	.private_extern _A__uOr_param_u32_LC
_A__uOr_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u32_i64
	.private_extern _A__uOr_var_u32_i64
_A__uOr_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_i64
	.private_extern _A__uOr_param_u32_i64
_A__uOr_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_I
	.private_extern _A__uOr_var_u32_I
_A__uOr_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_I
	.private_extern _A__uOr_param_u32_I
_A__uOr_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_u8
	.private_extern _A__uOr_var_u32_u8
_A__uOr_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_u8
	.private_extern _A__uOr_param_u32_u8
_A__uOr_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_C
	.private_extern _A__uOr_var_u32_C
_A__uOr_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_C
	.private_extern _A__uOr_param_u32_C
_A__uOr_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u32_u32
	.private_extern _A__uOr_var_u32_u32
_A__uOr_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	leave
	ret
.globl _A__uOr_param_u32_u32
	.private_extern _A__uOr_param_u32_u32
_A__uOr_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_i8
	.private_extern _A__uOr_var_u32_i8
_A__uOr_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_i8
	.private_extern _A__uOr_param_u32_i8
_A__uOr_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_L
	.private_extern _A__uOr_var_u32_L
_A__uOr_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_L
	.private_extern _A__uOr_param_u32_L
_A__uOr_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_u64
	.private_extern _A__uOr_var_u32_u64
_A__uOr_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_u64
	.private_extern _A__uOr_param_u32_u64
_A__uOr_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_u16
	.private_extern _A__uOr_var_u32_u16
_A__uOr_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_u16
	.private_extern _A__uOr_param_u32_u16
_A__uOr_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u32_i32
	.private_extern _A__uOr_var_u32_i32
_A__uOr_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u32_i32
	.private_extern _A__uOr_param_u32_i32
_A__uOr_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_i16
	.private_extern _A__uOr_var_i8_i16
_A__uOr_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_i16
	.private_extern _A__uOr_param_i8_i16
_A__uOr_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_LC
	.private_extern _A__uOr_var_i8_LC
_A__uOr_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_LC
	.private_extern _A__uOr_param_i8_LC
_A__uOr_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i8_i64
	.private_extern _A__uOr_var_i8_i64
_A__uOr_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_i64
	.private_extern _A__uOr_param_i8_i64
_A__uOr_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_I
	.private_extern _A__uOr_var_i8_I
_A__uOr_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_I
	.private_extern _A__uOr_param_i8_I
_A__uOr_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_u8
	.private_extern _A__uOr_var_i8_u8
_A__uOr_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_u8
	.private_extern _A__uOr_param_i8_u8
_A__uOr_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_C
	.private_extern _A__uOr_var_i8_C
_A__uOr_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_C
	.private_extern _A__uOr_param_i8_C
_A__uOr_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i8_u32
	.private_extern _A__uOr_var_i8_u32
_A__uOr_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_u32
	.private_extern _A__uOr_param_i8_u32
_A__uOr_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_i8
	.private_extern _A__uOr_var_i8_i8
_A__uOr_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__uOr_param_i8_i8
	.private_extern _A__uOr_param_i8_i8
_A__uOr_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_L
	.private_extern _A__uOr_var_i8_L
_A__uOr_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_L
	.private_extern _A__uOr_param_i8_L
_A__uOr_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_u64
	.private_extern _A__uOr_var_i8_u64
_A__uOr_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_u64
	.private_extern _A__uOr_param_i8_u64
_A__uOr_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_u16
	.private_extern _A__uOr_var_i8_u16
_A__uOr_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_u16
	.private_extern _A__uOr_param_i8_u16
_A__uOr_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i8_i32
	.private_extern _A__uOr_var_i8_i32
_A__uOr_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i8_i32
	.private_extern _A__uOr_param_i8_i32
_A__uOr_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_i16
	.private_extern _A__uOr_var_L_i16
_A__uOr_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_i16
	.private_extern _A__uOr_param_L_i16
_A__uOr_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_LC
	.private_extern _A__uOr_var_L_LC
_A__uOr_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_LC
	.private_extern _A__uOr_param_L_LC
_A__uOr_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_L_i64
	.private_extern _A__uOr_var_L_i64
_A__uOr_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_i64
	.private_extern _A__uOr_param_L_i64
_A__uOr_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_I
	.private_extern _A__uOr_var_L_I
_A__uOr_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_I
	.private_extern _A__uOr_param_L_I
_A__uOr_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_u8
	.private_extern _A__uOr_var_L_u8
_A__uOr_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_u8
	.private_extern _A__uOr_param_L_u8
_A__uOr_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_C
	.private_extern _A__uOr_var_L_C
_A__uOr_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_C
	.private_extern _A__uOr_param_L_C
_A__uOr_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_L_u32
	.private_extern _A__uOr_var_L_u32
_A__uOr_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_u32
	.private_extern _A__uOr_param_L_u32
_A__uOr_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_i8
	.private_extern _A__uOr_var_L_i8
_A__uOr_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_i8
	.private_extern _A__uOr_param_L_i8
_A__uOr_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_L
	.private_extern _A__uOr_var_L_L
_A__uOr_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_L_L
	.private_extern _A__uOr_param_L_L
_A__uOr_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_u64
	.private_extern _A__uOr_var_L_u64
_A__uOr_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_u64
	.private_extern _A__uOr_param_L_u64
_A__uOr_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_u16
	.private_extern _A__uOr_var_L_u16
_A__uOr_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_u16
	.private_extern _A__uOr_param_L_u16
_A__uOr_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_L_i32
	.private_extern _A__uOr_var_L_i32
_A__uOr_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_L_i32
	.private_extern _A__uOr_param_L_i32
_A__uOr_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_i16
	.private_extern _A__uOr_var_u64_i16
_A__uOr_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_i16
	.private_extern _A__uOr_param_u64_i16
_A__uOr_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_LC
	.private_extern _A__uOr_var_u64_LC
_A__uOr_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_LC
	.private_extern _A__uOr_param_u64_LC
_A__uOr_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u64_i64
	.private_extern _A__uOr_var_u64_i64
_A__uOr_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_i64
	.private_extern _A__uOr_param_u64_i64
_A__uOr_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_I
	.private_extern _A__uOr_var_u64_I
_A__uOr_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_I
	.private_extern _A__uOr_param_u64_I
_A__uOr_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_u8
	.private_extern _A__uOr_var_u64_u8
_A__uOr_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_u8
	.private_extern _A__uOr_param_u64_u8
_A__uOr_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_C
	.private_extern _A__uOr_var_u64_C
_A__uOr_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_C
	.private_extern _A__uOr_param_u64_C
_A__uOr_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u64_u32
	.private_extern _A__uOr_var_u64_u32
_A__uOr_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_u32
	.private_extern _A__uOr_param_u64_u32
_A__uOr_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_i8
	.private_extern _A__uOr_var_u64_i8
_A__uOr_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_i8
	.private_extern _A__uOr_param_u64_i8
_A__uOr_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_L
	.private_extern _A__uOr_var_u64_L
_A__uOr_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_L
	.private_extern _A__uOr_param_u64_L
_A__uOr_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_u64
	.private_extern _A__uOr_var_u64_u64
_A__uOr_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	leave
	ret
.globl _A__uOr_param_u64_u64
	.private_extern _A__uOr_param_u64_u64
_A__uOr_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_u16
	.private_extern _A__uOr_var_u64_u16
_A__uOr_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_u16
	.private_extern _A__uOr_param_u64_u16
_A__uOr_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u64_i32
	.private_extern _A__uOr_var_u64_i32
_A__uOr_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u64_i32
	.private_extern _A__uOr_param_u64_i32
_A__uOr_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_i16
	.private_extern _A__uOr_var_u16_i16
_A__uOr_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_i16
	.private_extern _A__uOr_param_u16_i16
_A__uOr_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_LC
	.private_extern _A__uOr_var_u16_LC
_A__uOr_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_LC
	.private_extern _A__uOr_param_u16_LC
_A__uOr_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u16_i64
	.private_extern _A__uOr_var_u16_i64
_A__uOr_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_i64
	.private_extern _A__uOr_param_u16_i64
_A__uOr_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_I
	.private_extern _A__uOr_var_u16_I
_A__uOr_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_I
	.private_extern _A__uOr_param_u16_I
_A__uOr_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_u8
	.private_extern _A__uOr_var_u16_u8
_A__uOr_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_u8
	.private_extern _A__uOr_param_u16_u8
_A__uOr_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_C
	.private_extern _A__uOr_var_u16_C
_A__uOr_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_C
	.private_extern _A__uOr_param_u16_C
_A__uOr_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_u16_u32
	.private_extern _A__uOr_var_u16_u32
_A__uOr_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_u32
	.private_extern _A__uOr_param_u16_u32
_A__uOr_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_i8
	.private_extern _A__uOr_var_u16_i8
_A__uOr_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_i8
	.private_extern _A__uOr_param_u16_i8
_A__uOr_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_L
	.private_extern _A__uOr_var_u16_L
_A__uOr_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_L
	.private_extern _A__uOr_param_u16_L
_A__uOr_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_u64
	.private_extern _A__uOr_var_u16_u64
_A__uOr_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_u64
	.private_extern _A__uOr_param_u16_u64
_A__uOr_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_u16
	.private_extern _A__uOr_var_u16_u16
_A__uOr_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	leave
	ret
.globl _A__uOr_param_u16_u16
	.private_extern _A__uOr_param_u16_u16
_A__uOr_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_u16_i32
	.private_extern _A__uOr_var_u16_i32
_A__uOr_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_u16_i32
	.private_extern _A__uOr_param_u16_i32
_A__uOr_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_i16
	.private_extern _A__uOr_var_i32_i16
_A__uOr_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_i16
	.private_extern _A__uOr_param_i32_i16
_A__uOr_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_LC
	.private_extern _A__uOr_var_i32_LC
_A__uOr_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_LC
	.private_extern _A__uOr_param_i32_LC
_A__uOr_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i32_i64
	.private_extern _A__uOr_var_i32_i64
_A__uOr_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_i64
	.private_extern _A__uOr_param_i32_i64
_A__uOr_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_I
	.private_extern _A__uOr_var_i32_I
_A__uOr_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_I
	.private_extern _A__uOr_param_i32_I
_A__uOr_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_u8
	.private_extern _A__uOr_var_i32_u8
_A__uOr_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_u8
	.private_extern _A__uOr_param_i32_u8
_A__uOr_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_C
	.private_extern _A__uOr_var_i32_C
_A__uOr_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_C
	.private_extern _A__uOr_param_i32_C
_A__uOr_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	orq	-32(%rbp), %rax
	leave
	ret
.globl _A__uOr_var_i32_u32
	.private_extern _A__uOr_var_i32_u32
_A__uOr_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_u32
	.private_extern _A__uOr_param_i32_u32
_A__uOr_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_i8
	.private_extern _A__uOr_var_i32_i8
_A__uOr_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_i8
	.private_extern _A__uOr_param_i32_i8
_A__uOr_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_L
	.private_extern _A__uOr_var_i32_L
_A__uOr_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_L
	.private_extern _A__uOr_param_i32_L
_A__uOr_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_u64
	.private_extern _A__uOr_var_i32_u64
_A__uOr_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_u64
	.private_extern _A__uOr_param_i32_u64
_A__uOr_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_u16
	.private_extern _A__uOr_var_i32_u16
_A__uOr_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_param_i32_u16
	.private_extern _A__uOr_param_i32_u16
_A__uOr_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uOr_var_i32_i32
	.private_extern _A__uOr_var_i32_i32
_A__uOr_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	leave
	ret
.globl _A__uOr_param_i32_i32
	.private_extern _A__uOr_param_i32_i32
_A__uOr_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	orq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_i16
	.private_extern _A__uXor_var_i16_i16
_A__uXor_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_i16_i16
	.private_extern _A__uXor_param_i16_i16
_A__uXor_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movzwl	-20(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_LC
	.private_extern _A__uXor_var_i16_LC
_A__uXor_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_LC
	.private_extern _A__uXor_param_i16_LC
_A__uXor_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i16_i64
	.private_extern _A__uXor_var_i16_i64
_A__uXor_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_i64
	.private_extern _A__uXor_param_i16_i64
_A__uXor_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_I
	.private_extern _A__uXor_var_i16_I
_A__uXor_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_I
	.private_extern _A__uXor_param_i16_I
_A__uXor_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_u8
	.private_extern _A__uXor_var_i16_u8
_A__uXor_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_u8
	.private_extern _A__uXor_param_i16_u8
_A__uXor_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movsbq	-19(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_C
	.private_extern _A__uXor_var_i16_C
_A__uXor_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_C
	.private_extern _A__uXor_param_i16_C
_A__uXor_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i16_u32
	.private_extern _A__uXor_var_i16_u32
_A__uXor_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_u32
	.private_extern _A__uXor_param_i16_u32
_A__uXor_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_i8
	.private_extern _A__uXor_var_i16_i8
_A__uXor_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_i8
	.private_extern _A__uXor_param_i16_i8
_A__uXor_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzwl	-18(%rbp), %edx
	movzbl	-19(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_L
	.private_extern _A__uXor_var_i16_L
_A__uXor_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_L
	.private_extern _A__uXor_param_i16_L
_A__uXor_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_u64
	.private_extern _A__uXor_var_i16_u64
_A__uXor_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_u64
	.private_extern _A__uXor_param_i16_u64
_A__uXor_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_u16
	.private_extern _A__uXor_var_i16_u16
_A__uXor_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_u16
	.private_extern _A__uXor_param_i16_u16
_A__uXor_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %edx
	movswq	-20(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i16_i32
	.private_extern _A__uXor_var_i16_i32
_A__uXor_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i16_i32
	.private_extern _A__uXor_param_i16_i32
_A__uXor_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_LC_i16
	.private_extern _A__uXor_var_LC_i16
_A__uXor_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_i16
	.private_extern _A__uXor_param_LC_i16
_A__uXor_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_LC
	.private_extern _A__uXor_var_LC_LC
_A__uXor_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_LC_LC
	.private_extern _A__uXor_param_LC_LC
_A__uXor_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_LC_i64
	.private_extern _A__uXor_var_LC_i64
_A__uXor_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_i64
	.private_extern _A__uXor_param_LC_i64
_A__uXor_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_I
	.private_extern _A__uXor_var_LC_I
_A__uXor_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_I
	.private_extern _A__uXor_param_LC_I
_A__uXor_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_u8
	.private_extern _A__uXor_var_LC_u8
_A__uXor_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_u8
	.private_extern _A__uXor_param_LC_u8
_A__uXor_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_C
	.private_extern _A__uXor_var_LC_C
_A__uXor_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_C
	.private_extern _A__uXor_param_LC_C
_A__uXor_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_LC_u32
	.private_extern _A__uXor_var_LC_u32
_A__uXor_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_u32
	.private_extern _A__uXor_param_LC_u32
_A__uXor_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_i8
	.private_extern _A__uXor_var_LC_i8
_A__uXor_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_i8
	.private_extern _A__uXor_param_LC_i8
_A__uXor_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_L
	.private_extern _A__uXor_var_LC_L
_A__uXor_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_L
	.private_extern _A__uXor_param_LC_L
_A__uXor_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_u64
	.private_extern _A__uXor_var_LC_u64
_A__uXor_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_u64
	.private_extern _A__uXor_param_LC_u64
_A__uXor_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_u16
	.private_extern _A__uXor_var_LC_u16
_A__uXor_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_u16
	.private_extern _A__uXor_param_LC_u16
_A__uXor_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_LC_i32
	.private_extern _A__uXor_var_LC_i32
_A__uXor_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_LC_i32
	.private_extern _A__uXor_param_LC_i32
_A__uXor_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i64_i16
	.private_extern _A__uXor_var_i64_i16
_A__uXor_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_i16
	.private_extern _A__uXor_param_i64_i16
_A__uXor_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_LC
	.private_extern _A__uXor_var_i64_LC
_A__uXor_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_LC
	.private_extern _A__uXor_param_i64_LC
_A__uXor_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i64_i64
	.private_extern _A__uXor_var_i64_i64
_A__uXor_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_i64_i64
	.private_extern _A__uXor_param_i64_i64
_A__uXor_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_I
	.private_extern _A__uXor_var_i64_I
_A__uXor_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_I
	.private_extern _A__uXor_param_i64_I
_A__uXor_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_u8
	.private_extern _A__uXor_var_i64_u8
_A__uXor_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_u8
	.private_extern _A__uXor_param_i64_u8
_A__uXor_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_C
	.private_extern _A__uXor_var_i64_C
_A__uXor_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_C
	.private_extern _A__uXor_param_i64_C
_A__uXor_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i64_u32
	.private_extern _A__uXor_var_i64_u32
_A__uXor_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_u32
	.private_extern _A__uXor_param_i64_u32
_A__uXor_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_i8
	.private_extern _A__uXor_var_i64_i8
_A__uXor_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_i8
	.private_extern _A__uXor_param_i64_i8
_A__uXor_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_L
	.private_extern _A__uXor_var_i64_L
_A__uXor_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_L
	.private_extern _A__uXor_param_i64_L
_A__uXor_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_u64
	.private_extern _A__uXor_var_i64_u64
_A__uXor_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_u64
	.private_extern _A__uXor_param_i64_u64
_A__uXor_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_u16
	.private_extern _A__uXor_var_i64_u16
_A__uXor_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_u16
	.private_extern _A__uXor_param_i64_u16
_A__uXor_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i64_i32
	.private_extern _A__uXor_var_i64_i32
_A__uXor_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i64_i32
	.private_extern _A__uXor_param_i64_i32
_A__uXor_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_i16
	.private_extern _A__uXor_var_I_i16
_A__uXor_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_i16
	.private_extern _A__uXor_param_I_i16
_A__uXor_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_LC
	.private_extern _A__uXor_var_I_LC
_A__uXor_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_LC
	.private_extern _A__uXor_param_I_LC
_A__uXor_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_I_i64
	.private_extern _A__uXor_var_I_i64
_A__uXor_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_i64
	.private_extern _A__uXor_param_I_i64
_A__uXor_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_I
	.private_extern _A__uXor_var_I_I
_A__uXor_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_I_I
	.private_extern _A__uXor_param_I_I
_A__uXor_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_u8
	.private_extern _A__uXor_var_I_u8
_A__uXor_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_u8
	.private_extern _A__uXor_param_I_u8
_A__uXor_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_C
	.private_extern _A__uXor_var_I_C
_A__uXor_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_C
	.private_extern _A__uXor_param_I_C
_A__uXor_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_I_u32
	.private_extern _A__uXor_var_I_u32
_A__uXor_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_u32
	.private_extern _A__uXor_param_I_u32
_A__uXor_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_i8
	.private_extern _A__uXor_var_I_i8
_A__uXor_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_i8
	.private_extern _A__uXor_param_I_i8
_A__uXor_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_L
	.private_extern _A__uXor_var_I_L
_A__uXor_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_L
	.private_extern _A__uXor_param_I_L
_A__uXor_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_u64
	.private_extern _A__uXor_var_I_u64
_A__uXor_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_u64
	.private_extern _A__uXor_param_I_u64
_A__uXor_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_u16
	.private_extern _A__uXor_var_I_u16
_A__uXor_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_u16
	.private_extern _A__uXor_param_I_u16
_A__uXor_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_I_i32
	.private_extern _A__uXor_var_I_i32
_A__uXor_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_I_i32
	.private_extern _A__uXor_param_I_i32
_A__uXor_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_i16
	.private_extern _A__uXor_var_u8_i16
_A__uXor_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_i16
	.private_extern _A__uXor_param_u8_i16
_A__uXor_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_LC
	.private_extern _A__uXor_var_u8_LC
_A__uXor_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_LC
	.private_extern _A__uXor_param_u8_LC
_A__uXor_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u8_i64
	.private_extern _A__uXor_var_u8_i64
_A__uXor_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_i64
	.private_extern _A__uXor_param_u8_i64
_A__uXor_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_I
	.private_extern _A__uXor_var_u8_I
_A__uXor_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_I
	.private_extern _A__uXor_param_u8_I
_A__uXor_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_u8
	.private_extern _A__uXor_var_u8_u8
_A__uXor_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_u8_u8
	.private_extern _A__uXor_param_u8_u8
_A__uXor_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movsbq	-18(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_C
	.private_extern _A__uXor_var_u8_C
_A__uXor_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_C
	.private_extern _A__uXor_param_u8_C
_A__uXor_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u8_u32
	.private_extern _A__uXor_var_u8_u32
_A__uXor_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_u32
	.private_extern _A__uXor_param_u8_u32
_A__uXor_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_i8
	.private_extern _A__uXor_var_u8_i8
_A__uXor_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_i8
	.private_extern _A__uXor_param_u8_i8
_A__uXor_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rdx
	movzbl	-18(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_L
	.private_extern _A__uXor_var_u8_L
_A__uXor_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_L
	.private_extern _A__uXor_param_u8_L
_A__uXor_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_u64
	.private_extern _A__uXor_var_u8_u64
_A__uXor_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_u64
	.private_extern _A__uXor_param_u8_u64
_A__uXor_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_u16
	.private_extern _A__uXor_var_u8_u16
_A__uXor_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_u16
	.private_extern _A__uXor_param_u8_u16
_A__uXor_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u8_i32
	.private_extern _A__uXor_var_u8_i32
_A__uXor_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u8_i32
	.private_extern _A__uXor_param_u8_i32
_A__uXor_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_C_i16
	.private_extern _A__uXor_var_C_i16
_A__uXor_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_i16
	.private_extern _A__uXor_param_C_i16
_A__uXor_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_LC
	.private_extern _A__uXor_var_C_LC
_A__uXor_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_LC
	.private_extern _A__uXor_param_C_LC
_A__uXor_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_C_i64
	.private_extern _A__uXor_var_C_i64
_A__uXor_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_i64
	.private_extern _A__uXor_param_C_i64
_A__uXor_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_I
	.private_extern _A__uXor_var_C_I
_A__uXor_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_I
	.private_extern _A__uXor_param_C_I
_A__uXor_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_u8
	.private_extern _A__uXor_var_C_u8
_A__uXor_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_u8
	.private_extern _A__uXor_param_C_u8
_A__uXor_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_C
	.private_extern _A__uXor_var_C_C
_A__uXor_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_C_C
	.private_extern _A__uXor_param_C_C
_A__uXor_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_C_u32
	.private_extern _A__uXor_var_C_u32
_A__uXor_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_u32
	.private_extern _A__uXor_param_C_u32
_A__uXor_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_i8
	.private_extern _A__uXor_var_C_i8
_A__uXor_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_i8
	.private_extern _A__uXor_param_C_i8
_A__uXor_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_L
	.private_extern _A__uXor_var_C_L
_A__uXor_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_L
	.private_extern _A__uXor_param_C_L
_A__uXor_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_u64
	.private_extern _A__uXor_var_C_u64
_A__uXor_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_u64
	.private_extern _A__uXor_param_C_u64
_A__uXor_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_u16
	.private_extern _A__uXor_var_C_u16
_A__uXor_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_u16
	.private_extern _A__uXor_param_C_u16
_A__uXor_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_C_i32
	.private_extern _A__uXor_var_C_i32
_A__uXor_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_C_i32
	.private_extern _A__uXor_param_C_i32
_A__uXor_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	xorq	-24(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u32_i16
	.private_extern _A__uXor_var_u32_i16
_A__uXor_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_i16
	.private_extern _A__uXor_param_u32_i16
_A__uXor_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzwl	-22(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_LC
	.private_extern _A__uXor_var_u32_LC
_A__uXor_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_LC
	.private_extern _A__uXor_param_u32_LC
_A__uXor_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u32_i64
	.private_extern _A__uXor_var_u32_i64
_A__uXor_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_i64
	.private_extern _A__uXor_param_u32_i64
_A__uXor_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_I
	.private_extern _A__uXor_var_u32_I
_A__uXor_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_I
	.private_extern _A__uXor_param_u32_I
_A__uXor_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_u8
	.private_extern _A__uXor_var_u32_u8
_A__uXor_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_u8
	.private_extern _A__uXor_param_u32_u8
_A__uXor_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movsbq	-21(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_C
	.private_extern _A__uXor_var_u32_C
_A__uXor_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_C
	.private_extern _A__uXor_param_u32_C
_A__uXor_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u32_u32
	.private_extern _A__uXor_var_u32_u32
_A__uXor_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_u32_u32
	.private_extern _A__uXor_param_u32_u32
_A__uXor_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_i8
	.private_extern _A__uXor_var_u32_i8
_A__uXor_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_i8
	.private_extern _A__uXor_param_u32_i8
_A__uXor_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movzbl	-21(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_L
	.private_extern _A__uXor_var_u32_L
_A__uXor_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_L
	.private_extern _A__uXor_param_u32_L
_A__uXor_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_u64
	.private_extern _A__uXor_var_u32_u64
_A__uXor_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_u64
	.private_extern _A__uXor_param_u32_u64
_A__uXor_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_u16
	.private_extern _A__uXor_var_u32_u16
_A__uXor_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_u16
	.private_extern _A__uXor_param_u32_u16
_A__uXor_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movswq	-22(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u32_i32
	.private_extern _A__uXor_var_u32_i32
_A__uXor_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u32_i32
	.private_extern _A__uXor_param_u32_i32
_A__uXor_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_i16
	.private_extern _A__uXor_var_i8_i16
_A__uXor_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_i16
	.private_extern _A__uXor_param_i8_i16
_A__uXor_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_LC
	.private_extern _A__uXor_var_i8_LC
_A__uXor_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_LC
	.private_extern _A__uXor_param_i8_LC
_A__uXor_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i8_i64
	.private_extern _A__uXor_var_i8_i64
_A__uXor_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_i64
	.private_extern _A__uXor_param_i8_i64
_A__uXor_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_I
	.private_extern _A__uXor_var_i8_I
_A__uXor_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_I
	.private_extern _A__uXor_param_i8_I
_A__uXor_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_u8
	.private_extern _A__uXor_var_i8_u8
_A__uXor_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_u8
	.private_extern _A__uXor_param_i8_u8
_A__uXor_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movsbq	-18(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_C
	.private_extern _A__uXor_var_i8_C
_A__uXor_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_C
	.private_extern _A__uXor_param_i8_C
_A__uXor_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i8_u32
	.private_extern _A__uXor_var_i8_u32
_A__uXor_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_u32
	.private_extern _A__uXor_param_i8_u32
_A__uXor_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_i8
	.private_extern _A__uXor_var_i8_i8
_A__uXor_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_i8_i8
	.private_extern _A__uXor_param_i8_i8
_A__uXor_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %edx
	movzbl	-18(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_L
	.private_extern _A__uXor_var_i8_L
_A__uXor_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_L
	.private_extern _A__uXor_param_i8_L
_A__uXor_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_u64
	.private_extern _A__uXor_var_i8_u64
_A__uXor_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_u64
	.private_extern _A__uXor_param_i8_u64
_A__uXor_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_u16
	.private_extern _A__uXor_var_i8_u16
_A__uXor_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_u16
	.private_extern _A__uXor_param_i8_u16
_A__uXor_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i8_i32
	.private_extern _A__uXor_var_i8_i32
_A__uXor_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i8_i32
	.private_extern _A__uXor_param_i8_i32
_A__uXor_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_i16
	.private_extern _A__uXor_var_L_i16
_A__uXor_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_i16
	.private_extern _A__uXor_param_L_i16
_A__uXor_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_LC
	.private_extern _A__uXor_var_L_LC
_A__uXor_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_LC
	.private_extern _A__uXor_param_L_LC
_A__uXor_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_L_i64
	.private_extern _A__uXor_var_L_i64
_A__uXor_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_i64
	.private_extern _A__uXor_param_L_i64
_A__uXor_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_I
	.private_extern _A__uXor_var_L_I
_A__uXor_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_I
	.private_extern _A__uXor_param_L_I
_A__uXor_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_u8
	.private_extern _A__uXor_var_L_u8
_A__uXor_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_u8
	.private_extern _A__uXor_param_L_u8
_A__uXor_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_C
	.private_extern _A__uXor_var_L_C
_A__uXor_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_C
	.private_extern _A__uXor_param_L_C
_A__uXor_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_L_u32
	.private_extern _A__uXor_var_L_u32
_A__uXor_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_u32
	.private_extern _A__uXor_param_L_u32
_A__uXor_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_i8
	.private_extern _A__uXor_var_L_i8
_A__uXor_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_i8
	.private_extern _A__uXor_param_L_i8
_A__uXor_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_L
	.private_extern _A__uXor_var_L_L
_A__uXor_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_L_L
	.private_extern _A__uXor_param_L_L
_A__uXor_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_u64
	.private_extern _A__uXor_var_L_u64
_A__uXor_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_u64
	.private_extern _A__uXor_param_L_u64
_A__uXor_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_u16
	.private_extern _A__uXor_var_L_u16
_A__uXor_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_u16
	.private_extern _A__uXor_param_L_u16
_A__uXor_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_L_i32
	.private_extern _A__uXor_var_L_i32
_A__uXor_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_L_i32
	.private_extern _A__uXor_param_L_i32
_A__uXor_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_i16
	.private_extern _A__uXor_var_u64_i16
_A__uXor_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_i16
	.private_extern _A__uXor_param_u64_i16
_A__uXor_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_LC
	.private_extern _A__uXor_var_u64_LC
_A__uXor_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_LC
	.private_extern _A__uXor_param_u64_LC
_A__uXor_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u64_i64
	.private_extern _A__uXor_var_u64_i64
_A__uXor_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_i64
	.private_extern _A__uXor_param_u64_i64
_A__uXor_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_I
	.private_extern _A__uXor_var_u64_I
_A__uXor_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_I
	.private_extern _A__uXor_param_u64_I
_A__uXor_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_u8
	.private_extern _A__uXor_var_u64_u8
_A__uXor_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_u8
	.private_extern _A__uXor_param_u64_u8
_A__uXor_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_C
	.private_extern _A__uXor_var_u64_C
_A__uXor_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_C
	.private_extern _A__uXor_param_u64_C
_A__uXor_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u64_u32
	.private_extern _A__uXor_var_u64_u32
_A__uXor_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_u32
	.private_extern _A__uXor_param_u64_u32
_A__uXor_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax,%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_i8
	.private_extern _A__uXor_var_u64_i8
_A__uXor_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_i8
	.private_extern _A__uXor_param_u64_i8
_A__uXor_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_L
	.private_extern _A__uXor_var_u64_L
_A__uXor_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_L
	.private_extern _A__uXor_param_u64_L
_A__uXor_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_u64
	.private_extern _A__uXor_var_u64_u64
_A__uXor_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_u64_u64
	.private_extern _A__uXor_param_u64_u64
_A__uXor_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_u16
	.private_extern _A__uXor_var_u64_u16
_A__uXor_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_u16
	.private_extern _A__uXor_param_u64_u16
_A__uXor_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rdx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u64_i32
	.private_extern _A__uXor_var_u64_i32
_A__uXor_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u64_i32
	.private_extern _A__uXor_param_u64_i32
_A__uXor_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %edx
	movq	-24(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_i16
	.private_extern _A__uXor_var_u16_i16
_A__uXor_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_i16
	.private_extern _A__uXor_param_u16_i16
_A__uXor_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_LC
	.private_extern _A__uXor_var_u16_LC
_A__uXor_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_LC
	.private_extern _A__uXor_param_u16_LC
_A__uXor_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u16_i64
	.private_extern _A__uXor_var_u16_i64
_A__uXor_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_i64
	.private_extern _A__uXor_param_u16_i64
_A__uXor_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_I
	.private_extern _A__uXor_var_u16_I
_A__uXor_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_I
	.private_extern _A__uXor_param_u16_I
_A__uXor_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_u8
	.private_extern _A__uXor_var_u16_u8
_A__uXor_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_u8
	.private_extern _A__uXor_param_u16_u8
_A__uXor_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movsbq	-19(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_C
	.private_extern _A__uXor_var_u16_C
_A__uXor_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_C
	.private_extern _A__uXor_param_u16_C
_A__uXor_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_u16_u32
	.private_extern _A__uXor_var_u16_u32
_A__uXor_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_u32
	.private_extern _A__uXor_param_u16_u32
_A__uXor_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_i8
	.private_extern _A__uXor_var_u16_i8
_A__uXor_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_i8
	.private_extern _A__uXor_param_u16_i8
_A__uXor_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movswq	-18(%rbp),%rdx
	movzbl	-19(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_L
	.private_extern _A__uXor_var_u16_L
_A__uXor_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_L
	.private_extern _A__uXor_param_u16_L
_A__uXor_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_u64
	.private_extern _A__uXor_var_u16_u64
_A__uXor_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_u64
	.private_extern _A__uXor_param_u16_u64
_A__uXor_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_u16
	.private_extern _A__uXor_var_u16_u16
_A__uXor_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_u16_u16
	.private_extern _A__uXor_param_u16_u16
_A__uXor_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rdx
	movswq	-20(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_u16_i32
	.private_extern _A__uXor_var_u16_i32
_A__uXor_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_u16_i32
	.private_extern _A__uXor_param_u16_i32
_A__uXor_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_i16
	.private_extern _A__uXor_var_i32_i16
_A__uXor_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_i16
	.private_extern _A__uXor_param_i32_i16
_A__uXor_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movzwl	-22(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_LC
	.private_extern _A__uXor_var_i32_LC
_A__uXor_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_LC
	.private_extern _A__uXor_param_i32_LC
_A__uXor_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i32_i64
	.private_extern _A__uXor_var_i32_i64
_A__uXor_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_i64
	.private_extern _A__uXor_param_i32_i64
_A__uXor_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_I
	.private_extern _A__uXor_var_i32_I
_A__uXor_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_I
	.private_extern _A__uXor_param_i32_I
_A__uXor_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_u8
	.private_extern _A__uXor_var_i32_u8
_A__uXor_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_u8
	.private_extern _A__uXor_param_i32_u8
_A__uXor_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movsbq	-21(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_C
	.private_extern _A__uXor_var_i32_C
_A__uXor_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_C
	.private_extern _A__uXor_param_i32_C
_A__uXor_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	xorq	-32(%rbp), %rax
	leave
	ret
.globl _A__uXor_var_i32_u32
	.private_extern _A__uXor_var_i32_u32
_A__uXor_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_u32
	.private_extern _A__uXor_param_i32_u32
_A__uXor_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_i8
	.private_extern _A__uXor_var_i32_i8
_A__uXor_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_i8
	.private_extern _A__uXor_param_i32_i8
_A__uXor_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	mov	-20(%rbp), %edx
	movzbl	-21(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_L
	.private_extern _A__uXor_var_i32_L
_A__uXor_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_L
	.private_extern _A__uXor_param_i32_L
_A__uXor_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_u64
	.private_extern _A__uXor_var_i32_u64
_A__uXor_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_u64
	.private_extern _A__uXor_param_i32_u64
_A__uXor_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_u16
	.private_extern _A__uXor_var_i32_u16
_A__uXor_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_param_i32_u16
	.private_extern _A__uXor_param_i32_u16
_A__uXor_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	mov	-20(%rbp), %edx
	movswq	-22(%rbp),%rax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__uXor_var_i32_i32
	.private_extern _A__uXor_var_i32_i32
_A__uXor_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__uXor_param_i32_i32
	.private_extern _A__uXor_param_i32_i32
_A__uXor_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %edx
	mov	-24(%rbp), %eax
	xorq	%rdx, %rax
	leave
	ret
.globl _A__EQ_var_i16_i16
	.private_extern _A__EQ_var_i16_i16
_A__EQ_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_i16_i16
	.private_extern _A__EQ_param_i16_i16
_A__EQ_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_LC
	.private_extern _A__EQ_var_i16_LC
_A__EQ_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_LC
	.private_extern _A__EQ_param_i16_LC
_A__EQ_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_i64
	.private_extern _A__EQ_var_i16_i64
_A__EQ_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_i64
	.private_extern _A__EQ_param_i16_i64
_A__EQ_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_I
	.private_extern _A__EQ_var_i16_I
_A__EQ_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_I
	.private_extern _A__EQ_param_i16_I
_A__EQ_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_u8
	.private_extern _A__EQ_var_i16_u8
_A__EQ_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_u8
	.private_extern _A__EQ_param_i16_u8
_A__EQ_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_C
	.private_extern _A__EQ_var_i16_C
_A__EQ_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_C
	.private_extern _A__EQ_param_i16_C
_A__EQ_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_u32
	.private_extern _A__EQ_var_i16_u32
_A__EQ_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_u32
	.private_extern _A__EQ_param_i16_u32
_A__EQ_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_i8
	.private_extern _A__EQ_var_i16_i8
_A__EQ_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_i8
	.private_extern _A__EQ_param_i16_i8
_A__EQ_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_L
	.private_extern _A__EQ_var_i16_L
_A__EQ_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_L
	.private_extern _A__EQ_param_i16_L
_A__EQ_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_u64
	.private_extern _A__EQ_var_i16_u64
_A__EQ_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_u64
	.private_extern _A__EQ_param_i16_u64
_A__EQ_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_u16
	.private_extern _A__EQ_var_i16_u16
_A__EQ_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_u16
	.private_extern _A__EQ_param_i16_u16
_A__EQ_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i16_i32
	.private_extern _A__EQ_var_i16_i32
_A__EQ_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i16_i32
	.private_extern _A__EQ_param_i16_i32
_A__EQ_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_i16
	.private_extern _A__EQ_var_LC_i16
_A__EQ_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_i16
	.private_extern _A__EQ_param_LC_i16
_A__EQ_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_LC
	.private_extern _A__EQ_var_LC_LC
_A__EQ_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_LC_LC
	.private_extern _A__EQ_param_LC_LC
_A__EQ_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_i64
	.private_extern _A__EQ_var_LC_i64
_A__EQ_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_i64
	.private_extern _A__EQ_param_LC_i64
_A__EQ_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_I
	.private_extern _A__EQ_var_LC_I
_A__EQ_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_I
	.private_extern _A__EQ_param_LC_I
_A__EQ_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_u8
	.private_extern _A__EQ_var_LC_u8
_A__EQ_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_u8
	.private_extern _A__EQ_param_LC_u8
_A__EQ_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_C
	.private_extern _A__EQ_var_LC_C
_A__EQ_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_C
	.private_extern _A__EQ_param_LC_C
_A__EQ_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_u32
	.private_extern _A__EQ_var_LC_u32
_A__EQ_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_u32
	.private_extern _A__EQ_param_LC_u32
_A__EQ_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_i8
	.private_extern _A__EQ_var_LC_i8
_A__EQ_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_i8
	.private_extern _A__EQ_param_LC_i8
_A__EQ_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_L
	.private_extern _A__EQ_var_LC_L
_A__EQ_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_L
	.private_extern _A__EQ_param_LC_L
_A__EQ_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_u64
	.private_extern _A__EQ_var_LC_u64
_A__EQ_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_u64
	.private_extern _A__EQ_param_LC_u64
_A__EQ_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_u16
	.private_extern _A__EQ_var_LC_u16
_A__EQ_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_u16
	.private_extern _A__EQ_param_LC_u16
_A__EQ_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_LC_i32
	.private_extern _A__EQ_var_LC_i32
_A__EQ_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_LC_i32
	.private_extern _A__EQ_param_LC_i32
_A__EQ_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_f64_f64
	.private_extern _A__EQ_var_f64_f64
_A__EQ_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	ucomisd	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_f64_f64
	.private_extern _A__EQ_param_f64_f64
_A__EQ_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	ucomisd	-32(%rbp), %xmm0
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_i16
	.private_extern _A__EQ_var_i64_i16
_A__EQ_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_i16
	.private_extern _A__EQ_param_i64_i16
_A__EQ_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_LC
	.private_extern _A__EQ_var_i64_LC
_A__EQ_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_LC
	.private_extern _A__EQ_param_i64_LC
_A__EQ_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_i64
	.private_extern _A__EQ_var_i64_i64
_A__EQ_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_i64_i64
	.private_extern _A__EQ_param_i64_i64
_A__EQ_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_I
	.private_extern _A__EQ_var_i64_I
_A__EQ_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_I
	.private_extern _A__EQ_param_i64_I
_A__EQ_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_u8
	.private_extern _A__EQ_var_i64_u8
_A__EQ_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_u8
	.private_extern _A__EQ_param_i64_u8
_A__EQ_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_C
	.private_extern _A__EQ_var_i64_C
_A__EQ_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_C
	.private_extern _A__EQ_param_i64_C
_A__EQ_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_u32
	.private_extern _A__EQ_var_i64_u32
_A__EQ_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_u32
	.private_extern _A__EQ_param_i64_u32
_A__EQ_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_i8
	.private_extern _A__EQ_var_i64_i8
_A__EQ_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_i8
	.private_extern _A__EQ_param_i64_i8
_A__EQ_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_L
	.private_extern _A__EQ_var_i64_L
_A__EQ_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_L
	.private_extern _A__EQ_param_i64_L
_A__EQ_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_u64
	.private_extern _A__EQ_var_i64_u64
_A__EQ_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_u64
	.private_extern _A__EQ_param_i64_u64
_A__EQ_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_u16
	.private_extern _A__EQ_var_i64_u16
_A__EQ_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_u16
	.private_extern _A__EQ_param_i64_u16
_A__EQ_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i64_i32
	.private_extern _A__EQ_var_i64_i32
_A__EQ_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i64_i32
	.private_extern _A__EQ_param_i64_i32
_A__EQ_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_i16
	.private_extern _A__EQ_var_I_i16
_A__EQ_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_i16
	.private_extern _A__EQ_param_I_i16
_A__EQ_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_LC
	.private_extern _A__EQ_var_I_LC
_A__EQ_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_LC
	.private_extern _A__EQ_param_I_LC
_A__EQ_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_i64
	.private_extern _A__EQ_var_I_i64
_A__EQ_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_i64
	.private_extern _A__EQ_param_I_i64
_A__EQ_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_I
	.private_extern _A__EQ_var_I_I
_A__EQ_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_I_I
	.private_extern _A__EQ_param_I_I
_A__EQ_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_u8
	.private_extern _A__EQ_var_I_u8
_A__EQ_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_u8
	.private_extern _A__EQ_param_I_u8
_A__EQ_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_C
	.private_extern _A__EQ_var_I_C
_A__EQ_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_C
	.private_extern _A__EQ_param_I_C
_A__EQ_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_u32
	.private_extern _A__EQ_var_I_u32
_A__EQ_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_u32
	.private_extern _A__EQ_param_I_u32
_A__EQ_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_i8
	.private_extern _A__EQ_var_I_i8
_A__EQ_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_i8
	.private_extern _A__EQ_param_I_i8
_A__EQ_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_L
	.private_extern _A__EQ_var_I_L
_A__EQ_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_L
	.private_extern _A__EQ_param_I_L
_A__EQ_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_u64
	.private_extern _A__EQ_var_I_u64
_A__EQ_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_u64
	.private_extern _A__EQ_param_I_u64
_A__EQ_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_u16
	.private_extern _A__EQ_var_I_u16
_A__EQ_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_u16
	.private_extern _A__EQ_param_I_u16
_A__EQ_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_I_i32
	.private_extern _A__EQ_var_I_i32
_A__EQ_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_I_i32
	.private_extern _A__EQ_param_I_i32
_A__EQ_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_i16
	.private_extern _A__EQ_var_u8_i16
_A__EQ_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_i16
	.private_extern _A__EQ_param_u8_i16
_A__EQ_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_LC
	.private_extern _A__EQ_var_u8_LC
_A__EQ_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_LC
	.private_extern _A__EQ_param_u8_LC
_A__EQ_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_i64
	.private_extern _A__EQ_var_u8_i64
_A__EQ_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_i64
	.private_extern _A__EQ_param_u8_i64
_A__EQ_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_I
	.private_extern _A__EQ_var_u8_I
_A__EQ_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_I
	.private_extern _A__EQ_param_u8_I
_A__EQ_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_u8
	.private_extern _A__EQ_var_u8_u8
_A__EQ_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_u8_u8
	.private_extern _A__EQ_param_u8_u8
_A__EQ_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_C
	.private_extern _A__EQ_var_u8_C
_A__EQ_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_C
	.private_extern _A__EQ_param_u8_C
_A__EQ_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_u32
	.private_extern _A__EQ_var_u8_u32
_A__EQ_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_u32
	.private_extern _A__EQ_param_u8_u32
_A__EQ_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_i8
	.private_extern _A__EQ_var_u8_i8
_A__EQ_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_i8
	.private_extern _A__EQ_param_u8_i8
_A__EQ_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_L
	.private_extern _A__EQ_var_u8_L
_A__EQ_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_L
	.private_extern _A__EQ_param_u8_L
_A__EQ_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_u64
	.private_extern _A__EQ_var_u8_u64
_A__EQ_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_u64
	.private_extern _A__EQ_param_u8_u64
_A__EQ_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_u16
	.private_extern _A__EQ_var_u8_u16
_A__EQ_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_u16
	.private_extern _A__EQ_param_u8_u16
_A__EQ_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u8_i32
	.private_extern _A__EQ_var_u8_i32
_A__EQ_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u8_i32
	.private_extern _A__EQ_param_u8_i32
_A__EQ_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_i16
	.private_extern _A__EQ_var_C_i16
_A__EQ_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_i16
	.private_extern _A__EQ_param_C_i16
_A__EQ_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_LC
	.private_extern _A__EQ_var_C_LC
_A__EQ_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_LC
	.private_extern _A__EQ_param_C_LC
_A__EQ_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_i64
	.private_extern _A__EQ_var_C_i64
_A__EQ_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_i64
	.private_extern _A__EQ_param_C_i64
_A__EQ_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_I
	.private_extern _A__EQ_var_C_I
_A__EQ_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_I
	.private_extern _A__EQ_param_C_I
_A__EQ_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_u8
	.private_extern _A__EQ_var_C_u8
_A__EQ_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_u8
	.private_extern _A__EQ_param_C_u8
_A__EQ_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_C
	.private_extern _A__EQ_var_C_C
_A__EQ_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_C_C
	.private_extern _A__EQ_param_C_C
_A__EQ_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_u32
	.private_extern _A__EQ_var_C_u32
_A__EQ_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_u32
	.private_extern _A__EQ_param_C_u32
_A__EQ_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_i8
	.private_extern _A__EQ_var_C_i8
_A__EQ_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_i8
	.private_extern _A__EQ_param_C_i8
_A__EQ_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_L
	.private_extern _A__EQ_var_C_L
_A__EQ_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_L
	.private_extern _A__EQ_param_C_L
_A__EQ_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_u64
	.private_extern _A__EQ_var_C_u64
_A__EQ_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_u64
	.private_extern _A__EQ_param_C_u64
_A__EQ_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_u16
	.private_extern _A__EQ_var_C_u16
_A__EQ_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_u16
	.private_extern _A__EQ_param_C_u16
_A__EQ_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_C_i32
	.private_extern _A__EQ_var_C_i32
_A__EQ_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_C_i32
	.private_extern _A__EQ_param_C_i32
_A__EQ_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_f32_f32
	.private_extern _A__EQ_var_f32_f32
_A__EQ_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	ucomiss	%xmm0, %xmm1
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_f32_f32
	.private_extern _A__EQ_param_f32_f32
_A__EQ_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	ucomiss	-24(%rbp), %xmm0
	sete	%al
	setnp	%dl
	andl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_i16
	.private_extern _A__EQ_var_u32_i16
_A__EQ_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_i16
	.private_extern _A__EQ_param_u32_i16
_A__EQ_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_LC
	.private_extern _A__EQ_var_u32_LC
_A__EQ_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_LC
	.private_extern _A__EQ_param_u32_LC
_A__EQ_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_i64
	.private_extern _A__EQ_var_u32_i64
_A__EQ_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_i64
	.private_extern _A__EQ_param_u32_i64
_A__EQ_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_I
	.private_extern _A__EQ_var_u32_I
_A__EQ_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_I
	.private_extern _A__EQ_param_u32_I
_A__EQ_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_u8
	.private_extern _A__EQ_var_u32_u8
_A__EQ_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_u8
	.private_extern _A__EQ_param_u32_u8
_A__EQ_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_C
	.private_extern _A__EQ_var_u32_C
_A__EQ_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_C
	.private_extern _A__EQ_param_u32_C
_A__EQ_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_u32
	.private_extern _A__EQ_var_u32_u32
_A__EQ_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_u32_u32
	.private_extern _A__EQ_param_u32_u32
_A__EQ_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_i8
	.private_extern _A__EQ_var_u32_i8
_A__EQ_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_i8
	.private_extern _A__EQ_param_u32_i8
_A__EQ_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_L
	.private_extern _A__EQ_var_u32_L
_A__EQ_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_L
	.private_extern _A__EQ_param_u32_L
_A__EQ_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_u64
	.private_extern _A__EQ_var_u32_u64
_A__EQ_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_u64
	.private_extern _A__EQ_param_u32_u64
_A__EQ_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_u16
	.private_extern _A__EQ_var_u32_u16
_A__EQ_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_u16
	.private_extern _A__EQ_param_u32_u16
_A__EQ_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u32_i32
	.private_extern _A__EQ_var_u32_i32
_A__EQ_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u32_i32
	.private_extern _A__EQ_param_u32_i32
_A__EQ_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_i16
	.private_extern _A__EQ_var_i8_i16
_A__EQ_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_i16
	.private_extern _A__EQ_param_i8_i16
_A__EQ_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_LC
	.private_extern _A__EQ_var_i8_LC
_A__EQ_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_LC
	.private_extern _A__EQ_param_i8_LC
_A__EQ_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_i64
	.private_extern _A__EQ_var_i8_i64
_A__EQ_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_i64
	.private_extern _A__EQ_param_i8_i64
_A__EQ_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_I
	.private_extern _A__EQ_var_i8_I
_A__EQ_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_I
	.private_extern _A__EQ_param_i8_I
_A__EQ_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_u8
	.private_extern _A__EQ_var_i8_u8
_A__EQ_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_u8
	.private_extern _A__EQ_param_i8_u8
_A__EQ_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_C
	.private_extern _A__EQ_var_i8_C
_A__EQ_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_C
	.private_extern _A__EQ_param_i8_C
_A__EQ_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_u32
	.private_extern _A__EQ_var_i8_u32
_A__EQ_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_u32
	.private_extern _A__EQ_param_i8_u32
_A__EQ_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_i8
	.private_extern _A__EQ_var_i8_i8
_A__EQ_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_i8_i8
	.private_extern _A__EQ_param_i8_i8
_A__EQ_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_L
	.private_extern _A__EQ_var_i8_L
_A__EQ_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_L
	.private_extern _A__EQ_param_i8_L
_A__EQ_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_u64
	.private_extern _A__EQ_var_i8_u64
_A__EQ_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_u64
	.private_extern _A__EQ_param_i8_u64
_A__EQ_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_u16
	.private_extern _A__EQ_var_i8_u16
_A__EQ_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_u16
	.private_extern _A__EQ_param_i8_u16
_A__EQ_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i8_i32
	.private_extern _A__EQ_var_i8_i32
_A__EQ_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i8_i32
	.private_extern _A__EQ_param_i8_i32
_A__EQ_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_i16
	.private_extern _A__EQ_var_L_i16
_A__EQ_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_i16
	.private_extern _A__EQ_param_L_i16
_A__EQ_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_LC
	.private_extern _A__EQ_var_L_LC
_A__EQ_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_LC
	.private_extern _A__EQ_param_L_LC
_A__EQ_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_i64
	.private_extern _A__EQ_var_L_i64
_A__EQ_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_i64
	.private_extern _A__EQ_param_L_i64
_A__EQ_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_I
	.private_extern _A__EQ_var_L_I
_A__EQ_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_I
	.private_extern _A__EQ_param_L_I
_A__EQ_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_u8
	.private_extern _A__EQ_var_L_u8
_A__EQ_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_u8
	.private_extern _A__EQ_param_L_u8
_A__EQ_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_C
	.private_extern _A__EQ_var_L_C
_A__EQ_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_C
	.private_extern _A__EQ_param_L_C
_A__EQ_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_u32
	.private_extern _A__EQ_var_L_u32
_A__EQ_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_u32
	.private_extern _A__EQ_param_L_u32
_A__EQ_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_i8
	.private_extern _A__EQ_var_L_i8
_A__EQ_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_i8
	.private_extern _A__EQ_param_L_i8
_A__EQ_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_L
	.private_extern _A__EQ_var_L_L
_A__EQ_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_L_L
	.private_extern _A__EQ_param_L_L
_A__EQ_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_u64
	.private_extern _A__EQ_var_L_u64
_A__EQ_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_u64
	.private_extern _A__EQ_param_L_u64
_A__EQ_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_u16
	.private_extern _A__EQ_var_L_u16
_A__EQ_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_u16
	.private_extern _A__EQ_param_L_u16
_A__EQ_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_L_i32
	.private_extern _A__EQ_var_L_i32
_A__EQ_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_L_i32
	.private_extern _A__EQ_param_L_i32
_A__EQ_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_i16
	.private_extern _A__EQ_var_u64_i16
_A__EQ_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_i16
	.private_extern _A__EQ_param_u64_i16
_A__EQ_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_LC
	.private_extern _A__EQ_var_u64_LC
_A__EQ_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_LC
	.private_extern _A__EQ_param_u64_LC
_A__EQ_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_i64
	.private_extern _A__EQ_var_u64_i64
_A__EQ_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_i64
	.private_extern _A__EQ_param_u64_i64
_A__EQ_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_I
	.private_extern _A__EQ_var_u64_I
_A__EQ_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_I
	.private_extern _A__EQ_param_u64_I
_A__EQ_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_u8
	.private_extern _A__EQ_var_u64_u8
_A__EQ_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_u8
	.private_extern _A__EQ_param_u64_u8
_A__EQ_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_C
	.private_extern _A__EQ_var_u64_C
_A__EQ_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_C
	.private_extern _A__EQ_param_u64_C
_A__EQ_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_u32
	.private_extern _A__EQ_var_u64_u32
_A__EQ_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_u32
	.private_extern _A__EQ_param_u64_u32
_A__EQ_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_i8
	.private_extern _A__EQ_var_u64_i8
_A__EQ_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_i8
	.private_extern _A__EQ_param_u64_i8
_A__EQ_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_L
	.private_extern _A__EQ_var_u64_L
_A__EQ_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_L
	.private_extern _A__EQ_param_u64_L
_A__EQ_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_u64
	.private_extern _A__EQ_var_u64_u64
_A__EQ_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_u64_u64
	.private_extern _A__EQ_param_u64_u64
_A__EQ_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_u16
	.private_extern _A__EQ_var_u64_u16
_A__EQ_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_u16
	.private_extern _A__EQ_param_u64_u16
_A__EQ_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u64_i32
	.private_extern _A__EQ_var_u64_i32
_A__EQ_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u64_i32
	.private_extern _A__EQ_param_u64_i32
_A__EQ_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_i16
	.private_extern _A__EQ_var_u16_i16
_A__EQ_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_i16
	.private_extern _A__EQ_param_u16_i16
_A__EQ_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_LC
	.private_extern _A__EQ_var_u16_LC
_A__EQ_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_LC
	.private_extern _A__EQ_param_u16_LC
_A__EQ_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_i64
	.private_extern _A__EQ_var_u16_i64
_A__EQ_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_i64
	.private_extern _A__EQ_param_u16_i64
_A__EQ_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_I
	.private_extern _A__EQ_var_u16_I
_A__EQ_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_I
	.private_extern _A__EQ_param_u16_I
_A__EQ_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_u8
	.private_extern _A__EQ_var_u16_u8
_A__EQ_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_u8
	.private_extern _A__EQ_param_u16_u8
_A__EQ_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_C
	.private_extern _A__EQ_var_u16_C
_A__EQ_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_C
	.private_extern _A__EQ_param_u16_C
_A__EQ_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_u32
	.private_extern _A__EQ_var_u16_u32
_A__EQ_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_u32
	.private_extern _A__EQ_param_u16_u32
_A__EQ_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_i8
	.private_extern _A__EQ_var_u16_i8
_A__EQ_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_i8
	.private_extern _A__EQ_param_u16_i8
_A__EQ_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_L
	.private_extern _A__EQ_var_u16_L
_A__EQ_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_L
	.private_extern _A__EQ_param_u16_L
_A__EQ_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_u64
	.private_extern _A__EQ_var_u16_u64
_A__EQ_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_u64
	.private_extern _A__EQ_param_u16_u64
_A__EQ_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_u16
	.private_extern _A__EQ_var_u16_u16
_A__EQ_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_u16_u16
	.private_extern _A__EQ_param_u16_u16
_A__EQ_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_u16_i32
	.private_extern _A__EQ_var_u16_i32
_A__EQ_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_u16_i32
	.private_extern _A__EQ_param_u16_i32
_A__EQ_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_i16
	.private_extern _A__EQ_var_i32_i16
_A__EQ_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_i16
	.private_extern _A__EQ_param_i32_i16
_A__EQ_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_LC
	.private_extern _A__EQ_var_i32_LC
_A__EQ_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_LC
	.private_extern _A__EQ_param_i32_LC
_A__EQ_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_i64
	.private_extern _A__EQ_var_i32_i64
_A__EQ_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_i64
	.private_extern _A__EQ_param_i32_i64
_A__EQ_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_I
	.private_extern _A__EQ_var_i32_I
_A__EQ_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_I
	.private_extern _A__EQ_param_i32_I
_A__EQ_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_u8
	.private_extern _A__EQ_var_i32_u8
_A__EQ_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_u8
	.private_extern _A__EQ_param_i32_u8
_A__EQ_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_C
	.private_extern _A__EQ_var_i32_C
_A__EQ_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_C
	.private_extern _A__EQ_param_i32_C
_A__EQ_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_u32
	.private_extern _A__EQ_var_i32_u32
_A__EQ_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_u32
	.private_extern _A__EQ_param_i32_u32
_A__EQ_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_i8
	.private_extern _A__EQ_var_i32_i8
_A__EQ_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_i8
	.private_extern _A__EQ_param_i32_i8
_A__EQ_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_L
	.private_extern _A__EQ_var_i32_L
_A__EQ_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_L
	.private_extern _A__EQ_param_i32_L
_A__EQ_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_u64
	.private_extern _A__EQ_var_i32_u64
_A__EQ_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_u64
	.private_extern _A__EQ_param_i32_u64
_A__EQ_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_u16
	.private_extern _A__EQ_var_i32_u16
_A__EQ_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_param_i32_u16
	.private_extern _A__EQ_param_i32_u16
_A__EQ_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__EQ_var_i32_i32
	.private_extern _A__EQ_var_i32_i32
_A__EQ_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$1, %eax
	leave
	ret
.globl _A__EQ_param_i32_i32
	.private_extern _A__EQ_param_i32_i32
_A__EQ_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	sete	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_i16
	.private_extern _A__NE_var_i16_i16
_A__NE_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_i16_i16
	.private_extern _A__NE_param_i16_i16
_A__NE_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_LC
	.private_extern _A__NE_var_i16_LC
_A__NE_var_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_LC
	.private_extern _A__NE_param_i16_LC
_A__NE_param_i16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_i64
	.private_extern _A__NE_var_i16_i64
_A__NE_var_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_i64
	.private_extern _A__NE_param_i16_i64
_A__NE_param_i16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_I
	.private_extern _A__NE_var_i16_I
_A__NE_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_I
	.private_extern _A__NE_param_i16_I
_A__NE_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_u8
	.private_extern _A__NE_var_i16_u8
_A__NE_var_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_u8
	.private_extern _A__NE_param_i16_u8
_A__NE_param_i16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_C
	.private_extern _A__NE_var_i16_C
_A__NE_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_C
	.private_extern _A__NE_param_i16_C
_A__NE_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_u32
	.private_extern _A__NE_var_i16_u32
_A__NE_var_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_u32
	.private_extern _A__NE_param_i16_u32
_A__NE_param_i16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_i8
	.private_extern _A__NE_var_i16_i8
_A__NE_var_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_i8
	.private_extern _A__NE_param_i16_i8
_A__NE_param_i16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_L
	.private_extern _A__NE_var_i16_L
_A__NE_var_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_L
	.private_extern _A__NE_param_i16_L
_A__NE_param_i16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_u64
	.private_extern _A__NE_var_i16_u64
_A__NE_var_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_u64
	.private_extern _A__NE_param_i16_u64
_A__NE_param_i16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movzwl	-18(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_u16
	.private_extern _A__NE_var_i16_u16
_A__NE_var_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_u16
	.private_extern _A__NE_param_i16_u16
_A__NE_param_i16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i16_i32
	.private_extern _A__NE_var_i16_i32
_A__NE_var_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i16_i32
	.private_extern _A__NE_param_i16_i32
_A__NE_param_i16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movzwl	-18(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_i16
	.private_extern _A__NE_var_LC_i16
_A__NE_var_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_i16
	.private_extern _A__NE_param_LC_i16
_A__NE_param_LC_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_LC
	.private_extern _A__NE_var_LC_LC
_A__NE_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_LC_LC
	.private_extern _A__NE_param_LC_LC
_A__NE_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_i64
	.private_extern _A__NE_var_LC_i64
_A__NE_var_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_i64
	.private_extern _A__NE_param_LC_i64
_A__NE_param_LC_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_I
	.private_extern _A__NE_var_LC_I
_A__NE_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_I
	.private_extern _A__NE_param_LC_I
_A__NE_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_u8
	.private_extern _A__NE_var_LC_u8
_A__NE_var_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_u8
	.private_extern _A__NE_param_LC_u8
_A__NE_param_LC_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_C
	.private_extern _A__NE_var_LC_C
_A__NE_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_C
	.private_extern _A__NE_param_LC_C
_A__NE_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_u32
	.private_extern _A__NE_var_LC_u32
_A__NE_var_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_u32
	.private_extern _A__NE_param_LC_u32
_A__NE_param_LC_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_i8
	.private_extern _A__NE_var_LC_i8
_A__NE_var_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_i8
	.private_extern _A__NE_param_LC_i8
_A__NE_param_LC_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_L
	.private_extern _A__NE_var_LC_L
_A__NE_var_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_L
	.private_extern _A__NE_param_LC_L
_A__NE_param_LC_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_u64
	.private_extern _A__NE_var_LC_u64
_A__NE_var_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_u64
	.private_extern _A__NE_param_LC_u64
_A__NE_param_LC_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_u16
	.private_extern _A__NE_var_LC_u16
_A__NE_var_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_u16
	.private_extern _A__NE_param_LC_u16
_A__NE_param_LC_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_LC_i32
	.private_extern _A__NE_var_LC_i32
_A__NE_var_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_LC_i32
	.private_extern _A__NE_param_LC_i32
_A__NE_param_LC_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_f64_f64
	.private_extern _A__NE_var_f64_f64
_A__NE_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	120+_MM_A(%rip), %xmm0
	ucomisd	%xmm0, %xmm1
	setne	%al
	setp	%dl
	orl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_f64_f64
	.private_extern _A__NE_param_f64_f64
_A__NE_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-24(%rbp), %xmm0
	ucomisd	-32(%rbp), %xmm0
	setne	%al
	setp	%dl
	orl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_i16
	.private_extern _A__NE_var_i64_i16
_A__NE_var_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_i16
	.private_extern _A__NE_param_i64_i16
_A__NE_param_i64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_LC
	.private_extern _A__NE_var_i64_LC
_A__NE_var_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_LC
	.private_extern _A__NE_param_i64_LC
_A__NE_param_i64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_i64
	.private_extern _A__NE_var_i64_i64
_A__NE_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_i64_i64
	.private_extern _A__NE_param_i64_i64
_A__NE_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_I
	.private_extern _A__NE_var_i64_I
_A__NE_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_I
	.private_extern _A__NE_param_i64_I
_A__NE_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_u8
	.private_extern _A__NE_var_i64_u8
_A__NE_var_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_u8
	.private_extern _A__NE_param_i64_u8
_A__NE_param_i64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_C
	.private_extern _A__NE_var_i64_C
_A__NE_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_C
	.private_extern _A__NE_param_i64_C
_A__NE_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_u32
	.private_extern _A__NE_var_i64_u32
_A__NE_var_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_u32
	.private_extern _A__NE_param_i64_u32
_A__NE_param_i64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_i8
	.private_extern _A__NE_var_i64_i8
_A__NE_var_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_i8
	.private_extern _A__NE_param_i64_i8
_A__NE_param_i64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_L
	.private_extern _A__NE_var_i64_L
_A__NE_var_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_L
	.private_extern _A__NE_param_i64_L
_A__NE_param_i64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_u64
	.private_extern _A__NE_var_i64_u64
_A__NE_var_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_u64
	.private_extern _A__NE_param_i64_u64
_A__NE_param_i64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_u16
	.private_extern _A__NE_var_i64_u16
_A__NE_var_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_u16
	.private_extern _A__NE_param_i64_u16
_A__NE_param_i64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i64_i32
	.private_extern _A__NE_var_i64_i32
_A__NE_var_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i64_i32
	.private_extern _A__NE_param_i64_i32
_A__NE_param_i64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_i16
	.private_extern _A__NE_var_I_i16
_A__NE_var_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_i16
	.private_extern _A__NE_param_I_i16
_A__NE_param_I_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_LC
	.private_extern _A__NE_var_I_LC
_A__NE_var_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_LC
	.private_extern _A__NE_param_I_LC
_A__NE_param_I_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_i64
	.private_extern _A__NE_var_I_i64
_A__NE_var_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_i64
	.private_extern _A__NE_param_I_i64
_A__NE_param_I_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_I
	.private_extern _A__NE_var_I_I
_A__NE_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_I_I
	.private_extern _A__NE_param_I_I
_A__NE_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_u8
	.private_extern _A__NE_var_I_u8
_A__NE_var_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_u8
	.private_extern _A__NE_param_I_u8
_A__NE_param_I_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_C
	.private_extern _A__NE_var_I_C
_A__NE_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_C
	.private_extern _A__NE_param_I_C
_A__NE_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_u32
	.private_extern _A__NE_var_I_u32
_A__NE_var_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_u32
	.private_extern _A__NE_param_I_u32
_A__NE_param_I_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_i8
	.private_extern _A__NE_var_I_i8
_A__NE_var_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_i8
	.private_extern _A__NE_param_I_i8
_A__NE_param_I_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_L
	.private_extern _A__NE_var_I_L
_A__NE_var_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_L
	.private_extern _A__NE_param_I_L
_A__NE_param_I_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_u64
	.private_extern _A__NE_var_I_u64
_A__NE_var_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_u64
	.private_extern _A__NE_param_I_u64
_A__NE_param_I_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_u16
	.private_extern _A__NE_var_I_u16
_A__NE_var_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_u16
	.private_extern _A__NE_param_I_u16
_A__NE_param_I_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_I_i32
	.private_extern _A__NE_var_I_i32
_A__NE_var_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_I_i32
	.private_extern _A__NE_param_I_i32
_A__NE_param_I_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_i16
	.private_extern _A__NE_var_u8_i16
_A__NE_var_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_i16
	.private_extern _A__NE_param_u8_i16
_A__NE_param_u8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_LC
	.private_extern _A__NE_var_u8_LC
_A__NE_var_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_LC
	.private_extern _A__NE_param_u8_LC
_A__NE_param_u8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_i64
	.private_extern _A__NE_var_u8_i64
_A__NE_var_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_i64
	.private_extern _A__NE_param_u8_i64
_A__NE_param_u8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_I
	.private_extern _A__NE_var_u8_I
_A__NE_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_I
	.private_extern _A__NE_param_u8_I
_A__NE_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_u8
	.private_extern _A__NE_var_u8_u8
_A__NE_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_u8_u8
	.private_extern _A__NE_param_u8_u8
_A__NE_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_C
	.private_extern _A__NE_var_u8_C
_A__NE_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_C
	.private_extern _A__NE_param_u8_C
_A__NE_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_u32
	.private_extern _A__NE_var_u8_u32
_A__NE_var_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_u32
	.private_extern _A__NE_param_u8_u32
_A__NE_param_u8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_i8
	.private_extern _A__NE_var_u8_i8
_A__NE_var_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_i8
	.private_extern _A__NE_param_u8_i8
_A__NE_param_u8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_L
	.private_extern _A__NE_var_u8_L
_A__NE_var_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_L
	.private_extern _A__NE_param_u8_L
_A__NE_param_u8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_u64
	.private_extern _A__NE_var_u8_u64
_A__NE_var_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_u64
	.private_extern _A__NE_param_u8_u64
_A__NE_param_u8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movsbq	-17(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_u16
	.private_extern _A__NE_var_u8_u16
_A__NE_var_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_u16
	.private_extern _A__NE_param_u8_u16
_A__NE_param_u8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movsbq	-17(%rbp),%rdx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u8_i32
	.private_extern _A__NE_var_u8_i32
_A__NE_var_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u8_i32
	.private_extern _A__NE_param_u8_i32
_A__NE_param_u8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movsbq	-17(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_i16
	.private_extern _A__NE_var_C_i16
_A__NE_var_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_i16
	.private_extern _A__NE_param_C_i16
_A__NE_param_C_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_LC
	.private_extern _A__NE_var_C_LC
_A__NE_var_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_LC
	.private_extern _A__NE_param_C_LC
_A__NE_param_C_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_i64
	.private_extern _A__NE_var_C_i64
_A__NE_var_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_i64
	.private_extern _A__NE_param_C_i64
_A__NE_param_C_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_I
	.private_extern _A__NE_var_C_I
_A__NE_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_I
	.private_extern _A__NE_param_C_I
_A__NE_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_u8
	.private_extern _A__NE_var_C_u8
_A__NE_var_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_u8
	.private_extern _A__NE_param_C_u8
_A__NE_param_C_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_C
	.private_extern _A__NE_var_C_C
_A__NE_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_C_C
	.private_extern _A__NE_param_C_C
_A__NE_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_u32
	.private_extern _A__NE_var_C_u32
_A__NE_var_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_u32
	.private_extern _A__NE_param_C_u32
_A__NE_param_C_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_i8
	.private_extern _A__NE_var_C_i8
_A__NE_var_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_i8
	.private_extern _A__NE_param_C_i8
_A__NE_param_C_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_L
	.private_extern _A__NE_var_C_L
_A__NE_var_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_L
	.private_extern _A__NE_param_C_L
_A__NE_param_C_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_u64
	.private_extern _A__NE_var_C_u64
_A__NE_var_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_u64
	.private_extern _A__NE_param_C_u64
_A__NE_param_C_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_u16
	.private_extern _A__NE_var_C_u16
_A__NE_var_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_u16
	.private_extern _A__NE_param_C_u16
_A__NE_param_C_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_C_i32
	.private_extern _A__NE_var_C_i32
_A__NE_var_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_C_i32
	.private_extern _A__NE_param_C_i32
_A__NE_param_C_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_f32_f32
	.private_extern _A__NE_var_f32_f32
_A__NE_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	160+_MM_A(%rip), %xmm0
	ucomiss	%xmm0, %xmm1
	setne	%al
	setp	%dl
	orl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_f32_f32
	.private_extern _A__NE_param_f32_f32
_A__NE_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-20(%rbp), %xmm0
	ucomiss	-24(%rbp), %xmm0
	setne	%al
	setp	%dl
	orl	%edx, %eax
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_i16
	.private_extern _A__NE_var_u32_i16
_A__NE_var_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_i16
	.private_extern _A__NE_param_u32_i16
_A__NE_param_u32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_LC
	.private_extern _A__NE_var_u32_LC
_A__NE_var_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_LC
	.private_extern _A__NE_param_u32_LC
_A__NE_param_u32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_i64
	.private_extern _A__NE_var_u32_i64
_A__NE_var_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_i64
	.private_extern _A__NE_param_u32_i64
_A__NE_param_u32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_I
	.private_extern _A__NE_var_u32_I
_A__NE_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_I
	.private_extern _A__NE_param_u32_I
_A__NE_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_u8
	.private_extern _A__NE_var_u32_u8
_A__NE_var_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_u8
	.private_extern _A__NE_param_u32_u8
_A__NE_param_u32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_C
	.private_extern _A__NE_var_u32_C
_A__NE_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_C
	.private_extern _A__NE_param_u32_C
_A__NE_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_u32
	.private_extern _A__NE_var_u32_u32
_A__NE_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_u32_u32
	.private_extern _A__NE_param_u32_u32
_A__NE_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_i8
	.private_extern _A__NE_var_u32_i8
_A__NE_var_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_i8
	.private_extern _A__NE_param_u32_i8
_A__NE_param_u32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_L
	.private_extern _A__NE_var_u32_L
_A__NE_var_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_L
	.private_extern _A__NE_param_u32_L
_A__NE_param_u32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_u64
	.private_extern _A__NE_var_u32_u64
_A__NE_var_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_u64
	.private_extern _A__NE_param_u32_u64
_A__NE_param_u32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movl	-20(%rbp), %eax
	cltq
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_u16
	.private_extern _A__NE_var_u32_u16
_A__NE_var_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_u16
	.private_extern _A__NE_param_u32_u16
_A__NE_param_u32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u32_i32
	.private_extern _A__NE_var_u32_i32
_A__NE_var_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %edx
	movl	196+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u32_i32
	.private_extern _A__NE_param_u32_i32
_A__NE_param_u32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_i16
	.private_extern _A__NE_var_i8_i16
_A__NE_var_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_i16
	.private_extern _A__NE_param_i8_i16
_A__NE_param_i8_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movzwl	-20(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_LC
	.private_extern _A__NE_var_i8_LC
_A__NE_var_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_LC
	.private_extern _A__NE_param_i8_LC
_A__NE_param_i8_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_i64
	.private_extern _A__NE_var_i8_i64
_A__NE_var_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_i64
	.private_extern _A__NE_param_i8_i64
_A__NE_param_i8_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_I
	.private_extern _A__NE_var_i8_I
_A__NE_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_I
	.private_extern _A__NE_param_i8_I
_A__NE_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_u8
	.private_extern _A__NE_var_i8_u8
_A__NE_var_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cmpb	%al, %dl
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_u8
	.private_extern _A__NE_param_i8_u8
_A__NE_param_i8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	cmpb	-17(%rbp), %al
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_C
	.private_extern _A__NE_var_i8_C
_A__NE_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_C
	.private_extern _A__NE_param_i8_C
_A__NE_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_u32
	.private_extern _A__NE_var_i8_u32
_A__NE_var_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_u32
	.private_extern _A__NE_param_i8_u32
_A__NE_param_i8_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_i8
	.private_extern _A__NE_var_i8_i8
_A__NE_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_i8_i8
	.private_extern _A__NE_param_i8_i8
_A__NE_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	cmpb	-18(%rbp), %al
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_L
	.private_extern _A__NE_var_i8_L
_A__NE_var_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_L
	.private_extern _A__NE_param_i8_L
_A__NE_param_i8_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_u64
	.private_extern _A__NE_var_i8_u64
_A__NE_var_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_u64
	.private_extern _A__NE_param_i8_u64
_A__NE_param_i8_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movzbl	-17(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_u16
	.private_extern _A__NE_var_i8_u16
_A__NE_var_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_u16
	.private_extern _A__NE_param_i8_u16
_A__NE_param_i8_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movw	%si, -20(%rbp)
	movzbl	-17(%rbp), %edx
	movswq	-20(%rbp),%rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i8_i32
	.private_extern _A__NE_var_i8_i32
_A__NE_var_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i8_i32
	.private_extern _A__NE_param_i8_i32
_A__NE_param_i8_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movl	%esi, -24(%rbp)
	movzbl	-17(%rbp), %edx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_i16
	.private_extern _A__NE_var_L_i16
_A__NE_var_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_i16
	.private_extern _A__NE_param_L_i16
_A__NE_param_L_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_LC
	.private_extern _A__NE_var_L_LC
_A__NE_var_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_LC
	.private_extern _A__NE_param_L_LC
_A__NE_param_L_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_i64
	.private_extern _A__NE_var_L_i64
_A__NE_var_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_i64
	.private_extern _A__NE_param_L_i64
_A__NE_param_L_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_I
	.private_extern _A__NE_var_L_I
_A__NE_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_I
	.private_extern _A__NE_param_L_I
_A__NE_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_u8
	.private_extern _A__NE_var_L_u8
_A__NE_var_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_u8
	.private_extern _A__NE_param_L_u8
_A__NE_param_L_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_C
	.private_extern _A__NE_var_L_C
_A__NE_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_C
	.private_extern _A__NE_param_L_C
_A__NE_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_u32
	.private_extern _A__NE_var_L_u32
_A__NE_var_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_u32
	.private_extern _A__NE_param_L_u32
_A__NE_param_L_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_i8
	.private_extern _A__NE_var_L_i8
_A__NE_var_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_i8
	.private_extern _A__NE_param_L_i8
_A__NE_param_L_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_L
	.private_extern _A__NE_var_L_L
_A__NE_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_L_L
	.private_extern _A__NE_param_L_L
_A__NE_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_u64
	.private_extern _A__NE_var_L_u64
_A__NE_var_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_u64
	.private_extern _A__NE_param_L_u64
_A__NE_param_L_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_u16
	.private_extern _A__NE_var_L_u16
_A__NE_var_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_u16
	.private_extern _A__NE_param_L_u16
_A__NE_param_L_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_L_i32
	.private_extern _A__NE_var_L_i32
_A__NE_var_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_L_i32
	.private_extern _A__NE_param_L_i32
_A__NE_param_L_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_i16
	.private_extern _A__NE_var_u64_i16
_A__NE_var_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_i16
	.private_extern _A__NE_param_u64_i16
_A__NE_param_u64_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movzwl	-26(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_LC
	.private_extern _A__NE_var_u64_LC
_A__NE_var_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_LC
	.private_extern _A__NE_param_u64_LC
_A__NE_param_u64_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_i64
	.private_extern _A__NE_var_u64_i64
_A__NE_var_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_i64
	.private_extern _A__NE_param_u64_i64
_A__NE_param_u64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_I
	.private_extern _A__NE_var_u64_I
_A__NE_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_I
	.private_extern _A__NE_param_u64_I
_A__NE_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_u8
	.private_extern _A__NE_var_u64_u8
_A__NE_var_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_u8
	.private_extern _A__NE_param_u64_u8
_A__NE_param_u64_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movsbq	-25(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_C
	.private_extern _A__NE_var_u64_C
_A__NE_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_C
	.private_extern _A__NE_param_u64_C
_A__NE_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_u32
	.private_extern _A__NE_var_u64_u32
_A__NE_var_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_u32
	.private_extern _A__NE_param_u64_u32
_A__NE_param_u64_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	movl	-28(%rbp), %eax
	cltq
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_i8
	.private_extern _A__NE_var_u64_i8
_A__NE_var_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_i8
	.private_extern _A__NE_param_u64_i8
_A__NE_param_u64_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movb	%sil, -25(%rbp)
	movzbl	-25(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_L
	.private_extern _A__NE_var_u64_L
_A__NE_var_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_L
	.private_extern _A__NE_param_u64_L
_A__NE_param_u64_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_u64
	.private_extern _A__NE_var_u64_u64
_A__NE_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_u64_u64
	.private_extern _A__NE_param_u64_u64
_A__NE_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_u16
	.private_extern _A__NE_var_u64_u16
_A__NE_var_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_u16
	.private_extern _A__NE_param_u64_u16
_A__NE_param_u64_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movw	%si, -26(%rbp)
	movswq	-26(%rbp),%rax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u64_i32
	.private_extern _A__NE_var_u64_i32
_A__NE_var_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u64_i32
	.private_extern _A__NE_param_u64_i32
_A__NE_param_u64_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movl	%esi, -28(%rbp)
	mov	-28(%rbp), %eax
	cmpq	-24(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_i16
	.private_extern _A__NE_var_u16_i16
_A__NE_var_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_i16
	.private_extern _A__NE_param_u16_i16
_A__NE_param_u16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_LC
	.private_extern _A__NE_var_u16_LC
_A__NE_var_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_LC
	.private_extern _A__NE_param_u16_LC
_A__NE_param_u16_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_i64
	.private_extern _A__NE_var_u16_i64
_A__NE_var_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_i64
	.private_extern _A__NE_param_u16_i64
_A__NE_param_u16_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_I
	.private_extern _A__NE_var_u16_I
_A__NE_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_I
	.private_extern _A__NE_param_u16_I
_A__NE_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_u8
	.private_extern _A__NE_var_u16_u8
_A__NE_var_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	cbtw
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_u8
	.private_extern _A__NE_param_u16_u8
_A__NE_param_u16_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movsbw	-19(%rbp),%ax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_C
	.private_extern _A__NE_var_u16_C
_A__NE_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_C
	.private_extern _A__NE_param_u16_C
_A__NE_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rdx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_u32
	.private_extern _A__NE_var_u16_u32
_A__NE_var_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	164+_MM_A(%rip), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_u32
	.private_extern _A__NE_param_u16_u32
_A__NE_param_u16_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	movl	-24(%rbp), %eax
	cltq
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_i8
	.private_extern _A__NE_var_u16_i8
_A__NE_var_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpw	%ax, %dx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_i8
	.private_extern _A__NE_param_u16_i8
_A__NE_param_u16_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movb	%sil, -19(%rbp)
	movzbl	-19(%rbp), %eax
	cmpw	-18(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_L
	.private_extern _A__NE_var_u16_L
_A__NE_var_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_L
	.private_extern _A__NE_param_u16_L
_A__NE_param_u16_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_u64
	.private_extern _A__NE_var_u16_u64
_A__NE_var_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_u64
	.private_extern _A__NE_param_u16_u64
_A__NE_param_u16_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movswq	-18(%rbp),%rax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_u16
	.private_extern _A__NE_var_u16_u16
_A__NE_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_u16_u16
	.private_extern _A__NE_param_u16_u16
_A__NE_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	cmpw	-20(%rbp), %ax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_u16_i32
	.private_extern _A__NE_var_u16_i32
_A__NE_var_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_u16_i32
	.private_extern _A__NE_param_u16_i32
_A__NE_param_u16_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movl	%esi, -24(%rbp)
	movswq	-18(%rbp),%rdx
	mov	-24(%rbp), %eax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_i16
	.private_extern _A__NE_var_i32_i16
_A__NE_var_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_i16
	.private_extern _A__NE_param_i32_i16
_A__NE_param_i32_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movzwl	-22(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_LC
	.private_extern _A__NE_var_i32_LC
_A__NE_var_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	112+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_LC
	.private_extern _A__NE_param_i32_LC
_A__NE_param_i32_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_i64
	.private_extern _A__NE_var_i32_i64
_A__NE_var_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	128+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_i64
	.private_extern _A__NE_param_i32_i64
_A__NE_param_i32_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_I
	.private_extern _A__NE_var_i32_I
_A__NE_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	136+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_I
	.private_extern _A__NE_param_i32_I
_A__NE_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %edx
	movq	-32(%rbp), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_u8
	.private_extern _A__NE_var_i32_u8
_A__NE_var_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	144+_MM_A(%rip), %eax
	movsbl	%al,%eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_u8
	.private_extern _A__NE_param_i32_u8
_A__NE_param_i32_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movsbl	-21(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_C
	.private_extern _A__NE_var_i32_C
_A__NE_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	152+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_C
	.private_extern _A__NE_param_i32_C
_A__NE_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_u32
	.private_extern _A__NE_var_i32_u32
_A__NE_var_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movl	164+_MM_A(%rip), %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_u32
	.private_extern _A__NE_param_i32_u32
_A__NE_param_i32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_i8
	.private_extern _A__NE_var_i32_i8
_A__NE_var_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_i8
	.private_extern _A__NE_param_i32_i8
_A__NE_param_i32_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movb	%sil, -21(%rbp)
	movzbl	-21(%rbp), %eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_L
	.private_extern _A__NE_var_i32_L
_A__NE_var_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	176+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_L
	.private_extern _A__NE_param_i32_L
_A__NE_param_i32_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_u64
	.private_extern _A__NE_var_i32_u64
_A__NE_var_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	184+_MM_A(%rip), %rax
	cmpq	%rax, %rdx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_u64
	.private_extern _A__NE_param_i32_u64
_A__NE_param_i32_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	mov	-20(%rbp), %eax
	cmpq	-32(%rbp), %rax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_u16
	.private_extern _A__NE_var_i32_u16
_A__NE_var_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %edx
	movzwl	192+_MM_A(%rip), %eax
	cwtl
	cmpl	%eax, %edx
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_param_i32_u16
	.private_extern _A__NE_param_i32_u16
_A__NE_param_i32_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movw	%si, -22(%rbp)
	movswl	-22(%rbp),%eax
	cmpl	-20(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__NE_var_i32_i32
	.private_extern _A__NE_var_i32_i32
_A__NE_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	$0, %eax
	leave
	ret
.globl _A__NE_param_i32_i32
	.private_extern _A__NE_param_i32_i32
_A__NE_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cmpl	-24(%rbp), %eax
	setne	%al
	movzbl	%al, %eax
	leave
	ret
.globl _A__uNot_var_i16_i16
	.private_extern _A__uNot_var_i16_i16
_A__uNot_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	notq	%rax
	leave
	ret
.globl _A__Not_var_i16_i16
	.private_extern _A__Not_var_i16_i16
_A__Not_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15184
	cmpq	$65535, -16(%rbp)
	jle	L15185
L15184:
	movl	$222817, %edi
	call	__m3_fault
L15185:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_i16_i16
	.private_extern _A__uNot_param_i16_i16
_A__uNot_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-18(%rbp), %eax
	notq	%rax
	leave
	ret
.globl _A__Not_param_i16_i16
	.private_extern _A__Not_param_i16_i16
_A__Not_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movzwl	-20(%rbp), %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15190
	cmpq	$65535, -16(%rbp)
	jle	L15191
L15190:
	movl	$222881, %edi
	call	__m3_fault
L15191:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_var_LC_LC
	.private_extern _A__uNot_var_LC_LC
_A__uNot_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_LC_LC
	.private_extern _A__Not_var_LC_LC
_A__Not_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	112+_MM_A(%rip), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_param_LC_LC
	.private_extern _A__uNot_param_LC_LC
_A__uNot_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_LC_LC
	.private_extern _A__Not_param_LC_LC
_A__Not_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	leave
	ret
.globl _A__Not_var_f64_f64
	.private_extern _A__Not_var_f64_f64
_A__Not_var_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	120+_MM_A(%rip), %xmm1
	movsd	LC2(%rip), %xmm0
	xorpd	%xmm1, %xmm0
	leave
	ret
.globl _A__Not_param_f64_f64
	.private_extern _A__Not_param_f64_f64
_A__Not_param_f64_f64:
	pushq	%rbp
	movq	%rsp, %rbp
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movsd	-32(%rbp), %xmm1
	movsd	LC2(%rip), %xmm0
	xorpd	%xmm1, %xmm0
	leave
	ret
.globl _A__uNot_var_i64_i64
	.private_extern _A__uNot_var_i64_i64
_A__uNot_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_i64_i64
	.private_extern _A__Not_var_i64_i64
_A__Not_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	128+_MM_A(%rip), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_param_i64_i64
	.private_extern _A__uNot_param_i64_i64
_A__uNot_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_i64_i64
	.private_extern _A__Not_param_i64_i64
_A__Not_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_var_I_I
	.private_extern _A__uNot_var_I_I
_A__uNot_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_I_I
	.private_extern _A__Not_var_I_I
_A__Not_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_param_I_I
	.private_extern _A__uNot_param_I_I
_A__uNot_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_I_I
	.private_extern _A__Not_param_I_I
_A__Not_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_var_u8_u8
	.private_extern _A__uNot_var_u8_u8
_A__uNot_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_u8_u8
	.private_extern _A__Not_var_u8_u8
_A__Not_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L15224
	cmpq	$127, -16(%rbp)
	jle	L15225
L15224:
	movl	$223393, %edi
	call	__m3_fault
L15225:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_u8_u8
	.private_extern _A__uNot_param_u8_u8
_A__uNot_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-17(%rbp),%rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_u8_u8
	.private_extern _A__Not_param_u8_u8
_A__Not_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movsbq	-18(%rbp),%rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-128, -16(%rbp)
	jl	L15230
	cmpq	$127, -16(%rbp)
	jle	L15231
L15230:
	movl	$223457, %edi
	call	__m3_fault
L15231:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_var_C_C
	.private_extern _A__uNot_var_C_C
_A__uNot_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_C_C
	.private_extern _A__Not_var_C_C
_A__Not_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L15236
	movl	$223521, %edi
	call	__m3_fault
L15236:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_C_C
	.private_extern _A__uNot_param_C_C
_A__uNot_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_C_C
	.private_extern _A__Not_param_C_C
_A__Not_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jns	L15241
	movl	$223585, %edi
	call	__m3_fault
L15241:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__Not_var_f32_f32
	.private_extern _A__Not_var_f32_f32
_A__Not_var_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	160+_MM_A(%rip), %xmm1
	movss	LC3(%rip), %xmm0
	xorps	%xmm1, %xmm0
	leave
	ret
.globl _A__Not_param_f32_f32
	.private_extern _A__Not_param_f32_f32
_A__Not_param_f32_f32:
	pushq	%rbp
	movq	%rsp, %rbp
	movss	%xmm0, -20(%rbp)
	movss	%xmm1, -24(%rbp)
	movss	-24(%rbp), %xmm1
	movss	LC3(%rip), %xmm0
	xorps	%xmm1, %xmm0
	leave
	ret
.globl _A__uNot_var_u32_u32
	.private_extern _A__uNot_var_u32_u32
_A__uNot_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	164+_MM_A(%rip), %eax
	cltq
	notq	%rax
	leave
	ret
.globl _A__Not_var_u32_u32
	.private_extern _A__Not_var_u32_u32
_A__Not_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	164+_MM_A(%rip), %eax
	cltq
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L15250
	cmpq	$2147483647, -16(%rbp)
	jle	L15251
L15250:
	movl	$223713, %edi
	call	__m3_fault
L15251:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_u32_u32
	.private_extern _A__uNot_param_u32_u32
_A__uNot_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-20(%rbp), %eax
	cltq
	notq	%rax
	leave
	ret
.globl _A__Not_param_u32_u32
	.private_extern _A__Not_param_u32_u32
_A__Not_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movl	-24(%rbp), %eax
	cltq
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-2147483648, -16(%rbp)
	jl	L15256
	cmpq	$2147483647, -16(%rbp)
	jle	L15257
L15256:
	movl	$223777, %edi
	call	__m3_fault
L15257:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_var_i8_i8
	.private_extern _A__uNot_var_i8_i8
_A__uNot_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	notq	%rax
	leave
	ret
.globl _A__Not_var_i8_i8
	.private_extern _A__Not_var_i8_i8
_A__Not_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15262
	cmpq	$255, -16(%rbp)
	jle	L15263
L15262:
	movl	$223841, %edi
	call	__m3_fault
L15263:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_i8_i8
	.private_extern _A__uNot_param_i8_i8
_A__uNot_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-17(%rbp), %eax
	notq	%rax
	leave
	ret
.globl _A__Not_param_i8_i8
	.private_extern _A__Not_param_i8_i8
_A__Not_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movzbl	-18(%rbp), %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15268
	cmpq	$255, -16(%rbp)
	jle	L15269
L15268:
	movl	$223905, %edi
	call	__m3_fault
L15269:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_var_L_L
	.private_extern _A__uNot_var_L_L
_A__uNot_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_L_L
	.private_extern _A__Not_var_L_L
_A__Not_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	176+_MM_A(%rip), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_param_L_L
	.private_extern _A__uNot_param_L_L
_A__uNot_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_L_L
	.private_extern _A__Not_param_L_L
_A__Not_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_var_u64_u64
	.private_extern _A__uNot_var_u64_u64
_A__uNot_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_u64_u64
	.private_extern _A__Not_var_u64_u64
_A__Not_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	184+_MM_A(%rip), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_param_u64_u64
	.private_extern _A__uNot_param_u64_u64
_A__uNot_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_u64_u64
	.private_extern _A__Not_param_u64_u64
_A__Not_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	negq	%rax
	leave
	ret
.globl _A__uNot_var_u16_u16
	.private_extern _A__uNot_var_u16_u16
_A__uNot_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	notq	%rax
	leave
	ret
.globl _A__Not_var_u16_u16
	.private_extern _A__Not_var_u16_u16
_A__Not_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L15290
	cmpq	$32767, -16(%rbp)
	jle	L15291
L15290:
	movl	$224225, %edi
	call	__m3_fault
L15291:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_u16_u16
	.private_extern _A__uNot_param_u16_u16
_A__uNot_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-18(%rbp),%rax
	notq	%rax
	leave
	ret
.globl _A__Not_param_u16_u16
	.private_extern _A__Not_param_u16_u16
_A__Not_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movswq	-20(%rbp),%rax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$-32768, -16(%rbp)
	jl	L15296
	cmpq	$32767, -16(%rbp)
	jle	L15297
L15296:
	movl	$224289, %edi
	call	__m3_fault
L15297:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_var_i32_i32
	.private_extern _A__uNot_var_i32_i32
_A__uNot_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	notq	%rax
	leave
	ret
.globl _A__Not_var_i32_i32
	.private_extern _A__Not_var_i32_i32
_A__Not_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15302
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L15303
L15302:
	movl	$224353, %edi
	call	__m3_fault
L15303:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uNot_param_i32_i32
	.private_extern _A__uNot_param_i32_i32
_A__uNot_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-20(%rbp), %eax
	notq	%rax
	leave
	ret
.globl _A__Not_param_i32_i32
	.private_extern _A__Not_param_i32_i32
_A__Not_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	mov	-24(%rbp), %eax
	negq	%rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15308
	movl	$4294967295, %eax
	cmpq	%rax, -16(%rbp)
	jle	L15309
L15308:
	movl	$224417, %edi
	call	__m3_fault
L15309:
	movq	-16(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i16_I
	.private_extern _A__uLeftShift_var_i16_I
_A__uLeftShift_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15312
	cmpq	$63, -16(%rbp)
	jle	L15313
L15312:
	movl	$224545, %edi
	call	__m3_fault
L15313:
	cmpq	$63, -16(%rbp)
	jg	L15314
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15315
L15314:
	movq	$0, -24(%rbp)
L15315:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i16_I
	.private_extern _A__uLeftShift_param_i16_I
_A__uLeftShift_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15318
	cmpq	$63, -16(%rbp)
	jle	L15319
L15318:
	movl	$224577, %edi
	call	__m3_fault
L15319:
	cmpq	$63, -16(%rbp)
	jg	L15320
	movzwl	-18(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15321
L15320:
	movq	$0, -40(%rbp)
L15321:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i16_C
	.private_extern _A__uLeftShift_var_i16_C
_A__uLeftShift_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15324
	movl	$224609, %edi
	call	__m3_fault
L15324:
	cmpq	$63, -16(%rbp)
	jg	L15325
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15326
L15325:
	movq	$0, -24(%rbp)
L15326:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i16_C
	.private_extern _A__uLeftShift_param_i16_C
_A__uLeftShift_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15329
	movl	$224641, %edi
	call	__m3_fault
L15329:
	cmpq	$63, -16(%rbp)
	jg	L15330
	movzwl	-18(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15331
L15330:
	movq	$0, -40(%rbp)
L15331:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_LC_I
	.private_extern _A__uLeftShift_var_LC_I
_A__uLeftShift_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15334
	cmpq	$63, -16(%rbp)
	jle	L15335
L15334:
	movl	$224673, %edi
	call	__m3_fault
L15335:
	cmpq	$63, -16(%rbp)
	jg	L15336
	movq	112+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15337
L15336:
	movq	$0, -24(%rbp)
L15337:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_LC_I
	.private_extern _A__uLeftShift_param_LC_I
_A__uLeftShift_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15340
	cmpq	$63, -16(%rbp)
	jle	L15341
L15340:
	movl	$224705, %edi
	call	__m3_fault
L15341:
	cmpq	$63, -16(%rbp)
	jg	L15342
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15343
L15342:
	movq	$0, -40(%rbp)
L15343:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_LC_C
	.private_extern _A__uLeftShift_var_LC_C
_A__uLeftShift_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15346
	movl	$224737, %edi
	call	__m3_fault
L15346:
	cmpq	$63, -16(%rbp)
	jg	L15347
	movq	112+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15348
L15347:
	movq	$0, -24(%rbp)
L15348:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_LC_C
	.private_extern _A__uLeftShift_param_LC_C
_A__uLeftShift_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15351
	movl	$224769, %edi
	call	__m3_fault
L15351:
	cmpq	$63, -16(%rbp)
	jg	L15352
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15353
L15352:
	movq	$0, -40(%rbp)
L15353:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i64_I
	.private_extern _A__uLeftShift_var_i64_I
_A__uLeftShift_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15356
	cmpq	$63, -16(%rbp)
	jle	L15357
L15356:
	movl	$224801, %edi
	call	__m3_fault
L15357:
	cmpq	$63, -16(%rbp)
	jg	L15358
	movq	128+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15359
L15358:
	movq	$0, -24(%rbp)
L15359:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i64_I
	.private_extern _A__uLeftShift_param_i64_I
_A__uLeftShift_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15362
	cmpq	$63, -16(%rbp)
	jle	L15363
L15362:
	movl	$224833, %edi
	call	__m3_fault
L15363:
	cmpq	$63, -16(%rbp)
	jg	L15364
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15365
L15364:
	movq	$0, -40(%rbp)
L15365:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i64_C
	.private_extern _A__uLeftShift_var_i64_C
_A__uLeftShift_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15368
	movl	$224865, %edi
	call	__m3_fault
L15368:
	cmpq	$63, -16(%rbp)
	jg	L15369
	movq	128+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15370
L15369:
	movq	$0, -24(%rbp)
L15370:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i64_C
	.private_extern _A__uLeftShift_param_i64_C
_A__uLeftShift_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15373
	movl	$224897, %edi
	call	__m3_fault
L15373:
	cmpq	$63, -16(%rbp)
	jg	L15374
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15375
L15374:
	movq	$0, -40(%rbp)
L15375:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_I_I
	.private_extern _A__uLeftShift_var_I_I
_A__uLeftShift_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15378
	cmpq	$63, -16(%rbp)
	jle	L15379
L15378:
	movl	$224929, %edi
	call	__m3_fault
L15379:
	cmpq	$63, -16(%rbp)
	jg	L15380
	movq	136+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15381
L15380:
	movq	$0, -24(%rbp)
L15381:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_I_I
	.private_extern _A__uLeftShift_param_I_I
_A__uLeftShift_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15384
	cmpq	$63, -16(%rbp)
	jle	L15385
L15384:
	movl	$224961, %edi
	call	__m3_fault
L15385:
	cmpq	$63, -16(%rbp)
	jg	L15386
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15387
L15386:
	movq	$0, -40(%rbp)
L15387:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_I_C
	.private_extern _A__uLeftShift_var_I_C
_A__uLeftShift_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15390
	movl	$224993, %edi
	call	__m3_fault
L15390:
	cmpq	$63, -16(%rbp)
	jg	L15391
	movq	136+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15392
L15391:
	movq	$0, -24(%rbp)
L15392:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_I_C
	.private_extern _A__uLeftShift_param_I_C
_A__uLeftShift_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15395
	movl	$225025, %edi
	call	__m3_fault
L15395:
	cmpq	$63, -16(%rbp)
	jg	L15396
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15397
L15396:
	movq	$0, -40(%rbp)
L15397:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u8_I
	.private_extern _A__uLeftShift_var_u8_I
_A__uLeftShift_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15400
	cmpq	$63, -16(%rbp)
	jle	L15401
L15400:
	movl	$225057, %edi
	call	__m3_fault
L15401:
	cmpq	$63, -16(%rbp)
	jg	L15402
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15403
L15402:
	movq	$0, -24(%rbp)
L15403:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u8_I
	.private_extern _A__uLeftShift_param_u8_I
_A__uLeftShift_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15406
	cmpq	$63, -16(%rbp)
	jle	L15407
L15406:
	movl	$225089, %edi
	call	__m3_fault
L15407:
	cmpq	$63, -16(%rbp)
	jg	L15408
	movsbq	-17(%rbp),%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15409
L15408:
	movq	$0, -40(%rbp)
L15409:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u8_C
	.private_extern _A__uLeftShift_var_u8_C
_A__uLeftShift_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15412
	movl	$225121, %edi
	call	__m3_fault
L15412:
	cmpq	$63, -16(%rbp)
	jg	L15413
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15414
L15413:
	movq	$0, -24(%rbp)
L15414:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u8_C
	.private_extern _A__uLeftShift_param_u8_C
_A__uLeftShift_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15417
	movl	$225153, %edi
	call	__m3_fault
L15417:
	cmpq	$63, -16(%rbp)
	jg	L15418
	movsbq	-17(%rbp),%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15419
L15418:
	movq	$0, -40(%rbp)
L15419:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_C_I
	.private_extern _A__uLeftShift_var_C_I
_A__uLeftShift_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15422
	cmpq	$63, -16(%rbp)
	jle	L15423
L15422:
	movl	$225185, %edi
	call	__m3_fault
L15423:
	cmpq	$63, -16(%rbp)
	jg	L15424
	movq	152+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15425
L15424:
	movq	$0, -24(%rbp)
L15425:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_C_I
	.private_extern _A__uLeftShift_param_C_I
_A__uLeftShift_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15428
	cmpq	$63, -16(%rbp)
	jle	L15429
L15428:
	movl	$225217, %edi
	call	__m3_fault
L15429:
	cmpq	$63, -16(%rbp)
	jg	L15430
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15431
L15430:
	movq	$0, -40(%rbp)
L15431:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_C_C
	.private_extern _A__uLeftShift_var_C_C
_A__uLeftShift_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15434
	movl	$225249, %edi
	call	__m3_fault
L15434:
	cmpq	$63, -16(%rbp)
	jg	L15435
	movq	152+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15436
L15435:
	movq	$0, -24(%rbp)
L15436:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_C_C
	.private_extern _A__uLeftShift_param_C_C
_A__uLeftShift_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15439
	movl	$225281, %edi
	call	__m3_fault
L15439:
	cmpq	$63, -16(%rbp)
	jg	L15440
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15441
L15440:
	movq	$0, -40(%rbp)
L15441:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u32_I
	.private_extern _A__uLeftShift_var_u32_I
_A__uLeftShift_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15444
	cmpq	$63, -16(%rbp)
	jle	L15445
L15444:
	movl	$225313, %edi
	call	__m3_fault
L15445:
	cmpq	$63, -16(%rbp)
	jg	L15446
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15447
L15446:
	movq	$0, -24(%rbp)
L15447:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u32_I
	.private_extern _A__uLeftShift_param_u32_I
_A__uLeftShift_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15450
	cmpq	$63, -16(%rbp)
	jle	L15451
L15450:
	movl	$225345, %edi
	call	__m3_fault
L15451:
	cmpq	$63, -16(%rbp)
	jg	L15452
	movl	-20(%rbp), %eax
	cltq
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15453
L15452:
	movq	$0, -40(%rbp)
L15453:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u32_C
	.private_extern _A__uLeftShift_var_u32_C
_A__uLeftShift_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15456
	movl	$225377, %edi
	call	__m3_fault
L15456:
	cmpq	$63, -16(%rbp)
	jg	L15457
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15458
L15457:
	movq	$0, -24(%rbp)
L15458:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u32_C
	.private_extern _A__uLeftShift_param_u32_C
_A__uLeftShift_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15461
	movl	$225409, %edi
	call	__m3_fault
L15461:
	cmpq	$63, -16(%rbp)
	jg	L15462
	movl	-20(%rbp), %eax
	cltq
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15463
L15462:
	movq	$0, -40(%rbp)
L15463:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i8_I
	.private_extern _A__uLeftShift_var_i8_I
_A__uLeftShift_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15466
	cmpq	$63, -16(%rbp)
	jle	L15467
L15466:
	movl	$225441, %edi
	call	__m3_fault
L15467:
	cmpq	$63, -16(%rbp)
	jg	L15468
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15469
L15468:
	movq	$0, -24(%rbp)
L15469:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i8_I
	.private_extern _A__uLeftShift_param_i8_I
_A__uLeftShift_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15472
	cmpq	$63, -16(%rbp)
	jle	L15473
L15472:
	movl	$225473, %edi
	call	__m3_fault
L15473:
	cmpq	$63, -16(%rbp)
	jg	L15474
	movzbl	-17(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15475
L15474:
	movq	$0, -40(%rbp)
L15475:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i8_C
	.private_extern _A__uLeftShift_var_i8_C
_A__uLeftShift_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15478
	movl	$225505, %edi
	call	__m3_fault
L15478:
	cmpq	$63, -16(%rbp)
	jg	L15479
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15480
L15479:
	movq	$0, -24(%rbp)
L15480:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i8_C
	.private_extern _A__uLeftShift_param_i8_C
_A__uLeftShift_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15483
	movl	$225537, %edi
	call	__m3_fault
L15483:
	cmpq	$63, -16(%rbp)
	jg	L15484
	movzbl	-17(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15485
L15484:
	movq	$0, -40(%rbp)
L15485:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_L_I
	.private_extern _A__uLeftShift_var_L_I
_A__uLeftShift_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15488
	cmpq	$63, -16(%rbp)
	jle	L15489
L15488:
	movl	$225569, %edi
	call	__m3_fault
L15489:
	cmpq	$63, -16(%rbp)
	jg	L15490
	movq	176+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15491
L15490:
	movq	$0, -24(%rbp)
L15491:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_L_I
	.private_extern _A__uLeftShift_param_L_I
_A__uLeftShift_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15494
	cmpq	$63, -16(%rbp)
	jle	L15495
L15494:
	movl	$225601, %edi
	call	__m3_fault
L15495:
	cmpq	$63, -16(%rbp)
	jg	L15496
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15497
L15496:
	movq	$0, -40(%rbp)
L15497:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_L_C
	.private_extern _A__uLeftShift_var_L_C
_A__uLeftShift_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15500
	movl	$225633, %edi
	call	__m3_fault
L15500:
	cmpq	$63, -16(%rbp)
	jg	L15501
	movq	176+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15502
L15501:
	movq	$0, -24(%rbp)
L15502:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_L_C
	.private_extern _A__uLeftShift_param_L_C
_A__uLeftShift_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15505
	movl	$225665, %edi
	call	__m3_fault
L15505:
	cmpq	$63, -16(%rbp)
	jg	L15506
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15507
L15506:
	movq	$0, -40(%rbp)
L15507:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u64_I
	.private_extern _A__uLeftShift_var_u64_I
_A__uLeftShift_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15510
	cmpq	$63, -16(%rbp)
	jle	L15511
L15510:
	movl	$225697, %edi
	call	__m3_fault
L15511:
	cmpq	$63, -16(%rbp)
	jg	L15512
	movq	184+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15513
L15512:
	movq	$0, -24(%rbp)
L15513:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u64_I
	.private_extern _A__uLeftShift_param_u64_I
_A__uLeftShift_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15516
	cmpq	$63, -16(%rbp)
	jle	L15517
L15516:
	movl	$225729, %edi
	call	__m3_fault
L15517:
	cmpq	$63, -16(%rbp)
	jg	L15518
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15519
L15518:
	movq	$0, -40(%rbp)
L15519:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u64_C
	.private_extern _A__uLeftShift_var_u64_C
_A__uLeftShift_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15522
	movl	$225761, %edi
	call	__m3_fault
L15522:
	cmpq	$63, -16(%rbp)
	jg	L15523
	movq	184+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15524
L15523:
	movq	$0, -24(%rbp)
L15524:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u64_C
	.private_extern _A__uLeftShift_param_u64_C
_A__uLeftShift_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15527
	movl	$225793, %edi
	call	__m3_fault
L15527:
	cmpq	$63, -16(%rbp)
	jg	L15528
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15529
L15528:
	movq	$0, -40(%rbp)
L15529:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u16_I
	.private_extern _A__uLeftShift_var_u16_I
_A__uLeftShift_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15532
	cmpq	$63, -16(%rbp)
	jle	L15533
L15532:
	movl	$225825, %edi
	call	__m3_fault
L15533:
	cmpq	$63, -16(%rbp)
	jg	L15534
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15535
L15534:
	movq	$0, -24(%rbp)
L15535:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u16_I
	.private_extern _A__uLeftShift_param_u16_I
_A__uLeftShift_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15538
	cmpq	$63, -16(%rbp)
	jle	L15539
L15538:
	movl	$225857, %edi
	call	__m3_fault
L15539:
	cmpq	$63, -16(%rbp)
	jg	L15540
	movswq	-18(%rbp),%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15541
L15540:
	movq	$0, -40(%rbp)
L15541:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_u16_C
	.private_extern _A__uLeftShift_var_u16_C
_A__uLeftShift_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15544
	movl	$225889, %edi
	call	__m3_fault
L15544:
	cmpq	$63, -16(%rbp)
	jg	L15545
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15546
L15545:
	movq	$0, -24(%rbp)
L15546:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_u16_C
	.private_extern _A__uLeftShift_param_u16_C
_A__uLeftShift_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15549
	movl	$225921, %edi
	call	__m3_fault
L15549:
	cmpq	$63, -16(%rbp)
	jg	L15550
	movswq	-18(%rbp),%rax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15551
L15550:
	movq	$0, -40(%rbp)
L15551:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i32_I
	.private_extern _A__uLeftShift_var_i32_I
_A__uLeftShift_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15554
	cmpq	$63, -16(%rbp)
	jle	L15555
L15554:
	movl	$225953, %edi
	call	__m3_fault
L15555:
	cmpq	$63, -16(%rbp)
	jg	L15556
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15557
L15556:
	movq	$0, -24(%rbp)
L15557:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i32_I
	.private_extern _A__uLeftShift_param_i32_I
_A__uLeftShift_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15560
	cmpq	$63, -16(%rbp)
	jle	L15561
L15560:
	movl	$225985, %edi
	call	__m3_fault
L15561:
	cmpq	$63, -16(%rbp)
	jg	L15562
	mov	-20(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15563
L15562:
	movq	$0, -40(%rbp)
L15563:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_var_i32_C
	.private_extern _A__uLeftShift_var_i32_C
_A__uLeftShift_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15566
	movl	$226017, %edi
	call	__m3_fault
L15566:
	cmpq	$63, -16(%rbp)
	jg	L15567
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15568
L15567:
	movq	$0, -24(%rbp)
L15568:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uLeftShift_param_i32_C
	.private_extern _A__uLeftShift_param_i32_C
_A__uLeftShift_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15571
	movl	$226049, %edi
	call	__m3_fault
L15571:
	cmpq	$63, -16(%rbp)
	jg	L15572
	mov	-20(%rbp), %eax
	movq	-16(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15573
L15572:
	movq	$0, -40(%rbp)
L15573:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i16_I
	.private_extern _A__uRightShift_var_i16_I
_A__uRightShift_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15576
	cmpq	$63, -16(%rbp)
	jle	L15577
L15576:
	movl	$226177, %edi
	call	__m3_fault
L15577:
	cmpq	$63, -16(%rbp)
	jg	L15578
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15579
L15578:
	movq	$0, -24(%rbp)
L15579:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i16_I
	.private_extern _A__uRightShift_param_i16_I
_A__uRightShift_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15582
	cmpq	$63, -16(%rbp)
	jle	L15583
L15582:
	movl	$226209, %edi
	call	__m3_fault
L15583:
	cmpq	$63, -16(%rbp)
	jg	L15584
	movzwl	-18(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15585
L15584:
	movq	$0, -40(%rbp)
L15585:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i16_C
	.private_extern _A__uRightShift_var_i16_C
_A__uRightShift_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15588
	movl	$226241, %edi
	call	__m3_fault
L15588:
	cmpq	$63, -16(%rbp)
	jg	L15589
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15590
L15589:
	movq	$0, -24(%rbp)
L15590:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i16_C
	.private_extern _A__uRightShift_param_i16_C
_A__uRightShift_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15593
	movl	$226273, %edi
	call	__m3_fault
L15593:
	cmpq	$63, -16(%rbp)
	jg	L15594
	movzwl	-18(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15595
L15594:
	movq	$0, -40(%rbp)
L15595:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_LC_I
	.private_extern _A__uRightShift_var_LC_I
_A__uRightShift_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15598
	cmpq	$63, -16(%rbp)
	jle	L15599
L15598:
	movl	$226305, %edi
	call	__m3_fault
L15599:
	cmpq	$63, -16(%rbp)
	jg	L15600
	movq	112+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15601
L15600:
	movq	$0, -24(%rbp)
L15601:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_LC_I
	.private_extern _A__uRightShift_param_LC_I
_A__uRightShift_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15604
	cmpq	$63, -16(%rbp)
	jle	L15605
L15604:
	movl	$226337, %edi
	call	__m3_fault
L15605:
	cmpq	$63, -16(%rbp)
	jg	L15606
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15607
L15606:
	movq	$0, -40(%rbp)
L15607:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_LC_C
	.private_extern _A__uRightShift_var_LC_C
_A__uRightShift_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15610
	movl	$226369, %edi
	call	__m3_fault
L15610:
	cmpq	$63, -16(%rbp)
	jg	L15611
	movq	112+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15612
L15611:
	movq	$0, -24(%rbp)
L15612:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_LC_C
	.private_extern _A__uRightShift_param_LC_C
_A__uRightShift_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15615
	movl	$226401, %edi
	call	__m3_fault
L15615:
	cmpq	$63, -16(%rbp)
	jg	L15616
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15617
L15616:
	movq	$0, -40(%rbp)
L15617:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i64_I
	.private_extern _A__uRightShift_var_i64_I
_A__uRightShift_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15620
	cmpq	$63, -16(%rbp)
	jle	L15621
L15620:
	movl	$226433, %edi
	call	__m3_fault
L15621:
	cmpq	$63, -16(%rbp)
	jg	L15622
	movq	128+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15623
L15622:
	movq	$0, -24(%rbp)
L15623:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i64_I
	.private_extern _A__uRightShift_param_i64_I
_A__uRightShift_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15626
	cmpq	$63, -16(%rbp)
	jle	L15627
L15626:
	movl	$226465, %edi
	call	__m3_fault
L15627:
	cmpq	$63, -16(%rbp)
	jg	L15628
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15629
L15628:
	movq	$0, -40(%rbp)
L15629:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i64_C
	.private_extern _A__uRightShift_var_i64_C
_A__uRightShift_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15632
	movl	$226497, %edi
	call	__m3_fault
L15632:
	cmpq	$63, -16(%rbp)
	jg	L15633
	movq	128+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15634
L15633:
	movq	$0, -24(%rbp)
L15634:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i64_C
	.private_extern _A__uRightShift_param_i64_C
_A__uRightShift_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15637
	movl	$226529, %edi
	call	__m3_fault
L15637:
	cmpq	$63, -16(%rbp)
	jg	L15638
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15639
L15638:
	movq	$0, -40(%rbp)
L15639:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_I_I
	.private_extern _A__uRightShift_var_I_I
_A__uRightShift_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15642
	cmpq	$63, -16(%rbp)
	jle	L15643
L15642:
	movl	$226561, %edi
	call	__m3_fault
L15643:
	cmpq	$63, -16(%rbp)
	jg	L15644
	movq	136+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15645
L15644:
	movq	$0, -24(%rbp)
L15645:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_I_I
	.private_extern _A__uRightShift_param_I_I
_A__uRightShift_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15648
	cmpq	$63, -16(%rbp)
	jle	L15649
L15648:
	movl	$226593, %edi
	call	__m3_fault
L15649:
	cmpq	$63, -16(%rbp)
	jg	L15650
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15651
L15650:
	movq	$0, -40(%rbp)
L15651:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_I_C
	.private_extern _A__uRightShift_var_I_C
_A__uRightShift_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15654
	movl	$226625, %edi
	call	__m3_fault
L15654:
	cmpq	$63, -16(%rbp)
	jg	L15655
	movq	136+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15656
L15655:
	movq	$0, -24(%rbp)
L15656:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_I_C
	.private_extern _A__uRightShift_param_I_C
_A__uRightShift_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15659
	movl	$226657, %edi
	call	__m3_fault
L15659:
	cmpq	$63, -16(%rbp)
	jg	L15660
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15661
L15660:
	movq	$0, -40(%rbp)
L15661:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u8_I
	.private_extern _A__uRightShift_var_u8_I
_A__uRightShift_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15664
	cmpq	$63, -16(%rbp)
	jle	L15665
L15664:
	movl	$226689, %edi
	call	__m3_fault
L15665:
	cmpq	$63, -16(%rbp)
	jg	L15666
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15667
L15666:
	movq	$0, -24(%rbp)
L15667:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u8_I
	.private_extern _A__uRightShift_param_u8_I
_A__uRightShift_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15670
	cmpq	$63, -16(%rbp)
	jle	L15671
L15670:
	movl	$226721, %edi
	call	__m3_fault
L15671:
	cmpq	$63, -16(%rbp)
	jg	L15672
	movsbq	-17(%rbp),%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15673
L15672:
	movq	$0, -40(%rbp)
L15673:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u8_C
	.private_extern _A__uRightShift_var_u8_C
_A__uRightShift_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15676
	movl	$226753, %edi
	call	__m3_fault
L15676:
	cmpq	$63, -16(%rbp)
	jg	L15677
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15678
L15677:
	movq	$0, -24(%rbp)
L15678:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u8_C
	.private_extern _A__uRightShift_param_u8_C
_A__uRightShift_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15681
	movl	$226785, %edi
	call	__m3_fault
L15681:
	cmpq	$63, -16(%rbp)
	jg	L15682
	movsbq	-17(%rbp),%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15683
L15682:
	movq	$0, -40(%rbp)
L15683:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_C_I
	.private_extern _A__uRightShift_var_C_I
_A__uRightShift_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15686
	cmpq	$63, -16(%rbp)
	jle	L15687
L15686:
	movl	$226817, %edi
	call	__m3_fault
L15687:
	cmpq	$63, -16(%rbp)
	jg	L15688
	movq	152+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15689
L15688:
	movq	$0, -24(%rbp)
L15689:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_C_I
	.private_extern _A__uRightShift_param_C_I
_A__uRightShift_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15692
	cmpq	$63, -16(%rbp)
	jle	L15693
L15692:
	movl	$226849, %edi
	call	__m3_fault
L15693:
	cmpq	$63, -16(%rbp)
	jg	L15694
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15695
L15694:
	movq	$0, -40(%rbp)
L15695:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_C_C
	.private_extern _A__uRightShift_var_C_C
_A__uRightShift_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15698
	movl	$226881, %edi
	call	__m3_fault
L15698:
	cmpq	$63, -16(%rbp)
	jg	L15699
	movq	152+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15700
L15699:
	movq	$0, -24(%rbp)
L15700:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_C_C
	.private_extern _A__uRightShift_param_C_C
_A__uRightShift_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15703
	movl	$226913, %edi
	call	__m3_fault
L15703:
	cmpq	$63, -16(%rbp)
	jg	L15704
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15705
L15704:
	movq	$0, -40(%rbp)
L15705:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u32_I
	.private_extern _A__uRightShift_var_u32_I
_A__uRightShift_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15708
	cmpq	$63, -16(%rbp)
	jle	L15709
L15708:
	movl	$226945, %edi
	call	__m3_fault
L15709:
	cmpq	$63, -16(%rbp)
	jg	L15710
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15711
L15710:
	movq	$0, -24(%rbp)
L15711:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u32_I
	.private_extern _A__uRightShift_param_u32_I
_A__uRightShift_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15714
	cmpq	$63, -16(%rbp)
	jle	L15715
L15714:
	movl	$226977, %edi
	call	__m3_fault
L15715:
	cmpq	$63, -16(%rbp)
	jg	L15716
	movl	-20(%rbp), %eax
	cltq
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15717
L15716:
	movq	$0, -40(%rbp)
L15717:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u32_C
	.private_extern _A__uRightShift_var_u32_C
_A__uRightShift_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15720
	movl	$227009, %edi
	call	__m3_fault
L15720:
	cmpq	$63, -16(%rbp)
	jg	L15721
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15722
L15721:
	movq	$0, -24(%rbp)
L15722:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u32_C
	.private_extern _A__uRightShift_param_u32_C
_A__uRightShift_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15725
	movl	$227041, %edi
	call	__m3_fault
L15725:
	cmpq	$63, -16(%rbp)
	jg	L15726
	movl	-20(%rbp), %eax
	cltq
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15727
L15726:
	movq	$0, -40(%rbp)
L15727:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i8_I
	.private_extern _A__uRightShift_var_i8_I
_A__uRightShift_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15730
	cmpq	$63, -16(%rbp)
	jle	L15731
L15730:
	movl	$227073, %edi
	call	__m3_fault
L15731:
	cmpq	$63, -16(%rbp)
	jg	L15732
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15733
L15732:
	movq	$0, -24(%rbp)
L15733:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i8_I
	.private_extern _A__uRightShift_param_i8_I
_A__uRightShift_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15736
	cmpq	$63, -16(%rbp)
	jle	L15737
L15736:
	movl	$227105, %edi
	call	__m3_fault
L15737:
	cmpq	$63, -16(%rbp)
	jg	L15738
	movzbl	-17(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15739
L15738:
	movq	$0, -40(%rbp)
L15739:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i8_C
	.private_extern _A__uRightShift_var_i8_C
_A__uRightShift_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15742
	movl	$227137, %edi
	call	__m3_fault
L15742:
	cmpq	$63, -16(%rbp)
	jg	L15743
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15744
L15743:
	movq	$0, -24(%rbp)
L15744:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i8_C
	.private_extern _A__uRightShift_param_i8_C
_A__uRightShift_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15747
	movl	$227169, %edi
	call	__m3_fault
L15747:
	cmpq	$63, -16(%rbp)
	jg	L15748
	movzbl	-17(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15749
L15748:
	movq	$0, -40(%rbp)
L15749:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_L_I
	.private_extern _A__uRightShift_var_L_I
_A__uRightShift_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15752
	cmpq	$63, -16(%rbp)
	jle	L15753
L15752:
	movl	$227201, %edi
	call	__m3_fault
L15753:
	cmpq	$63, -16(%rbp)
	jg	L15754
	movq	176+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15755
L15754:
	movq	$0, -24(%rbp)
L15755:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_L_I
	.private_extern _A__uRightShift_param_L_I
_A__uRightShift_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15758
	cmpq	$63, -16(%rbp)
	jle	L15759
L15758:
	movl	$227233, %edi
	call	__m3_fault
L15759:
	cmpq	$63, -16(%rbp)
	jg	L15760
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15761
L15760:
	movq	$0, -40(%rbp)
L15761:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_L_C
	.private_extern _A__uRightShift_var_L_C
_A__uRightShift_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15764
	movl	$227265, %edi
	call	__m3_fault
L15764:
	cmpq	$63, -16(%rbp)
	jg	L15765
	movq	176+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15766
L15765:
	movq	$0, -24(%rbp)
L15766:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_L_C
	.private_extern _A__uRightShift_param_L_C
_A__uRightShift_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15769
	movl	$227297, %edi
	call	__m3_fault
L15769:
	cmpq	$63, -16(%rbp)
	jg	L15770
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15771
L15770:
	movq	$0, -40(%rbp)
L15771:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u64_I
	.private_extern _A__uRightShift_var_u64_I
_A__uRightShift_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15774
	cmpq	$63, -16(%rbp)
	jle	L15775
L15774:
	movl	$227329, %edi
	call	__m3_fault
L15775:
	cmpq	$63, -16(%rbp)
	jg	L15776
	movq	184+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15777
L15776:
	movq	$0, -24(%rbp)
L15777:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u64_I
	.private_extern _A__uRightShift_param_u64_I
_A__uRightShift_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15780
	cmpq	$63, -16(%rbp)
	jle	L15781
L15780:
	movl	$227361, %edi
	call	__m3_fault
L15781:
	cmpq	$63, -16(%rbp)
	jg	L15782
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15783
L15782:
	movq	$0, -40(%rbp)
L15783:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u64_C
	.private_extern _A__uRightShift_var_u64_C
_A__uRightShift_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15786
	movl	$227393, %edi
	call	__m3_fault
L15786:
	cmpq	$63, -16(%rbp)
	jg	L15787
	movq	184+_MM_A(%rip), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15788
L15787:
	movq	$0, -24(%rbp)
L15788:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u64_C
	.private_extern _A__uRightShift_param_u64_C
_A__uRightShift_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15791
	movl	$227425, %edi
	call	__m3_fault
L15791:
	cmpq	$63, -16(%rbp)
	jg	L15792
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15793
L15792:
	movq	$0, -40(%rbp)
L15793:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u16_I
	.private_extern _A__uRightShift_var_u16_I
_A__uRightShift_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15796
	cmpq	$63, -16(%rbp)
	jle	L15797
L15796:
	movl	$227457, %edi
	call	__m3_fault
L15797:
	cmpq	$63, -16(%rbp)
	jg	L15798
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15799
L15798:
	movq	$0, -24(%rbp)
L15799:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u16_I
	.private_extern _A__uRightShift_param_u16_I
_A__uRightShift_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15802
	cmpq	$63, -16(%rbp)
	jle	L15803
L15802:
	movl	$227489, %edi
	call	__m3_fault
L15803:
	cmpq	$63, -16(%rbp)
	jg	L15804
	movswq	-18(%rbp),%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15805
L15804:
	movq	$0, -40(%rbp)
L15805:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_u16_C
	.private_extern _A__uRightShift_var_u16_C
_A__uRightShift_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15808
	movl	$227521, %edi
	call	__m3_fault
L15808:
	cmpq	$63, -16(%rbp)
	jg	L15809
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15810
L15809:
	movq	$0, -24(%rbp)
L15810:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_u16_C
	.private_extern _A__uRightShift_param_u16_C
_A__uRightShift_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15813
	movl	$227553, %edi
	call	__m3_fault
L15813:
	cmpq	$63, -16(%rbp)
	jg	L15814
	movswq	-18(%rbp),%rax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15815
L15814:
	movq	$0, -40(%rbp)
L15815:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i32_I
	.private_extern _A__uRightShift_var_i32_I
_A__uRightShift_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15818
	cmpq	$63, -16(%rbp)
	jle	L15819
L15818:
	movl	$227585, %edi
	call	__m3_fault
L15819:
	cmpq	$63, -16(%rbp)
	jg	L15820
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15821
L15820:
	movq	$0, -24(%rbp)
L15821:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i32_I
	.private_extern _A__uRightShift_param_i32_I
_A__uRightShift_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15824
	cmpq	$63, -16(%rbp)
	jle	L15825
L15824:
	movl	$227617, %edi
	call	__m3_fault
L15825:
	cmpq	$63, -16(%rbp)
	jg	L15826
	mov	-20(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15827
L15826:
	movq	$0, -40(%rbp)
L15827:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_var_i32_C
	.private_extern _A__uRightShift_var_i32_C
_A__uRightShift_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15830
	movl	$227649, %edi
	call	__m3_fault
L15830:
	cmpq	$63, -16(%rbp)
	jg	L15831
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L15832
L15831:
	movq	$0, -24(%rbp)
L15832:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uRightShift_param_i32_C
	.private_extern _A__uRightShift_param_i32_C
_A__uRightShift_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L15835
	movl	$227681, %edi
	call	__m3_fault
L15835:
	cmpq	$63, -16(%rbp)
	jg	L15836
	mov	-20(%rbp), %eax
	movq	-16(%rbp), %rcx
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15837
L15836:
	movq	$0, -40(%rbp)
L15837:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i16_I
	.private_extern _A__uShift_var_i16_I
_A__uShift_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15840
	cmpq	$63, -16(%rbp)
	jg	L15841
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15842
L15841:
	movq	$0, -48(%rbp)
L15842:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15843
L15840:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15844
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15845
L15844:
	movq	$0, -40(%rbp)
L15845:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15843:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i16_I
	.private_extern _A__uShift_param_i16_I
_A__uShift_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzwl	-34(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15848
	cmpq	$63, -16(%rbp)
	jg	L15849
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15850
L15849:
	movq	$0, -64(%rbp)
L15850:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15851
L15848:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15852
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15853
L15852:
	movq	$0, -56(%rbp)
L15853:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15851:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i16_C
	.private_extern _A__uShift_var_i16_C
_A__uShift_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15856
	cmpq	$63, -16(%rbp)
	jg	L15857
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15858
L15857:
	movq	$0, -48(%rbp)
L15858:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15859
L15856:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15860
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15861
L15860:
	movq	$0, -40(%rbp)
L15861:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15859:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i16_C
	.private_extern _A__uShift_param_i16_C
_A__uShift_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzwl	-34(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15864
	cmpq	$63, -16(%rbp)
	jg	L15865
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15866
L15865:
	movq	$0, -64(%rbp)
L15866:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15867
L15864:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15868
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15869
L15868:
	movq	$0, -56(%rbp)
L15869:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15867:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_LC_I
	.private_extern _A__uShift_var_LC_I
_A__uShift_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15872
	cmpq	$63, -16(%rbp)
	jg	L15873
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15874
L15873:
	movq	$0, -48(%rbp)
L15874:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15875
L15872:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15876
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15877
L15876:
	movq	$0, -40(%rbp)
L15877:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15875:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_LC_I
	.private_extern _A__uShift_param_LC_I
_A__uShift_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15880
	cmpq	$63, -16(%rbp)
	jg	L15881
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15882
L15881:
	movq	$0, -64(%rbp)
L15882:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15883
L15880:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15884
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15885
L15884:
	movq	$0, -56(%rbp)
L15885:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15883:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_LC_C
	.private_extern _A__uShift_var_LC_C
_A__uShift_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15888
	cmpq	$63, -16(%rbp)
	jg	L15889
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15890
L15889:
	movq	$0, -48(%rbp)
L15890:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15891
L15888:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15892
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15893
L15892:
	movq	$0, -40(%rbp)
L15893:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15891:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_LC_C
	.private_extern _A__uShift_param_LC_C
_A__uShift_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15896
	cmpq	$63, -16(%rbp)
	jg	L15897
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15898
L15897:
	movq	$0, -64(%rbp)
L15898:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15899
L15896:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15900
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15901
L15900:
	movq	$0, -56(%rbp)
L15901:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15899:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i64_I
	.private_extern _A__uShift_var_i64_I
_A__uShift_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15904
	cmpq	$63, -16(%rbp)
	jg	L15905
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15906
L15905:
	movq	$0, -48(%rbp)
L15906:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15907
L15904:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15908
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15909
L15908:
	movq	$0, -40(%rbp)
L15909:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15907:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i64_I
	.private_extern _A__uShift_param_i64_I
_A__uShift_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15912
	cmpq	$63, -16(%rbp)
	jg	L15913
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15914
L15913:
	movq	$0, -64(%rbp)
L15914:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15915
L15912:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15916
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15917
L15916:
	movq	$0, -56(%rbp)
L15917:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15915:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i64_C
	.private_extern _A__uShift_var_i64_C
_A__uShift_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15920
	cmpq	$63, -16(%rbp)
	jg	L15921
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15922
L15921:
	movq	$0, -48(%rbp)
L15922:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15923
L15920:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15924
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15925
L15924:
	movq	$0, -40(%rbp)
L15925:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15923:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i64_C
	.private_extern _A__uShift_param_i64_C
_A__uShift_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15928
	cmpq	$63, -16(%rbp)
	jg	L15929
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15930
L15929:
	movq	$0, -64(%rbp)
L15930:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15931
L15928:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15932
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15933
L15932:
	movq	$0, -56(%rbp)
L15933:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15931:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_I_I
	.private_extern _A__uShift_var_I_I
_A__uShift_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15936
	cmpq	$63, -16(%rbp)
	jg	L15937
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15938
L15937:
	movq	$0, -48(%rbp)
L15938:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15939
L15936:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15940
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15941
L15940:
	movq	$0, -40(%rbp)
L15941:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15939:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_I_I
	.private_extern _A__uShift_param_I_I
_A__uShift_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15944
	cmpq	$63, -16(%rbp)
	jg	L15945
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15946
L15945:
	movq	$0, -64(%rbp)
L15946:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15947
L15944:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15948
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15949
L15948:
	movq	$0, -56(%rbp)
L15949:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15947:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_I_C
	.private_extern _A__uShift_var_I_C
_A__uShift_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15952
	cmpq	$63, -16(%rbp)
	jg	L15953
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15954
L15953:
	movq	$0, -48(%rbp)
L15954:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15955
L15952:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15956
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15957
L15956:
	movq	$0, -40(%rbp)
L15957:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15955:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_I_C
	.private_extern _A__uShift_param_I_C
_A__uShift_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15960
	cmpq	$63, -16(%rbp)
	jg	L15961
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15962
L15961:
	movq	$0, -64(%rbp)
L15962:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15963
L15960:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15964
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15965
L15964:
	movq	$0, -56(%rbp)
L15965:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15963:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u8_I
	.private_extern _A__uShift_var_u8_I
_A__uShift_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15968
	cmpq	$63, -16(%rbp)
	jg	L15969
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15970
L15969:
	movq	$0, -48(%rbp)
L15970:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15971
L15968:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15972
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15973
L15972:
	movq	$0, -40(%rbp)
L15973:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15971:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u8_I
	.private_extern _A__uShift_param_u8_I
_A__uShift_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movsbq	-33(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15976
	cmpq	$63, -16(%rbp)
	jg	L15977
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15978
L15977:
	movq	$0, -64(%rbp)
L15978:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15979
L15976:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15980
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15981
L15980:
	movq	$0, -56(%rbp)
L15981:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15979:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u8_C
	.private_extern _A__uShift_var_u8_C
_A__uShift_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15984
	cmpq	$63, -16(%rbp)
	jg	L15985
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L15986
L15985:
	movq	$0, -48(%rbp)
L15986:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L15987
L15984:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15988
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L15989
L15988:
	movq	$0, -40(%rbp)
L15989:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L15987:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u8_C
	.private_extern _A__uShift_param_u8_C
_A__uShift_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movsbq	-33(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L15992
	cmpq	$63, -16(%rbp)
	jg	L15993
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L15994
L15993:
	movq	$0, -64(%rbp)
L15994:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L15995
L15992:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L15996
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L15997
L15996:
	movq	$0, -56(%rbp)
L15997:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L15995:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_C_I
	.private_extern _A__uShift_var_C_I
_A__uShift_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16000
	cmpq	$63, -16(%rbp)
	jg	L16001
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16002
L16001:
	movq	$0, -48(%rbp)
L16002:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16003
L16000:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16004
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16005
L16004:
	movq	$0, -40(%rbp)
L16005:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16003:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_C_I
	.private_extern _A__uShift_param_C_I
_A__uShift_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16008
	cmpq	$63, -16(%rbp)
	jg	L16009
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16010
L16009:
	movq	$0, -64(%rbp)
L16010:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16011
L16008:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16012
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16013
L16012:
	movq	$0, -56(%rbp)
L16013:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16011:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_C_C
	.private_extern _A__uShift_var_C_C
_A__uShift_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16016
	cmpq	$63, -16(%rbp)
	jg	L16017
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16018
L16017:
	movq	$0, -48(%rbp)
L16018:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16019
L16016:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16020
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16021
L16020:
	movq	$0, -40(%rbp)
L16021:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16019:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_C_C
	.private_extern _A__uShift_param_C_C
_A__uShift_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16024
	cmpq	$63, -16(%rbp)
	jg	L16025
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16026
L16025:
	movq	$0, -64(%rbp)
L16026:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16027
L16024:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16028
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16029
L16028:
	movq	$0, -56(%rbp)
L16029:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16027:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u32_I
	.private_extern _A__uShift_var_u32_I
_A__uShift_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16032
	cmpq	$63, -16(%rbp)
	jg	L16033
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16034
L16033:
	movq	$0, -48(%rbp)
L16034:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16035
L16032:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16036
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16037
L16036:
	movq	$0, -40(%rbp)
L16037:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16035:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u32_I
	.private_extern _A__uShift_param_u32_I
_A__uShift_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movl	-36(%rbp), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16040
	cmpq	$63, -16(%rbp)
	jg	L16041
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16042
L16041:
	movq	$0, -64(%rbp)
L16042:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16043
L16040:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16044
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16045
L16044:
	movq	$0, -56(%rbp)
L16045:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16043:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u32_C
	.private_extern _A__uShift_var_u32_C
_A__uShift_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16048
	cmpq	$63, -16(%rbp)
	jg	L16049
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16050
L16049:
	movq	$0, -48(%rbp)
L16050:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16051
L16048:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16052
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16053
L16052:
	movq	$0, -40(%rbp)
L16053:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16051:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u32_C
	.private_extern _A__uShift_param_u32_C
_A__uShift_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movl	-36(%rbp), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16056
	cmpq	$63, -16(%rbp)
	jg	L16057
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16058
L16057:
	movq	$0, -64(%rbp)
L16058:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16059
L16056:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16060
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16061
L16060:
	movq	$0, -56(%rbp)
L16061:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16059:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i8_I
	.private_extern _A__uShift_var_i8_I
_A__uShift_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16064
	cmpq	$63, -16(%rbp)
	jg	L16065
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16066
L16065:
	movq	$0, -48(%rbp)
L16066:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16067
L16064:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16068
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16069
L16068:
	movq	$0, -40(%rbp)
L16069:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16067:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i8_I
	.private_extern _A__uShift_param_i8_I
_A__uShift_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzbl	-33(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16072
	cmpq	$63, -16(%rbp)
	jg	L16073
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16074
L16073:
	movq	$0, -64(%rbp)
L16074:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16075
L16072:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16076
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16077
L16076:
	movq	$0, -56(%rbp)
L16077:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16075:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i8_C
	.private_extern _A__uShift_var_i8_C
_A__uShift_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16080
	cmpq	$63, -16(%rbp)
	jg	L16081
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16082
L16081:
	movq	$0, -48(%rbp)
L16082:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16083
L16080:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16084
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16085
L16084:
	movq	$0, -40(%rbp)
L16085:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16083:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i8_C
	.private_extern _A__uShift_param_i8_C
_A__uShift_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzbl	-33(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16088
	cmpq	$63, -16(%rbp)
	jg	L16089
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16090
L16089:
	movq	$0, -64(%rbp)
L16090:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16091
L16088:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16092
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16093
L16092:
	movq	$0, -56(%rbp)
L16093:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16091:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_L_I
	.private_extern _A__uShift_var_L_I
_A__uShift_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16096
	cmpq	$63, -16(%rbp)
	jg	L16097
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16098
L16097:
	movq	$0, -48(%rbp)
L16098:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16099
L16096:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16100
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16101
L16100:
	movq	$0, -40(%rbp)
L16101:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16099:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_L_I
	.private_extern _A__uShift_param_L_I
_A__uShift_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16104
	cmpq	$63, -16(%rbp)
	jg	L16105
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16106
L16105:
	movq	$0, -64(%rbp)
L16106:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16107
L16104:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16108
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16109
L16108:
	movq	$0, -56(%rbp)
L16109:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16107:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_L_C
	.private_extern _A__uShift_var_L_C
_A__uShift_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16112
	cmpq	$63, -16(%rbp)
	jg	L16113
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16114
L16113:
	movq	$0, -48(%rbp)
L16114:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16115
L16112:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16116
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16117
L16116:
	movq	$0, -40(%rbp)
L16117:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16115:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_L_C
	.private_extern _A__uShift_param_L_C
_A__uShift_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16120
	cmpq	$63, -16(%rbp)
	jg	L16121
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16122
L16121:
	movq	$0, -64(%rbp)
L16122:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16123
L16120:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16124
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16125
L16124:
	movq	$0, -56(%rbp)
L16125:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16123:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u64_I
	.private_extern _A__uShift_var_u64_I
_A__uShift_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16128
	cmpq	$63, -16(%rbp)
	jg	L16129
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16130
L16129:
	movq	$0, -48(%rbp)
L16130:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16131
L16128:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16132
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16133
L16132:
	movq	$0, -40(%rbp)
L16133:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16131:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u64_I
	.private_extern _A__uShift_param_u64_I
_A__uShift_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16136
	cmpq	$63, -16(%rbp)
	jg	L16137
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16138
L16137:
	movq	$0, -64(%rbp)
L16138:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16139
L16136:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16140
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16141
L16140:
	movq	$0, -56(%rbp)
L16141:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16139:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u64_C
	.private_extern _A__uShift_var_u64_C
_A__uShift_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16144
	cmpq	$63, -16(%rbp)
	jg	L16145
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16146
L16145:
	movq	$0, -48(%rbp)
L16146:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16147
L16144:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16148
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16149
L16148:
	movq	$0, -40(%rbp)
L16149:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16147:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u64_C
	.private_extern _A__uShift_param_u64_C
_A__uShift_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16152
	cmpq	$63, -16(%rbp)
	jg	L16153
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16154
L16153:
	movq	$0, -64(%rbp)
L16154:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16155
L16152:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16156
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16157
L16156:
	movq	$0, -56(%rbp)
L16157:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16155:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u16_I
	.private_extern _A__uShift_var_u16_I
_A__uShift_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16160
	cmpq	$63, -16(%rbp)
	jg	L16161
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16162
L16161:
	movq	$0, -48(%rbp)
L16162:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16163
L16160:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16164
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16165
L16164:
	movq	$0, -40(%rbp)
L16165:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16163:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u16_I
	.private_extern _A__uShift_param_u16_I
_A__uShift_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movswq	-34(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16168
	cmpq	$63, -16(%rbp)
	jg	L16169
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16170
L16169:
	movq	$0, -64(%rbp)
L16170:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16171
L16168:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16172
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16173
L16172:
	movq	$0, -56(%rbp)
L16173:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16171:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_u16_C
	.private_extern _A__uShift_var_u16_C
_A__uShift_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16176
	cmpq	$63, -16(%rbp)
	jg	L16177
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16178
L16177:
	movq	$0, -48(%rbp)
L16178:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16179
L16176:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16180
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16181
L16180:
	movq	$0, -40(%rbp)
L16181:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16179:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_u16_C
	.private_extern _A__uShift_param_u16_C
_A__uShift_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movswq	-34(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16184
	cmpq	$63, -16(%rbp)
	jg	L16185
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16186
L16185:
	movq	$0, -64(%rbp)
L16186:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16187
L16184:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16188
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16189
L16188:
	movq	$0, -56(%rbp)
L16189:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16187:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i32_I
	.private_extern _A__uShift_var_i32_I
_A__uShift_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16192
	cmpq	$63, -16(%rbp)
	jg	L16193
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16194
L16193:
	movq	$0, -48(%rbp)
L16194:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16195
L16192:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16196
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16197
L16196:
	movq	$0, -40(%rbp)
L16197:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16195:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i32_I
	.private_extern _A__uShift_param_i32_I
_A__uShift_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	mov	-36(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16200
	cmpq	$63, -16(%rbp)
	jg	L16201
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16202
L16201:
	movq	$0, -64(%rbp)
L16202:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16203
L16200:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16204
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16205
L16204:
	movq	$0, -56(%rbp)
L16205:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16203:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uShift_var_i32_C
	.private_extern _A__uShift_var_i32_C
_A__uShift_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16208
	cmpq	$63, -16(%rbp)
	jg	L16209
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16210
L16209:
	movq	$0, -48(%rbp)
L16210:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16211
L16208:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16212
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16213
L16212:
	movq	$0, -40(%rbp)
L16213:
	movq	-40(%rbp), %rax
	movq	%rax, -56(%rbp)
L16211:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uShift_param_i32_C
	.private_extern _A__uShift_param_i32_C
_A__uShift_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	mov	-36(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16216
	cmpq	$63, -16(%rbp)
	jg	L16217
	movq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	salq	%cl, %rax
	movq	%rax, -64(%rbp)
	jmp	L16218
L16217:
	movq	$0, -64(%rbp)
L16218:
	movq	-64(%rbp), %rax
	movq	%rax, -72(%rbp)
	jmp	L16219
L16216:
	movq	-16(%rbp), %rax
	negq	%rax
	cmpq	$63, %rax
	jg	L16220
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	negq	%rcx
	movq	-24(%rbp), %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16221
L16220:
	movq	$0, -56(%rbp)
L16221:
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
L16219:
	movq	-72(%rbp), %rax
	leave
	ret
.globl _A__uLeftRotate_var_i16_I
	.private_extern _A__uLeftRotate_var_i16_I
_A__uLeftRotate_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16224
	cmpq	$63, -16(%rbp)
	jle	L16225
L16224:
	movl	$229441, %edi
	call	__m3_fault
L16225:
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i16_I
	.private_extern _A__uLeftRotate_param_i16_I
_A__uLeftRotate_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16228
	cmpq	$63, -16(%rbp)
	jle	L16229
L16228:
	movl	$229473, %edi
	call	__m3_fault
L16229:
	movzwl	-18(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i16_C
	.private_extern _A__uLeftRotate_var_i16_C
_A__uLeftRotate_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16232
	movl	$229505, %edi
	call	__m3_fault
L16232:
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i16_C
	.private_extern _A__uLeftRotate_param_i16_C
_A__uLeftRotate_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16235
	movl	$229537, %edi
	call	__m3_fault
L16235:
	movzwl	-18(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_LC_I
	.private_extern _A__uLeftRotate_var_LC_I
_A__uLeftRotate_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16238
	cmpq	$63, -16(%rbp)
	jle	L16239
L16238:
	movl	$229569, %edi
	call	__m3_fault
L16239:
	movq	112+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_LC_I
	.private_extern _A__uLeftRotate_param_LC_I
_A__uLeftRotate_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16242
	cmpq	$63, -16(%rbp)
	jle	L16243
L16242:
	movl	$229601, %edi
	call	__m3_fault
L16243:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_LC_C
	.private_extern _A__uLeftRotate_var_LC_C
_A__uLeftRotate_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16246
	movl	$229633, %edi
	call	__m3_fault
L16246:
	movq	112+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_LC_C
	.private_extern _A__uLeftRotate_param_LC_C
_A__uLeftRotate_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16249
	movl	$229665, %edi
	call	__m3_fault
L16249:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i64_I
	.private_extern _A__uLeftRotate_var_i64_I
_A__uLeftRotate_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16252
	cmpq	$63, -16(%rbp)
	jle	L16253
L16252:
	movl	$229697, %edi
	call	__m3_fault
L16253:
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i64_I
	.private_extern _A__uLeftRotate_param_i64_I
_A__uLeftRotate_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16256
	cmpq	$63, -16(%rbp)
	jle	L16257
L16256:
	movl	$229729, %edi
	call	__m3_fault
L16257:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i64_C
	.private_extern _A__uLeftRotate_var_i64_C
_A__uLeftRotate_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16260
	movl	$229761, %edi
	call	__m3_fault
L16260:
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i64_C
	.private_extern _A__uLeftRotate_param_i64_C
_A__uLeftRotate_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16263
	movl	$229793, %edi
	call	__m3_fault
L16263:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_I_I
	.private_extern _A__uLeftRotate_var_I_I
_A__uLeftRotate_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16266
	cmpq	$63, -16(%rbp)
	jle	L16267
L16266:
	movl	$229825, %edi
	call	__m3_fault
L16267:
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_I_I
	.private_extern _A__uLeftRotate_param_I_I
_A__uLeftRotate_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16270
	cmpq	$63, -16(%rbp)
	jle	L16271
L16270:
	movl	$229857, %edi
	call	__m3_fault
L16271:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_I_C
	.private_extern _A__uLeftRotate_var_I_C
_A__uLeftRotate_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16274
	movl	$229889, %edi
	call	__m3_fault
L16274:
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_I_C
	.private_extern _A__uLeftRotate_param_I_C
_A__uLeftRotate_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16277
	movl	$229921, %edi
	call	__m3_fault
L16277:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u8_I
	.private_extern _A__uLeftRotate_var_u8_I
_A__uLeftRotate_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16280
	cmpq	$63, -16(%rbp)
	jle	L16281
L16280:
	movl	$229953, %edi
	call	__m3_fault
L16281:
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u8_I
	.private_extern _A__uLeftRotate_param_u8_I
_A__uLeftRotate_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16284
	cmpq	$63, -16(%rbp)
	jle	L16285
L16284:
	movl	$229985, %edi
	call	__m3_fault
L16285:
	movsbq	-17(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u8_C
	.private_extern _A__uLeftRotate_var_u8_C
_A__uLeftRotate_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16288
	movl	$230017, %edi
	call	__m3_fault
L16288:
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u8_C
	.private_extern _A__uLeftRotate_param_u8_C
_A__uLeftRotate_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16291
	movl	$230049, %edi
	call	__m3_fault
L16291:
	movsbq	-17(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_C_I
	.private_extern _A__uLeftRotate_var_C_I
_A__uLeftRotate_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16294
	cmpq	$63, -16(%rbp)
	jle	L16295
L16294:
	movl	$230081, %edi
	call	__m3_fault
L16295:
	movq	152+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_C_I
	.private_extern _A__uLeftRotate_param_C_I
_A__uLeftRotate_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16298
	cmpq	$63, -16(%rbp)
	jle	L16299
L16298:
	movl	$230113, %edi
	call	__m3_fault
L16299:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_C_C
	.private_extern _A__uLeftRotate_var_C_C
_A__uLeftRotate_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16302
	movl	$230145, %edi
	call	__m3_fault
L16302:
	movq	152+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_C_C
	.private_extern _A__uLeftRotate_param_C_C
_A__uLeftRotate_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16305
	movl	$230177, %edi
	call	__m3_fault
L16305:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u32_I
	.private_extern _A__uLeftRotate_var_u32_I
_A__uLeftRotate_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16308
	cmpq	$63, -16(%rbp)
	jle	L16309
L16308:
	movl	$230209, %edi
	call	__m3_fault
L16309:
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u32_I
	.private_extern _A__uLeftRotate_param_u32_I
_A__uLeftRotate_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16312
	cmpq	$63, -16(%rbp)
	jle	L16313
L16312:
	movl	$230241, %edi
	call	__m3_fault
L16313:
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u32_C
	.private_extern _A__uLeftRotate_var_u32_C
_A__uLeftRotate_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16316
	movl	$230273, %edi
	call	__m3_fault
L16316:
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u32_C
	.private_extern _A__uLeftRotate_param_u32_C
_A__uLeftRotate_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16319
	movl	$230305, %edi
	call	__m3_fault
L16319:
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i8_I
	.private_extern _A__uLeftRotate_var_i8_I
_A__uLeftRotate_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16322
	cmpq	$63, -16(%rbp)
	jle	L16323
L16322:
	movl	$230337, %edi
	call	__m3_fault
L16323:
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i8_I
	.private_extern _A__uLeftRotate_param_i8_I
_A__uLeftRotate_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16326
	cmpq	$63, -16(%rbp)
	jle	L16327
L16326:
	movl	$230369, %edi
	call	__m3_fault
L16327:
	movzbl	-17(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i8_C
	.private_extern _A__uLeftRotate_var_i8_C
_A__uLeftRotate_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16330
	movl	$230401, %edi
	call	__m3_fault
L16330:
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i8_C
	.private_extern _A__uLeftRotate_param_i8_C
_A__uLeftRotate_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16333
	movl	$230433, %edi
	call	__m3_fault
L16333:
	movzbl	-17(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_L_I
	.private_extern _A__uLeftRotate_var_L_I
_A__uLeftRotate_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16336
	cmpq	$63, -16(%rbp)
	jle	L16337
L16336:
	movl	$230465, %edi
	call	__m3_fault
L16337:
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_L_I
	.private_extern _A__uLeftRotate_param_L_I
_A__uLeftRotate_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16340
	cmpq	$63, -16(%rbp)
	jle	L16341
L16340:
	movl	$230497, %edi
	call	__m3_fault
L16341:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_L_C
	.private_extern _A__uLeftRotate_var_L_C
_A__uLeftRotate_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16344
	movl	$230529, %edi
	call	__m3_fault
L16344:
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_L_C
	.private_extern _A__uLeftRotate_param_L_C
_A__uLeftRotate_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16347
	movl	$230561, %edi
	call	__m3_fault
L16347:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u64_I
	.private_extern _A__uLeftRotate_var_u64_I
_A__uLeftRotate_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16350
	cmpq	$63, -16(%rbp)
	jle	L16351
L16350:
	movl	$230593, %edi
	call	__m3_fault
L16351:
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u64_I
	.private_extern _A__uLeftRotate_param_u64_I
_A__uLeftRotate_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16354
	cmpq	$63, -16(%rbp)
	jle	L16355
L16354:
	movl	$230625, %edi
	call	__m3_fault
L16355:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u64_C
	.private_extern _A__uLeftRotate_var_u64_C
_A__uLeftRotate_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16358
	movl	$230657, %edi
	call	__m3_fault
L16358:
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u64_C
	.private_extern _A__uLeftRotate_param_u64_C
_A__uLeftRotate_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16361
	movl	$230689, %edi
	call	__m3_fault
L16361:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u16_I
	.private_extern _A__uLeftRotate_var_u16_I
_A__uLeftRotate_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16364
	cmpq	$63, -16(%rbp)
	jle	L16365
L16364:
	movl	$230721, %edi
	call	__m3_fault
L16365:
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u16_I
	.private_extern _A__uLeftRotate_param_u16_I
_A__uLeftRotate_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16368
	cmpq	$63, -16(%rbp)
	jle	L16369
L16368:
	movl	$230753, %edi
	call	__m3_fault
L16369:
	movswq	-18(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_u16_C
	.private_extern _A__uLeftRotate_var_u16_C
_A__uLeftRotate_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16372
	movl	$230785, %edi
	call	__m3_fault
L16372:
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_u16_C
	.private_extern _A__uLeftRotate_param_u16_C
_A__uLeftRotate_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16375
	movl	$230817, %edi
	call	__m3_fault
L16375:
	movswq	-18(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i32_I
	.private_extern _A__uLeftRotate_var_i32_I
_A__uLeftRotate_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16378
	cmpq	$63, -16(%rbp)
	jle	L16379
L16378:
	movl	$230849, %edi
	call	__m3_fault
L16379:
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i32_I
	.private_extern _A__uLeftRotate_param_i32_I
_A__uLeftRotate_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16382
	cmpq	$63, -16(%rbp)
	jle	L16383
L16382:
	movl	$230881, %edi
	call	__m3_fault
L16383:
	mov	-20(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_var_i32_C
	.private_extern _A__uLeftRotate_var_i32_C
_A__uLeftRotate_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16386
	movl	$230913, %edi
	call	__m3_fault
L16386:
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uLeftRotate_param_i32_C
	.private_extern _A__uLeftRotate_param_i32_C
_A__uLeftRotate_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16389
	movl	$230945, %edi
	call	__m3_fault
L16389:
	mov	-20(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rolq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i16_I
	.private_extern _A__uRightRotate_var_i16_I
_A__uRightRotate_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16392
	cmpq	$63, -16(%rbp)
	jle	L16393
L16392:
	movl	$231073, %edi
	call	__m3_fault
L16393:
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i16_I
	.private_extern _A__uRightRotate_param_i16_I
_A__uRightRotate_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16396
	cmpq	$63, -16(%rbp)
	jle	L16397
L16396:
	movl	$231105, %edi
	call	__m3_fault
L16397:
	movzwl	-18(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i16_C
	.private_extern _A__uRightRotate_var_i16_C
_A__uRightRotate_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16400
	movl	$231137, %edi
	call	__m3_fault
L16400:
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i16_C
	.private_extern _A__uRightRotate_param_i16_C
_A__uRightRotate_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16403
	movl	$231169, %edi
	call	__m3_fault
L16403:
	movzwl	-18(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_LC_I
	.private_extern _A__uRightRotate_var_LC_I
_A__uRightRotate_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16406
	cmpq	$63, -16(%rbp)
	jle	L16407
L16406:
	movl	$231201, %edi
	call	__m3_fault
L16407:
	movq	112+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_LC_I
	.private_extern _A__uRightRotate_param_LC_I
_A__uRightRotate_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16410
	cmpq	$63, -16(%rbp)
	jle	L16411
L16410:
	movl	$231233, %edi
	call	__m3_fault
L16411:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_LC_C
	.private_extern _A__uRightRotate_var_LC_C
_A__uRightRotate_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16414
	movl	$231265, %edi
	call	__m3_fault
L16414:
	movq	112+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_LC_C
	.private_extern _A__uRightRotate_param_LC_C
_A__uRightRotate_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16417
	movl	$231297, %edi
	call	__m3_fault
L16417:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i64_I
	.private_extern _A__uRightRotate_var_i64_I
_A__uRightRotate_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16420
	cmpq	$63, -16(%rbp)
	jle	L16421
L16420:
	movl	$231329, %edi
	call	__m3_fault
L16421:
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i64_I
	.private_extern _A__uRightRotate_param_i64_I
_A__uRightRotate_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16424
	cmpq	$63, -16(%rbp)
	jle	L16425
L16424:
	movl	$231361, %edi
	call	__m3_fault
L16425:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i64_C
	.private_extern _A__uRightRotate_var_i64_C
_A__uRightRotate_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16428
	movl	$231393, %edi
	call	__m3_fault
L16428:
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i64_C
	.private_extern _A__uRightRotate_param_i64_C
_A__uRightRotate_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16431
	movl	$231425, %edi
	call	__m3_fault
L16431:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_I_I
	.private_extern _A__uRightRotate_var_I_I
_A__uRightRotate_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16434
	cmpq	$63, -16(%rbp)
	jle	L16435
L16434:
	movl	$231457, %edi
	call	__m3_fault
L16435:
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_I_I
	.private_extern _A__uRightRotate_param_I_I
_A__uRightRotate_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16438
	cmpq	$63, -16(%rbp)
	jle	L16439
L16438:
	movl	$231489, %edi
	call	__m3_fault
L16439:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_I_C
	.private_extern _A__uRightRotate_var_I_C
_A__uRightRotate_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16442
	movl	$231521, %edi
	call	__m3_fault
L16442:
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_I_C
	.private_extern _A__uRightRotate_param_I_C
_A__uRightRotate_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16445
	movl	$231553, %edi
	call	__m3_fault
L16445:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u8_I
	.private_extern _A__uRightRotate_var_u8_I
_A__uRightRotate_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16448
	cmpq	$63, -16(%rbp)
	jle	L16449
L16448:
	movl	$231585, %edi
	call	__m3_fault
L16449:
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u8_I
	.private_extern _A__uRightRotate_param_u8_I
_A__uRightRotate_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16452
	cmpq	$63, -16(%rbp)
	jle	L16453
L16452:
	movl	$231617, %edi
	call	__m3_fault
L16453:
	movsbq	-17(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u8_C
	.private_extern _A__uRightRotate_var_u8_C
_A__uRightRotate_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16456
	movl	$231649, %edi
	call	__m3_fault
L16456:
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u8_C
	.private_extern _A__uRightRotate_param_u8_C
_A__uRightRotate_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16459
	movl	$231681, %edi
	call	__m3_fault
L16459:
	movsbq	-17(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_C_I
	.private_extern _A__uRightRotate_var_C_I
_A__uRightRotate_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16462
	cmpq	$63, -16(%rbp)
	jle	L16463
L16462:
	movl	$231713, %edi
	call	__m3_fault
L16463:
	movq	152+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_C_I
	.private_extern _A__uRightRotate_param_C_I
_A__uRightRotate_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16466
	cmpq	$63, -16(%rbp)
	jle	L16467
L16466:
	movl	$231745, %edi
	call	__m3_fault
L16467:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_C_C
	.private_extern _A__uRightRotate_var_C_C
_A__uRightRotate_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16470
	movl	$231777, %edi
	call	__m3_fault
L16470:
	movq	152+_MM_A(%rip), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_C_C
	.private_extern _A__uRightRotate_param_C_C
_A__uRightRotate_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16473
	movl	$231809, %edi
	call	__m3_fault
L16473:
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u32_I
	.private_extern _A__uRightRotate_var_u32_I
_A__uRightRotate_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16476
	cmpq	$63, -16(%rbp)
	jle	L16477
L16476:
	movl	$231841, %edi
	call	__m3_fault
L16477:
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u32_I
	.private_extern _A__uRightRotate_param_u32_I
_A__uRightRotate_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16480
	cmpq	$63, -16(%rbp)
	jle	L16481
L16480:
	movl	$231873, %edi
	call	__m3_fault
L16481:
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u32_C
	.private_extern _A__uRightRotate_var_u32_C
_A__uRightRotate_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16484
	movl	$231905, %edi
	call	__m3_fault
L16484:
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u32_C
	.private_extern _A__uRightRotate_param_u32_C
_A__uRightRotate_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16487
	movl	$231937, %edi
	call	__m3_fault
L16487:
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i8_I
	.private_extern _A__uRightRotate_var_i8_I
_A__uRightRotate_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16490
	cmpq	$63, -16(%rbp)
	jle	L16491
L16490:
	movl	$231969, %edi
	call	__m3_fault
L16491:
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i8_I
	.private_extern _A__uRightRotate_param_i8_I
_A__uRightRotate_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16494
	cmpq	$63, -16(%rbp)
	jle	L16495
L16494:
	movl	$232001, %edi
	call	__m3_fault
L16495:
	movzbl	-17(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i8_C
	.private_extern _A__uRightRotate_var_i8_C
_A__uRightRotate_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16498
	movl	$232033, %edi
	call	__m3_fault
L16498:
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i8_C
	.private_extern _A__uRightRotate_param_i8_C
_A__uRightRotate_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movb	%dil, -17(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16501
	movl	$232065, %edi
	call	__m3_fault
L16501:
	movzbl	-17(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_L_I
	.private_extern _A__uRightRotate_var_L_I
_A__uRightRotate_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16504
	cmpq	$63, -16(%rbp)
	jle	L16505
L16504:
	movl	$232097, %edi
	call	__m3_fault
L16505:
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_L_I
	.private_extern _A__uRightRotate_param_L_I
_A__uRightRotate_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16508
	cmpq	$63, -16(%rbp)
	jle	L16509
L16508:
	movl	$232129, %edi
	call	__m3_fault
L16509:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_L_C
	.private_extern _A__uRightRotate_var_L_C
_A__uRightRotate_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16512
	movl	$232161, %edi
	call	__m3_fault
L16512:
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_L_C
	.private_extern _A__uRightRotate_param_L_C
_A__uRightRotate_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16515
	movl	$232193, %edi
	call	__m3_fault
L16515:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u64_I
	.private_extern _A__uRightRotate_var_u64_I
_A__uRightRotate_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16518
	cmpq	$63, -16(%rbp)
	jle	L16519
L16518:
	movl	$232225, %edi
	call	__m3_fault
L16519:
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u64_I
	.private_extern _A__uRightRotate_param_u64_I
_A__uRightRotate_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16522
	cmpq	$63, -16(%rbp)
	jle	L16523
L16522:
	movl	$232257, %edi
	call	__m3_fault
L16523:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u64_C
	.private_extern _A__uRightRotate_var_u64_C
_A__uRightRotate_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16526
	movl	$232289, %edi
	call	__m3_fault
L16526:
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u64_C
	.private_extern _A__uRightRotate_param_u64_C
_A__uRightRotate_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16529
	movl	$232321, %edi
	call	__m3_fault
L16529:
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u16_I
	.private_extern _A__uRightRotate_var_u16_I
_A__uRightRotate_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16532
	cmpq	$63, -16(%rbp)
	jle	L16533
L16532:
	movl	$232353, %edi
	call	__m3_fault
L16533:
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u16_I
	.private_extern _A__uRightRotate_param_u16_I
_A__uRightRotate_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16536
	cmpq	$63, -16(%rbp)
	jle	L16537
L16536:
	movl	$232385, %edi
	call	__m3_fault
L16537:
	movswq	-18(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_u16_C
	.private_extern _A__uRightRotate_var_u16_C
_A__uRightRotate_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16540
	movl	$232417, %edi
	call	__m3_fault
L16540:
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_u16_C
	.private_extern _A__uRightRotate_param_u16_C
_A__uRightRotate_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movw	%di, -18(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16543
	movl	$232449, %edi
	call	__m3_fault
L16543:
	movswq	-18(%rbp),%rdx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i32_I
	.private_extern _A__uRightRotate_var_i32_I
_A__uRightRotate_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16546
	cmpq	$63, -16(%rbp)
	jle	L16547
L16546:
	movl	$232481, %edi
	call	__m3_fault
L16547:
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i32_I
	.private_extern _A__uRightRotate_param_i32_I
_A__uRightRotate_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16550
	cmpq	$63, -16(%rbp)
	jle	L16551
L16550:
	movl	$232513, %edi
	call	__m3_fault
L16551:
	mov	-20(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_var_i32_C
	.private_extern _A__uRightRotate_var_i32_C
_A__uRightRotate_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16554
	movl	$232545, %edi
	call	__m3_fault
L16554:
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRightRotate_param_i32_C
	.private_extern _A__uRightRotate_param_i32_C
_A__uRightRotate_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -16(%rbp)
	cmpq	$63, -16(%rbp)
	jle	L16557
	movl	$232577, %edi
	call	__m3_fault
L16557:
	mov	-20(%rbp), %edx
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	%rdx, %rax
	rorq	%cl, %rax
	leave
	ret
.globl _A__uRotate_var_i16_I
	.private_extern _A__uRotate_var_i16_I
_A__uRotate_var_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16560
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16561
L16560:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16561:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i16_I
	.private_extern _A__uRotate_param_i16_I
_A__uRotate_param_i16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzwl	-34(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16564
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16565
L16564:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16565:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i16_C
	.private_extern _A__uRotate_var_i16_C
_A__uRotate_var_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16568
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16569
L16568:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16569:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i16_C
	.private_extern _A__uRotate_param_i16_C
_A__uRotate_param_i16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzwl	-34(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16572
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16573
L16572:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16573:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_LC_I
	.private_extern _A__uRotate_var_LC_I
_A__uRotate_var_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16576
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16577
L16576:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16577:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_LC_I
	.private_extern _A__uRotate_param_LC_I
_A__uRotate_param_LC_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16580
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16581
L16580:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16581:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_LC_C
	.private_extern _A__uRotate_var_LC_C
_A__uRotate_var_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16584
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16585
L16584:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16585:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_LC_C
	.private_extern _A__uRotate_param_LC_C
_A__uRotate_param_LC_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16588
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16589
L16588:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16589:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i64_I
	.private_extern _A__uRotate_var_i64_I
_A__uRotate_var_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16592
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16593
L16592:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16593:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i64_I
	.private_extern _A__uRotate_param_i64_I
_A__uRotate_param_i64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16596
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16597
L16596:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16597:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i64_C
	.private_extern _A__uRotate_var_i64_C
_A__uRotate_var_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16600
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16601
L16600:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16601:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i64_C
	.private_extern _A__uRotate_param_i64_C
_A__uRotate_param_i64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16604
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16605
L16604:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16605:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_I_I
	.private_extern _A__uRotate_var_I_I
_A__uRotate_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16608
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16609
L16608:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16609:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_I_I
	.private_extern _A__uRotate_param_I_I
_A__uRotate_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16612
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16613
L16612:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16613:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_I_C
	.private_extern _A__uRotate_var_I_C
_A__uRotate_var_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16616
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16617
L16616:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16617:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_I_C
	.private_extern _A__uRotate_param_I_C
_A__uRotate_param_I_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16620
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16621
L16620:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16621:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u8_I
	.private_extern _A__uRotate_var_u8_I
_A__uRotate_var_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16624
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16625
L16624:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16625:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u8_I
	.private_extern _A__uRotate_param_u8_I
_A__uRotate_param_u8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movsbq	-33(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16628
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16629
L16628:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16629:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u8_C
	.private_extern _A__uRotate_var_u8_C
_A__uRotate_var_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16632
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16633
L16632:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16633:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u8_C
	.private_extern _A__uRotate_param_u8_C
_A__uRotate_param_u8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movsbq	-33(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16636
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16637
L16636:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16637:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_C_I
	.private_extern _A__uRotate_var_C_I
_A__uRotate_var_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16640
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16641
L16640:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16641:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_C_I
	.private_extern _A__uRotate_param_C_I
_A__uRotate_param_C_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16644
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16645
L16644:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16645:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_C_C
	.private_extern _A__uRotate_var_C_C
_A__uRotate_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16648
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16649
L16648:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16649:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_C_C
	.private_extern _A__uRotate_param_C_C
_A__uRotate_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16652
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16653
L16652:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16653:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u32_I
	.private_extern _A__uRotate_var_u32_I
_A__uRotate_var_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16656
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16657
L16656:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16657:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u32_I
	.private_extern _A__uRotate_param_u32_I
_A__uRotate_param_u32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movl	-36(%rbp), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16660
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16661
L16660:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16661:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u32_C
	.private_extern _A__uRotate_var_u32_C
_A__uRotate_var_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16664
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16665
L16664:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16665:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u32_C
	.private_extern _A__uRotate_param_u32_C
_A__uRotate_param_u32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movl	-36(%rbp), %eax
	cltq
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16668
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16669
L16668:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16669:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i8_I
	.private_extern _A__uRotate_var_i8_I
_A__uRotate_var_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16672
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16673
L16672:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16673:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i8_I
	.private_extern _A__uRotate_param_i8_I
_A__uRotate_param_i8_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzbl	-33(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16676
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16677
L16676:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16677:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i8_C
	.private_extern _A__uRotate_var_i8_C
_A__uRotate_var_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16680
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16681
L16680:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16681:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i8_C
	.private_extern _A__uRotate_param_i8_C
_A__uRotate_param_i8_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	%dil, -33(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movzbl	-33(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16684
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16685
L16684:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16685:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_L_I
	.private_extern _A__uRotate_var_L_I
_A__uRotate_var_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16688
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16689
L16688:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16689:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_L_I
	.private_extern _A__uRotate_param_L_I
_A__uRotate_param_L_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16692
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16693
L16692:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16693:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_L_C
	.private_extern _A__uRotate_var_L_C
_A__uRotate_var_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16696
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16697
L16696:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16697:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_L_C
	.private_extern _A__uRotate_param_L_C
_A__uRotate_param_L_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16700
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16701
L16700:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16701:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u64_I
	.private_extern _A__uRotate_var_u64_I
_A__uRotate_var_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16704
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16705
L16704:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16705:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u64_I
	.private_extern _A__uRotate_param_u64_I
_A__uRotate_param_u64_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16708
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16709
L16708:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16709:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u64_C
	.private_extern _A__uRotate_var_u64_C
_A__uRotate_var_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16712
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16713
L16712:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16713:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u64_C
	.private_extern _A__uRotate_param_u64_C
_A__uRotate_param_u64_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16716
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16717
L16716:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16717:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u16_I
	.private_extern _A__uRotate_var_u16_I
_A__uRotate_var_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16720
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16721
L16720:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16721:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u16_I
	.private_extern _A__uRotate_param_u16_I
_A__uRotate_param_u16_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movswq	-34(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16724
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16725
L16724:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16725:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_u16_C
	.private_extern _A__uRotate_var_u16_C
_A__uRotate_var_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16728
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16729
L16728:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16729:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_u16_C
	.private_extern _A__uRotate_param_u16_C
_A__uRotate_param_u16_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movw	%di, -34(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	movswq	-34(%rbp),%rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16732
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16733
L16732:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16733:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i32_I
	.private_extern _A__uRotate_var_i32_I
_A__uRotate_var_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16736
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16737
L16736:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16737:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i32_I
	.private_extern _A__uRotate_param_i32_I
_A__uRotate_param_i32_I:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	mov	-36(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16740
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16741
L16740:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16741:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uRotate_var_i32_C
	.private_extern _A__uRotate_var_i32_C
_A__uRotate_var_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -16(%rbp)
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16744
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -40(%rbp)
	jmp	L16745
L16744:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -40(%rbp)
L16745:
	movq	-40(%rbp), %rax
	leave
	ret
.globl _A__uRotate_param_i32_C
	.private_extern _A__uRotate_param_i32_C
_A__uRotate_param_i32_C:
	pushq	%rbp
	movq	%rsp, %rbp
	movl	%edi, -36(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -16(%rbp)
	mov	-36(%rbp), %eax
	movq	%rax, -24(%rbp)
	cmpq	$0, -16(%rbp)
	js	L16748
	movq	-16(%rbp), %rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rolq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16749
L16748:
	movq	-16(%rbp), %rax
	negq	%rax
	movq	%rax, %rcx
	andl	$63, %ecx
	movq	-24(%rbp), %rax
	rorq	%cl, %rax
	movq	%rax, -56(%rbp)
L16749:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_i16_i16
	.private_extern _A__uInsert_var_i16_i16
_A__uInsert_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16752
	movl	$234337, %edi
	call	__m3_fault
L16752:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16753
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -32(%rbp)
	jmp	L16754
L16753:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16755
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %eax
	movq	%rax, -24(%rbp)
	jmp	L16756
L16755:
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %edx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16756:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16754:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_i16_i16
	.private_extern _A__uInsert_param_i16_i16
_A__uInsert_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16759
	movl	$234369, %edi
	call	__m3_fault
L16759:
	cmpq	$0, -40(%rbp)
	jne	L16760
	movzwl	-18(%rbp), %eax
	movq	%rax, -56(%rbp)
	jmp	L16761
L16760:
	cmpq	$64, -40(%rbp)
	jne	L16762
	movzwl	-20(%rbp), %eax
	movq	%rax, -48(%rbp)
	jmp	L16763
L16762:
	movzwl	-18(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movzwl	-20(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16763:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16761:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_LC_LC
	.private_extern _A__uInsert_var_LC_LC
_A__uInsert_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16766
	movl	$234401, %edi
	call	__m3_fault
L16766:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16767
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16768
L16767:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16769
	movq	112+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16770
L16769:
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	112+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16770:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16768:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_LC_LC
	.private_extern _A__uInsert_param_LC_LC
_A__uInsert_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16773
	movl	$234433, %edi
	call	__m3_fault
L16773:
	cmpq	$0, -48(%rbp)
	jne	L16774
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16775
L16774:
	cmpq	$64, -48(%rbp)
	jne	L16776
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16777
L16776:
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -56(%rbp)
L16777:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
L16775:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_i64_i64
	.private_extern _A__uInsert_var_i64_i64
_A__uInsert_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16780
	movl	$234465, %edi
	call	__m3_fault
L16780:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16781
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16782
L16781:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16783
	movq	128+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16784
L16783:
	movq	128+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	128+_MM_A(%rip), %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16784:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16782:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_i64_i64
	.private_extern _A__uInsert_param_i64_i64
_A__uInsert_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16787
	movl	$234497, %edi
	call	__m3_fault
L16787:
	cmpq	$0, -48(%rbp)
	je	L16788
	cmpq	$64, -48(%rbp)
	je	L16789
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rax, %rdx
	andq	-24(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rdx, %rax
	movq	%rax, -56(%rbp)
	jmp	L16790
L16789:
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
L16790:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16791
L16788:
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
L16791:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_I_I
	.private_extern _A__uInsert_var_I_I
_A__uInsert_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16794
	movl	$234529, %edi
	call	__m3_fault
L16794:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16795
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16796
L16795:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16797
	movq	136+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16798
L16797:
	movq	136+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	136+_MM_A(%rip), %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16798:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16796:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_I_I
	.private_extern _A__uInsert_param_I_I
_A__uInsert_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16801
	movl	$234561, %edi
	call	__m3_fault
L16801:
	cmpq	$0, -48(%rbp)
	je	L16802
	cmpq	$64, -48(%rbp)
	je	L16803
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rax, %rdx
	andq	-24(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rdx, %rax
	movq	%rax, -56(%rbp)
	jmp	L16804
L16803:
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
L16804:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16805
L16802:
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
L16805:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_u8_u8
	.private_extern _A__uInsert_var_u8_u8
_A__uInsert_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16808
	movl	$234593, %edi
	call	__m3_fault
L16808:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16809
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -32(%rbp)
	jmp	L16810
L16809:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16811
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rax
	movq	%rax, -24(%rbp)
	jmp	L16812
L16811:
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16812:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16810:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_u8_u8
	.private_extern _A__uInsert_param_u8_u8
_A__uInsert_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16815
	movl	$234625, %edi
	call	__m3_fault
L16815:
	cmpq	$0, -40(%rbp)
	jne	L16816
	movsbq	-17(%rbp),%rax
	movq	%rax, -56(%rbp)
	jmp	L16817
L16816:
	cmpq	$64, -40(%rbp)
	jne	L16818
	movsbq	-18(%rbp),%rax
	movq	%rax, -48(%rbp)
	jmp	L16819
L16818:
	movsbq	-17(%rbp),%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movsbq	-18(%rbp),%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16819:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16817:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_C_C
	.private_extern _A__uInsert_var_C_C
_A__uInsert_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16822
	movl	$234657, %edi
	call	__m3_fault
L16822:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16823
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16824
L16823:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16825
	movq	152+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16826
L16825:
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	152+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16826:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16824:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_C_C
	.private_extern _A__uInsert_param_C_C
_A__uInsert_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16829
	movl	$234689, %edi
	call	__m3_fault
L16829:
	cmpq	$0, -48(%rbp)
	jne	L16830
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16831
L16830:
	cmpq	$64, -48(%rbp)
	jne	L16832
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	jmp	L16833
L16832:
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	-24(%rbp), %rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	-32(%rbp), %rax
	andq	%rdx, %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -56(%rbp)
L16833:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
L16831:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_u32_u32
	.private_extern _A__uInsert_var_u32_u32
_A__uInsert_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16836
	movl	$234721, %edi
	call	__m3_fault
L16836:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16837
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -32(%rbp)
	jmp	L16838
L16837:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16839
	movl	164+_MM_A(%rip), %eax
	cltq
	movq	%rax, -24(%rbp)
	jmp	L16840
L16839:
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16840:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16838:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_u32_u32
	.private_extern _A__uInsert_param_u32_u32
_A__uInsert_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16843
	movl	$234753, %edi
	call	__m3_fault
L16843:
	cmpq	$0, -40(%rbp)
	jne	L16844
	movl	-20(%rbp), %eax
	cltq
	movq	%rax, -56(%rbp)
	jmp	L16845
L16844:
	cmpq	$64, -40(%rbp)
	jne	L16846
	movl	-24(%rbp), %eax
	cltq
	movq	%rax, -48(%rbp)
	jmp	L16847
L16846:
	movl	-20(%rbp), %eax
	movslq	%eax,%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movl	-24(%rbp), %eax
	movslq	%eax,%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16847:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16845:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_i8_i8
	.private_extern _A__uInsert_var_i8_i8
_A__uInsert_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16850
	movl	$234785, %edi
	call	__m3_fault
L16850:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16851
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -32(%rbp)
	jmp	L16852
L16851:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16853
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %eax
	movq	%rax, -24(%rbp)
	jmp	L16854
L16853:
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %edx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16854:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16852:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_i8_i8
	.private_extern _A__uInsert_param_i8_i8
_A__uInsert_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16857
	movl	$234817, %edi
	call	__m3_fault
L16857:
	cmpq	$0, -40(%rbp)
	jne	L16858
	movzbl	-17(%rbp), %eax
	movq	%rax, -56(%rbp)
	jmp	L16859
L16858:
	cmpq	$64, -40(%rbp)
	jne	L16860
	movzbl	-18(%rbp), %eax
	movq	%rax, -48(%rbp)
	jmp	L16861
L16860:
	movzbl	-17(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movzbl	-18(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16861:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16859:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_L_L
	.private_extern _A__uInsert_var_L_L
_A__uInsert_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16864
	movl	$234849, %edi
	call	__m3_fault
L16864:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16865
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16866
L16865:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16867
	movq	176+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16868
L16867:
	movq	176+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	176+_MM_A(%rip), %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16868:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16866:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_L_L
	.private_extern _A__uInsert_param_L_L
_A__uInsert_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16871
	movl	$234881, %edi
	call	__m3_fault
L16871:
	cmpq	$0, -48(%rbp)
	je	L16872
	cmpq	$64, -48(%rbp)
	je	L16873
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rax, %rdx
	andq	-24(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rdx, %rax
	movq	%rax, -56(%rbp)
	jmp	L16874
L16873:
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
L16874:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16875
L16872:
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
L16875:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_u64_u64
	.private_extern _A__uInsert_var_u64_u64
_A__uInsert_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16878
	movl	$234913, %edi
	call	__m3_fault
L16878:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16879
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -32(%rbp)
	jmp	L16880
L16879:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16881
	movq	184+_MM_A(%rip), %rax
	movq	%rax, -24(%rbp)
	jmp	L16882
L16881:
	movq	184+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movq	184+_MM_A(%rip), %rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16882:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16880:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_u64_u64
	.private_extern _A__uInsert_param_u64_u64
_A__uInsert_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16885
	movl	$234945, %edi
	call	__m3_fault
L16885:
	cmpq	$0, -48(%rbp)
	je	L16886
	cmpq	$64, -48(%rbp)
	je	L16887
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rax, %rdx
	andq	-24(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx
	salq	%cl, %rax
	orq	%rdx, %rax
	movq	%rax, -56(%rbp)
	jmp	L16888
L16887:
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
L16888:
	movq	-56(%rbp), %rax
	movq	%rax, -64(%rbp)
	jmp	L16889
L16886:
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
L16889:
	movq	-64(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_u16_u16
	.private_extern _A__uInsert_var_u16_u16
_A__uInsert_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16892
	movl	$234977, %edi
	call	__m3_fault
L16892:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16893
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -32(%rbp)
	jmp	L16894
L16893:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16895
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rax
	movq	%rax, -24(%rbp)
	jmp	L16896
L16895:
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rdx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16896:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16894:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_u16_u16
	.private_extern _A__uInsert_param_u16_u16
_A__uInsert_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16899
	movl	$235009, %edi
	call	__m3_fault
L16899:
	cmpq	$0, -40(%rbp)
	jne	L16900
	movswq	-18(%rbp),%rax
	movq	%rax, -56(%rbp)
	jmp	L16901
L16900:
	cmpq	$64, -40(%rbp)
	jne	L16902
	movswq	-20(%rbp),%rax
	movq	%rax, -48(%rbp)
	jmp	L16903
L16902:
	movswq	-18(%rbp),%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	movswq	-20(%rbp),%rdx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16903:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16901:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uInsert_var_i32_i32
	.private_extern _A__uInsert_var_i32_i32
_A__uInsert_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16906
	movl	$235041, %edi
	call	__m3_fault
L16906:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	jne	L16907
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -32(%rbp)
	jmp	L16908
L16907:
	movq	208+_MM_A(%rip), %rax
	cmpq	$64, %rax
	jne	L16909
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %eax
	movq	%rax, -24(%rbp)
	jmp	L16910
L16909:
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	movq	%rax, %rdx
	notq	%rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rsi
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %edx
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rax, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rcx
	movq	%rdx, %rax
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -24(%rbp)
L16910:
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
L16908:
	movq	-32(%rbp), %rax
	leave
	ret
.globl _A__uInsert_param_i32_i32
	.private_extern _A__uInsert_param_i32_i32
_A__uInsert_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16913
	movl	$235073, %edi
	call	__m3_fault
L16913:
	cmpq	$0, -40(%rbp)
	jne	L16914
	mov	-20(%rbp), %eax
	movq	%rax, -56(%rbp)
	jmp	L16915
L16914:
	cmpq	$64, -40(%rbp)
	jne	L16916
	mov	-24(%rbp), %eax
	movq	%rax, -48(%rbp)
	jmp	L16917
L16916:
	mov	-20(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	notq	%rax
	movq	%rdx, %rsi
	andq	%rax, %rsi
	mov	-24(%rbp), %edx
	movq	-40(%rbp), %rcx
	movq	$-1, %rax
	salq	%cl, %rax
	notq	%rax
	andq	%rdx, %rax
	movq	-32(%rbp), %rcx
	salq	%cl, %rax
	orq	%rsi, %rax
	movq	%rax, -48(%rbp)
L16917:
	movq	-48(%rbp), %rax
	movq	%rax, -56(%rbp)
L16915:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_i16_i16
	.private_extern _A__uExtract_var_i16_i16
_A__uExtract_var_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16920
	movl	$235201, %edi
	call	__m3_fault
L16920:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16921
	movzwl	104+_MM_A(%rip), %eax
	movzwl	%ax, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16922
L16921:
	movq	$0, -24(%rbp)
L16922:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_i16_i16
	.private_extern _A__uExtract_param_i16_i16
_A__uExtract_param_i16_i16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16925
	movl	$235233, %edi
	call	__m3_fault
L16925:
	cmpq	$0, -40(%rbp)
	je	L16926
	movzwl	-18(%rbp), %esi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16927
L16926:
	movq	$0, -48(%rbp)
L16927:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_LC_LC
	.private_extern _A__uExtract_var_LC_LC
_A__uExtract_var_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16930
	movl	$235265, %edi
	call	__m3_fault
L16930:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16931
	movq	112+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16932
L16931:
	movq	$0, -24(%rbp)
L16932:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_LC_LC
	.private_extern _A__uExtract_param_LC_LC
_A__uExtract_param_LC_LC:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16935
	movl	$235297, %edi
	call	__m3_fault
L16935:
	cmpq	$0, -48(%rbp)
	je	L16936
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16937
L16936:
	movq	$0, -56(%rbp)
L16937:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_i64_i64
	.private_extern _A__uExtract_var_i64_i64
_A__uExtract_var_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16940
	movl	$235329, %edi
	call	__m3_fault
L16940:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16941
	movq	128+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16942
L16941:
	movq	$0, -24(%rbp)
L16942:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_i64_i64
	.private_extern _A__uExtract_param_i64_i64
_A__uExtract_param_i64_i64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16945
	movl	$235361, %edi
	call	__m3_fault
L16945:
	cmpq	$0, -48(%rbp)
	je	L16946
	movq	-24(%rbp), %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16947
L16946:
	movq	$0, -56(%rbp)
L16947:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_I_I
	.private_extern _A__uExtract_var_I_I
_A__uExtract_var_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16950
	movl	$235393, %edi
	call	__m3_fault
L16950:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16951
	movq	136+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16952
L16951:
	movq	$0, -24(%rbp)
L16952:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_I_I
	.private_extern _A__uExtract_param_I_I
_A__uExtract_param_I_I:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16955
	movl	$235425, %edi
	call	__m3_fault
L16955:
	cmpq	$0, -48(%rbp)
	je	L16956
	movq	-24(%rbp), %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16957
L16956:
	movq	$0, -56(%rbp)
L16957:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_u8_u8
	.private_extern _A__uExtract_var_u8_u8
_A__uExtract_var_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16960
	movl	$235457, %edi
	call	__m3_fault
L16960:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16961
	movzbl	144+_MM_A(%rip), %eax
	movsbq	%al,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16962
L16961:
	movq	$0, -24(%rbp)
L16962:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_u8_u8
	.private_extern _A__uExtract_param_u8_u8
_A__uExtract_param_u8_u8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16965
	movl	$235489, %edi
	call	__m3_fault
L16965:
	cmpq	$0, -40(%rbp)
	je	L16966
	movsbq	-17(%rbp),%rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16967
L16966:
	movq	$0, -48(%rbp)
L16967:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_C_C
	.private_extern _A__uExtract_var_C_C
_A__uExtract_var_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16970
	movl	$235521, %edi
	call	__m3_fault
L16970:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16971
	movq	152+_MM_A(%rip), %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16972
L16971:
	movq	$0, -24(%rbp)
L16972:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_C_C
	.private_extern _A__uExtract_param_C_C
_A__uExtract_param_C_C:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16975
	movl	$235553, %edi
	call	__m3_fault
L16975:
	cmpq	$0, -48(%rbp)
	je	L16976
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	movq	-24(%rbp), %rax
	movq	%rax, %rsi
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L16977
L16976:
	movq	$0, -56(%rbp)
L16977:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_u32_u32
	.private_extern _A__uExtract_var_u32_u32
_A__uExtract_var_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16980
	movl	$235585, %edi
	call	__m3_fault
L16980:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16981
	movl	164+_MM_A(%rip), %eax
	movslq	%eax,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16982
L16981:
	movq	$0, -24(%rbp)
L16982:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_u32_u32
	.private_extern _A__uExtract_param_u32_u32
_A__uExtract_param_u32_u32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16985
	movl	$235617, %edi
	call	__m3_fault
L16985:
	cmpq	$0, -40(%rbp)
	je	L16986
	movl	-20(%rbp), %eax
	movslq	%eax,%rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16987
L16986:
	movq	$0, -48(%rbp)
L16987:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_i8_i8
	.private_extern _A__uExtract_var_i8_i8
_A__uExtract_var_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16990
	movl	$235649, %edi
	call	__m3_fault
L16990:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L16991
	movzbl	168+_MM_A(%rip), %eax
	movzbl	%al, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L16992
L16991:
	movq	$0, -24(%rbp)
L16992:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_i8_i8
	.private_extern _A__uExtract_param_i8_i8
_A__uExtract_param_i8_i8:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movb	%dil, -17(%rbp)
	movb	%sil, -18(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L16995
	movl	$235681, %edi
	call	__m3_fault
L16995:
	cmpq	$0, -40(%rbp)
	je	L16996
	movzbl	-17(%rbp), %esi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L16997
L16996:
	movq	$0, -48(%rbp)
L16997:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_L_L
	.private_extern _A__uExtract_var_L_L
_A__uExtract_var_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17000
	movl	$235713, %edi
	call	__m3_fault
L17000:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L17001
	movq	176+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L17002
L17001:
	movq	$0, -24(%rbp)
L17002:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_L_L
	.private_extern _A__uExtract_param_L_L
_A__uExtract_param_L_L:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17005
	movl	$235745, %edi
	call	__m3_fault
L17005:
	cmpq	$0, -48(%rbp)
	je	L17006
	movq	-24(%rbp), %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L17007
L17006:
	movq	$0, -56(%rbp)
L17007:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_u64_u64
	.private_extern _A__uExtract_var_u64_u64
_A__uExtract_var_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17010
	movl	$235777, %edi
	call	__m3_fault
L17010:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L17011
	movq	184+_MM_A(%rip), %rax
	movq	%rax, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L17012
L17011:
	movq	$0, -24(%rbp)
L17012:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_u64_u64
	.private_extern _A__uExtract_param_u64_u64
_A__uExtract_param_u64_u64:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$64, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	%rcx, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	-48(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17015
	movl	$235809, %edi
	call	__m3_fault
L17015:
	cmpq	$0, -48(%rbp)
	je	L17016
	movq	-24(%rbp), %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-40(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-48(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -56(%rbp)
	jmp	L17017
L17016:
	movq	$0, -56(%rbp)
L17017:
	movq	-56(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_u16_u16
	.private_extern _A__uExtract_var_u16_u16
_A__uExtract_var_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17020
	movl	$235841, %edi
	call	__m3_fault
L17020:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L17021
	movzwl	192+_MM_A(%rip), %eax
	movswq	%ax,%rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L17022
L17021:
	movq	$0, -24(%rbp)
L17022:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_u16_u16
	.private_extern _A__uExtract_param_u16_u16
_A__uExtract_param_u16_u16:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movw	%di, -18(%rbp)
	movw	%si, -20(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17025
	movl	$235873, %edi
	call	__m3_fault
L17025:
	cmpq	$0, -40(%rbp)
	je	L17026
	movswq	-18(%rbp),%rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L17027
L17026:
	movq	$0, -48(%rbp)
L17027:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A__uExtract_var_i32_i32
	.private_extern _A__uExtract_var_i32_i32
_A__uExtract_var_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$32, %rsp
	movq	200+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movq	208+_MM_A(%rip), %rax
	leaq	(%rdx,%rax), %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17030
	movl	$235905, %edi
	call	__m3_fault
L17030:
	movq	208+_MM_A(%rip), %rax
	testq	%rax, %rax
	je	L17031
	movl	196+_MM_A(%rip), %eax
	mov	%eax, %esi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	200+_MM_A(%rip), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	208+_MM_A(%rip), %rax
	movq	%rax, %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -24(%rbp)
	jmp	L17032
L17031:
	movq	$0, -24(%rbp)
L17032:
	movq	-24(%rbp), %rax
	leave
	ret
.globl _A__uExtract_param_i32_i32
	.private_extern _A__uExtract_param_i32_i32
_A__uExtract_param_i32_i32:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$48, %rsp
	movl	%edi, -20(%rbp)
	movl	%esi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, -16(%rbp)
	cmpq	$64, -16(%rbp)
	jle	L17035
	movl	$235937, %edi
	call	__m3_fault
L17035:
	cmpq	$0, -40(%rbp)
	je	L17036
	mov	-20(%rbp), %esi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rcx, %rdx
	movq	-32(%rbp), %rax
	movq	%rdx, %rcx
	subq	%rax, %rcx
	salq	%cl, %rsi
	movq	-40(%rbp), %rdx
	movl	$64, %eax
	movq	%rax, %rcx
	subq	%rdx, %rcx
	movq	%rsi, %rax
	shrq	%cl, %rax
	movq	%rax, -48(%rbp)
	jmp	L17037
L17036:
	movq	$0, -48(%rbp)
L17037:
	movq	-48(%rbp), %rax
	leave
	ret
.globl _A_M3
_A_M3:
	pushq	%rbp
	movq	%rsp, %rbp
	movq	%rdi, -8(%rbp)
	leaq	_MM_A(%rip), %rax
	leave
	ret
__m3_fault:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rsi
	leaq	_MM_A(%rip), %rdi
	call	_RTHooks__ReportFault
	leave
	ret
	.const_data
	.align 5
_L_1:
	.ascii "A_M3"
	.space 1
	.ascii "uExtract_param_i32_i32"
	.space 1
	.ascii "uExtract_var_i32_i32"
	.space 1
	.ascii "uExtract_param_u16_u16"
	.space 1
	.ascii "uExtract_var_u16_u16"
	.space 1
	.ascii "uExtract_param_u64_u64"
	.space 1
	.ascii "uExtract_var_u64_u64"
	.space 1
	.ascii "uExtract_param_L_L"
	.space 1
	.ascii "uExtract_var_L_L"
	.space 1
	.ascii "uExtract_param_i8_i8"
	.space 1
	.ascii "uExtract_var_i8_i8"
	.space 1
	.ascii "uExtract_param_u32_u32"
	.space 1
	.ascii "uExtract_var_u32_u32"
	.space 1
	.ascii "uExtract_param_C_C"
	.space 1
	.ascii "uExtract_var_C_C"
	.space 1
	.ascii "uExtract_param_u8_u8"
	.space 1
	.ascii "uExtract_var_u8_u8"
	.space 1
	.ascii "uExtract_param_I_I"
	.space 1
	.ascii "uExtract_var_I_I"
	.space 1
	.ascii "uExtract_param_i64_i64"
	.space 1
	.ascii "uExtract_var_i64_i64"
	.space 1
	.ascii "uExtract_param_LC_LC"
	.space 1
	.ascii "uExtract_var_LC_LC"
	.space 1
	.ascii "uExtract_param_i16_i16"
	.space 1
	.ascii "uExtract_var_i16_i16"
	.space 1
	.ascii "uInsert_param_i32_i32"
	.space 1
	.ascii "uInsert_var_i32_i32"
	.space 1
	.ascii "uInsert_param_u16_u16"
	.space 1
	.ascii "uInsert_var_u16_u16"
	.space 1
	.ascii "uInsert_param_u64_u64"
	.space 1
	.ascii "uInsert_var_u64_u64"
	.space 1
	.ascii "uInsert_param_L_L"
	.space 1
	.ascii "uInsert_var_L_L"
	.space 1
	.ascii "uInsert_param_i8_i8"
	.space 1
	.ascii "uInsert_var_i8_i8"
	.space 1
	.ascii "uInsert_param_u32_u32"
	.space 1
	.ascii "uInsert_var_u32_u32"
	.space 1
	.ascii "uInsert_param_C_C"
	.space 1
	.ascii "uInsert_var_C_C"
	.space 1
	.ascii "uInsert_param_u8_u8"
	.space 1
	.ascii "uInsert_var_u8_u8"
	.space 1
	.ascii "uInsert_param_I_I"
	.space 1
	.ascii "uInsert_var_I_I"
	.space 1
	.ascii "uInsert_param_i64_i64"
	.space 1
	.ascii "uInsert_var_i64_i64"
	.space 1
	.ascii "uInsert_param_LC_LC"
	.space 1
	.ascii "uInsert_var_LC_LC"
	.space 1
	.ascii "uInsert_param_i16_i16"
	.space 1
	.ascii "uInsert_var_i16_i16"
	.space 1
	.ascii "uRotate_param_i32_C"
	.space 1
	.ascii "uRotate_var_i32_C"
	.space 1
	.ascii "uRotate_param_i32_I"
	.space 1
	.ascii "uRotate_var_i32_I"
	.space 1
	.ascii "uRotate_param_u16_C"
	.space 1
	.ascii "uRotate_var_u16_C"
	.space 1
	.ascii "uRotate_param_u16_I"
	.space 1
	.ascii "uRotate_var_u16_I"
	.space 1
	.ascii "uRotate_param_u64_C"
	.space 1
	.ascii "uRotate_var_u64_C"
	.space 1
	.ascii "uRotate_param_u64_I"
	.space 1
	.ascii "uRotate_var_u64_I"
	.space 1
	.ascii "uRotate_param_L_C"
	.space 1
	.ascii "uRotate_var_L_C"
	.space 1
	.ascii "uRotate_param_L_I"
	.space 1
	.ascii "uRotate_var_L_I"
	.space 1
	.ascii "uRotate_param_i8_C"
	.space 1
	.ascii "uRotate_var_i8_C"
	.space 1
	.ascii "uRotate_param_i8_I"
	.space 1
	.ascii "uRotate_var_i8_I"
	.space 1
	.ascii "uRotate_param_u32_C"
	.space 1
	.ascii "uRotate_var_u32_C"
	.space 1
	.ascii "uRotate_param_u32_I"
	.space 1
	.ascii "uRotate_var_u32_I"
	.space 1
	.ascii "uRotate_param_C_C"
	.space 1
	.ascii "uRotate_var_C_C"
	.space 1
	.ascii "uRotate_param_C_I"
	.space 1
	.ascii "uRotate_var_C_I"
	.space 1
	.ascii "uRotate_param_u8_C"
	.space 1
	.ascii "uRotate_var_u8_C"
	.space 1
	.ascii "uRotate_param_u8_I"
	.space 1
	.ascii "uRotate_var_u8_I"
	.space 1
	.ascii "uRotate_param_I_C"
	.space 1
	.ascii "uRotate_var_I_C"
	.space 1
	.ascii "uRotate_param_I_I"
	.space 1
	.ascii "uRotate_var_I_I"
	.space 1
	.ascii "uRotate_param_i64_C"
	.space 1
	.ascii "uRotate_var_i64_C"
	.space 1
	.ascii "uRotate_param_i64_I"
	.space 1
	.ascii "uRotate_var_i64_I"
	.space 1
	.ascii "uRotate_param_LC_C"
	.space 1
	.ascii "uRotate_var_LC_C"
	.space 1
	.ascii "uRotate_param_LC_I"
	.space 1
	.ascii "uRotate_var_LC_I"
	.space 1
	.ascii "uRotate_param_i16_C"
	.space 1
	.ascii "uRotate_var_i16_C"
	.space 1
	.ascii "uRotate_param_i16_I"
	.space 1
	.ascii "uRotate_var_i16_I"
	.space 1
	.ascii "uRightRotate_param_i32_C"
	.space 1
	.ascii "uRightRotate_var_i32_C"
	.space 1
	.ascii "uRightRotate_param_i32_I"
	.space 1
	.ascii "uRightRotate_var_i32_I"
	.space 1
	.ascii "uRightRotate_param_u16_C"
	.space 1
	.ascii "uRightRotate_var_u16_C"
	.space 1
	.ascii "uRightRotate_param_u16_I"
	.space 1
	.ascii "uRightRotate_var_u16_I"
	.space 1
	.ascii "uRightRotate_param_u64_C"
	.space 1
	.ascii "uRightRotate_var_u64_C"
	.space 1
	.ascii "uRightRotate_param_u64_I"
	.space 1
	.ascii "uRightRotate_var_u64_I"
	.space 1
	.ascii "uRightRotate_param_L_C"
	.space 1
	.ascii "uRightRotate_var_L_C"
	.space 1
	.ascii "uRightRotate_param_L_I"
	.space 1
	.ascii "uRightRotate_var_L_I"
	.space 1
	.ascii "uRightRotate_param_i8_C"
	.space 1
	.ascii "uRightRotate_var_i8_C"
	.space 1
	.ascii "uRightRotate_param_i8_I"
	.space 1
	.ascii "uRightRotate_var_i8_I"
	.space 1
	.ascii "uRightRotate_param_u32_C"
	.space 1
	.ascii "uRightRotate_var_u32_C"
	.space 1
	.ascii "uRightRotate_param_u32_I"
	.space 1
	.ascii "uRightRotate_var_u32_I"
	.space 1
	.ascii "uRightRotate_param_C_C"
	.space 1
	.ascii "uRightRotate_var_C_C"
	.space 1
	.ascii "uRightRotate_param_C_I"
	.space 1
	.ascii "uRightRotate_var_C_I"
	.space 1
	.ascii "uRightRotate_param_u8_C"
	.space 1
	.ascii "uRightRotate_var_u8_C"
	.space 1
	.ascii "uRightRotate_param_u8_I"
	.space 1
	.ascii "uRightRotate_var_u8_I"
	.space 1
	.ascii "uRightRotate_param_I_C"
	.space 1
	.ascii "uRightRotate_var_I_C"
	.space 1
	.ascii "uRightRotate_param_I_I"
	.space 1
	.ascii "uRightRotate_var_I_I"
	.space 1
	.ascii "uRightRotate_param_i64_C"
	.space 1
	.ascii "uRightRotate_var_i64_C"
	.space 1
	.ascii "uRightRotate_param_i64_I"
	.space 1
	.ascii "uRightRotate_var_i64_I"
	.space 1
	.ascii "uRightRotate_param_LC_C"
	.space 1
	.ascii "uRightRotate_var_LC_C"
	.space 1
	.ascii "uRightRotate_param_LC_I"
	.space 1
	.ascii "uRightRotate_var_LC_I"
	.space 1
	.ascii "uRightRotate_param_i16_C"
	.space 1
	.ascii "uRightRotate_var_i16_C"
	.space 1
	.ascii "uRightRotate_param_i16_I"
	.space 1
	.ascii "uRightRotate_var_i16_I"
	.space 1
	.ascii "uLeftRotate_param_i32_C"
	.space 1
	.ascii "uLeftRotate_var_i32_C"
	.space 1
	.ascii "uLeftRotate_param_i32_I"
	.space 1
	.ascii "uLeftRotate_var_i32_I"
	.space 1
	.ascii "uLeftRotate_param_u16_C"
	.space 1
	.ascii "uLeftRotate_var_u16_C"
	.space 1
	.ascii "uLeftRotate_param_u16_I"
	.space 1
	.ascii "uLeftRotate_var_u16_I"
	.space 1
	.ascii "uLeftRotate_param_u64_C"
	.space 1
	.ascii "uLeftRotate_var_u64_C"
	.space 1
	.ascii "uLeftRotate_param_u64_I"
	.space 1
	.ascii "uLeftRotate_var_u64_I"
	.space 1
	.ascii "uLeftRotate_param_L_C"
	.space 1
	.ascii "uLeftRotate_var_L_C"
	.space 1
	.ascii "uLeftRotate_param_L_I"
	.space 1
	.ascii "uLeftRotate_var_L_I"
	.space 1
	.ascii "uLeftRotate_param_i8_C"
	.space 1
	.ascii "uLeftRotate_var_i8_C"
	.space 1
	.ascii "uLeftRotate_param_i8_I"
	.space 1
	.ascii "uLeftRotate_var_i8_I"
	.space 1
	.ascii "uLeftRotate_param_u32_C"
	.space 1
	.ascii "uLeftRotate_var_u32_C"
	.space 1
	.ascii "uLeftRotate_param_u32_I"
	.space 1
	.ascii "uLeftRotate_var_u32_I"
	.space 1
	.ascii "uLeftRotate_param_C_C"
	.space 1
	.ascii "uLeftRotate_var_C_C"
	.space 1
	.ascii "uLeftRotate_param_C_I"
	.space 1
	.ascii "uLeftRotate_var_C_I"
	.space 1
	.ascii "uLeftRotate_param_u8_C"
	.space 1
	.ascii "uLeftRotate_var_u8_C"
	.space 1
	.ascii "uLeftRotate_param_u8_I"
	.space 1
	.ascii "uLeftRotate_var_u8_I"
	.space 1
	.ascii "uLeftRotate_param_I_C"
	.space 1
	.ascii "uLeftRotate_var_I_C"
	.space 1
	.ascii "uLeftRotate_param_I_I"
	.space 1
	.ascii "uLeftRotate_var_I_I"
	.space 1
	.ascii "uLeftRotate_param_i64_C"
	.space 1
	.ascii "uLeftRotate_var_i64_C"
	.space 1
	.ascii "uLeftRotate_param_i64_I"
	.space 1
	.ascii "uLeftRotate_var_i64_I"
	.space 1
	.ascii "uLeftRotate_param_LC_C"
	.space 1
	.ascii "uLeftRotate_var_LC_C"
	.space 1
	.ascii "uLeftRotate_param_LC_I"
	.space 1
	.ascii "uLeftRotate_var_LC_I"
	.space 1
	.ascii "uLeftRotate_param_i16_C"
	.space 1
	.ascii "uLeftRotate_var_i16_C"
	.space 1
	.ascii "uLeftRotate_param_i16_I"
	.space 1
	.ascii "uLeftRotate_var_i16_I"
	.space 1
	.ascii "uShift_param_i32_C"
	.space 1
	.ascii "uShift_var_i32_C"
	.space 1
	.ascii "uShift_param_i32_I"
	.space 1
	.ascii "uShift_var_i32_I"
	.space 1
	.ascii "uShift_param_u16_C"
	.space 1
	.ascii "uShift_var_u16_C"
	.space 1
	.ascii "uShift_param_u16_I"
	.space 1
	.ascii "uShift_var_u16_I"
	.space 1
	.ascii "uShift_param_u64_C"
	.space 1
	.ascii "uShift_var_u64_C"
	.space 1
	.ascii "uShift_param_u64_I"
	.space 1
	.ascii "uShift_var_u64_I"
	.space 1
	.ascii "uShift_param_L_C"
	.space 1
	.ascii "uShift_var_L_C"
	.space 1
	.ascii "uShift_param_L_I"
	.space 1
	.ascii "uShift_var_L_I"
	.space 1
	.ascii "uShift_param_i8_C"
	.space 1
	.ascii "uShift_var_i8_C"
	.space 1
	.ascii "uShift_param_i8_I"
	.space 1
	.ascii "uShift_var_i8_I"
	.space 1
	.ascii "uShift_param_u32_C"
	.space 1
	.ascii "uShift_var_u32_C"
	.space 1
	.ascii "uShift_param_u32_I"
	.space 1
	.ascii "uShift_var_u32_I"
	.space 1
	.ascii "uShift_param_C_C"
	.space 1
	.ascii "uShift_var_C_C"
	.space 1
	.ascii "uShift_param_C_I"
	.space 1
	.ascii "uShift_var_C_I"
	.space 1
	.ascii "uShift_param_u8_C"
	.space 1
	.ascii "uShift_var_u8_C"
	.space 1
	.ascii "uShift_param_u8_I"
	.space 1
	.ascii "uShift_var_u8_I"
	.space 1
	.ascii "uShift_param_I_C"
	.space 1
	.ascii "uShift_var_I_C"
	.space 1
	.ascii "uShift_param_I_I"
	.space 1
	.ascii "uShift_var_I_I"
	.space 1
	.ascii "uShift_param_i64_C"
	.space 1
	.ascii "uShift_var_i64_C"
	.space 1
	.ascii "uShift_param_i64_I"
	.space 1
	.ascii "uShift_var_i64_I"
	.space 1
	.ascii "uShift_param_LC_C"
	.space 1
	.ascii "uShift_var_LC_C"
	.space 1
	.ascii "uShift_param_LC_I"
	.space 1
	.ascii "uShift_var_LC_I"
	.space 1
	.ascii "uShift_param_i16_C"
	.space 1
	.ascii "uShift_var_i16_C"
	.space 1
	.ascii "uShift_param_i16_I"
	.space 1
	.ascii "uShift_var_i16_I"
	.space 1
	.ascii "uRightShift_param_i32_C"
	.space 1
	.ascii "uRightShift_var_i32_C"
	.space 1
	.ascii "uRightShift_param_i32_I"
	.space 1
	.ascii "uRightShift_var_i32_I"
	.space 1
	.ascii "uRightShift_param_u16_C"
	.space 1
	.ascii "uRightShift_var_u16_C"
	.space 1
	.ascii "uRightShift_param_u16_I"
	.space 1
	.ascii "uRightShift_var_u16_I"
	.space 1
	.ascii "uRightShift_param_u64_C"
	.space 1
	.ascii "uRightShift_var_u64_C"
	.space 1
	.ascii "uRightShift_param_u64_I"
	.space 1
	.ascii "uRightShift_var_u64_I"
	.space 1
	.ascii "uRightShift_param_L_C"
	.space 1
	.ascii "uRightShift_var_L_C"
	.space 1
	.ascii "uRightShift_param_L_I"
	.space 1
	.ascii "uRightShift_var_L_I"
	.space 1
	.ascii "uRightShift_param_i8_C"
	.space 1
	.ascii "uRightShift_var_i8_C"
	.space 1
	.ascii "uRightShift_param_i8_I"
	.space 1
	.ascii "uRightShift_var_i8_I"
	.space 1
	.ascii "uRightShift_param_u32_C"
	.space 1
	.ascii "uRightShift_var_u32_C"
	.space 1
	.ascii "uRightShift_param_u32_I"
	.space 1
	.ascii "uRightShift_var_u32_I"
	.space 1
	.ascii "uRightShift_param_C_C"
	.space 1
	.ascii "uRightShift_var_C_C"
	.space 1
	.ascii "uRightShift_param_C_I"
	.space 1
	.ascii "uRightShift_var_C_I"
	.space 1
	.ascii "uRightShift_param_u8_C"
	.space 1
	.ascii "uRightShift_var_u8_C"
	.space 1
	.ascii "uRightShift_param_u8_I"
	.space 1
	.ascii "uRightShift_var_u8_I"
	.space 1
	.ascii "uRightShift_param_I_C"
	.space 1
	.ascii "uRightShift_var_I_C"
	.space 1
	.ascii "uRightShift_param_I_I"
	.space 1
	.ascii "uRightShift_var_I_I"
	.space 1
	.ascii "uRightShift_param_i64_C"
	.space 1
	.ascii "uRightShift_var_i64_C"
	.space 1
	.ascii "uRightShift_param_i64_I"
	.space 1
	.ascii "uRightShift_var_i64_I"
	.space 1
	.ascii "uRightShift_param_LC_C"
	.space 1
	.ascii "uRightShift_var_LC_C"
	.space 1
	.ascii "uRightShift_param_LC_I"
	.space 1
	.ascii "uRightShift_var_LC_I"
	.space 1
	.ascii "uRightShift_param_i16_C"
	.space 1
	.ascii "uRightShift_var_i16_C"
	.space 1
	.ascii "uRightShift_param_i16_I"
	.space 1
	.ascii "uRightShift_var_i16_I"
	.space 1
	.ascii "uLeftShift_param_i32_C"
	.space 1
	.ascii "uLeftShift_var_i32_C"
	.space 1
	.ascii "uLeftShift_param_i32_I"
	.space 1
	.ascii "uLeftShift_var_i32_I"
	.space 1
	.ascii "uLeftShift_param_u16_C"
	.space 1
	.ascii "uLeftShift_var_u16_C"
	.space 1
	.ascii "uLeftShift_param_u16_I"
	.space 1
	.ascii "uLeftShift_var_u16_I"
	.space 1
	.ascii "uLeftShift_param_u64_C"
	.space 1
	.ascii "uLeftShift_var_u64_C"
	.space 1
	.ascii "uLeftShift_param_u64_I"
	.space 1
	.ascii "uLeftShift_var_u64_I"
	.space 1
	.ascii "uLeftShift_param_L_C"
	.space 1
	.ascii "uLeftShift_var_L_C"
	.space 1
	.ascii "uLeftShift_param_L_I"
	.space 1
	.ascii "uLeftShift_var_L_I"
	.space 1
	.ascii "uLeftShift_param_i8_C"
	.space 1
	.ascii "uLeftShift_var_i8_C"
	.space 1
	.ascii "uLeftShift_param_i8_I"
	.space 1
	.ascii "uLeftShift_var_i8_I"
	.space 1
	.ascii "uLeftShift_param_u32_C"
	.space 1
	.ascii "uLeftShift_var_u32_C"
	.space 1
	.ascii "uLeftShift_param_u32_I"
	.space 1
	.ascii "uLeftShift_var_u32_I"
	.space 1
	.ascii "uLeftShift_param_C_C"
	.space 1
	.ascii "uLeftShift_var_C_C"
	.space 1
	.ascii "uLeftShift_param_C_I"
	.space 1
	.ascii "uLeftShift_var_C_I"
	.space 1
	.ascii "uLeftShift_param_u8_C"
	.space 1
	.ascii "uLeftShift_var_u8_C"
	.space 1
	.ascii "uLeftShift_param_u8_I"
	.space 1
	.ascii "uLeftShift_var_u8_I"
	.space 1
	.ascii "uLeftShift_param_I_C"
	.space 1
	.ascii "uLeftShift_var_I_C"
	.space 1
	.ascii "uLeftShift_param_I_I"
	.space 1
	.ascii "uLeftShift_var_I_I"
	.space 1
	.ascii "uLeftShift_param_i64_C"
	.space 1
	.ascii "uLeftShift_var_i64_C"
	.space 1
	.ascii "uLeftShift_param_i64_I"
	.space 1
	.ascii "uLeftShift_var_i64_I"
	.space 1
	.ascii "uLeftShift_param_LC_C"
	.space 1
	.ascii "uLeftShift_var_LC_C"
	.space 1
	.ascii "uLeftShift_param_LC_I"
	.space 1
	.ascii "uLeftShift_var_LC_I"
	.space 1
	.ascii "uLeftShift_param_i16_C"
	.space 1
	.ascii "uLeftShift_var_i16_C"
	.space 1
	.ascii "uLeftShift_param_i16_I"
	.space 1
	.ascii "uLeftShift_var_i16_I"
	.space 1
	.ascii "Not_param_i32_i32"
	.space 1
	.ascii "uNot_param_i32_i32"
	.space 1
	.ascii "Not_var_i32_i32"
	.space 1
	.ascii "uNot_var_i32_i32"
	.space 1
	.ascii "Not_param_u16_u16"
	.space 1
	.ascii "uNot_param_u16_u16"
	.space 1
	.ascii "Not_var_u16_u16"
	.space 1
	.ascii "uNot_var_u16_u16"
	.space 1
	.ascii "Not_param_u64_u64"
	.space 1
	.ascii "uNot_param_u64_u64"
	.space 1
	.ascii "Not_var_u64_u64"
	.space 1
	.ascii "uNot_var_u64_u64"
	.space 1
	.ascii "Not_param_L_L"
	.space 1
	.ascii "uNot_param_L_L"
	.space 1
	.ascii "Not_var_L_L"
	.space 1
	.ascii "uNot_var_L_L"
	.space 1
	.ascii "Not_param_i8_i8"
	.space 1
	.ascii "uNot_param_i8_i8"
	.space 1
	.ascii "Not_var_i8_i8"
	.space 1
	.ascii "uNot_var_i8_i8"
	.space 1
	.ascii "Not_param_u32_u32"
	.space 1
	.ascii "uNot_param_u32_u32"
	.space 1
	.ascii "Not_var_u32_u32"
	.space 1
	.ascii "uNot_var_u32_u32"
	.space 1
	.ascii "Not_param_f32_f32"
	.space 1
	.ascii "Not_var_f32_f32"
	.space 1
	.ascii "Not_param_C_C"
	.space 1
	.ascii "uNot_param_C_C"
	.space 1
	.ascii "Not_var_C_C"
	.space 1
	.ascii "uNot_var_C_C"
	.space 1
	.ascii "Not_param_u8_u8"
	.space 1
	.ascii "uNot_param_u8_u8"
	.space 1
	.ascii "Not_var_u8_u8"
	.space 1
	.ascii "uNot_var_u8_u8"
	.space 1
	.ascii "Not_param_I_I"
	.space 1
	.ascii "uNot_param_I_I"
	.space 1
	.ascii "Not_var_I_I"
	.space 1
	.ascii "uNot_var_I_I"
	.space 1
	.ascii "Not_param_i64_i64"
	.space 1
	.ascii "uNot_param_i64_i64"
	.space 1
	.ascii "Not_var_i64_i64"
	.space 1
	.ascii "uNot_var_i64_i64"
	.space 1
	.ascii "Not_param_f64_f64"
	.space 1
	.ascii "Not_var_f64_f64"
	.space 1
	.ascii "Not_param_LC_LC"
	.space 1
	.ascii "uNot_param_LC_LC"
	.space 1
	.ascii "Not_var_LC_LC"
	.space 1
	.ascii "uNot_var_LC_LC"
	.space 1
	.ascii "Not_param_i16_i16"
	.space 1
	.ascii "uNot_param_i16_i16"
	.space 1
	.ascii "Not_var_i16_i16"
	.space 1
	.ascii "uNot_var_i16_i16"
	.space 1
	.ascii "NE_param_i32_i32"
	.space 1
	.ascii "NE_var_i32_i32"
	.space 1
	.ascii "NE_param_i32_u16"
	.space 1
	.ascii "NE_var_i32_u16"
	.space 1
	.ascii "NE_param_i32_u64"
	.space 1
	.ascii "NE_var_i32_u64"
	.space 1
	.ascii "NE_param_i32_L"
	.space 1
	.ascii "NE_var_i32_L"
	.space 1
	.ascii "NE_param_i32_i8"
	.space 1
	.ascii "NE_var_i32_i8"
	.space 1
	.ascii "NE_param_i32_u32"
	.space 1
	.ascii "NE_var_i32_u32"
	.space 1
	.ascii "NE_param_i32_C"
	.space 1
	.ascii "NE_var_i32_C"
	.space 1
	.ascii "NE_param_i32_u8"
	.space 1
	.ascii "NE_var_i32_u8"
	.space 1
	.ascii "NE_param_i32_I"
	.space 1
	.ascii "NE_var_i32_I"
	.space 1
	.ascii "NE_param_i32_i64"
	.space 1
	.ascii "NE_var_i32_i64"
	.space 1
	.ascii "NE_param_i32_LC"
	.space 1
	.ascii "NE_var_i32_LC"
	.space 1
	.ascii "NE_param_i32_i16"
	.space 1
	.ascii "NE_var_i32_i16"
	.space 1
	.ascii "NE_param_u16_i32"
	.space 1
	.ascii "NE_var_u16_i32"
	.space 1
	.ascii "NE_param_u16_u16"
	.space 1
	.ascii "NE_var_u16_u16"
	.space 1
	.ascii "NE_param_u16_u64"
	.space 1
	.ascii "NE_var_u16_u64"
	.space 1
	.ascii "NE_param_u16_L"
	.space 1
	.ascii "NE_var_u16_L"
	.space 1
	.ascii "NE_param_u16_i8"
	.space 1
	.ascii "NE_var_u16_i8"
	.space 1
	.ascii "NE_param_u16_u32"
	.space 1
	.ascii "NE_var_u16_u32"
	.space 1
	.ascii "NE_param_u16_C"
	.space 1
	.ascii "NE_var_u16_C"
	.space 1
	.ascii "NE_param_u16_u8"
	.space 1
	.ascii "NE_var_u16_u8"
	.space 1
	.ascii "NE_param_u16_I"
	.space 1
	.ascii "NE_var_u16_I"
	.space 1
	.ascii "NE_param_u16_i64"
	.space 1
	.ascii "NE_var_u16_i64"
	.space 1
	.ascii "NE_param_u16_LC"
	.space 1
	.ascii "NE_var_u16_LC"
	.space 1
	.ascii "NE_param_u16_i16"
	.space 1
	.ascii "NE_var_u16_i16"
	.space 1
	.ascii "NE_param_u64_i32"
	.space 1
	.ascii "NE_var_u64_i32"
	.space 1
	.ascii "NE_param_u64_u16"
	.space 1
	.ascii "NE_var_u64_u16"
	.space 1
	.ascii "NE_param_u64_u64"
	.space 1
	.ascii "NE_var_u64_u64"
	.space 1
	.ascii "NE_param_u64_L"
	.space 1
	.ascii "NE_var_u64_L"
	.space 1
	.ascii "NE_param_u64_i8"
	.space 1
	.ascii "NE_var_u64_i8"
	.space 1
	.ascii "NE_param_u64_u32"
	.space 1
	.ascii "NE_var_u64_u32"
	.space 1
	.ascii "NE_param_u64_C"
	.space 1
	.ascii "NE_var_u64_C"
	.space 1
	.ascii "NE_param_u64_u8"
	.space 1
	.ascii "NE_var_u64_u8"
	.space 1
	.ascii "NE_param_u64_I"
	.space 1
	.ascii "NE_var_u64_I"
	.space 1
	.ascii "NE_param_u64_i64"
	.space 1
	.ascii "NE_var_u64_i64"
	.space 1
	.ascii "NE_param_u64_LC"
	.space 1
	.ascii "NE_var_u64_LC"
	.space 1
	.ascii "NE_param_u64_i16"
	.space 1
	.ascii "NE_var_u64_i16"
	.space 1
	.ascii "NE_param_L_i32"
	.space 1
	.ascii "NE_var_L_i32"
	.space 1
	.ascii "NE_param_L_u16"
	.space 1
	.ascii "NE_var_L_u16"
	.space 1
	.ascii "NE_param_L_u64"
	.space 1
	.ascii "NE_var_L_u64"
	.space 1
	.ascii "NE_param_L_L"
	.space 1
	.ascii "NE_var_L_L"
	.space 1
	.ascii "NE_param_L_i8"
	.space 1
	.ascii "NE_var_L_i8"
	.space 1
	.ascii "NE_param_L_u32"
	.space 1
	.ascii "NE_var_L_u32"
	.space 1
	.ascii "NE_param_L_C"
	.space 1
	.ascii "NE_var_L_C"
	.space 1
	.ascii "NE_param_L_u8"
	.space 1
	.ascii "NE_var_L_u8"
	.space 1
	.ascii "NE_param_L_I"
	.space 1
	.ascii "NE_var_L_I"
	.space 1
	.ascii "NE_param_L_i64"
	.space 1
	.ascii "NE_var_L_i64"
	.space 1
	.ascii "NE_param_L_LC"
	.space 1
	.ascii "NE_var_L_LC"
	.space 1
	.ascii "NE_param_L_i16"
	.space 1
	.ascii "NE_var_L_i16"
	.space 1
	.ascii "NE_param_i8_i32"
	.space 1
	.ascii "NE_var_i8_i32"
	.space 1
	.ascii "NE_param_i8_u16"
	.space 1
	.ascii "NE_var_i8_u16"
	.space 1
	.ascii "NE_param_i8_u64"
	.space 1
	.ascii "NE_var_i8_u64"
	.space 1
	.ascii "NE_param_i8_L"
	.space 1
	.ascii "NE_var_i8_L"
	.space 1
	.ascii "NE_param_i8_i8"
	.space 1
	.ascii "NE_var_i8_i8"
	.space 1
	.ascii "NE_param_i8_u32"
	.space 1
	.ascii "NE_var_i8_u32"
	.space 1
	.ascii "NE_param_i8_C"
	.space 1
	.ascii "NE_var_i8_C"
	.space 1
	.ascii "NE_param_i8_u8"
	.space 1
	.ascii "NE_var_i8_u8"
	.space 1
	.ascii "NE_param_i8_I"
	.space 1
	.ascii "NE_var_i8_I"
	.space 1
	.ascii "NE_param_i8_i64"
	.space 1
	.ascii "NE_var_i8_i64"
	.space 1
	.ascii "NE_param_i8_LC"
	.space 1
	.ascii "NE_var_i8_LC"
	.space 1
	.ascii "NE_param_i8_i16"
	.space 1
	.ascii "NE_var_i8_i16"
	.space 1
	.ascii "NE_param_u32_i32"
	.space 1
	.ascii "NE_var_u32_i32"
	.space 1
	.ascii "NE_param_u32_u16"
	.space 1
	.ascii "NE_var_u32_u16"
	.space 1
	.ascii "NE_param_u32_u64"
	.space 1
	.ascii "NE_var_u32_u64"
	.space 1
	.ascii "NE_param_u32_L"
	.space 1
	.ascii "NE_var_u32_L"
	.space 1
	.ascii "NE_param_u32_i8"
	.space 1
	.ascii "NE_var_u32_i8"
	.space 1
	.ascii "NE_param_u32_u32"
	.space 1
	.ascii "NE_var_u32_u32"
	.space 1
	.ascii "NE_param_u32_C"
	.space 1
	.ascii "NE_var_u32_C"
	.space 1
	.ascii "NE_param_u32_u8"
	.space 1
	.ascii "NE_var_u32_u8"
	.space 1
	.ascii "NE_param_u32_I"
	.space 1
	.ascii "NE_var_u32_I"
	.space 1
	.ascii "NE_param_u32_i64"
	.space 1
	.ascii "NE_var_u32_i64"
	.space 1
	.ascii "NE_param_u32_LC"
	.space 1
	.ascii "NE_var_u32_LC"
	.space 1
	.ascii "NE_param_u32_i16"
	.space 1
	.ascii "NE_var_u32_i16"
	.space 1
	.ascii "NE_param_f32_f32"
	.space 1
	.ascii "NE_var_f32_f32"
	.space 1
	.ascii "NE_param_C_i32"
	.space 1
	.ascii "NE_var_C_i32"
	.space 1
	.ascii "NE_param_C_u16"
	.space 1
	.ascii "NE_var_C_u16"
	.space 1
	.ascii "NE_param_C_u64"
	.space 1
	.ascii "NE_var_C_u64"
	.space 1
	.ascii "NE_param_C_L"
	.space 1
	.ascii "NE_var_C_L"
	.space 1
	.ascii "NE_param_C_i8"
	.space 1
	.ascii "NE_var_C_i8"
	.space 1
	.ascii "NE_param_C_u32"
	.space 1
	.ascii "NE_var_C_u32"
	.space 1
	.ascii "NE_param_C_C"
	.space 1
	.ascii "NE_var_C_C"
	.space 1
	.ascii "NE_param_C_u8"
	.space 1
	.ascii "NE_var_C_u8"
	.space 1
	.ascii "NE_param_C_I"
	.space 1
	.ascii "NE_var_C_I"
	.space 1
	.ascii "NE_param_C_i64"
	.space 1
	.ascii "NE_var_C_i64"
	.space 1
	.ascii "NE_param_C_LC"
	.space 1
	.ascii "NE_var_C_LC"
	.space 1
	.ascii "NE_param_C_i16"
	.space 1
	.ascii "NE_var_C_i16"
	.space 1
	.ascii "NE_param_u8_i32"
	.space 1
	.ascii "NE_var_u8_i32"
	.space 1
	.ascii "NE_param_u8_u16"
	.space 1
	.ascii "NE_var_u8_u16"
	.space 1
	.ascii "NE_param_u8_u64"
	.space 1
	.ascii "NE_var_u8_u64"
	.space 1
	.ascii "NE_param_u8_L"
	.space 1
	.ascii "NE_var_u8_L"
	.space 1
	.ascii "NE_param_u8_i8"
	.space 1
	.ascii "NE_var_u8_i8"
	.space 1
	.ascii "NE_param_u8_u32"
	.space 1
	.ascii "NE_var_u8_u32"
	.space 1
	.ascii "NE_param_u8_C"
	.space 1
	.ascii "NE_var_u8_C"
	.space 1
	.ascii "NE_param_u8_u8"
	.space 1
	.ascii "NE_var_u8_u8"
	.space 1
	.ascii "NE_param_u8_I"
	.space 1
	.ascii "NE_var_u8_I"
	.space 1
	.ascii "NE_param_u8_i64"
	.space 1
	.ascii "NE_var_u8_i64"
	.space 1
	.ascii "NE_param_u8_LC"
	.space 1
	.ascii "NE_var_u8_LC"
	.space 1
	.ascii "NE_param_u8_i16"
	.space 1
	.ascii "NE_var_u8_i16"
	.space 1
	.ascii "NE_param_I_i32"
	.space 1
	.ascii "NE_var_I_i32"
	.space 1
	.ascii "NE_param_I_u16"
	.space 1
	.ascii "NE_var_I_u16"
	.space 1
	.ascii "NE_param_I_u64"
	.space 1
	.ascii "NE_var_I_u64"
	.space 1
	.ascii "NE_param_I_L"
	.space 1
	.ascii "NE_var_I_L"
	.space 1
	.ascii "NE_param_I_i8"
	.space 1
	.ascii "NE_var_I_i8"
	.space 1
	.ascii "NE_param_I_u32"
	.space 1
	.ascii "NE_var_I_u32"
	.space 1
	.ascii "NE_param_I_C"
	.space 1
	.ascii "NE_var_I_C"
	.space 1
	.ascii "NE_param_I_u8"
	.space 1
	.ascii "NE_var_I_u8"
	.space 1
	.ascii "NE_param_I_I"
	.space 1
	.ascii "NE_var_I_I"
	.space 1
	.ascii "NE_param_I_i64"
	.space 1
	.ascii "NE_var_I_i64"
	.space 1
	.ascii "NE_param_I_LC"
	.space 1
	.ascii "NE_var_I_LC"
	.space 1
	.ascii "NE_param_I_i16"
	.space 1
	.ascii "NE_var_I_i16"
	.space 1
	.ascii "NE_param_i64_i32"
	.space 1
	.ascii "NE_var_i64_i32"
	.space 1
	.ascii "NE_param_i64_u16"
	.space 1
	.ascii "NE_var_i64_u16"
	.space 1
	.ascii "NE_param_i64_u64"
	.space 1
	.ascii "NE_var_i64_u64"
	.space 1
	.ascii "NE_param_i64_L"
	.space 1
	.ascii "NE_var_i64_L"
	.space 1
	.ascii "NE_param_i64_i8"
	.space 1
	.ascii "NE_var_i64_i8"
	.space 1
	.ascii "NE_param_i64_u32"
	.space 1
	.ascii "NE_var_i64_u32"
	.space 1
	.ascii "NE_param_i64_C"
	.space 1
	.ascii "NE_var_i64_C"
	.space 1
	.ascii "NE_param_i64_u8"
	.space 1
	.ascii "NE_var_i64_u8"
	.space 1
	.ascii "NE_param_i64_I"
	.space 1
	.ascii "NE_var_i64_I"
	.space 1
	.ascii "NE_param_i64_i64"
	.space 1
	.ascii "NE_var_i64_i64"
	.space 1
	.ascii "NE_param_i64_LC"
	.space 1
	.ascii "NE_var_i64_LC"
	.space 1
	.ascii "NE_param_i64_i16"
	.space 1
	.ascii "NE_var_i64_i16"
	.space 1
	.ascii "NE_param_f64_f64"
	.space 1
	.ascii "NE_var_f64_f64"
	.space 1
	.ascii "NE_param_LC_i32"
	.space 1
	.ascii "NE_var_LC_i32"
	.space 1
	.ascii "NE_param_LC_u16"
	.space 1
	.ascii "NE_var_LC_u16"
	.space 1
	.ascii "NE_param_LC_u64"
	.space 1
	.ascii "NE_var_LC_u64"
	.space 1
	.ascii "NE_param_LC_L"
	.space 1
	.ascii "NE_var_LC_L"
	.space 1
	.ascii "NE_param_LC_i8"
	.space 1
	.ascii "NE_var_LC_i8"
	.space 1
	.ascii "NE_param_LC_u32"
	.space 1
	.ascii "NE_var_LC_u32"
	.space 1
	.ascii "NE_param_LC_C"
	.space 1
	.ascii "NE_var_LC_C"
	.space 1
	.ascii "NE_param_LC_u8"
	.space 1
	.ascii "NE_var_LC_u8"
	.space 1
	.ascii "NE_param_LC_I"
	.space 1
	.ascii "NE_var_LC_I"
	.space 1
	.ascii "NE_param_LC_i64"
	.space 1
	.ascii "NE_var_LC_i64"
	.space 1
	.ascii "NE_param_LC_LC"
	.space 1
	.ascii "NE_var_LC_LC"
	.space 1
	.ascii "NE_param_LC_i16"
	.space 1
	.ascii "NE_var_LC_i16"
	.space 1
	.ascii "NE_param_i16_i32"
	.space 1
	.ascii "NE_var_i16_i32"
	.space 1
	.ascii "NE_param_i16_u16"
	.space 1
	.ascii "NE_var_i16_u16"
	.space 1
	.ascii "NE_param_i16_u64"
	.space 1
	.ascii "NE_var_i16_u64"
	.space 1
	.ascii "NE_param_i16_L"
	.space 1
	.ascii "NE_var_i16_L"
	.space 1
	.ascii "NE_param_i16_i8"
	.space 1
	.ascii "NE_var_i16_i8"
	.space 1
	.ascii "NE_param_i16_u32"
	.space 1
	.ascii "NE_var_i16_u32"
	.space 1
	.ascii "NE_param_i16_C"
	.space 1
	.ascii "NE_var_i16_C"
	.space 1
	.ascii "NE_param_i16_u8"
	.space 1
	.ascii "NE_var_i16_u8"
	.space 1
	.ascii "NE_param_i16_I"
	.space 1
	.ascii "NE_var_i16_I"
	.space 1
	.ascii "NE_param_i16_i64"
	.space 1
	.ascii "NE_var_i16_i64"
	.space 1
	.ascii "NE_param_i16_LC"
	.space 1
	.ascii "NE_var_i16_LC"
	.space 1
	.ascii "NE_param_i16_i16"
	.space 1
	.ascii "NE_var_i16_i16"
	.space 1
	.ascii "EQ_param_i32_i32"
	.space 1
	.ascii "EQ_var_i32_i32"
	.space 1
	.ascii "EQ_param_i32_u16"
	.space 1
	.ascii "EQ_var_i32_u16"
	.space 1
	.ascii "EQ_param_i32_u64"
	.space 1
	.ascii "EQ_var_i32_u64"
	.space 1
	.ascii "EQ_param_i32_L"
	.space 1
	.ascii "EQ_var_i32_L"
	.space 1
	.ascii "EQ_param_i32_i8"
	.space 1
	.ascii "EQ_var_i32_i8"
	.space 1
	.ascii "EQ_param_i32_u32"
	.space 1
	.ascii "EQ_var_i32_u32"
	.space 1
	.ascii "EQ_param_i32_C"
	.space 1
	.ascii "EQ_var_i32_C"
	.space 1
	.ascii "EQ_param_i32_u8"
	.space 1
	.ascii "EQ_var_i32_u8"
	.space 1
	.ascii "EQ_param_i32_I"
	.space 1
	.ascii "EQ_var_i32_I"
	.space 1
	.ascii "EQ_param_i32_i64"
	.space 1
	.ascii "EQ_var_i32_i64"
	.space 1
	.ascii "EQ_param_i32_LC"
	.space 1
	.ascii "EQ_var_i32_LC"
	.space 1
	.ascii "EQ_param_i32_i16"
	.space 1
	.ascii "EQ_var_i32_i16"
	.space 1
	.ascii "EQ_param_u16_i32"
	.space 1
	.ascii "EQ_var_u16_i32"
	.space 1
	.ascii "EQ_param_u16_u16"
	.space 1
	.ascii "EQ_var_u16_u16"
	.space 1
	.ascii "EQ_param_u16_u64"
	.space 1
	.ascii "EQ_var_u16_u64"
	.space 1
	.ascii "EQ_param_u16_L"
	.space 1
	.ascii "EQ_var_u16_L"
	.space 1
	.ascii "EQ_param_u16_i8"
	.space 1
	.ascii "EQ_var_u16_i8"
	.space 1
	.ascii "EQ_param_u16_u32"
	.space 1
	.ascii "EQ_var_u16_u32"
	.space 1
	.ascii "EQ_param_u16_C"
	.space 1
	.ascii "EQ_var_u16_C"
	.space 1
	.ascii "EQ_param_u16_u8"
	.space 1
	.ascii "EQ_var_u16_u8"
	.space 1
	.ascii "EQ_param_u16_I"
	.space 1
	.ascii "EQ_var_u16_I"
	.space 1
	.ascii "EQ_param_u16_i64"
	.space 1
	.ascii "EQ_var_u16_i64"
	.space 1
	.ascii "EQ_param_u16_LC"
	.space 1
	.ascii "EQ_var_u16_LC"
	.space 1
	.ascii "EQ_param_u16_i16"
	.space 1
	.ascii "EQ_var_u16_i16"
	.space 1
	.ascii "EQ_param_u64_i32"
	.space 1
	.ascii "EQ_var_u64_i32"
	.space 1
	.ascii "EQ_param_u64_u16"
	.space 1
	.ascii "EQ_var_u64_u16"
	.space 1
	.ascii "EQ_param_u64_u64"
	.space 1
	.ascii "EQ_var_u64_u64"
	.space 1
	.ascii "EQ_param_u64_L"
	.space 1
	.ascii "EQ_var_u64_L"
	.space 1
	.ascii "EQ_param_u64_i8"
	.space 1
	.ascii "EQ_var_u64_i8"
	.space 1
	.ascii "EQ_param_u64_u32"
	.space 1
	.ascii "EQ_var_u64_u32"
	.space 1
	.ascii "EQ_param_u64_C"
	.space 1
	.ascii "EQ_var_u64_C"
	.space 1
	.ascii "EQ_param_u64_u8"
	.space 1
	.ascii "EQ_var_u64_u8"
	.space 1
	.ascii "EQ_param_u64_I"
	.space 1
	.ascii "EQ_var_u64_I"
	.space 1
	.ascii "EQ_param_u64_i64"
	.space 1
	.ascii "EQ_var_u64_i64"
	.space 1
	.ascii "EQ_param_u64_LC"
	.space 1
	.ascii "EQ_var_u64_LC"
	.space 1
	.ascii "EQ_param_u64_i16"
	.space 1
	.ascii "EQ_var_u64_i16"
	.space 1
	.ascii "EQ_param_L_i32"
	.space 1
	.ascii "EQ_var_L_i32"
	.space 1
	.ascii "EQ_param_L_u16"
	.space 1
	.ascii "EQ_var_L_u16"
	.space 1
	.ascii "EQ_param_L_u64"
	.space 1
	.ascii "EQ_var_L_u64"
	.space 1
	.ascii "EQ_param_L_L"
	.space 1
	.ascii "EQ_var_L_L"
	.space 1
	.ascii "EQ_param_L_i8"
	.space 1
	.ascii "EQ_var_L_i8"
	.space 1
	.ascii "EQ_param_L_u32"
	.space 1
	.ascii "EQ_var_L_u32"
	.space 1
	.ascii "EQ_param_L_C"
	.space 1
	.ascii "EQ_var_L_C"
	.space 1
	.ascii "EQ_param_L_u8"
	.space 1
	.ascii "EQ_var_L_u8"
	.space 1
	.ascii "EQ_param_L_I"
	.space 1
	.ascii "EQ_var_L_I"
	.space 1
	.ascii "EQ_param_L_i64"
	.space 1
	.ascii "EQ_var_L_i64"
	.space 1
	.ascii "EQ_param_L_LC"
	.space 1
	.ascii "EQ_var_L_LC"
	.space 1
	.ascii "EQ_param_L_i16"
	.space 1
	.ascii "EQ_var_L_i16"
	.space 1
	.ascii "EQ_param_i8_i32"
	.space 1
	.ascii "EQ_var_i8_i32"
	.space 1
	.ascii "EQ_param_i8_u16"
	.space 1
	.ascii "EQ_var_i8_u16"
	.space 1
	.ascii "EQ_param_i8_u64"
	.space 1
	.ascii "EQ_var_i8_u64"
	.space 1
	.ascii "EQ_param_i8_L"
	.space 1
	.ascii "EQ_var_i8_L"
	.space 1
	.ascii "EQ_param_i8_i8"
	.space 1
	.ascii "EQ_var_i8_i8"
	.space 1
	.ascii "EQ_param_i8_u32"
	.space 1
	.ascii "EQ_var_i8_u32"
	.space 1
	.ascii "EQ_param_i8_C"
	.space 1
	.ascii "EQ_var_i8_C"
	.space 1
	.ascii "EQ_param_i8_u8"
	.space 1
	.ascii "EQ_var_i8_u8"
	.space 1
	.ascii "EQ_param_i8_I"
	.space 1
	.ascii "EQ_var_i8_I"
	.space 1
	.ascii "EQ_param_i8_i64"
	.space 1
	.ascii "EQ_var_i8_i64"
	.space 1
	.ascii "EQ_param_i8_LC"
	.space 1
	.ascii "EQ_var_i8_LC"
	.space 1
	.ascii "EQ_param_i8_i16"
	.space 1
	.ascii "EQ_var_i8_i16"
	.space 1
	.ascii "EQ_param_u32_i32"
	.space 1
	.ascii "EQ_var_u32_i32"
	.space 1
	.ascii "EQ_param_u32_u16"
	.space 1
	.ascii "EQ_var_u32_u16"
	.space 1
	.ascii "EQ_param_u32_u64"
	.space 1
	.ascii "EQ_var_u32_u64"
	.space 1
	.ascii "EQ_param_u32_L"
	.space 1
	.ascii "EQ_var_u32_L"
	.space 1
	.ascii "EQ_param_u32_i8"
	.space 1
	.ascii "EQ_var_u32_i8"
	.space 1
	.ascii "EQ_param_u32_u32"
	.space 1
	.ascii "EQ_var_u32_u32"
	.space 1
	.ascii "EQ_param_u32_C"
	.space 1
	.ascii "EQ_var_u32_C"
	.space 1
	.ascii "EQ_param_u32_u8"
	.space 1
	.ascii "EQ_var_u32_u8"
	.space 1
	.ascii "EQ_param_u32_I"
	.space 1
	.ascii "EQ_var_u32_I"
	.space 1
	.ascii "EQ_param_u32_i64"
	.space 1
	.ascii "EQ_var_u32_i64"
	.space 1
	.ascii "EQ_param_u32_LC"
	.space 1
	.ascii "EQ_var_u32_LC"
	.space 1
	.ascii "EQ_param_u32_i16"
	.space 1
	.ascii "EQ_var_u32_i16"
	.space 1
	.ascii "EQ_param_f32_f32"
	.space 1
	.ascii "EQ_var_f32_f32"
	.space 1
	.ascii "EQ_param_C_i32"
	.space 1
	.ascii "EQ_var_C_i32"
	.space 1
	.ascii "EQ_param_C_u16"
	.space 1
	.ascii "EQ_var_C_u16"
	.space 1
	.ascii "EQ_param_C_u64"
	.space 1
	.ascii "EQ_var_C_u64"
	.space 1
	.ascii "EQ_param_C_L"
	.space 1
	.ascii "EQ_var_C_L"
	.space 1
	.ascii "EQ_param_C_i8"
	.space 1
	.ascii "EQ_var_C_i8"
	.space 1
	.ascii "EQ_param_C_u32"
	.space 1
	.ascii "EQ_var_C_u32"
	.space 1
	.ascii "EQ_param_C_C"
	.space 1
	.ascii "EQ_var_C_C"
	.space 1
	.ascii "EQ_param_C_u8"
	.space 1
	.ascii "EQ_var_C_u8"
	.space 1
	.ascii "EQ_param_C_I"
	.space 1
	.ascii "EQ_var_C_I"
	.space 1
	.ascii "EQ_param_C_i64"
	.space 1
	.ascii "EQ_var_C_i64"
	.space 1
	.ascii "EQ_param_C_LC"
	.space 1
	.ascii "EQ_var_C_LC"
	.space 1
	.ascii "EQ_param_C_i16"
	.space 1
	.ascii "EQ_var_C_i16"
	.space 1
	.ascii "EQ_param_u8_i32"
	.space 1
	.ascii "EQ_var_u8_i32"
	.space 1
	.ascii "EQ_param_u8_u16"
	.space 1
	.ascii "EQ_var_u8_u16"
	.space 1
	.ascii "EQ_param_u8_u64"
	.space 1
	.ascii "EQ_var_u8_u64"
	.space 1
	.ascii "EQ_param_u8_L"
	.space 1
	.ascii "EQ_var_u8_L"
	.space 1
	.ascii "EQ_param_u8_i8"
	.space 1
	.ascii "EQ_var_u8_i8"
	.space 1
	.ascii "EQ_param_u8_u32"
	.space 1
	.ascii "EQ_var_u8_u32"
	.space 1
	.ascii "EQ_param_u8_C"
	.space 1
	.ascii "EQ_var_u8_C"
	.space 1
	.ascii "EQ_param_u8_u8"
	.space 1
	.ascii "EQ_var_u8_u8"
	.space 1
	.ascii "EQ_param_u8_I"
	.space 1
	.ascii "EQ_var_u8_I"
	.space 1
	.ascii "EQ_param_u8_i64"
	.space 1
	.ascii "EQ_var_u8_i64"
	.space 1
	.ascii "EQ_param_u8_LC"
	.space 1
	.ascii "EQ_var_u8_LC"
	.space 1
	.ascii "EQ_param_u8_i16"
	.space 1
	.ascii "EQ_var_u8_i16"
	.space 1
	.ascii "EQ_param_I_i32"
	.space 1
	.ascii "EQ_var_I_i32"
	.space 1
	.ascii "EQ_param_I_u16"
	.space 1
	.ascii "EQ_var_I_u16"
	.space 1
	.ascii "EQ_param_I_u64"
	.space 1
	.ascii "EQ_var_I_u64"
	.space 1
	.ascii "EQ_param_I_L"
	.space 1
	.ascii "EQ_var_I_L"
	.space 1
	.ascii "EQ_param_I_i8"
	.space 1
	.ascii "EQ_var_I_i8"
	.space 1
	.ascii "EQ_param_I_u32"
	.space 1
	.ascii "EQ_var_I_u32"
	.space 1
	.ascii "EQ_param_I_C"
	.space 1
	.ascii "EQ_var_I_C"
	.space 1
	.ascii "EQ_param_I_u8"
	.space 1
	.ascii "EQ_var_I_u8"
	.space 1
	.ascii "EQ_param_I_I"
	.space 1
	.ascii "EQ_var_I_I"
	.space 1
	.ascii "EQ_param_I_i64"
	.space 1
	.ascii "EQ_var_I_i64"
	.space 1
	.ascii "EQ_param_I_LC"
	.space 1
	.ascii "EQ_var_I_LC"
	.space 1
	.ascii "EQ_param_I_i16"
	.space 1
	.ascii "EQ_var_I_i16"
	.space 1
	.ascii "EQ_param_i64_i32"
	.space 1
	.ascii "EQ_var_i64_i32"
	.space 1
	.ascii "EQ_param_i64_u16"
	.space 1
	.ascii "EQ_var_i64_u16"
	.space 1
	.ascii "EQ_param_i64_u64"
	.space 1
	.ascii "EQ_var_i64_u64"
	.space 1
	.ascii "EQ_param_i64_L"
	.space 1
	.ascii "EQ_var_i64_L"
	.space 1
	.ascii "EQ_param_i64_i8"
	.space 1
	.ascii "EQ_var_i64_i8"
	.space 1
	.ascii "EQ_param_i64_u32"
	.space 1
	.ascii "EQ_var_i64_u32"
	.space 1
	.ascii "EQ_param_i64_C"
	.space 1
	.ascii "EQ_var_i64_C"
	.space 1
	.ascii "EQ_param_i64_u8"
	.space 1
	.ascii "EQ_var_i64_u8"
	.space 1
	.ascii "EQ_param_i64_I"
	.space 1
	.ascii "EQ_var_i64_I"
	.space 1
	.ascii "EQ_param_i64_i64"
	.space 1
	.ascii "EQ_var_i64_i64"
	.space 1
	.ascii "EQ_param_i64_LC"
	.space 1
	.ascii "EQ_var_i64_LC"
	.space 1
	.ascii "EQ_param_i64_i16"
	.space 1
	.ascii "EQ_var_i64_i16"
	.space 1
	.ascii "EQ_param_f64_f64"
	.space 1
	.ascii "EQ_var_f64_f64"
	.space 1
	.ascii "EQ_param_LC_i32"
	.space 1
	.ascii "EQ_var_LC_i32"
	.space 1
	.ascii "EQ_param_LC_u16"
	.space 1
	.ascii "EQ_var_LC_u16"
	.space 1
	.ascii "EQ_param_LC_u64"
	.space 1
	.ascii "EQ_var_LC_u64"
	.space 1
	.ascii "EQ_param_LC_L"
	.space 1
	.ascii "EQ_var_LC_L"
	.space 1
	.ascii "EQ_param_LC_i8"
	.space 1
	.ascii "EQ_var_LC_i8"
	.space 1
	.ascii "EQ_param_LC_u32"
	.space 1
	.ascii "EQ_var_LC_u32"
	.space 1
	.ascii "EQ_param_LC_C"
	.space 1
	.ascii "EQ_var_LC_C"
	.space 1
	.ascii "EQ_param_LC_u8"
	.space 1
	.ascii "EQ_var_LC_u8"
	.space 1
	.ascii "EQ_param_LC_I"
	.space 1
	.ascii "EQ_var_LC_I"
	.space 1
	.ascii "EQ_param_LC_i64"
	.space 1
	.ascii "EQ_var_LC_i64"
	.space 1
	.ascii "EQ_param_LC_LC"
	.space 1
	.ascii "EQ_var_LC_LC"
	.space 1
	.ascii "EQ_param_LC_i16"
	.space 1
	.ascii "EQ_var_LC_i16"
	.space 1
	.ascii "EQ_param_i16_i32"
	.space 1
	.ascii "EQ_var_i16_i32"
	.space 1
	.ascii "EQ_param_i16_u16"
	.space 1
	.ascii "EQ_var_i16_u16"
	.space 1
	.ascii "EQ_param_i16_u64"
	.space 1
	.ascii "EQ_var_i16_u64"
	.space 1
	.ascii "EQ_param_i16_L"
	.space 1
	.ascii "EQ_var_i16_L"
	.space 1
	.ascii "EQ_param_i16_i8"
	.space 1
	.ascii "EQ_var_i16_i8"
	.space 1
	.ascii "EQ_param_i16_u32"
	.space 1
	.ascii "EQ_var_i16_u32"
	.space 1
	.ascii "EQ_param_i16_C"
	.space 1
	.ascii "EQ_var_i16_C"
	.space 1
	.ascii "EQ_param_i16_u8"
	.space 1
	.ascii "EQ_var_i16_u8"
	.space 1
	.ascii "EQ_param_i16_I"
	.space 1
	.ascii "EQ_var_i16_I"
	.space 1
	.ascii "EQ_param_i16_i64"
	.space 1
	.ascii "EQ_var_i16_i64"
	.space 1
	.ascii "EQ_param_i16_LC"
	.space 1
	.ascii "EQ_var_i16_LC"
	.space 1
	.ascii "EQ_param_i16_i16"
	.space 1
	.ascii "EQ_var_i16_i16"
	.space 1
	.ascii "uXor_param_i32_i32"
	.space 1
	.ascii "uXor_var_i32_i32"
	.space 1
	.ascii "uXor_param_i32_u16"
	.space 1
	.ascii "uXor_var_i32_u16"
	.space 1
	.ascii "uXor_param_i32_u64"
	.space 1
	.ascii "uXor_var_i32_u64"
	.space 1
	.ascii "uXor_param_i32_L"
	.space 1
	.ascii "uXor_var_i32_L"
	.space 1
	.ascii "uXor_param_i32_i8"
	.space 1
	.ascii "uXor_var_i32_i8"
	.space 1
	.ascii "uXor_param_i32_u32"
	.space 1
	.ascii "uXor_var_i32_u32"
	.space 1
	.ascii "uXor_param_i32_C"
	.space 1
	.ascii "uXor_var_i32_C"
	.space 1
	.ascii "uXor_param_i32_u8"
	.space 1
	.ascii "uXor_var_i32_u8"
	.space 1
	.ascii "uXor_param_i32_I"
	.space 1
	.ascii "uXor_var_i32_I"
	.space 1
	.ascii "uXor_param_i32_i64"
	.space 1
	.ascii "uXor_var_i32_i64"
	.space 1
	.ascii "uXor_param_i32_LC"
	.space 1
	.ascii "uXor_var_i32_LC"
	.space 1
	.ascii "uXor_param_i32_i16"
	.space 1
	.ascii "uXor_var_i32_i16"
	.space 1
	.ascii "uXor_param_u16_i32"
	.space 1
	.ascii "uXor_var_u16_i32"
	.space 1
	.ascii "uXor_param_u16_u16"
	.space 1
	.ascii "uXor_var_u16_u16"
	.space 1
	.ascii "uXor_param_u16_u64"
	.space 1
	.ascii "uXor_var_u16_u64"
	.space 1
	.ascii "uXor_param_u16_L"
	.space 1
	.ascii "uXor_var_u16_L"
	.space 1
	.ascii "uXor_param_u16_i8"
	.space 1
	.ascii "uXor_var_u16_i8"
	.space 1
	.ascii "uXor_param_u16_u32"
	.space 1
	.ascii "uXor_var_u16_u32"
	.space 1
	.ascii "uXor_param_u16_C"
	.space 1
	.ascii "uXor_var_u16_C"
	.space 1
	.ascii "uXor_param_u16_u8"
	.space 1
	.ascii "uXor_var_u16_u8"
	.space 1
	.ascii "uXor_param_u16_I"
	.space 1
	.ascii "uXor_var_u16_I"
	.space 1
	.ascii "uXor_param_u16_i64"
	.space 1
	.ascii "uXor_var_u16_i64"
	.space 1
	.ascii "uXor_param_u16_LC"
	.space 1
	.ascii "uXor_var_u16_LC"
	.space 1
	.ascii "uXor_param_u16_i16"
	.space 1
	.ascii "uXor_var_u16_i16"
	.space 1
	.ascii "uXor_param_u64_i32"
	.space 1
	.ascii "uXor_var_u64_i32"
	.space 1
	.ascii "uXor_param_u64_u16"
	.space 1
	.ascii "uXor_var_u64_u16"
	.space 1
	.ascii "uXor_param_u64_u64"
	.space 1
	.ascii "uXor_var_u64_u64"
	.space 1
	.ascii "uXor_param_u64_L"
	.space 1
	.ascii "uXor_var_u64_L"
	.space 1
	.ascii "uXor_param_u64_i8"
	.space 1
	.ascii "uXor_var_u64_i8"
	.space 1
	.ascii "uXor_param_u64_u32"
	.space 1
	.ascii "uXor_var_u64_u32"
	.space 1
	.ascii "uXor_param_u64_C"
	.space 1
	.ascii "uXor_var_u64_C"
	.space 1
	.ascii "uXor_param_u64_u8"
	.space 1
	.ascii "uXor_var_u64_u8"
	.space 1
	.ascii "uXor_param_u64_I"
	.space 1
	.ascii "uXor_var_u64_I"
	.space 1
	.ascii "uXor_param_u64_i64"
	.space 1
	.ascii "uXor_var_u64_i64"
	.space 1
	.ascii "uXor_param_u64_LC"
	.space 1
	.ascii "uXor_var_u64_LC"
	.space 1
	.ascii "uXor_param_u64_i16"
	.space 1
	.ascii "uXor_var_u64_i16"
	.space 1
	.ascii "uXor_param_L_i32"
	.space 1
	.ascii "uXor_var_L_i32"
	.space 1
	.ascii "uXor_param_L_u16"
	.space 1
	.ascii "uXor_var_L_u16"
	.space 1
	.ascii "uXor_param_L_u64"
	.space 1
	.ascii "uXor_var_L_u64"
	.space 1
	.ascii "uXor_param_L_L"
	.space 1
	.ascii "uXor_var_L_L"
	.space 1
	.ascii "uXor_param_L_i8"
	.space 1
	.ascii "uXor_var_L_i8"
	.space 1
	.ascii "uXor_param_L_u32"
	.space 1
	.ascii "uXor_var_L_u32"
	.space 1
	.ascii "uXor_param_L_C"
	.space 1
	.ascii "uXor_var_L_C"
	.space 1
	.ascii "uXor_param_L_u8"
	.space 1
	.ascii "uXor_var_L_u8"
	.space 1
	.ascii "uXor_param_L_I"
	.space 1
	.ascii "uXor_var_L_I"
	.space 1
	.ascii "uXor_param_L_i64"
	.space 1
	.ascii "uXor_var_L_i64"
	.space 1
	.ascii "uXor_param_L_LC"
	.space 1
	.ascii "uXor_var_L_LC"
	.space 1
	.ascii "uXor_param_L_i16"
	.space 1
	.ascii "uXor_var_L_i16"
	.space 1
	.ascii "uXor_param_i8_i32"
	.space 1
	.ascii "uXor_var_i8_i32"
	.space 1
	.ascii "uXor_param_i8_u16"
	.space 1
	.ascii "uXor_var_i8_u16"
	.space 1
	.ascii "uXor_param_i8_u64"
	.space 1
	.ascii "uXor_var_i8_u64"
	.space 1
	.ascii "uXor_param_i8_L"
	.space 1
	.ascii "uXor_var_i8_L"
	.space 1
	.ascii "uXor_param_i8_i8"
	.space 1
	.ascii "uXor_var_i8_i8"
	.space 1
	.ascii "uXor_param_i8_u32"
	.space 1
	.ascii "uXor_var_i8_u32"
	.space 1
	.ascii "uXor_param_i8_C"
	.space 1
	.ascii "uXor_var_i8_C"
	.space 1
	.ascii "uXor_param_i8_u8"
	.space 1
	.ascii "uXor_var_i8_u8"
	.space 1
	.ascii "uXor_param_i8_I"
	.space 1
	.ascii "uXor_var_i8_I"
	.space 1
	.ascii "uXor_param_i8_i64"
	.space 1
	.ascii "uXor_var_i8_i64"
	.space 1
	.ascii "uXor_param_i8_LC"
	.space 1
	.ascii "uXor_var_i8_LC"
	.space 1
	.ascii "uXor_param_i8_i16"
	.space 1
	.ascii "uXor_var_i8_i16"
	.space 1
	.ascii "uXor_param_u32_i32"
	.space 1
	.ascii "uXor_var_u32_i32"
	.space 1
	.ascii "uXor_param_u32_u16"
	.space 1
	.ascii "uXor_var_u32_u16"
	.space 1
	.ascii "uXor_param_u32_u64"
	.space 1
	.ascii "uXor_var_u32_u64"
	.space 1
	.ascii "uXor_param_u32_L"
	.space 1
	.ascii "uXor_var_u32_L"
	.space 1
	.ascii "uXor_param_u32_i8"
	.space 1
	.ascii "uXor_var_u32_i8"
	.space 1
	.ascii "uXor_param_u32_u32"
	.space 1
	.ascii "uXor_var_u32_u32"
	.space 1
	.ascii "uXor_param_u32_C"
	.space 1
	.ascii "uXor_var_u32_C"
	.space 1
	.ascii "uXor_param_u32_u8"
	.space 1
	.ascii "uXor_var_u32_u8"
	.space 1
	.ascii "uXor_param_u32_I"
	.space 1
	.ascii "uXor_var_u32_I"
	.space 1
	.ascii "uXor_param_u32_i64"
	.space 1
	.ascii "uXor_var_u32_i64"
	.space 1
	.ascii "uXor_param_u32_LC"
	.space 1
	.ascii "uXor_var_u32_LC"
	.space 1
	.ascii "uXor_param_u32_i16"
	.space 1
	.ascii "uXor_var_u32_i16"
	.space 1
	.ascii "uXor_param_C_i32"
	.space 1
	.ascii "uXor_var_C_i32"
	.space 1
	.ascii "uXor_param_C_u16"
	.space 1
	.ascii "uXor_var_C_u16"
	.space 1
	.ascii "uXor_param_C_u64"
	.space 1
	.ascii "uXor_var_C_u64"
	.space 1
	.ascii "uXor_param_C_L"
	.space 1
	.ascii "uXor_var_C_L"
	.space 1
	.ascii "uXor_param_C_i8"
	.space 1
	.ascii "uXor_var_C_i8"
	.space 1
	.ascii "uXor_param_C_u32"
	.space 1
	.ascii "uXor_var_C_u32"
	.space 1
	.ascii "uXor_param_C_C"
	.space 1
	.ascii "uXor_var_C_C"
	.space 1
	.ascii "uXor_param_C_u8"
	.space 1
	.ascii "uXor_var_C_u8"
	.space 1
	.ascii "uXor_param_C_I"
	.space 1
	.ascii "uXor_var_C_I"
	.space 1
	.ascii "uXor_param_C_i64"
	.space 1
	.ascii "uXor_var_C_i64"
	.space 1
	.ascii "uXor_param_C_LC"
	.space 1
	.ascii "uXor_var_C_LC"
	.space 1
	.ascii "uXor_param_C_i16"
	.space 1
	.ascii "uXor_var_C_i16"
	.space 1
	.ascii "uXor_param_u8_i32"
	.space 1
	.ascii "uXor_var_u8_i32"
	.space 1
	.ascii "uXor_param_u8_u16"
	.space 1
	.ascii "uXor_var_u8_u16"
	.space 1
	.ascii "uXor_param_u8_u64"
	.space 1
	.ascii "uXor_var_u8_u64"
	.space 1
	.ascii "uXor_param_u8_L"
	.space 1
	.ascii "uXor_var_u8_L"
	.space 1
	.ascii "uXor_param_u8_i8"
	.space 1
	.ascii "uXor_var_u8_i8"
	.space 1
	.ascii "uXor_param_u8_u32"
	.space 1
	.ascii "uXor_var_u8_u32"
	.space 1
	.ascii "uXor_param_u8_C"
	.space 1
	.ascii "uXor_var_u8_C"
	.space 1
	.ascii "uXor_param_u8_u8"
	.space 1
	.ascii "uXor_var_u8_u8"
	.space 1
	.ascii "uXor_param_u8_I"
	.space 1
	.ascii "uXor_var_u8_I"
	.space 1
	.ascii "uXor_param_u8_i64"
	.space 1
	.ascii "uXor_var_u8_i64"
	.space 1
	.ascii "uXor_param_u8_LC"
	.space 1
	.ascii "uXor_var_u8_LC"
	.space 1
	.ascii "uXor_param_u8_i16"
	.space 1
	.ascii "uXor_var_u8_i16"
	.space 1
	.ascii "uXor_param_I_i32"
	.space 1
	.ascii "uXor_var_I_i32"
	.space 1
	.ascii "uXor_param_I_u16"
	.space 1
	.ascii "uXor_var_I_u16"
	.space 1
	.ascii "uXor_param_I_u64"
	.space 1
	.ascii "uXor_var_I_u64"
	.space 1
	.ascii "uXor_param_I_L"
	.space 1
	.ascii "uXor_var_I_L"
	.space 1
	.ascii "uXor_param_I_i8"
	.space 1
	.ascii "uXor_var_I_i8"
	.space 1
	.ascii "uXor_param_I_u32"
	.space 1
	.ascii "uXor_var_I_u32"
	.space 1
	.ascii "uXor_param_I_C"
	.space 1
	.ascii "uXor_var_I_C"
	.space 1
	.ascii "uXor_param_I_u8"
	.space 1
	.ascii "uXor_var_I_u8"
	.space 1
	.ascii "uXor_param_I_I"
	.space 1
	.ascii "uXor_var_I_I"
	.space 1
	.ascii "uXor_param_I_i64"
	.space 1
	.ascii "uXor_var_I_i64"
	.space 1
	.ascii "uXor_param_I_LC"
	.space 1
	.ascii "uXor_var_I_LC"
	.space 1
	.ascii "uXor_param_I_i16"
	.space 1
	.ascii "uXor_var_I_i16"
	.space 1
	.ascii "uXor_param_i64_i32"
	.space 1
	.ascii "uXor_var_i64_i32"
	.space 1
	.ascii "uXor_param_i64_u16"
	.space 1
	.ascii "uXor_var_i64_u16"
	.space 1
	.ascii "uXor_param_i64_u64"
	.space 1
	.ascii "uXor_var_i64_u64"
	.space 1
	.ascii "uXor_param_i64_L"
	.space 1
	.ascii "uXor_var_i64_L"
	.space 1
	.ascii "uXor_param_i64_i8"
	.space 1
	.ascii "uXor_var_i64_i8"
	.space 1
	.ascii "uXor_param_i64_u32"
	.space 1
	.ascii "uXor_var_i64_u32"
	.space 1
	.ascii "uXor_param_i64_C"
	.space 1
	.ascii "uXor_var_i64_C"
	.space 1
	.ascii "uXor_param_i64_u8"
	.space 1
	.ascii "uXor_var_i64_u8"
	.space 1
	.ascii "uXor_param_i64_I"
	.space 1
	.ascii "uXor_var_i64_I"
	.space 1
	.ascii "uXor_param_i64_i64"
	.space 1
	.ascii "uXor_var_i64_i64"
	.space 1
	.ascii "uXor_param_i64_LC"
	.space 1
	.ascii "uXor_var_i64_LC"
	.space 1
	.ascii "uXor_param_i64_i16"
	.space 1
	.ascii "uXor_var_i64_i16"
	.space 1
	.ascii "uXor_param_LC_i32"
	.space 1
	.ascii "uXor_var_LC_i32"
	.space 1
	.ascii "uXor_param_LC_u16"
	.space 1
	.ascii "uXor_var_LC_u16"
	.space 1
	.ascii "uXor_param_LC_u64"
	.space 1
	.ascii "uXor_var_LC_u64"
	.space 1
	.ascii "uXor_param_LC_L"
	.space 1
	.ascii "uXor_var_LC_L"
	.space 1
	.ascii "uXor_param_LC_i8"
	.space 1
	.ascii "uXor_var_LC_i8"
	.space 1
	.ascii "uXor_param_LC_u32"
	.space 1
	.ascii "uXor_var_LC_u32"
	.space 1
	.ascii "uXor_param_LC_C"
	.space 1
	.ascii "uXor_var_LC_C"
	.space 1
	.ascii "uXor_param_LC_u8"
	.space 1
	.ascii "uXor_var_LC_u8"
	.space 1
	.ascii "uXor_param_LC_I"
	.space 1
	.ascii "uXor_var_LC_I"
	.space 1
	.ascii "uXor_param_LC_i64"
	.space 1
	.ascii "uXor_var_LC_i64"
	.space 1
	.ascii "uXor_param_LC_LC"
	.space 1
	.ascii "uXor_var_LC_LC"
	.space 1
	.ascii "uXor_param_LC_i16"
	.space 1
	.ascii "uXor_var_LC_i16"
	.space 1
	.ascii "uXor_param_i16_i32"
	.space 1
	.ascii "uXor_var_i16_i32"
	.space 1
	.ascii "uXor_param_i16_u16"
	.space 1
	.ascii "uXor_var_i16_u16"
	.space 1
	.ascii "uXor_param_i16_u64"
	.space 1
	.ascii "uXor_var_i16_u64"
	.space 1
	.ascii "uXor_param_i16_L"
	.space 1
	.ascii "uXor_var_i16_L"
	.space 1
	.ascii "uXor_param_i16_i8"
	.space 1
	.ascii "uXor_var_i16_i8"
	.space 1
	.ascii "uXor_param_i16_u32"
	.space 1
	.ascii "uXor_var_i16_u32"
	.space 1
	.ascii "uXor_param_i16_C"
	.space 1
	.ascii "uXor_var_i16_C"
	.space 1
	.ascii "uXor_param_i16_u8"
	.space 1
	.ascii "uXor_var_i16_u8"
	.space 1
	.ascii "uXor_param_i16_I"
	.space 1
	.ascii "uXor_var_i16_I"
	.space 1
	.ascii "uXor_param_i16_i64"
	.space 1
	.ascii "uXor_var_i16_i64"
	.space 1
	.ascii "uXor_param_i16_LC"
	.space 1
	.ascii "uXor_var_i16_LC"
	.space 1
	.ascii "uXor_param_i16_i16"
	.space 1
	.ascii "uXor_var_i16_i16"
	.space 1
	.ascii "uOr_param_i32_i32"
	.space 1
	.ascii "uOr_var_i32_i32"
	.space 1
	.ascii "uOr_param_i32_u16"
	.space 1
	.ascii "uOr_var_i32_u16"
	.space 1
	.ascii "uOr_param_i32_u64"
	.space 1
	.ascii "uOr_var_i32_u64"
	.space 1
	.ascii "uOr_param_i32_L"
	.space 1
	.ascii "uOr_var_i32_L"
	.space 1
	.ascii "uOr_param_i32_i8"
	.space 1
	.ascii "uOr_var_i32_i8"
	.space 1
	.ascii "uOr_param_i32_u32"
	.space 1
	.ascii "uOr_var_i32_u32"
	.space 1
	.ascii "uOr_param_i32_C"
	.space 1
	.ascii "uOr_var_i32_C"
	.space 1
	.ascii "uOr_param_i32_u8"
	.space 1
	.ascii "uOr_var_i32_u8"
	.space 1
	.ascii "uOr_param_i32_I"
	.space 1
	.ascii "uOr_var_i32_I"
	.space 1
	.ascii "uOr_param_i32_i64"
	.space 1
	.ascii "uOr_var_i32_i64"
	.space 1
	.ascii "uOr_param_i32_LC"
	.space 1
	.ascii "uOr_var_i32_LC"
	.space 1
	.ascii "uOr_param_i32_i16"
	.space 1
	.ascii "uOr_var_i32_i16"
	.space 1
	.ascii "uOr_param_u16_i32"
	.space 1
	.ascii "uOr_var_u16_i32"
	.space 1
	.ascii "uOr_param_u16_u16"
	.space 1
	.ascii "uOr_var_u16_u16"
	.space 1
	.ascii "uOr_param_u16_u64"
	.space 1
	.ascii "uOr_var_u16_u64"
	.space 1
	.ascii "uOr_param_u16_L"
	.space 1
	.ascii "uOr_var_u16_L"
	.space 1
	.ascii "uOr_param_u16_i8"
	.space 1
	.ascii "uOr_var_u16_i8"
	.space 1
	.ascii "uOr_param_u16_u32"
	.space 1
	.ascii "uOr_var_u16_u32"
	.space 1
	.ascii "uOr_param_u16_C"
	.space 1
	.ascii "uOr_var_u16_C"
	.space 1
	.ascii "uOr_param_u16_u8"
	.space 1
	.ascii "uOr_var_u16_u8"
	.space 1
	.ascii "uOr_param_u16_I"
	.space 1
	.ascii "uOr_var_u16_I"
	.space 1
	.ascii "uOr_param_u16_i64"
	.space 1
	.ascii "uOr_var_u16_i64"
	.space 1
	.ascii "uOr_param_u16_LC"
	.space 1
	.ascii "uOr_var_u16_LC"
	.space 1
	.ascii "uOr_param_u16_i16"
	.space 1
	.ascii "uOr_var_u16_i16"
	.space 1
	.ascii "uOr_param_u64_i32"
	.space 1
	.ascii "uOr_var_u64_i32"
	.space 1
	.ascii "uOr_param_u64_u16"
	.space 1
	.ascii "uOr_var_u64_u16"
	.space 1
	.ascii "uOr_param_u64_u64"
	.space 1
	.ascii "uOr_var_u64_u64"
	.space 1
	.ascii "uOr_param_u64_L"
	.space 1
	.ascii "uOr_var_u64_L"
	.space 1
	.ascii "uOr_param_u64_i8"
	.space 1
	.ascii "uOr_var_u64_i8"
	.space 1
	.ascii "uOr_param_u64_u32"
	.space 1
	.ascii "uOr_var_u64_u32"
	.space 1
	.ascii "uOr_param_u64_C"
	.space 1
	.ascii "uOr_var_u64_C"
	.space 1
	.ascii "uOr_param_u64_u8"
	.space 1
	.ascii "uOr_var_u64_u8"
	.space 1
	.ascii "uOr_param_u64_I"
	.space 1
	.ascii "uOr_var_u64_I"
	.space 1
	.ascii "uOr_param_u64_i64"
	.space 1
	.ascii "uOr_var_u64_i64"
	.space 1
	.ascii "uOr_param_u64_LC"
	.space 1
	.ascii "uOr_var_u64_LC"
	.space 1
	.ascii "uOr_param_u64_i16"
	.space 1
	.ascii "uOr_var_u64_i16"
	.space 1
	.ascii "uOr_param_L_i32"
	.space 1
	.ascii "uOr_var_L_i32"
	.space 1
	.ascii "uOr_param_L_u16"
	.space 1
	.ascii "uOr_var_L_u16"
	.space 1
	.ascii "uOr_param_L_u64"
	.space 1
	.ascii "uOr_var_L_u64"
	.space 1
	.ascii "uOr_param_L_L"
	.space 1
	.ascii "uOr_var_L_L"
	.space 1
	.ascii "uOr_param_L_i8"
	.space 1
	.ascii "uOr_var_L_i8"
	.space 1
	.ascii "uOr_param_L_u32"
	.space 1
	.ascii "uOr_var_L_u32"
	.space 1
	.ascii "uOr_param_L_C"
	.space 1
	.ascii "uOr_var_L_C"
	.space 1
	.ascii "uOr_param_L_u8"
	.space 1
	.ascii "uOr_var_L_u8"
	.space 1
	.ascii "uOr_param_L_I"
	.space 1
	.ascii "uOr_var_L_I"
	.space 1
	.ascii "uOr_param_L_i64"
	.space 1
	.ascii "uOr_var_L_i64"
	.space 1
	.ascii "uOr_param_L_LC"
	.space 1
	.ascii "uOr_var_L_LC"
	.space 1
	.ascii "uOr_param_L_i16"
	.space 1
	.ascii "uOr_var_L_i16"
	.space 1
	.ascii "uOr_param_i8_i32"
	.space 1
	.ascii "uOr_var_i8_i32"
	.space 1
	.ascii "uOr_param_i8_u16"
	.space 1
	.ascii "uOr_var_i8_u16"
	.space 1
	.ascii "uOr_param_i8_u64"
	.space 1
	.ascii "uOr_var_i8_u64"
	.space 1
	.ascii "uOr_param_i8_L"
	.space 1
	.ascii "uOr_var_i8_L"
	.space 1
	.ascii "uOr_param_i8_i8"
	.space 1
	.ascii "uOr_var_i8_i8"
	.space 1
	.ascii "uOr_param_i8_u32"
	.space 1
	.ascii "uOr_var_i8_u32"
	.space 1
	.ascii "uOr_param_i8_C"
	.space 1
	.ascii "uOr_var_i8_C"
	.space 1
	.ascii "uOr_param_i8_u8"
	.space 1
	.ascii "uOr_var_i8_u8"
	.space 1
	.ascii "uOr_param_i8_I"
	.space 1
	.ascii "uOr_var_i8_I"
	.space 1
	.ascii "uOr_param_i8_i64"
	.space 1
	.ascii "uOr_var_i8_i64"
	.space 1
	.ascii "uOr_param_i8_LC"
	.space 1
	.ascii "uOr_var_i8_LC"
	.space 1
	.ascii "uOr_param_i8_i16"
	.space 1
	.ascii "uOr_var_i8_i16"
	.space 1
	.ascii "uOr_param_u32_i32"
	.space 1
	.ascii "uOr_var_u32_i32"
	.space 1
	.ascii "uOr_param_u32_u16"
	.space 1
	.ascii "uOr_var_u32_u16"
	.space 1
	.ascii "uOr_param_u32_u64"
	.space 1
	.ascii "uOr_var_u32_u64"
	.space 1
	.ascii "uOr_param_u32_L"
	.space 1
	.ascii "uOr_var_u32_L"
	.space 1
	.ascii "uOr_param_u32_i8"
	.space 1
	.ascii "uOr_var_u32_i8"
	.space 1
	.ascii "uOr_param_u32_u32"
	.space 1
	.ascii "uOr_var_u32_u32"
	.space 1
	.ascii "uOr_param_u32_C"
	.space 1
	.ascii "uOr_var_u32_C"
	.space 1
	.ascii "uOr_param_u32_u8"
	.space 1
	.ascii "uOr_var_u32_u8"
	.space 1
	.ascii "uOr_param_u32_I"
	.space 1
	.ascii "uOr_var_u32_I"
	.space 1
	.ascii "uOr_param_u32_i64"
	.space 1
	.ascii "uOr_var_u32_i64"
	.space 1
	.ascii "uOr_param_u32_LC"
	.space 1
	.ascii "uOr_var_u32_LC"
	.space 1
	.ascii "uOr_param_u32_i16"
	.space 1
	.ascii "uOr_var_u32_i16"
	.space 1
	.ascii "uOr_param_C_i32"
	.space 1
	.ascii "uOr_var_C_i32"
	.space 1
	.ascii "uOr_param_C_u16"
	.space 1
	.ascii "uOr_var_C_u16"
	.space 1
	.ascii "uOr_param_C_u64"
	.space 1
	.ascii "uOr_var_C_u64"
	.space 1
	.ascii "uOr_param_C_L"
	.space 1
	.ascii "uOr_var_C_L"
	.space 1
	.ascii "uOr_param_C_i8"
	.space 1
	.ascii "uOr_var_C_i8"
	.space 1
	.ascii "uOr_param_C_u32"
	.space 1
	.ascii "uOr_var_C_u32"
	.space 1
	.ascii "uOr_param_C_C"
	.space 1
	.ascii "uOr_var_C_C"
	.space 1
	.ascii "uOr_param_C_u8"
	.space 1
	.ascii "uOr_var_C_u8"
	.space 1
	.ascii "uOr_param_C_I"
	.space 1
	.ascii "uOr_var_C_I"
	.space 1
	.ascii "uOr_param_C_i64"
	.space 1
	.ascii "uOr_var_C_i64"
	.space 1
	.ascii "uOr_param_C_LC"
	.space 1
	.ascii "uOr_var_C_LC"
	.space 1
	.ascii "uOr_param_C_i16"
	.space 1
	.ascii "uOr_var_C_i16"
	.space 1
	.ascii "uOr_param_u8_i32"
	.space 1
	.ascii "uOr_var_u8_i32"
	.space 1
	.ascii "uOr_param_u8_u16"
	.space 1
	.ascii "uOr_var_u8_u16"
	.space 1
	.ascii "uOr_param_u8_u64"
	.space 1
	.ascii "uOr_var_u8_u64"
	.space 1
	.ascii "uOr_param_u8_L"
	.space 1
	.ascii "uOr_var_u8_L"
	.space 1
	.ascii "uOr_param_u8_i8"
	.space 1
	.ascii "uOr_var_u8_i8"
	.space 1
	.ascii "uOr_param_u8_u32"
	.space 1
	.ascii "uOr_var_u8_u32"
	.space 1
	.ascii "uOr_param_u8_C"
	.space 1
	.ascii "uOr_var_u8_C"
	.space 1
	.ascii "uOr_param_u8_u8"
	.space 1
	.ascii "uOr_var_u8_u8"
	.space 1
	.ascii "uOr_param_u8_I"
	.space 1
	.ascii "uOr_var_u8_I"
	.space 1
	.ascii "uOr_param_u8_i64"
	.space 1
	.ascii "uOr_var_u8_i64"
	.space 1
	.ascii "uOr_param_u8_LC"
	.space 1
	.ascii "uOr_var_u8_LC"
	.space 1
	.ascii "uOr_param_u8_i16"
	.space 1
	.ascii "uOr_var_u8_i16"
	.space 1
	.ascii "uOr_param_I_i32"
	.space 1
	.ascii "uOr_var_I_i32"
	.space 1
	.ascii "uOr_param_I_u16"
	.space 1
	.ascii "uOr_var_I_u16"
	.space 1
	.ascii "uOr_param_I_u64"
	.space 1
	.ascii "uOr_var_I_u64"
	.space 1
	.ascii "uOr_param_I_L"
	.space 1
	.ascii "uOr_var_I_L"
	.space 1
	.ascii "uOr_param_I_i8"
	.space 1
	.ascii "uOr_var_I_i8"
	.space 1
	.ascii "uOr_param_I_u32"
	.space 1
	.ascii "uOr_var_I_u32"
	.space 1
	.ascii "uOr_param_I_C"
	.space 1
	.ascii "uOr_var_I_C"
	.space 1
	.ascii "uOr_param_I_u8"
	.space 1
	.ascii "uOr_var_I_u8"
	.space 1
	.ascii "uOr_param_I_I"
	.space 1
	.ascii "uOr_var_I_I"
	.space 1
	.ascii "uOr_param_I_i64"
	.space 1
	.ascii "uOr_var_I_i64"
	.space 1
	.ascii "uOr_param_I_LC"
	.space 1
	.ascii "uOr_var_I_LC"
	.space 1
	.ascii "uOr_param_I_i16"
	.space 1
	.ascii "uOr_var_I_i16"
	.space 1
	.ascii "uOr_param_i64_i32"
	.space 1
	.ascii "uOr_var_i64_i32"
	.space 1
	.ascii "uOr_param_i64_u16"
	.space 1
	.ascii "uOr_var_i64_u16"
	.space 1
	.ascii "uOr_param_i64_u64"
	.space 1
	.ascii "uOr_var_i64_u64"
	.space 1
	.ascii "uOr_param_i64_L"
	.space 1
	.ascii "uOr_var_i64_L"
	.space 1
	.ascii "uOr_param_i64_i8"
	.space 1
	.ascii "uOr_var_i64_i8"
	.space 1
	.ascii "uOr_param_i64_u32"
	.space 1
	.ascii "uOr_var_i64_u32"
	.space 1
	.ascii "uOr_param_i64_C"
	.space 1
	.ascii "uOr_var_i64_C"
	.space 1
	.ascii "uOr_param_i64_u8"
	.space 1
	.ascii "uOr_var_i64_u8"
	.space 1
	.ascii "uOr_param_i64_I"
	.space 1
	.ascii "uOr_var_i64_I"
	.space 1
	.ascii "uOr_param_i64_i64"
	.space 1
	.ascii "uOr_var_i64_i64"
	.space 1
	.ascii "uOr_param_i64_LC"
	.space 1
	.ascii "uOr_var_i64_LC"
	.space 1
	.ascii "uOr_param_i64_i16"
	.space 1
	.ascii "uOr_var_i64_i16"
	.space 1
	.ascii "uOr_param_LC_i32"
	.space 1
	.ascii "uOr_var_LC_i32"
	.space 1
	.ascii "uOr_param_LC_u16"
	.space 1
	.ascii "uOr_var_LC_u16"
	.space 1
	.ascii "uOr_param_LC_u64"
	.space 1
	.ascii "uOr_var_LC_u64"
	.space 1
	.ascii "uOr_param_LC_L"
	.space 1
	.ascii "uOr_var_LC_L"
	.space 1
	.ascii "uOr_param_LC_i8"
	.space 1
	.ascii "uOr_var_LC_i8"
	.space 1
	.ascii "uOr_param_LC_u32"
	.space 1
	.ascii "uOr_var_LC_u32"
	.space 1
	.ascii "uOr_param_LC_C"
	.space 1
	.ascii "uOr_var_LC_C"
	.space 1
	.ascii "uOr_param_LC_u8"
	.space 1
	.ascii "uOr_var_LC_u8"
	.space 1
	.ascii "uOr_param_LC_I"
	.space 1
	.ascii "uOr_var_LC_I"
	.space 1
	.ascii "uOr_param_LC_i64"
	.space 1
	.ascii "uOr_var_LC_i64"
	.space 1
	.ascii "uOr_param_LC_LC"
	.space 1
	.ascii "uOr_var_LC_LC"
	.space 1
	.ascii "uOr_param_LC_i16"
	.space 1
	.ascii "uOr_var_LC_i16"
	.space 1
	.ascii "uOr_param_i16_i32"
	.space 1
	.ascii "uOr_var_i16_i32"
	.space 1
	.ascii "uOr_param_i16_u16"
	.space 1
	.ascii "uOr_var_i16_u16"
	.space 1
	.ascii "uOr_param_i16_u64"
	.space 1
	.ascii "uOr_var_i16_u64"
	.space 1
	.ascii "uOr_param_i16_L"
	.space 1
	.ascii "uOr_var_i16_L"
	.space 1
	.ascii "uOr_param_i16_i8"
	.space 1
	.ascii "uOr_var_i16_i8"
	.space 1
	.ascii "uOr_param_i16_u32"
	.space 1
	.ascii "uOr_var_i16_u32"
	.space 1
	.ascii "uOr_param_i16_C"
	.space 1
	.ascii "uOr_var_i16_C"
	.space 1
	.ascii "uOr_param_i16_u8"
	.space 1
	.ascii "uOr_var_i16_u8"
	.space 1
	.ascii "uOr_param_i16_I"
	.space 1
	.ascii "uOr_var_i16_I"
	.space 1
	.ascii "uOr_param_i16_i64"
	.space 1
	.ascii "uOr_var_i16_i64"
	.space 1
	.ascii "uOr_param_i16_LC"
	.space 1
	.ascii "uOr_var_i16_LC"
	.space 1
	.ascii "uOr_param_i16_i16"
	.space 1
	.ascii "uOr_var_i16_i16"
	.space 1
	.ascii "uAnd_param_i32_i32"
	.space 1
	.ascii "uAnd_var_i32_i32"
	.space 1
	.ascii "uAnd_param_i32_u16"
	.space 1
	.ascii "uAnd_var_i32_u16"
	.space 1
	.ascii "uAnd_param_i32_u64"
	.space 1
	.ascii "uAnd_var_i32_u64"
	.space 1
	.ascii "uAnd_param_i32_L"
	.space 1
	.ascii "uAnd_var_i32_L"
	.space 1
	.ascii "uAnd_param_i32_i8"
	.space 1
	.ascii "uAnd_var_i32_i8"
	.space 1
	.ascii "uAnd_param_i32_u32"
	.space 1
	.ascii "uAnd_var_i32_u32"
	.space 1
	.ascii "uAnd_param_i32_C"
	.space 1
	.ascii "uAnd_var_i32_C"
	.space 1
	.ascii "uAnd_param_i32_u8"
	.space 1
	.ascii "uAnd_var_i32_u8"
	.space 1
	.ascii "uAnd_param_i32_I"
	.space 1
	.ascii "uAnd_var_i32_I"
	.space 1
	.ascii "uAnd_param_i32_i64"
	.space 1
	.ascii "uAnd_var_i32_i64"
	.space 1
	.ascii "uAnd_param_i32_LC"
	.space 1
	.ascii "uAnd_var_i32_LC"
	.space 1
	.ascii "uAnd_param_i32_i16"
	.space 1
	.ascii "uAnd_var_i32_i16"
	.space 1
	.ascii "uAnd_param_u16_i32"
	.space 1
	.ascii "uAnd_var_u16_i32"
	.space 1
	.ascii "uAnd_param_u16_u16"
	.space 1
	.ascii "uAnd_var_u16_u16"
	.space 1
	.ascii "uAnd_param_u16_u64"
	.space 1
	.ascii "uAnd_var_u16_u64"
	.space 1
	.ascii "uAnd_param_u16_L"
	.space 1
	.ascii "uAnd_var_u16_L"
	.space 1
	.ascii "uAnd_param_u16_i8"
	.space 1
	.ascii "uAnd_var_u16_i8"
	.space 1
	.ascii "uAnd_param_u16_u32"
	.space 1
	.ascii "uAnd_var_u16_u32"
	.space 1
	.ascii "uAnd_param_u16_C"
	.space 1
	.ascii "uAnd_var_u16_C"
	.space 1
	.ascii "uAnd_param_u16_u8"
	.space 1
	.ascii "uAnd_var_u16_u8"
	.space 1
	.ascii "uAnd_param_u16_I"
	.space 1
	.ascii "uAnd_var_u16_I"
	.space 1
	.ascii "uAnd_param_u16_i64"
	.space 1
	.ascii "uAnd_var_u16_i64"
	.space 1
	.ascii "uAnd_param_u16_LC"
	.space 1
	.ascii "uAnd_var_u16_LC"
	.space 1
	.ascii "uAnd_param_u16_i16"
	.space 1
	.ascii "uAnd_var_u16_i16"
	.space 1
	.ascii "uAnd_param_u64_i32"
	.space 1
	.ascii "uAnd_var_u64_i32"
	.space 1
	.ascii "uAnd_param_u64_u16"
	.space 1
	.ascii "uAnd_var_u64_u16"
	.space 1
	.ascii "uAnd_param_u64_u64"
	.space 1
	.ascii "uAnd_var_u64_u64"
	.space 1
	.ascii "uAnd_param_u64_L"
	.space 1
	.ascii "uAnd_var_u64_L"
	.space 1
	.ascii "uAnd_param_u64_i8"
	.space 1
	.ascii "uAnd_var_u64_i8"
	.space 1
	.ascii "uAnd_param_u64_u32"
	.space 1
	.ascii "uAnd_var_u64_u32"
	.space 1
	.ascii "uAnd_param_u64_C"
	.space 1
	.ascii "uAnd_var_u64_C"
	.space 1
	.ascii "uAnd_param_u64_u8"
	.space 1
	.ascii "uAnd_var_u64_u8"
	.space 1
	.ascii "uAnd_param_u64_I"
	.space 1
	.ascii "uAnd_var_u64_I"
	.space 1
	.ascii "uAnd_param_u64_i64"
	.space 1
	.ascii "uAnd_var_u64_i64"
	.space 1
	.ascii "uAnd_param_u64_LC"
	.space 1
	.ascii "uAnd_var_u64_LC"
	.space 1
	.ascii "uAnd_param_u64_i16"
	.space 1
	.ascii "uAnd_var_u64_i16"
	.space 1
	.ascii "uAnd_param_L_i32"
	.space 1
	.ascii "uAnd_var_L_i32"
	.space 1
	.ascii "uAnd_param_L_u16"
	.space 1
	.ascii "uAnd_var_L_u16"
	.space 1
	.ascii "uAnd_param_L_u64"
	.space 1
	.ascii "uAnd_var_L_u64"
	.space 1
	.ascii "uAnd_param_L_L"
	.space 1
	.ascii "uAnd_var_L_L"
	.space 1
	.ascii "uAnd_param_L_i8"
	.space 1
	.ascii "uAnd_var_L_i8"
	.space 1
	.ascii "uAnd_param_L_u32"
	.space 1
	.ascii "uAnd_var_L_u32"
	.space 1
	.ascii "uAnd_param_L_C"
	.space 1
	.ascii "uAnd_var_L_C"
	.space 1
	.ascii "uAnd_param_L_u8"
	.space 1
	.ascii "uAnd_var_L_u8"
	.space 1
	.ascii "uAnd_param_L_I"
	.space 1
	.ascii "uAnd_var_L_I"
	.space 1
	.ascii "uAnd_param_L_i64"
	.space 1
	.ascii "uAnd_var_L_i64"
	.space 1
	.ascii "uAnd_param_L_LC"
	.space 1
	.ascii "uAnd_var_L_LC"
	.space 1
	.ascii "uAnd_param_L_i16"
	.space 1
	.ascii "uAnd_var_L_i16"
	.space 1
	.ascii "uAnd_param_i8_i32"
	.space 1
	.ascii "uAnd_var_i8_i32"
	.space 1
	.ascii "uAnd_param_i8_u16"
	.space 1
	.ascii "uAnd_var_i8_u16"
	.space 1
	.ascii "uAnd_param_i8_u64"
	.space 1
	.ascii "uAnd_var_i8_u64"
	.space 1
	.ascii "uAnd_param_i8_L"
	.space 1
	.ascii "uAnd_var_i8_L"
	.space 1
	.ascii "uAnd_param_i8_i8"
	.space 1
	.ascii "uAnd_var_i8_i8"
	.space 1
	.ascii "uAnd_param_i8_u32"
	.space 1
	.ascii "uAnd_var_i8_u32"
	.space 1
	.ascii "uAnd_param_i8_C"
	.space 1
	.ascii "uAnd_var_i8_C"
	.space 1
	.ascii "uAnd_param_i8_u8"
	.space 1
	.ascii "uAnd_var_i8_u8"
	.space 1
	.ascii "uAnd_param_i8_I"
	.space 1
	.ascii "uAnd_var_i8_I"
	.space 1
	.ascii "uAnd_param_i8_i64"
	.space 1
	.ascii "uAnd_var_i8_i64"
	.space 1
	.ascii "uAnd_param_i8_LC"
	.space 1
	.ascii "uAnd_var_i8_LC"
	.space 1
	.ascii "uAnd_param_i8_i16"
	.space 1
	.ascii "uAnd_var_i8_i16"
	.space 1
	.ascii "uAnd_param_u32_i32"
	.space 1
	.ascii "uAnd_var_u32_i32"
	.space 1
	.ascii "uAnd_param_u32_u16"
	.space 1
	.ascii "uAnd_var_u32_u16"
	.space 1
	.ascii "uAnd_param_u32_u64"
	.space 1
	.ascii "uAnd_var_u32_u64"
	.space 1
	.ascii "uAnd_param_u32_L"
	.space 1
	.ascii "uAnd_var_u32_L"
	.space 1
	.ascii "uAnd_param_u32_i8"
	.space 1
	.ascii "uAnd_var_u32_i8"
	.space 1
	.ascii "uAnd_param_u32_u32"
	.space 1
	.ascii "uAnd_var_u32_u32"
	.space 1
	.ascii "uAnd_param_u32_C"
	.space 1
	.ascii "uAnd_var_u32_C"
	.space 1
	.ascii "uAnd_param_u32_u8"
	.space 1
	.ascii "uAnd_var_u32_u8"
	.space 1
	.ascii "uAnd_param_u32_I"
	.space 1
	.ascii "uAnd_var_u32_I"
	.space 1
	.ascii "uAnd_param_u32_i64"
	.space 1
	.ascii "uAnd_var_u32_i64"
	.space 1
	.ascii "uAnd_param_u32_LC"
	.space 1
	.ascii "uAnd_var_u32_LC"
	.space 1
	.ascii "uAnd_param_u32_i16"
	.space 1
	.ascii "uAnd_var_u32_i16"
	.space 1
	.ascii "uAnd_param_C_i32"
	.space 1
	.ascii "uAnd_var_C_i32"
	.space 1
	.ascii "uAnd_param_C_u16"
	.space 1
	.ascii "uAnd_var_C_u16"
	.space 1
	.ascii "uAnd_param_C_u64"
	.space 1
	.ascii "uAnd_var_C_u64"
	.space 1
	.ascii "uAnd_param_C_L"
	.space 1
	.ascii "uAnd_var_C_L"
	.space 1
	.ascii "uAnd_param_C_i8"
	.space 1
	.ascii "uAnd_var_C_i8"
	.space 1
	.ascii "uAnd_param_C_u32"
	.space 1
	.ascii "uAnd_var_C_u32"
	.space 1
	.ascii "uAnd_param_C_C"
	.space 1
	.ascii "uAnd_var_C_C"
	.space 1
	.ascii "uAnd_param_C_u8"
	.space 1
	.ascii "uAnd_var_C_u8"
	.space 1
	.ascii "uAnd_param_C_I"
	.space 1
	.ascii "uAnd_var_C_I"
	.space 1
	.ascii "uAnd_param_C_i64"
	.space 1
	.ascii "uAnd_var_C_i64"
	.space 1
	.ascii "uAnd_param_C_LC"
	.space 1
	.ascii "uAnd_var_C_LC"
	.space 1
	.ascii "uAnd_param_C_i16"
	.space 1
	.ascii "uAnd_var_C_i16"
	.space 1
	.ascii "uAnd_param_u8_i32"
	.space 1
	.ascii "uAnd_var_u8_i32"
	.space 1
	.ascii "uAnd_param_u8_u16"
	.space 1
	.ascii "uAnd_var_u8_u16"
	.space 1
	.ascii "uAnd_param_u8_u64"
	.space 1
	.ascii "uAnd_var_u8_u64"
	.space 1
	.ascii "uAnd_param_u8_L"
	.space 1
	.ascii "uAnd_var_u8_L"
	.space 1
	.ascii "uAnd_param_u8_i8"
	.space 1
	.ascii "uAnd_var_u8_i8"
	.space 1
	.ascii "uAnd_param_u8_u32"
	.space 1
	.ascii "uAnd_var_u8_u32"
	.space 1
	.ascii "uAnd_param_u8_C"
	.space 1
	.ascii "uAnd_var_u8_C"
	.space 1
	.ascii "uAnd_param_u8_u8"
	.space 1
	.ascii "uAnd_var_u8_u8"
	.space 1
	.ascii "uAnd_param_u8_I"
	.space 1
	.ascii "uAnd_var_u8_I"
	.space 1
	.ascii "uAnd_param_u8_i64"
	.space 1
	.ascii "uAnd_var_u8_i64"
	.space 1
	.ascii "uAnd_param_u8_LC"
	.space 1
	.ascii "uAnd_var_u8_LC"
	.space 1
	.ascii "uAnd_param_u8_i16"
	.space 1
	.ascii "uAnd_var_u8_i16"
	.space 1
	.ascii "uAnd_param_I_i32"
	.space 1
	.ascii "uAnd_var_I_i32"
	.space 1
	.ascii "uAnd_param_I_u16"
	.space 1
	.ascii "uAnd_var_I_u16"
	.space 1
	.ascii "uAnd_param_I_u64"
	.space 1
	.ascii "uAnd_var_I_u64"
	.space 1
	.ascii "uAnd_param_I_L"
	.space 1
	.ascii "uAnd_var_I_L"
	.space 1
	.ascii "uAnd_param_I_i8"
	.space 1
	.ascii "uAnd_var_I_i8"
	.space 1
	.ascii "uAnd_param_I_u32"
	.space 1
	.ascii "uAnd_var_I_u32"
	.space 1
	.ascii "uAnd_param_I_C"
	.space 1
	.ascii "uAnd_var_I_C"
	.space 1
	.ascii "uAnd_param_I_u8"
	.space 1
	.ascii "uAnd_var_I_u8"
	.space 1
	.ascii "uAnd_param_I_I"
	.space 1
	.ascii "uAnd_var_I_I"
	.space 1
	.ascii "uAnd_param_I_i64"
	.space 1
	.ascii "uAnd_var_I_i64"
	.space 1
	.ascii "uAnd_param_I_LC"
	.space 1
	.ascii "uAnd_var_I_LC"
	.space 1
	.ascii "uAnd_param_I_i16"
	.space 1
	.ascii "uAnd_var_I_i16"
	.space 1
	.ascii "uAnd_param_i64_i32"
	.space 1
	.ascii "uAnd_var_i64_i32"
	.space 1
	.ascii "uAnd_param_i64_u16"
	.space 1
	.ascii "uAnd_var_i64_u16"
	.space 1
	.ascii "uAnd_param_i64_u64"
	.space 1
	.ascii "uAnd_var_i64_u64"
	.space 1
	.ascii "uAnd_param_i64_L"
	.space 1
	.ascii "uAnd_var_i64_L"
	.space 1
	.ascii "uAnd_param_i64_i8"
	.space 1
	.ascii "uAnd_var_i64_i8"
	.space 1
	.ascii "uAnd_param_i64_u32"
	.space 1
	.ascii "uAnd_var_i64_u32"
	.space 1
	.ascii "uAnd_param_i64_C"
	.space 1
	.ascii "uAnd_var_i64_C"
	.space 1
	.ascii "uAnd_param_i64_u8"
	.space 1
	.ascii "uAnd_var_i64_u8"
	.space 1
	.ascii "uAnd_param_i64_I"
	.space 1
	.ascii "uAnd_var_i64_I"
	.space 1
	.ascii "uAnd_param_i64_i64"
	.space 1
	.ascii "uAnd_var_i64_i64"
	.space 1
	.ascii "uAnd_param_i64_LC"
	.space 1
	.ascii "uAnd_var_i64_LC"
	.space 1
	.ascii "uAnd_param_i64_i16"
	.space 1
	.ascii "uAnd_var_i64_i16"
	.space 1
	.ascii "uAnd_param_LC_i32"
	.space 1
	.ascii "uAnd_var_LC_i32"
	.space 1
	.ascii "uAnd_param_LC_u16"
	.space 1
	.ascii "uAnd_var_LC_u16"
	.space 1
	.ascii "uAnd_param_LC_u64"
	.space 1
	.ascii "uAnd_var_LC_u64"
	.space 1
	.ascii "uAnd_param_LC_L"
	.space 1
	.ascii "uAnd_var_LC_L"
	.space 1
	.ascii "uAnd_param_LC_i8"
	.space 1
	.ascii "uAnd_var_LC_i8"
	.space 1
	.ascii "uAnd_param_LC_u32"
	.space 1
	.ascii "uAnd_var_LC_u32"
	.space 1
	.ascii "uAnd_param_LC_C"
	.space 1
	.ascii "uAnd_var_LC_C"
	.space 1
	.ascii "uAnd_param_LC_u8"
	.space 1
	.ascii "uAnd_var_LC_u8"
	.space 1
	.ascii "uAnd_param_LC_I"
	.space 1
	.ascii "uAnd_var_LC_I"
	.space 1
	.ascii "uAnd_param_LC_i64"
	.space 1
	.ascii "uAnd_var_LC_i64"
	.space 1
	.ascii "uAnd_param_LC_LC"
	.space 1
	.ascii "uAnd_var_LC_LC"
	.space 1
	.ascii "uAnd_param_LC_i16"
	.space 1
	.ascii "uAnd_var_LC_i16"
	.space 1
	.ascii "uAnd_param_i16_i32"
	.space 1
	.ascii "uAnd_var_i16_i32"
	.space 1
	.ascii "uAnd_param_i16_u16"
	.space 1
	.ascii "uAnd_var_i16_u16"
	.space 1
	.ascii "uAnd_param_i16_u64"
	.space 1
	.ascii "uAnd_var_i16_u64"
	.space 1
	.ascii "uAnd_param_i16_L"
	.space 1
	.ascii "uAnd_var_i16_L"
	.space 1
	.ascii "uAnd_param_i16_i8"
	.space 1
	.ascii "uAnd_var_i16_i8"
	.space 1
	.ascii "uAnd_param_i16_u32"
	.space 1
	.ascii "uAnd_var_i16_u32"
	.space 1
	.ascii "uAnd_param_i16_C"
	.space 1
	.ascii "uAnd_var_i16_C"
	.space 1
	.ascii "uAnd_param_i16_u8"
	.space 1
	.ascii "uAnd_var_i16_u8"
	.space 1
	.ascii "uAnd_param_i16_I"
	.space 1
	.ascii "uAnd_var_i16_I"
	.space 1
	.ascii "uAnd_param_i16_i64"
	.space 1
	.ascii "uAnd_var_i16_i64"
	.space 1
	.ascii "uAnd_param_i16_LC"
	.space 1
	.ascii "uAnd_var_i16_LC"
	.space 1
	.ascii "uAnd_param_i16_i16"
	.space 1
	.ascii "uAnd_var_i16_i16"
	.space 1
	.ascii "GE_param_i32_i32"
	.space 1
	.ascii "uGE_param_i32_i32"
	.space 1
	.ascii "GE_var_i32_i32"
	.space 1
	.ascii "uGE_var_i32_i32"
	.space 1
	.ascii "GE_param_i32_u16"
	.space 1
	.ascii "uGE_param_i32_u16"
	.space 1
	.ascii "GE_var_i32_u16"
	.space 1
	.ascii "uGE_var_i32_u16"
	.space 1
	.ascii "GE_param_i32_u64"
	.space 1
	.ascii "uGE_param_i32_u64"
	.space 1
	.ascii "GE_var_i32_u64"
	.space 1
	.ascii "uGE_var_i32_u64"
	.space 1
	.ascii "GE_param_i32_L"
	.space 1
	.ascii "uGE_param_i32_L"
	.space 1
	.ascii "GE_var_i32_L"
	.space 1
	.ascii "uGE_var_i32_L"
	.space 1
	.ascii "GE_param_i32_i8"
	.space 1
	.ascii "uGE_param_i32_i8"
	.space 1
	.ascii "GE_var_i32_i8"
	.space 1
	.ascii "uGE_var_i32_i8"
	.space 1
	.ascii "GE_param_i32_u32"
	.space 1
	.ascii "uGE_param_i32_u32"
	.space 1
	.ascii "GE_var_i32_u32"
	.space 1
	.ascii "uGE_var_i32_u32"
	.space 1
	.ascii "GE_param_i32_C"
	.space 1
	.ascii "uGE_param_i32_C"
	.space 1
	.ascii "GE_var_i32_C"
	.space 1
	.ascii "uGE_var_i32_C"
	.space 1
	.ascii "GE_param_i32_u8"
	.space 1
	.ascii "uGE_param_i32_u8"
	.space 1
	.ascii "GE_var_i32_u8"
	.space 1
	.ascii "uGE_var_i32_u8"
	.space 1
	.ascii "GE_param_i32_I"
	.space 1
	.ascii "uGE_param_i32_I"
	.space 1
	.ascii "GE_var_i32_I"
	.space 1
	.ascii "uGE_var_i32_I"
	.space 1
	.ascii "GE_param_i32_i64"
	.space 1
	.ascii "uGE_param_i32_i64"
	.space 1
	.ascii "GE_var_i32_i64"
	.space 1
	.ascii "uGE_var_i32_i64"
	.space 1
	.ascii "GE_param_i32_LC"
	.space 1
	.ascii "uGE_param_i32_LC"
	.space 1
	.ascii "GE_var_i32_LC"
	.space 1
	.ascii "uGE_var_i32_LC"
	.space 1
	.ascii "GE_param_i32_i16"
	.space 1
	.ascii "uGE_param_i32_i16"
	.space 1
	.ascii "GE_var_i32_i16"
	.space 1
	.ascii "uGE_var_i32_i16"
	.space 1
	.ascii "GE_param_u16_i32"
	.space 1
	.ascii "uGE_param_u16_i32"
	.space 1
	.ascii "GE_var_u16_i32"
	.space 1
	.ascii "uGE_var_u16_i32"
	.space 1
	.ascii "GE_param_u16_u16"
	.space 1
	.ascii "uGE_param_u16_u16"
	.space 1
	.ascii "GE_var_u16_u16"
	.space 1
	.ascii "uGE_var_u16_u16"
	.space 1
	.ascii "GE_param_u16_u64"
	.space 1
	.ascii "uGE_param_u16_u64"
	.space 1
	.ascii "GE_var_u16_u64"
	.space 1
	.ascii "uGE_var_u16_u64"
	.space 1
	.ascii "GE_param_u16_L"
	.space 1
	.ascii "uGE_param_u16_L"
	.space 1
	.ascii "GE_var_u16_L"
	.space 1
	.ascii "uGE_var_u16_L"
	.space 1
	.ascii "GE_param_u16_i8"
	.space 1
	.ascii "uGE_param_u16_i8"
	.space 1
	.ascii "GE_var_u16_i8"
	.space 1
	.ascii "uGE_var_u16_i8"
	.space 1
	.ascii "GE_param_u16_u32"
	.space 1
	.ascii "uGE_param_u16_u32"
	.space 1
	.ascii "GE_var_u16_u32"
	.space 1
	.ascii "uGE_var_u16_u32"
	.space 1
	.ascii "GE_param_u16_C"
	.space 1
	.ascii "uGE_param_u16_C"
	.space 1
	.ascii "GE_var_u16_C"
	.space 1
	.ascii "uGE_var_u16_C"
	.space 1
	.ascii "GE_param_u16_u8"
	.space 1
	.ascii "uGE_param_u16_u8"
	.space 1
	.ascii "GE_var_u16_u8"
	.space 1
	.ascii "uGE_var_u16_u8"
	.space 1
	.ascii "GE_param_u16_I"
	.space 1
	.ascii "uGE_param_u16_I"
	.space 1
	.ascii "GE_var_u16_I"
	.space 1
	.ascii "uGE_var_u16_I"
	.space 1
	.ascii "GE_param_u16_i64"
	.space 1
	.ascii "uGE_param_u16_i64"
	.space 1
	.ascii "GE_var_u16_i64"
	.space 1
	.ascii "uGE_var_u16_i64"
	.space 1
	.ascii "GE_param_u16_LC"
	.space 1
	.ascii "uGE_param_u16_LC"
	.space 1
	.ascii "GE_var_u16_LC"
	.space 1
	.ascii "uGE_var_u16_LC"
	.space 1
	.ascii "GE_param_u16_i16"
	.space 1
	.ascii "uGE_param_u16_i16"
	.space 1
	.ascii "GE_var_u16_i16"
	.space 1
	.ascii "uGE_var_u16_i16"
	.space 1
	.ascii "GE_param_u64_i32"
	.space 1
	.ascii "uGE_param_u64_i32"
	.space 1
	.ascii "GE_var_u64_i32"
	.space 1
	.ascii "uGE_var_u64_i32"
	.space 1
	.ascii "GE_param_u64_u16"
	.space 1
	.ascii "uGE_param_u64_u16"
	.space 1
	.ascii "GE_var_u64_u16"
	.space 1
	.ascii "uGE_var_u64_u16"
	.space 1
	.ascii "GE_param_u64_u64"
	.space 1
	.ascii "uGE_param_u64_u64"
	.space 1
	.ascii "GE_var_u64_u64"
	.space 1
	.ascii "uGE_var_u64_u64"
	.space 1
	.ascii "GE_param_u64_L"
	.space 1
	.ascii "uGE_param_u64_L"
	.space 1
	.ascii "GE_var_u64_L"
	.space 1
	.ascii "uGE_var_u64_L"
	.space 1
	.ascii "GE_param_u64_i8"
	.space 1
	.ascii "uGE_param_u64_i8"
	.space 1
	.ascii "GE_var_u64_i8"
	.space 1
	.ascii "uGE_var_u64_i8"
	.space 1
	.ascii "GE_param_u64_u32"
	.space 1
	.ascii "uGE_param_u64_u32"
	.space 1
	.ascii "GE_var_u64_u32"
	.space 1
	.ascii "uGE_var_u64_u32"
	.space 1
	.ascii "GE_param_u64_C"
	.space 1
	.ascii "uGE_param_u64_C"
	.space 1
	.ascii "GE_var_u64_C"
	.space 1
	.ascii "uGE_var_u64_C"
	.space 1
	.ascii "GE_param_u64_u8"
	.space 1
	.ascii "uGE_param_u64_u8"
	.space 1
	.ascii "GE_var_u64_u8"
	.space 1
	.ascii "uGE_var_u64_u8"
	.space 1
	.ascii "GE_param_u64_I"
	.space 1
	.ascii "uGE_param_u64_I"
	.space 1
	.ascii "GE_var_u64_I"
	.space 1
	.ascii "uGE_var_u64_I"
	.space 1
	.ascii "GE_param_u64_i64"
	.space 1
	.ascii "uGE_param_u64_i64"
	.space 1
	.ascii "GE_var_u64_i64"
	.space 1
	.ascii "uGE_var_u64_i64"
	.space 1
	.ascii "GE_param_u64_LC"
	.space 1
	.ascii "uGE_param_u64_LC"
	.space 1
	.ascii "GE_var_u64_LC"
	.space 1
	.ascii "uGE_var_u64_LC"
	.space 1
	.ascii "GE_param_u64_i16"
	.space 1
	.ascii "uGE_param_u64_i16"
	.space 1
	.ascii "GE_var_u64_i16"
	.space 1
	.ascii "uGE_var_u64_i16"
	.space 1
	.ascii "GE_param_L_i32"
	.space 1
	.ascii "uGE_param_L_i32"
	.space 1
	.ascii "GE_var_L_i32"
	.space 1
	.ascii "uGE_var_L_i32"
	.space 1
	.ascii "GE_param_L_u16"
	.space 1
	.ascii "uGE_param_L_u16"
	.space 1
	.ascii "GE_var_L_u16"
	.space 1
	.ascii "uGE_var_L_u16"
	.space 1
	.ascii "GE_param_L_u64"
	.space 1
	.ascii "uGE_param_L_u64"
	.space 1
	.ascii "GE_var_L_u64"
	.space 1
	.ascii "uGE_var_L_u64"
	.space 1
	.ascii "GE_param_L_L"
	.space 1
	.ascii "uGE_param_L_L"
	.space 1
	.ascii "GE_var_L_L"
	.space 1
	.ascii "uGE_var_L_L"
	.space 1
	.ascii "GE_param_L_i8"
	.space 1
	.ascii "uGE_param_L_i8"
	.space 1
	.ascii "GE_var_L_i8"
	.space 1
	.ascii "uGE_var_L_i8"
	.space 1
	.ascii "GE_param_L_u32"
	.space 1
	.ascii "uGE_param_L_u32"
	.space 1
	.ascii "GE_var_L_u32"
	.space 1
	.ascii "uGE_var_L_u32"
	.space 1
	.ascii "GE_param_L_C"
	.space 1
	.ascii "uGE_param_L_C"
	.space 1
	.ascii "GE_var_L_C"
	.space 1
	.ascii "uGE_var_L_C"
	.space 1
	.ascii "GE_param_L_u8"
	.space 1
	.ascii "uGE_param_L_u8"
	.space 1
	.ascii "GE_var_L_u8"
	.space 1
	.ascii "uGE_var_L_u8"
	.space 1
	.ascii "GE_param_L_I"
	.space 1
	.ascii "uGE_param_L_I"
	.space 1
	.ascii "GE_var_L_I"
	.space 1
	.ascii "uGE_var_L_I"
	.space 1
	.ascii "GE_param_L_i64"
	.space 1
	.ascii "uGE_param_L_i64"
	.space 1
	.ascii "GE_var_L_i64"
	.space 1
	.ascii "uGE_var_L_i64"
	.space 1
	.ascii "GE_param_L_LC"
	.space 1
	.ascii "uGE_param_L_LC"
	.space 1
	.ascii "GE_var_L_LC"
	.space 1
	.ascii "uGE_var_L_LC"
	.space 1
	.ascii "GE_param_L_i16"
	.space 1
	.ascii "uGE_param_L_i16"
	.space 1
	.ascii "GE_var_L_i16"
	.space 1
	.ascii "uGE_var_L_i16"
	.space 1
	.ascii "GE_param_i8_i32"
	.space 1
	.ascii "uGE_param_i8_i32"
	.space 1
	.ascii "GE_var_i8_i32"
	.space 1
	.ascii "uGE_var_i8_i32"
	.space 1
	.ascii "GE_param_i8_u16"
	.space 1
	.ascii "uGE_param_i8_u16"
	.space 1
	.ascii "GE_var_i8_u16"
	.space 1
	.ascii "uGE_var_i8_u16"
	.space 1
	.ascii "GE_param_i8_u64"
	.space 1
	.ascii "uGE_param_i8_u64"
	.space 1
	.ascii "GE_var_i8_u64"
	.space 1
	.ascii "uGE_var_i8_u64"
	.space 1
	.ascii "GE_param_i8_L"
	.space 1
	.ascii "uGE_param_i8_L"
	.space 1
	.ascii "GE_var_i8_L"
	.space 1
	.ascii "uGE_var_i8_L"
	.space 1
	.ascii "GE_param_i8_i8"
	.space 1
	.ascii "uGE_param_i8_i8"
	.space 1
	.ascii "GE_var_i8_i8"
	.space 1
	.ascii "uGE_var_i8_i8"
	.space 1
	.ascii "GE_param_i8_u32"
	.space 1
	.ascii "uGE_param_i8_u32"
	.space 1
	.ascii "GE_var_i8_u32"
	.space 1
	.ascii "uGE_var_i8_u32"
	.space 1
	.ascii "GE_param_i8_C"
	.space 1
	.ascii "uGE_param_i8_C"
	.space 1
	.ascii "GE_var_i8_C"
	.space 1
	.ascii "uGE_var_i8_C"
	.space 1
	.ascii "GE_param_i8_u8"
	.space 1
	.ascii "uGE_param_i8_u8"
	.space 1
	.ascii "GE_var_i8_u8"
	.space 1
	.ascii "uGE_var_i8_u8"
	.space 1
	.ascii "GE_param_i8_I"
	.space 1
	.ascii "uGE_param_i8_I"
	.space 1
	.ascii "GE_var_i8_I"
	.space 1
	.ascii "uGE_var_i8_I"
	.space 1
	.ascii "GE_param_i8_i64"
	.space 1
	.ascii "uGE_param_i8_i64"
	.space 1
	.ascii "GE_var_i8_i64"
	.space 1
	.ascii "uGE_var_i8_i64"
	.space 1
	.ascii "GE_param_i8_LC"
	.space 1
	.ascii "uGE_param_i8_LC"
	.space 1
	.ascii "GE_var_i8_LC"
	.space 1
	.ascii "uGE_var_i8_LC"
	.space 1
	.ascii "GE_param_i8_i16"
	.space 1
	.ascii "uGE_param_i8_i16"
	.space 1
	.ascii "GE_var_i8_i16"
	.space 1
	.ascii "uGE_var_i8_i16"
	.space 1
	.ascii "GE_param_u32_i32"
	.space 1
	.ascii "uGE_param_u32_i32"
	.space 1
	.ascii "GE_var_u32_i32"
	.space 1
	.ascii "uGE_var_u32_i32"
	.space 1
	.ascii "GE_param_u32_u16"
	.space 1
	.ascii "uGE_param_u32_u16"
	.space 1
	.ascii "GE_var_u32_u16"
	.space 1
	.ascii "uGE_var_u32_u16"
	.space 1
	.ascii "GE_param_u32_u64"
	.space 1
	.ascii "uGE_param_u32_u64"
	.space 1
	.ascii "GE_var_u32_u64"
	.space 1
	.ascii "uGE_var_u32_u64"
	.space 1
	.ascii "GE_param_u32_L"
	.space 1
	.ascii "uGE_param_u32_L"
	.space 1
	.ascii "GE_var_u32_L"
	.space 1
	.ascii "uGE_var_u32_L"
	.space 1
	.ascii "GE_param_u32_i8"
	.space 1
	.ascii "uGE_param_u32_i8"
	.space 1
	.ascii "GE_var_u32_i8"
	.space 1
	.ascii "uGE_var_u32_i8"
	.space 1
	.ascii "GE_param_u32_u32"
	.space 1
	.ascii "uGE_param_u32_u32"
	.space 1
	.ascii "GE_var_u32_u32"
	.space 1
	.ascii "uGE_var_u32_u32"
	.space 1
	.ascii "GE_param_u32_C"
	.space 1
	.ascii "uGE_param_u32_C"
	.space 1
	.ascii "GE_var_u32_C"
	.space 1
	.ascii "uGE_var_u32_C"
	.space 1
	.ascii "GE_param_u32_u8"
	.space 1
	.ascii "uGE_param_u32_u8"
	.space 1
	.ascii "GE_var_u32_u8"
	.space 1
	.ascii "uGE_var_u32_u8"
	.space 1
	.ascii "GE_param_u32_I"
	.space 1
	.ascii "uGE_param_u32_I"
	.space 1
	.ascii "GE_var_u32_I"
	.space 1
	.ascii "uGE_var_u32_I"
	.space 1
	.ascii "GE_param_u32_i64"
	.space 1
	.ascii "uGE_param_u32_i64"
	.space 1
	.ascii "GE_var_u32_i64"
	.space 1
	.ascii "uGE_var_u32_i64"
	.space 1
	.ascii "GE_param_u32_LC"
	.space 1
	.ascii "uGE_param_u32_LC"
	.space 1
	.ascii "GE_var_u32_LC"
	.space 1
	.ascii "uGE_var_u32_LC"
	.space 1
	.ascii "GE_param_u32_i16"
	.space 1
	.ascii "uGE_param_u32_i16"
	.space 1
	.ascii "GE_var_u32_i16"
	.space 1
	.ascii "uGE_var_u32_i16"
	.space 1
	.ascii "GE_param_f32_f32"
	.space 1
	.ascii "GE_var_f32_f32"
	.space 1
	.ascii "GE_param_C_i32"
	.space 1
	.ascii "uGE_param_C_i32"
	.space 1
	.ascii "GE_var_C_i32"
	.space 1
	.ascii "uGE_var_C_i32"
	.space 1
	.ascii "GE_param_C_u16"
	.space 1
	.ascii "uGE_param_C_u16"
	.space 1
	.ascii "GE_var_C_u16"
	.space 1
	.ascii "uGE_var_C_u16"
	.space 1
	.ascii "GE_param_C_u64"
	.space 1
	.ascii "uGE_param_C_u64"
	.space 1
	.ascii "GE_var_C_u64"
	.space 1
	.ascii "uGE_var_C_u64"
	.space 1
	.ascii "GE_param_C_L"
	.space 1
	.ascii "uGE_param_C_L"
	.space 1
	.ascii "GE_var_C_L"
	.space 1
	.ascii "uGE_var_C_L"
	.space 1
	.ascii "GE_param_C_i8"
	.space 1
	.ascii "uGE_param_C_i8"
	.space 1
	.ascii "GE_var_C_i8"
	.space 1
	.ascii "uGE_var_C_i8"
	.space 1
	.ascii "GE_param_C_u32"
	.space 1
	.ascii "uGE_param_C_u32"
	.space 1
	.ascii "GE_var_C_u32"
	.space 1
	.ascii "uGE_var_C_u32"
	.space 1
	.ascii "GE_param_C_C"
	.space 1
	.ascii "uGE_param_C_C"
	.space 1
	.ascii "GE_var_C_C"
	.space 1
	.ascii "uGE_var_C_C"
	.space 1
	.ascii "GE_param_C_u8"
	.space 1
	.ascii "uGE_param_C_u8"
	.space 1
	.ascii "GE_var_C_u8"
	.space 1
	.ascii "uGE_var_C_u8"
	.space 1
	.ascii "GE_param_C_I"
	.space 1
	.ascii "uGE_param_C_I"
	.space 1
	.ascii "GE_var_C_I"
	.space 1
	.ascii "uGE_var_C_I"
	.space 1
	.ascii "GE_param_C_i64"
	.space 1
	.ascii "uGE_param_C_i64"
	.space 1
	.ascii "GE_var_C_i64"
	.space 1
	.ascii "uGE_var_C_i64"
	.space 1
	.ascii "GE_param_C_LC"
	.space 1
	.ascii "uGE_param_C_LC"
	.space 1
	.ascii "GE_var_C_LC"
	.space 1
	.ascii "uGE_var_C_LC"
	.space 1
	.ascii "GE_param_C_i16"
	.space 1
	.ascii "uGE_param_C_i16"
	.space 1
	.ascii "GE_var_C_i16"
	.space 1
	.ascii "uGE_var_C_i16"
	.space 1
	.ascii "GE_param_u8_i32"
	.space 1
	.ascii "uGE_param_u8_i32"
	.space 1
	.ascii "GE_var_u8_i32"
	.space 1
	.ascii "uGE_var_u8_i32"
	.space 1
	.ascii "GE_param_u8_u16"
	.space 1
	.ascii "uGE_param_u8_u16"
	.space 1
	.ascii "GE_var_u8_u16"
	.space 1
	.ascii "uGE_var_u8_u16"
	.space 1
	.ascii "GE_param_u8_u64"
	.space 1
	.ascii "uGE_param_u8_u64"
	.space 1
	.ascii "GE_var_u8_u64"
	.space 1
	.ascii "uGE_var_u8_u64"
	.space 1
	.ascii "GE_param_u8_L"
	.space 1
	.ascii "uGE_param_u8_L"
	.space 1
	.ascii "GE_var_u8_L"
	.space 1
	.ascii "uGE_var_u8_L"
	.space 1
	.ascii "GE_param_u8_i8"
	.space 1
	.ascii "uGE_param_u8_i8"
	.space 1
	.ascii "GE_var_u8_i8"
	.space 1
	.ascii "uGE_var_u8_i8"
	.space 1
	.ascii "GE_param_u8_u32"
	.space 1
	.ascii "uGE_param_u8_u32"
	.space 1
	.ascii "GE_var_u8_u32"
	.space 1
	.ascii "uGE_var_u8_u32"
	.space 1
	.ascii "GE_param_u8_C"
	.space 1
	.ascii "uGE_param_u8_C"
	.space 1
	.ascii "GE_var_u8_C"
	.space 1
	.ascii "uGE_var_u8_C"
	.space 1
	.ascii "GE_param_u8_u8"
	.space 1
	.ascii "uGE_param_u8_u8"
	.space 1
	.ascii "GE_var_u8_u8"
	.space 1
	.ascii "uGE_var_u8_u8"
	.space 1
	.ascii "GE_param_u8_I"
	.space 1
	.ascii "uGE_param_u8_I"
	.space 1
	.ascii "GE_var_u8_I"
	.space 1
	.ascii "uGE_var_u8_I"
	.space 1
	.ascii "GE_param_u8_i64"
	.space 1
	.ascii "uGE_param_u8_i64"
	.space 1
	.ascii "GE_var_u8_i64"
	.space 1
	.ascii "uGE_var_u8_i64"
	.space 1
	.ascii "GE_param_u8_LC"
	.space 1
	.ascii "uGE_param_u8_LC"
	.space 1
	.ascii "GE_var_u8_LC"
	.space 1
	.ascii "uGE_var_u8_LC"
	.space 1
	.ascii "GE_param_u8_i16"
	.space 1
	.ascii "uGE_param_u8_i16"
	.space 1
	.ascii "GE_var_u8_i16"
	.space 1
	.ascii "uGE_var_u8_i16"
	.space 1
	.ascii "GE_param_I_i32"
	.space 1
	.ascii "uGE_param_I_i32"
	.space 1
	.ascii "GE_var_I_i32"
	.space 1
	.ascii "uGE_var_I_i32"
	.space 1
	.ascii "GE_param_I_u16"
	.space 1
	.ascii "uGE_param_I_u16"
	.space 1
	.ascii "GE_var_I_u16"
	.space 1
	.ascii "uGE_var_I_u16"
	.space 1
	.ascii "GE_param_I_u64"
	.space 1
	.ascii "uGE_param_I_u64"
	.space 1
	.ascii "GE_var_I_u64"
	.space 1
	.ascii "uGE_var_I_u64"
	.space 1
	.ascii "GE_param_I_L"
	.space 1
	.ascii "uGE_param_I_L"
	.space 1
	.ascii "GE_var_I_L"
	.space 1
	.ascii "uGE_var_I_L"
	.space 1
	.ascii "GE_param_I_i8"
	.space 1
	.ascii "uGE_param_I_i8"
	.space 1
	.ascii "GE_var_I_i8"
	.space 1
	.ascii "uGE_var_I_i8"
	.space 1
	.ascii "GE_param_I_u32"
	.space 1
	.ascii "uGE_param_I_u32"
	.space 1
	.ascii "GE_var_I_u32"
	.space 1
	.ascii "uGE_var_I_u32"
	.space 1
	.ascii "GE_param_I_C"
	.space 1
	.ascii "uGE_param_I_C"
	.space 1
	.ascii "GE_var_I_C"
	.space 1
	.ascii "uGE_var_I_C"
	.space 1
	.ascii "GE_param_I_u8"
	.space 1
	.ascii "uGE_param_I_u8"
	.space 1
	.ascii "GE_var_I_u8"
	.space 1
	.ascii "uGE_var_I_u8"
	.space 1
	.ascii "GE_param_I_I"
	.space 1
	.ascii "uGE_param_I_I"
	.space 1
	.ascii "GE_var_I_I"
	.space 1
	.ascii "uGE_var_I_I"
	.space 1
	.ascii "GE_param_I_i64"
	.space 1
	.ascii "uGE_param_I_i64"
	.space 1
	.ascii "GE_var_I_i64"
	.space 1
	.ascii "uGE_var_I_i64"
	.space 1
	.ascii "GE_param_I_LC"
	.space 1
	.ascii "uGE_param_I_LC"
	.space 1
	.ascii "GE_var_I_LC"
	.space 1
	.ascii "uGE_var_I_LC"
	.space 1
	.ascii "GE_param_I_i16"
	.space 1
	.ascii "uGE_param_I_i16"
	.space 1
	.ascii "GE_var_I_i16"
	.space 1
	.ascii "uGE_var_I_i16"
	.space 1
	.ascii "GE_param_i64_i32"
	.space 1
	.ascii "uGE_param_i64_i32"
	.space 1
	.ascii "GE_var_i64_i32"
	.space 1
	.ascii "uGE_var_i64_i32"
	.space 1
	.ascii "GE_param_i64_u16"
	.space 1
	.ascii "uGE_param_i64_u16"
	.space 1
	.ascii "GE_var_i64_u16"
	.space 1
	.ascii "uGE_var_i64_u16"
	.space 1
	.ascii "GE_param_i64_u64"
	.space 1
	.ascii "uGE_param_i64_u64"
	.space 1
	.ascii "GE_var_i64_u64"
	.space 1
	.ascii "uGE_var_i64_u64"
	.space 1
	.ascii "GE_param_i64_L"
	.space 1
	.ascii "uGE_param_i64_L"
	.space 1
	.ascii "GE_var_i64_L"
	.space 1
	.ascii "uGE_var_i64_L"
	.space 1
	.ascii "GE_param_i64_i8"
	.space 1
	.ascii "uGE_param_i64_i8"
	.space 1
	.ascii "GE_var_i64_i8"
	.space 1
	.ascii "uGE_var_i64_i8"
	.space 1
	.ascii "GE_param_i64_u32"
	.space 1
	.ascii "uGE_param_i64_u32"
	.space 1
	.ascii "GE_var_i64_u32"
	.space 1
	.ascii "uGE_var_i64_u32"
	.space 1
	.ascii "GE_param_i64_C"
	.space 1
	.ascii "uGE_param_i64_C"
	.space 1
	.ascii "GE_var_i64_C"
	.space 1
	.ascii "uGE_var_i64_C"
	.space 1
	.ascii "GE_param_i64_u8"
	.space 1
	.ascii "uGE_param_i64_u8"
	.space 1
	.ascii "GE_var_i64_u8"
	.space 1
	.ascii "uGE_var_i64_u8"
	.space 1
	.ascii "GE_param_i64_I"
	.space 1
	.ascii "uGE_param_i64_I"
	.space 1
	.ascii "GE_var_i64_I"
	.space 1
	.ascii "uGE_var_i64_I"
	.space 1
	.ascii "GE_param_i64_i64"
	.space 1
	.ascii "uGE_param_i64_i64"
	.space 1
	.ascii "GE_var_i64_i64"
	.space 1
	.ascii "uGE_var_i64_i64"
	.space 1
	.ascii "GE_param_i64_LC"
	.space 1
	.ascii "uGE_param_i64_LC"
	.space 1
	.ascii "GE_var_i64_LC"
	.space 1
	.ascii "uGE_var_i64_LC"
	.space 1
	.ascii "GE_param_i64_i16"
	.space 1
	.ascii "uGE_param_i64_i16"
	.space 1
	.ascii "GE_var_i64_i16"
	.space 1
	.ascii "uGE_var_i64_i16"
	.space 1
	.ascii "GE_param_f64_f64"
	.space 1
	.ascii "GE_var_f64_f64"
	.space 1
	.ascii "GE_param_LC_i32"
	.space 1
	.ascii "uGE_param_LC_i32"
	.space 1
	.ascii "GE_var_LC_i32"
	.space 1
	.ascii "uGE_var_LC_i32"
	.space 1
	.ascii "GE_param_LC_u16"
	.space 1
	.ascii "uGE_param_LC_u16"
	.space 1
	.ascii "GE_var_LC_u16"
	.space 1
	.ascii "uGE_var_LC_u16"
	.space 1
	.ascii "GE_param_LC_u64"
	.space 1
	.ascii "uGE_param_LC_u64"
	.space 1
	.ascii "GE_var_LC_u64"
	.space 1
	.ascii "uGE_var_LC_u64"
	.space 1
	.ascii "GE_param_LC_L"
	.space 1
	.ascii "uGE_param_LC_L"
	.space 1
	.ascii "GE_var_LC_L"
	.space 1
	.ascii "uGE_var_LC_L"
	.space 1
	.ascii "GE_param_LC_i8"
	.space 1
	.ascii "uGE_param_LC_i8"
	.space 1
	.ascii "GE_var_LC_i8"
	.space 1
	.ascii "uGE_var_LC_i8"
	.space 1
	.ascii "GE_param_LC_u32"
	.space 1
	.ascii "uGE_param_LC_u32"
	.space 1
	.ascii "GE_var_LC_u32"
	.space 1
	.ascii "uGE_var_LC_u32"
	.space 1
	.ascii "GE_param_LC_C"
	.space 1
	.ascii "uGE_param_LC_C"
	.space 1
	.ascii "GE_var_LC_C"
	.space 1
	.ascii "uGE_var_LC_C"
	.space 1
	.ascii "GE_param_LC_u8"
	.space 1
	.ascii "uGE_param_LC_u8"
	.space 1
	.ascii "GE_var_LC_u8"
	.space 1
	.ascii "uGE_var_LC_u8"
	.space 1
	.ascii "GE_param_LC_I"
	.space 1
	.ascii "uGE_param_LC_I"
	.space 1
	.ascii "GE_var_LC_I"
	.space 1
	.ascii "uGE_var_LC_I"
	.space 1
	.ascii "GE_param_LC_i64"
	.space 1
	.ascii "uGE_param_LC_i64"
	.space 1
	.ascii "GE_var_LC_i64"
	.space 1
	.ascii "uGE_var_LC_i64"
	.space 1
	.ascii "GE_param_LC_LC"
	.space 1
	.ascii "uGE_param_LC_LC"
	.space 1
	.ascii "GE_var_LC_LC"
	.space 1
	.ascii "uGE_var_LC_LC"
	.space 1
	.ascii "GE_param_LC_i16"
	.space 1
	.ascii "uGE_param_LC_i16"
	.space 1
	.ascii "GE_var_LC_i16"
	.space 1
	.ascii "uGE_var_LC_i16"
	.space 1
	.ascii "GE_param_i16_i32"
	.space 1
	.ascii "uGE_param_i16_i32"
	.space 1
	.ascii "GE_var_i16_i32"
	.space 1
	.ascii "uGE_var_i16_i32"
	.space 1
	.ascii "GE_param_i16_u16"
	.space 1
	.ascii "uGE_param_i16_u16"
	.space 1
	.ascii "GE_var_i16_u16"
	.space 1
	.ascii "uGE_var_i16_u16"
	.space 1
	.ascii "GE_param_i16_u64"
	.space 1
	.ascii "uGE_param_i16_u64"
	.space 1
	.ascii "GE_var_i16_u64"
	.space 1
	.ascii "uGE_var_i16_u64"
	.space 1
	.ascii "GE_param_i16_L"
	.space 1
	.ascii "uGE_param_i16_L"
	.space 1
	.ascii "GE_var_i16_L"
	.space 1
	.ascii "uGE_var_i16_L"
	.space 1
	.ascii "GE_param_i16_i8"
	.space 1
	.ascii "uGE_param_i16_i8"
	.space 1
	.ascii "GE_var_i16_i8"
	.space 1
	.ascii "uGE_var_i16_i8"
	.space 1
	.ascii "GE_param_i16_u32"
	.space 1
	.ascii "uGE_param_i16_u32"
	.space 1
	.ascii "GE_var_i16_u32"
	.space 1
	.ascii "uGE_var_i16_u32"
	.space 1
	.ascii "GE_param_i16_C"
	.space 1
	.ascii "uGE_param_i16_C"
	.space 1
	.ascii "GE_var_i16_C"
	.space 1
	.ascii "uGE_var_i16_C"
	.space 1
	.ascii "GE_param_i16_u8"
	.space 1
	.ascii "uGE_param_i16_u8"
	.space 1
	.ascii "GE_var_i16_u8"
	.space 1
	.ascii "uGE_var_i16_u8"
	.space 1
	.ascii "GE_param_i16_I"
	.space 1
	.ascii "uGE_param_i16_I"
	.space 1
	.ascii "GE_var_i16_I"
	.space 1
	.ascii "uGE_var_i16_I"
	.space 1
	.ascii "GE_param_i16_i64"
	.space 1
	.ascii "uGE_param_i16_i64"
	.space 1
	.ascii "GE_var_i16_i64"
	.space 1
	.ascii "uGE_var_i16_i64"
	.space 1
	.ascii "GE_param_i16_LC"
	.space 1
	.ascii "uGE_param_i16_LC"
	.space 1
	.ascii "GE_var_i16_LC"
	.space 1
	.ascii "uGE_var_i16_LC"
	.space 1
	.ascii "GE_param_i16_i16"
	.space 1
	.ascii "uGE_param_i16_i16"
	.space 1
	.ascii "GE_var_i16_i16"
	.space 1
	.ascii "uGE_var_i16_i16"
	.space 1
	.ascii "GT_param_i32_i32"
	.space 1
	.ascii "uGT_param_i32_i32"
	.space 1
	.ascii "GT_var_i32_i32"
	.space 1
	.ascii "uGT_var_i32_i32"
	.space 1
	.ascii "GT_param_i32_u16"
	.space 1
	.ascii "uGT_param_i32_u16"
	.space 1
	.ascii "GT_var_i32_u16"
	.space 1
	.ascii "uGT_var_i32_u16"
	.space 1
	.ascii "GT_param_i32_u64"
	.space 1
	.ascii "uGT_param_i32_u64"
	.space 1
	.ascii "GT_var_i32_u64"
	.space 1
	.ascii "uGT_var_i32_u64"
	.space 1
	.ascii "GT_param_i32_L"
	.space 1
	.ascii "uGT_param_i32_L"
	.space 1
	.ascii "GT_var_i32_L"
	.space 1
	.ascii "uGT_var_i32_L"
	.space 1
	.ascii "GT_param_i32_i8"
	.space 1
	.ascii "uGT_param_i32_i8"
	.space 1
	.ascii "GT_var_i32_i8"
	.space 1
	.ascii "uGT_var_i32_i8"
	.space 1
	.ascii "GT_param_i32_u32"
	.space 1
	.ascii "uGT_param_i32_u32"
	.space 1
	.ascii "GT_var_i32_u32"
	.space 1
	.ascii "uGT_var_i32_u32"
	.space 1
	.ascii "GT_param_i32_C"
	.space 1
	.ascii "uGT_param_i32_C"
	.space 1
	.ascii "GT_var_i32_C"
	.space 1
	.ascii "uGT_var_i32_C"
	.space 1
	.ascii "GT_param_i32_u8"
	.space 1
	.ascii "uGT_param_i32_u8"
	.space 1
	.ascii "GT_var_i32_u8"
	.space 1
	.ascii "uGT_var_i32_u8"
	.space 1
	.ascii "GT_param_i32_I"
	.space 1
	.ascii "uGT_param_i32_I"
	.space 1
	.ascii "GT_var_i32_I"
	.space 1
	.ascii "uGT_var_i32_I"
	.space 1
	.ascii "GT_param_i32_i64"
	.space 1
	.ascii "uGT_param_i32_i64"
	.space 1
	.ascii "GT_var_i32_i64"
	.space 1
	.ascii "uGT_var_i32_i64"
	.space 1
	.ascii "GT_param_i32_LC"
	.space 1
	.ascii "uGT_param_i32_LC"
	.space 1
	.ascii "GT_var_i32_LC"
	.space 1
	.ascii "uGT_var_i32_LC"
	.space 1
	.ascii "GT_param_i32_i16"
	.space 1
	.ascii "uGT_param_i32_i16"
	.space 1
	.ascii "GT_var_i32_i16"
	.space 1
	.ascii "uGT_var_i32_i16"
	.space 1
	.ascii "GT_param_u16_i32"
	.space 1
	.ascii "uGT_param_u16_i32"
	.space 1
	.ascii "GT_var_u16_i32"
	.space 1
	.ascii "uGT_var_u16_i32"
	.space 1
	.ascii "GT_param_u16_u16"
	.space 1
	.ascii "uGT_param_u16_u16"
	.space 1
	.ascii "GT_var_u16_u16"
	.space 1
	.ascii "uGT_var_u16_u16"
	.space 1
	.ascii "GT_param_u16_u64"
	.space 1
	.ascii "uGT_param_u16_u64"
	.space 1
	.ascii "GT_var_u16_u64"
	.space 1
	.ascii "uGT_var_u16_u64"
	.space 1
	.ascii "GT_param_u16_L"
	.space 1
	.ascii "uGT_param_u16_L"
	.space 1
	.ascii "GT_var_u16_L"
	.space 1
	.ascii "uGT_var_u16_L"
	.space 1
	.ascii "GT_param_u16_i8"
	.space 1
	.ascii "uGT_param_u16_i8"
	.space 1
	.ascii "GT_var_u16_i8"
	.space 1
	.ascii "uGT_var_u16_i8"
	.space 1
	.ascii "GT_param_u16_u32"
	.space 1
	.ascii "uGT_param_u16_u32"
	.space 1
	.ascii "GT_var_u16_u32"
	.space 1
	.ascii "uGT_var_u16_u32"
	.space 1
	.ascii "GT_param_u16_C"
	.space 1
	.ascii "uGT_param_u16_C"
	.space 1
	.ascii "GT_var_u16_C"
	.space 1
	.ascii "uGT_var_u16_C"
	.space 1
	.ascii "GT_param_u16_u8"
	.space 1
	.ascii "uGT_param_u16_u8"
	.space 1
	.ascii "GT_var_u16_u8"
	.space 1
	.ascii "uGT_var_u16_u8"
	.space 1
	.ascii "GT_param_u16_I"
	.space 1
	.ascii "uGT_param_u16_I"
	.space 1
	.ascii "GT_var_u16_I"
	.space 1
	.ascii "uGT_var_u16_I"
	.space 1
	.ascii "GT_param_u16_i64"
	.space 1
	.ascii "uGT_param_u16_i64"
	.space 1
	.ascii "GT_var_u16_i64"
	.space 1
	.ascii "uGT_var_u16_i64"
	.space 1
	.ascii "GT_param_u16_LC"
	.space 1
	.ascii "uGT_param_u16_LC"
	.space 1
	.ascii "GT_var_u16_LC"
	.space 1
	.ascii "uGT_var_u16_LC"
	.space 1
	.ascii "GT_param_u16_i16"
	.space 1
	.ascii "uGT_param_u16_i16"
	.space 1
	.ascii "GT_var_u16_i16"
	.space 1
	.ascii "uGT_var_u16_i16"
	.space 1
	.ascii "GT_param_u64_i32"
	.space 1
	.ascii "uGT_param_u64_i32"
	.space 1
	.ascii "GT_var_u64_i32"
	.space 1
	.ascii "uGT_var_u64_i32"
	.space 1
	.ascii "GT_param_u64_u16"
	.space 1
	.ascii "uGT_param_u64_u16"
	.space 1
	.ascii "GT_var_u64_u16"
	.space 1
	.ascii "uGT_var_u64_u16"
	.space 1
	.ascii "GT_param_u64_u64"
	.space 1
	.ascii "uGT_param_u64_u64"
	.space 1
	.ascii "GT_var_u64_u64"
	.space 1
	.ascii "uGT_var_u64_u64"
	.space 1
	.ascii "GT_param_u64_L"
	.space 1
	.ascii "uGT_param_u64_L"
	.space 1
	.ascii "GT_var_u64_L"
	.space 1
	.ascii "uGT_var_u64_L"
	.space 1
	.ascii "GT_param_u64_i8"
	.space 1
	.ascii "uGT_param_u64_i8"
	.space 1
	.ascii "GT_var_u64_i8"
	.space 1
	.ascii "uGT_var_u64_i8"
	.space 1
	.ascii "GT_param_u64_u32"
	.space 1
	.ascii "uGT_param_u64_u32"
	.space 1
	.ascii "GT_var_u64_u32"
	.space 1
	.ascii "uGT_var_u64_u32"
	.space 1
	.ascii "GT_param_u64_C"
	.space 1
	.ascii "uGT_param_u64_C"
	.space 1
	.ascii "GT_var_u64_C"
	.space 1
	.ascii "uGT_var_u64_C"
	.space 1
	.ascii "GT_param_u64_u8"
	.space 1
	.ascii "uGT_param_u64_u8"
	.space 1
	.ascii "GT_var_u64_u8"
	.space 1
	.ascii "uGT_var_u64_u8"
	.space 1
	.ascii "GT_param_u64_I"
	.space 1
	.ascii "uGT_param_u64_I"
	.space 1
	.ascii "GT_var_u64_I"
	.space 1
	.ascii "uGT_var_u64_I"
	.space 1
	.ascii "GT_param_u64_i64"
	.space 1
	.ascii "uGT_param_u64_i64"
	.space 1
	.ascii "GT_var_u64_i64"
	.space 1
	.ascii "uGT_var_u64_i64"
	.space 1
	.ascii "GT_param_u64_LC"
	.space 1
	.ascii "uGT_param_u64_LC"
	.space 1
	.ascii "GT_var_u64_LC"
	.space 1
	.ascii "uGT_var_u64_LC"
	.space 1
	.ascii "GT_param_u64_i16"
	.space 1
	.ascii "uGT_param_u64_i16"
	.space 1
	.ascii "GT_var_u64_i16"
	.space 1
	.ascii "uGT_var_u64_i16"
	.space 1
	.ascii "GT_param_L_i32"
	.space 1
	.ascii "uGT_param_L_i32"
	.space 1
	.ascii "GT_var_L_i32"
	.space 1
	.ascii "uGT_var_L_i32"
	.space 1
	.ascii "GT_param_L_u16"
	.space 1
	.ascii "uGT_param_L_u16"
	.space 1
	.ascii "GT_var_L_u16"
	.space 1
	.ascii "uGT_var_L_u16"
	.space 1
	.ascii "GT_param_L_u64"
	.space 1
	.ascii "uGT_param_L_u64"
	.space 1
	.ascii "GT_var_L_u64"
	.space 1
	.ascii "uGT_var_L_u64"
	.space 1
	.ascii "GT_param_L_L"
	.space 1
	.ascii "uGT_param_L_L"
	.space 1
	.ascii "GT_var_L_L"
	.space 1
	.ascii "uGT_var_L_L"
	.space 1
	.ascii "GT_param_L_i8"
	.space 1
	.ascii "uGT_param_L_i8"
	.space 1
	.ascii "GT_var_L_i8"
	.space 1
	.ascii "uGT_var_L_i8"
	.space 1
	.ascii "GT_param_L_u32"
	.space 1
	.ascii "uGT_param_L_u32"
	.space 1
	.ascii "GT_var_L_u32"
	.space 1
	.ascii "uGT_var_L_u32"
	.space 1
	.ascii "GT_param_L_C"
	.space 1
	.ascii "uGT_param_L_C"
	.space 1
	.ascii "GT_var_L_C"
	.space 1
	.ascii "uGT_var_L_C"
	.space 1
	.ascii "GT_param_L_u8"
	.space 1
	.ascii "uGT_param_L_u8"
	.space 1
	.ascii "GT_var_L_u8"
	.space 1
	.ascii "uGT_var_L_u8"
	.space 1
	.ascii "GT_param_L_I"
	.space 1
	.ascii "uGT_param_L_I"
	.space 1
	.ascii "GT_var_L_I"
	.space 1
	.ascii "uGT_var_L_I"
	.space 1
	.ascii "GT_param_L_i64"
	.space 1
	.ascii "uGT_param_L_i64"
	.space 1
	.ascii "GT_var_L_i64"
	.space 1
	.ascii "uGT_var_L_i64"
	.space 1
	.ascii "GT_param_L_LC"
	.space 1
	.ascii "uGT_param_L_LC"
	.space 1
	.ascii "GT_var_L_LC"
	.space 1
	.ascii "uGT_var_L_LC"
	.space 1
	.ascii "GT_param_L_i16"
	.space 1
	.ascii "uGT_param_L_i16"
	.space 1
	.ascii "GT_var_L_i16"
	.space 1
	.ascii "uGT_var_L_i16"
	.space 1
	.ascii "GT_param_i8_i32"
	.space 1
	.ascii "uGT_param_i8_i32"
	.space 1
	.ascii "GT_var_i8_i32"
	.space 1
	.ascii "uGT_var_i8_i32"
	.space 1
	.ascii "GT_param_i8_u16"
	.space 1
	.ascii "uGT_param_i8_u16"
	.space 1
	.ascii "GT_var_i8_u16"
	.space 1
	.ascii "uGT_var_i8_u16"
	.space 1
	.ascii "GT_param_i8_u64"
	.space 1
	.ascii "uGT_param_i8_u64"
	.space 1
	.ascii "GT_var_i8_u64"
	.space 1
	.ascii "uGT_var_i8_u64"
	.space 1
	.ascii "GT_param_i8_L"
	.space 1
	.ascii "uGT_param_i8_L"
	.space 1
	.ascii "GT_var_i8_L"
	.space 1
	.ascii "uGT_var_i8_L"
	.space 1
	.ascii "GT_param_i8_i8"
	.space 1
	.ascii "uGT_param_i8_i8"
	.space 1
	.ascii "GT_var_i8_i8"
	.space 1
	.ascii "uGT_var_i8_i8"
	.space 1
	.ascii "GT_param_i8_u32"
	.space 1
	.ascii "uGT_param_i8_u32"
	.space 1
	.ascii "GT_var_i8_u32"
	.space 1
	.ascii "uGT_var_i8_u32"
	.space 1
	.ascii "GT_param_i8_C"
	.space 1
	.ascii "uGT_param_i8_C"
	.space 1
	.ascii "GT_var_i8_C"
	.space 1
	.ascii "uGT_var_i8_C"
	.space 1
	.ascii "GT_param_i8_u8"
	.space 1
	.ascii "uGT_param_i8_u8"
	.space 1
	.ascii "GT_var_i8_u8"
	.space 1
	.ascii "uGT_var_i8_u8"
	.space 1
	.ascii "GT_param_i8_I"
	.space 1
	.ascii "uGT_param_i8_I"
	.space 1
	.ascii "GT_var_i8_I"
	.space 1
	.ascii "uGT_var_i8_I"
	.space 1
	.ascii "GT_param_i8_i64"
	.space 1
	.ascii "uGT_param_i8_i64"
	.space 1
	.ascii "GT_var_i8_i64"
	.space 1
	.ascii "uGT_var_i8_i64"
	.space 1
	.ascii "GT_param_i8_LC"
	.space 1
	.ascii "uGT_param_i8_LC"
	.space 1
	.ascii "GT_var_i8_LC"
	.space 1
	.ascii "uGT_var_i8_LC"
	.space 1
	.ascii "GT_param_i8_i16"
	.space 1
	.ascii "uGT_param_i8_i16"
	.space 1
	.ascii "GT_var_i8_i16"
	.space 1
	.ascii "uGT_var_i8_i16"
	.space 1
	.ascii "GT_param_u32_i32"
	.space 1
	.ascii "uGT_param_u32_i32"
	.space 1
	.ascii "GT_var_u32_i32"
	.space 1
	.ascii "uGT_var_u32_i32"
	.space 1
	.ascii "GT_param_u32_u16"
	.space 1
	.ascii "uGT_param_u32_u16"
	.space 1
	.ascii "GT_var_u32_u16"
	.space 1
	.ascii "uGT_var_u32_u16"
	.space 1
	.ascii "GT_param_u32_u64"
	.space 1
	.ascii "uGT_param_u32_u64"
	.space 1
	.ascii "GT_var_u32_u64"
	.space 1
	.ascii "uGT_var_u32_u64"
	.space 1
	.ascii "GT_param_u32_L"
	.space 1
	.ascii "uGT_param_u32_L"
	.space 1
	.ascii "GT_var_u32_L"
	.space 1
	.ascii "uGT_var_u32_L"
	.space 1
	.ascii "GT_param_u32_i8"
	.space 1
	.ascii "uGT_param_u32_i8"
	.space 1
	.ascii "GT_var_u32_i8"
	.space 1
	.ascii "uGT_var_u32_i8"
	.space 1
	.ascii "GT_param_u32_u32"
	.space 1
	.ascii "uGT_param_u32_u32"
	.space 1
	.ascii "GT_var_u32_u32"
	.space 1
	.ascii "uGT_var_u32_u32"
	.space 1
	.ascii "GT_param_u32_C"
	.space 1
	.ascii "uGT_param_u32_C"
	.space 1
	.ascii "GT_var_u32_C"
	.space 1
	.ascii "uGT_var_u32_C"
	.space 1
	.ascii "GT_param_u32_u8"
	.space 1
	.ascii "uGT_param_u32_u8"
	.space 1
	.ascii "GT_var_u32_u8"
	.space 1
	.ascii "uGT_var_u32_u8"
	.space 1
	.ascii "GT_param_u32_I"
	.space 1
	.ascii "uGT_param_u32_I"
	.space 1
	.ascii "GT_var_u32_I"
	.space 1
	.ascii "uGT_var_u32_I"
	.space 1
	.ascii "GT_param_u32_i64"
	.space 1
	.ascii "uGT_param_u32_i64"
	.space 1
	.ascii "GT_var_u32_i64"
	.space 1
	.ascii "uGT_var_u32_i64"
	.space 1
	.ascii "GT_param_u32_LC"
	.space 1
	.ascii "uGT_param_u32_LC"
	.space 1
	.ascii "GT_var_u32_LC"
	.space 1
	.ascii "uGT_var_u32_LC"
	.space 1
	.ascii "GT_param_u32_i16"
	.space 1
	.ascii "uGT_param_u32_i16"
	.space 1
	.ascii "GT_var_u32_i16"
	.space 1
	.ascii "uGT_var_u32_i16"
	.space 1
	.ascii "GT_param_f32_f32"
	.space 1
	.ascii "GT_var_f32_f32"
	.space 1
	.ascii "GT_param_C_i32"
	.space 1
	.ascii "uGT_param_C_i32"
	.space 1
	.ascii "GT_var_C_i32"
	.space 1
	.ascii "uGT_var_C_i32"
	.space 1
	.ascii "GT_param_C_u16"
	.space 1
	.ascii "uGT_param_C_u16"
	.space 1
	.ascii "GT_var_C_u16"
	.space 1
	.ascii "uGT_var_C_u16"
	.space 1
	.ascii "GT_param_C_u64"
	.space 1
	.ascii "uGT_param_C_u64"
	.space 1
	.ascii "GT_var_C_u64"
	.space 1
	.ascii "uGT_var_C_u64"
	.space 1
	.ascii "GT_param_C_L"
	.space 1
	.ascii "uGT_param_C_L"
	.space 1
	.ascii "GT_var_C_L"
	.space 1
	.ascii "uGT_var_C_L"
	.space 1
	.ascii "GT_param_C_i8"
	.space 1
	.ascii "uGT_param_C_i8"
	.space 1
	.ascii "GT_var_C_i8"
	.space 1
	.ascii "uGT_var_C_i8"
	.space 1
	.ascii "GT_param_C_u32"
	.space 1
	.ascii "uGT_param_C_u32"
	.space 1
	.ascii "GT_var_C_u32"
	.space 1
	.ascii "uGT_var_C_u32"
	.space 1
	.ascii "GT_param_C_C"
	.space 1
	.ascii "uGT_param_C_C"
	.space 1
	.ascii "GT_var_C_C"
	.space 1
	.ascii "uGT_var_C_C"
	.space 1
	.ascii "GT_param_C_u8"
	.space 1
	.ascii "uGT_param_C_u8"
	.space 1
	.ascii "GT_var_C_u8"
	.space 1
	.ascii "uGT_var_C_u8"
	.space 1
	.ascii "GT_param_C_I"
	.space 1
	.ascii "uGT_param_C_I"
	.space 1
	.ascii "GT_var_C_I"
	.space 1
	.ascii "uGT_var_C_I"
	.space 1
	.ascii "GT_param_C_i64"
	.space 1
	.ascii "uGT_param_C_i64"
	.space 1
	.ascii "GT_var_C_i64"
	.space 1
	.ascii "uGT_var_C_i64"
	.space 1
	.ascii "GT_param_C_LC"
	.space 1
	.ascii "uGT_param_C_LC"
	.space 1
	.ascii "GT_var_C_LC"
	.space 1
	.ascii "uGT_var_C_LC"
	.space 1
	.ascii "GT_param_C_i16"
	.space 1
	.ascii "uGT_param_C_i16"
	.space 1
	.ascii "GT_var_C_i16"
	.space 1
	.ascii "uGT_var_C_i16"
	.space 1
	.ascii "GT_param_u8_i32"
	.space 1
	.ascii "uGT_param_u8_i32"
	.space 1
	.ascii "GT_var_u8_i32"
	.space 1
	.ascii "uGT_var_u8_i32"
	.space 1
	.ascii "GT_param_u8_u16"
	.space 1
	.ascii "uGT_param_u8_u16"
	.space 1
	.ascii "GT_var_u8_u16"
	.space 1
	.ascii "uGT_var_u8_u16"
	.space 1
	.ascii "GT_param_u8_u64"
	.space 1
	.ascii "uGT_param_u8_u64"
	.space 1
	.ascii "GT_var_u8_u64"
	.space 1
	.ascii "uGT_var_u8_u64"
	.space 1
	.ascii "GT_param_u8_L"
	.space 1
	.ascii "uGT_param_u8_L"
	.space 1
	.ascii "GT_var_u8_L"
	.space 1
	.ascii "uGT_var_u8_L"
	.space 1
	.ascii "GT_param_u8_i8"
	.space 1
	.ascii "uGT_param_u8_i8"
	.space 1
	.ascii "GT_var_u8_i8"
	.space 1
	.ascii "uGT_var_u8_i8"
	.space 1
	.ascii "GT_param_u8_u32"
	.space 1
	.ascii "uGT_param_u8_u32"
	.space 1
	.ascii "GT_var_u8_u32"
	.space 1
	.ascii "uGT_var_u8_u32"
	.space 1
	.ascii "GT_param_u8_C"
	.space 1
	.ascii "uGT_param_u8_C"
	.space 1
	.ascii "GT_var_u8_C"
	.space 1
	.ascii "uGT_var_u8_C"
	.space 1
	.ascii "GT_param_u8_u8"
	.space 1
	.ascii "uGT_param_u8_u8"
	.space 1
	.ascii "GT_var_u8_u8"
	.space 1
	.ascii "uGT_var_u8_u8"
	.space 1
	.ascii "GT_param_u8_I"
	.space 1
	.ascii "uGT_param_u8_I"
	.space 1
	.ascii "GT_var_u8_I"
	.space 1
	.ascii "uGT_var_u8_I"
	.space 1
	.ascii "GT_param_u8_i64"
	.space 1
	.ascii "uGT_param_u8_i64"
	.space 1
	.ascii "GT_var_u8_i64"
	.space 1
	.ascii "uGT_var_u8_i64"
	.space 1
	.ascii "GT_param_u8_LC"
	.space 1
	.ascii "uGT_param_u8_LC"
	.space 1
	.ascii "GT_var_u8_LC"
	.space 1
	.ascii "uGT_var_u8_LC"
	.space 1
	.ascii "GT_param_u8_i16"
	.space 1
	.ascii "uGT_param_u8_i16"
	.space 1
	.ascii "GT_var_u8_i16"
	.space 1
	.ascii "uGT_var_u8_i16"
	.space 1
	.ascii "GT_param_I_i32"
	.space 1
	.ascii "uGT_param_I_i32"
	.space 1
	.ascii "GT_var_I_i32"
	.space 1
	.ascii "uGT_var_I_i32"
	.space 1
	.ascii "GT_param_I_u16"
	.space 1
	.ascii "uGT_param_I_u16"
	.space 1
	.ascii "GT_var_I_u16"
	.space 1
	.ascii "uGT_var_I_u16"
	.space 1
	.ascii "GT_param_I_u64"
	.space 1
	.ascii "uGT_param_I_u64"
	.space 1
	.ascii "GT_var_I_u64"
	.space 1
	.ascii "uGT_var_I_u64"
	.space 1
	.ascii "GT_param_I_L"
	.space 1
	.ascii "uGT_param_I_L"
	.space 1
	.ascii "GT_var_I_L"
	.space 1
	.ascii "uGT_var_I_L"
	.space 1
	.ascii "GT_param_I_i8"
	.space 1
	.ascii "uGT_param_I_i8"
	.space 1
	.ascii "GT_var_I_i8"
	.space 1
	.ascii "uGT_var_I_i8"
	.space 1
	.ascii "GT_param_I_u32"
	.space 1
	.ascii "uGT_param_I_u32"
	.space 1
	.ascii "GT_var_I_u32"
	.space 1
	.ascii "uGT_var_I_u32"
	.space 1
	.ascii "GT_param_I_C"
	.space 1
	.ascii "uGT_param_I_C"
	.space 1
	.ascii "GT_var_I_C"
	.space 1
	.ascii "uGT_var_I_C"
	.space 1
	.ascii "GT_param_I_u8"
	.space 1
	.ascii "uGT_param_I_u8"
	.space 1
	.ascii "GT_var_I_u8"
	.space 1
	.ascii "uGT_var_I_u8"
	.space 1
	.ascii "GT_param_I_I"
	.space 1
	.ascii "uGT_param_I_I"
	.space 1
	.ascii "GT_var_I_I"
	.space 1
	.ascii "uGT_var_I_I"
	.space 1
	.ascii "GT_param_I_i64"
	.space 1
	.ascii "uGT_param_I_i64"
	.space 1
	.ascii "GT_var_I_i64"
	.space 1
	.ascii "uGT_var_I_i64"
	.space 1
	.ascii "GT_param_I_LC"
	.space 1
	.ascii "uGT_param_I_LC"
	.space 1
	.ascii "GT_var_I_LC"
	.space 1
	.ascii "uGT_var_I_LC"
	.space 1
	.ascii "GT_param_I_i16"
	.space 1
	.ascii "uGT_param_I_i16"
	.space 1
	.ascii "GT_var_I_i16"
	.space 1
	.ascii "uGT_var_I_i16"
	.space 1
	.ascii "GT_param_i64_i32"
	.space 1
	.ascii "uGT_param_i64_i32"
	.space 1
	.ascii "GT_var_i64_i32"
	.space 1
	.ascii "uGT_var_i64_i32"
	.space 1
	.ascii "GT_param_i64_u16"
	.space 1
	.ascii "uGT_param_i64_u16"
	.space 1
	.ascii "GT_var_i64_u16"
	.space 1
	.ascii "uGT_var_i64_u16"
	.space 1
	.ascii "GT_param_i64_u64"
	.space 1
	.ascii "uGT_param_i64_u64"
	.space 1
	.ascii "GT_var_i64_u64"
	.space 1
	.ascii "uGT_var_i64_u64"
	.space 1
	.ascii "GT_param_i64_L"
	.space 1
	.ascii "uGT_param_i64_L"
	.space 1
	.ascii "GT_var_i64_L"
	.space 1
	.ascii "uGT_var_i64_L"
	.space 1
	.ascii "GT_param_i64_i8"
	.space 1
	.ascii "uGT_param_i64_i8"
	.space 1
	.ascii "GT_var_i64_i8"
	.space 1
	.ascii "uGT_var_i64_i8"
	.space 1
	.ascii "GT_param_i64_u32"
	.space 1
	.ascii "uGT_param_i64_u32"
	.space 1
	.ascii "GT_var_i64_u32"
	.space 1
	.ascii "uGT_var_i64_u32"
	.space 1
	.ascii "GT_param_i64_C"
	.space 1
	.ascii "uGT_param_i64_C"
	.space 1
	.ascii "GT_var_i64_C"
	.space 1
	.ascii "uGT_var_i64_C"
	.space 1
	.ascii "GT_param_i64_u8"
	.space 1
	.ascii "uGT_param_i64_u8"
	.space 1
	.ascii "GT_var_i64_u8"
	.space 1
	.ascii "uGT_var_i64_u8"
	.space 1
	.ascii "GT_param_i64_I"
	.space 1
	.ascii "uGT_param_i64_I"
	.space 1
	.ascii "GT_var_i64_I"
	.space 1
	.ascii "uGT_var_i64_I"
	.space 1
	.ascii "GT_param_i64_i64"
	.space 1
	.ascii "uGT_param_i64_i64"
	.space 1
	.ascii "GT_var_i64_i64"
	.space 1
	.ascii "uGT_var_i64_i64"
	.space 1
	.ascii "GT_param_i64_LC"
	.space 1
	.ascii "uGT_param_i64_LC"
	.space 1
	.ascii "GT_var_i64_LC"
	.space 1
	.ascii "uGT_var_i64_LC"
	.space 1
	.ascii "GT_param_i64_i16"
	.space 1
	.ascii "uGT_param_i64_i16"
	.space 1
	.ascii "GT_var_i64_i16"
	.space 1
	.ascii "uGT_var_i64_i16"
	.space 1
	.ascii "GT_param_f64_f64"
	.space 1
	.ascii "GT_var_f64_f64"
	.space 1
	.ascii "GT_param_LC_i32"
	.space 1
	.ascii "uGT_param_LC_i32"
	.space 1
	.ascii "GT_var_LC_i32"
	.space 1
	.ascii "uGT_var_LC_i32"
	.space 1
	.ascii "GT_param_LC_u16"
	.space 1
	.ascii "uGT_param_LC_u16"
	.space 1
	.ascii "GT_var_LC_u16"
	.space 1
	.ascii "uGT_var_LC_u16"
	.space 1
	.ascii "GT_param_LC_u64"
	.space 1
	.ascii "uGT_param_LC_u64"
	.space 1
	.ascii "GT_var_LC_u64"
	.space 1
	.ascii "uGT_var_LC_u64"
	.space 1
	.ascii "GT_param_LC_L"
	.space 1
	.ascii "uGT_param_LC_L"
	.space 1
	.ascii "GT_var_LC_L"
	.space 1
	.ascii "uGT_var_LC_L"
	.space 1
	.ascii "GT_param_LC_i8"
	.space 1
	.ascii "uGT_param_LC_i8"
	.space 1
	.ascii "GT_var_LC_i8"
	.space 1
	.ascii "uGT_var_LC_i8"
	.space 1
	.ascii "GT_param_LC_u32"
	.space 1
	.ascii "uGT_param_LC_u32"
	.space 1
	.ascii "GT_var_LC_u32"
	.space 1
	.ascii "uGT_var_LC_u32"
	.space 1
	.ascii "GT_param_LC_C"
	.space 1
	.ascii "uGT_param_LC_C"
	.space 1
	.ascii "GT_var_LC_C"
	.space 1
	.ascii "uGT_var_LC_C"
	.space 1
	.ascii "GT_param_LC_u8"
	.space 1
	.ascii "uGT_param_LC_u8"
	.space 1
	.ascii "GT_var_LC_u8"
	.space 1
	.ascii "uGT_var_LC_u8"
	.space 1
	.ascii "GT_param_LC_I"
	.space 1
	.ascii "uGT_param_LC_I"
	.space 1
	.ascii "GT_var_LC_I"
	.space 1
	.ascii "uGT_var_LC_I"
	.space 1
	.ascii "GT_param_LC_i64"
	.space 1
	.ascii "uGT_param_LC_i64"
	.space 1
	.ascii "GT_var_LC_i64"
	.space 1
	.ascii "uGT_var_LC_i64"
	.space 1
	.ascii "GT_param_LC_LC"
	.space 1
	.ascii "uGT_param_LC_LC"
	.space 1
	.ascii "GT_var_LC_LC"
	.space 1
	.ascii "uGT_var_LC_LC"
	.space 1
	.ascii "GT_param_LC_i16"
	.space 1
	.ascii "uGT_param_LC_i16"
	.space 1
	.ascii "GT_var_LC_i16"
	.space 1
	.ascii "uGT_var_LC_i16"
	.space 1
	.ascii "GT_param_i16_i32"
	.space 1
	.ascii "uGT_param_i16_i32"
	.space 1
	.ascii "GT_var_i16_i32"
	.space 1
	.ascii "uGT_var_i16_i32"
	.space 1
	.ascii "GT_param_i16_u16"
	.space 1
	.ascii "uGT_param_i16_u16"
	.space 1
	.ascii "GT_var_i16_u16"
	.space 1
	.ascii "uGT_var_i16_u16"
	.space 1
	.ascii "GT_param_i16_u64"
	.space 1
	.ascii "uGT_param_i16_u64"
	.space 1
	.ascii "GT_var_i16_u64"
	.space 1
	.ascii "uGT_var_i16_u64"
	.space 1
	.ascii "GT_param_i16_L"
	.space 1
	.ascii "uGT_param_i16_L"
	.space 1
	.ascii "GT_var_i16_L"
	.space 1
	.ascii "uGT_var_i16_L"
	.space 1
	.ascii "GT_param_i16_i8"
	.space 1
	.ascii "uGT_param_i16_i8"
	.space 1
	.ascii "GT_var_i16_i8"
	.space 1
	.ascii "uGT_var_i16_i8"
	.space 1
	.ascii "GT_param_i16_u32"
	.space 1
	.ascii "uGT_param_i16_u32"
	.space 1
	.ascii "GT_var_i16_u32"
	.space 1
	.ascii "uGT_var_i16_u32"
	.space 1
	.ascii "GT_param_i16_C"
	.space 1
	.ascii "uGT_param_i16_C"
	.space 1
	.ascii "GT_var_i16_C"
	.space 1
	.ascii "uGT_var_i16_C"
	.space 1
	.ascii "GT_param_i16_u8"
	.space 1
	.ascii "uGT_param_i16_u8"
	.space 1
	.ascii "GT_var_i16_u8"
	.space 1
	.ascii "uGT_var_i16_u8"
	.space 1
	.ascii "GT_param_i16_I"
	.space 1
	.ascii "uGT_param_i16_I"
	.space 1
	.ascii "GT_var_i16_I"
	.space 1
	.ascii "uGT_var_i16_I"
	.space 1
	.ascii "GT_param_i16_i64"
	.space 1
	.ascii "uGT_param_i16_i64"
	.space 1
	.ascii "GT_var_i16_i64"
	.space 1
	.ascii "uGT_var_i16_i64"
	.space 1
	.ascii "GT_param_i16_LC"
	.space 1
	.ascii "uGT_param_i16_LC"
	.space 1
	.ascii "GT_var_i16_LC"
	.space 1
	.ascii "uGT_var_i16_LC"
	.space 1
	.ascii "GT_param_i16_i16"
	.space 1
	.ascii "uGT_param_i16_i16"
	.space 1
	.ascii "GT_var_i16_i16"
	.space 1
	.ascii "uGT_var_i16_i16"
	.space 1
	.ascii "LE_param_i32_i32"
	.space 1
	.ascii "uLE_param_i32_i32"
	.space 1
	.ascii "LE_var_i32_i32"
	.space 1
	.ascii "uLE_var_i32_i32"
	.space 1
	.ascii "LE_param_i32_u16"
	.space 1
	.ascii "uLE_param_i32_u16"
	.space 1
	.ascii "LE_var_i32_u16"
	.space 1
	.ascii "uLE_var_i32_u16"
	.space 1
	.ascii "LE_param_i32_u64"
	.space 1
	.ascii "uLE_param_i32_u64"
	.space 1
	.ascii "LE_var_i32_u64"
	.space 1
	.ascii "uLE_var_i32_u64"
	.space 1
	.ascii "LE_param_i32_L"
	.space 1
	.ascii "uLE_param_i32_L"
	.space 1
	.ascii "LE_var_i32_L"
	.space 1
	.ascii "uLE_var_i32_L"
	.space 1
	.ascii "LE_param_i32_i8"
	.space 1
	.ascii "uLE_param_i32_i8"
	.space 1
	.ascii "LE_var_i32_i8"
	.space 1
	.ascii "uLE_var_i32_i8"
	.space 1
	.ascii "LE_param_i32_u32"
	.space 1
	.ascii "uLE_param_i32_u32"
	.space 1
	.ascii "LE_var_i32_u32"
	.space 1
	.ascii "uLE_var_i32_u32"
	.space 1
	.ascii "LE_param_i32_C"
	.space 1
	.ascii "uLE_param_i32_C"
	.space 1
	.ascii "LE_var_i32_C"
	.space 1
	.ascii "uLE_var_i32_C"
	.space 1
	.ascii "LE_param_i32_u8"
	.space 1
	.ascii "uLE_param_i32_u8"
	.space 1
	.ascii "LE_var_i32_u8"
	.space 1
	.ascii "uLE_var_i32_u8"
	.space 1
	.ascii "LE_param_i32_I"
	.space 1
	.ascii "uLE_param_i32_I"
	.space 1
	.ascii "LE_var_i32_I"
	.space 1
	.ascii "uLE_var_i32_I"
	.space 1
	.ascii "LE_param_i32_i64"
	.space 1
	.ascii "uLE_param_i32_i64"
	.space 1
	.ascii "LE_var_i32_i64"
	.space 1
	.ascii "uLE_var_i32_i64"
	.space 1
	.ascii "LE_param_i32_LC"
	.space 1
	.ascii "uLE_param_i32_LC"
	.space 1
	.ascii "LE_var_i32_LC"
	.space 1
	.ascii "uLE_var_i32_LC"
	.space 1
	.ascii "LE_param_i32_i16"
	.space 1
	.ascii "uLE_param_i32_i16"
	.space 1
	.ascii "LE_var_i32_i16"
	.space 1
	.ascii "uLE_var_i32_i16"
	.space 1
	.ascii "LE_param_u16_i32"
	.space 1
	.ascii "uLE_param_u16_i32"
	.space 1
	.ascii "LE_var_u16_i32"
	.space 1
	.ascii "uLE_var_u16_i32"
	.space 1
	.ascii "LE_param_u16_u16"
	.space 1
	.ascii "uLE_param_u16_u16"
	.space 1
	.ascii "LE_var_u16_u16"
	.space 1
	.ascii "uLE_var_u16_u16"
	.space 1
	.ascii "LE_param_u16_u64"
	.space 1
	.ascii "uLE_param_u16_u64"
	.space 1
	.ascii "LE_var_u16_u64"
	.space 1
	.ascii "uLE_var_u16_u64"
	.space 1
	.ascii "LE_param_u16_L"
	.space 1
	.ascii "uLE_param_u16_L"
	.space 1
	.ascii "LE_var_u16_L"
	.space 1
	.ascii "uLE_var_u16_L"
	.space 1
	.ascii "LE_param_u16_i8"
	.space 1
	.ascii "uLE_param_u16_i8"
	.space 1
	.ascii "LE_var_u16_i8"
	.space 1
	.ascii "uLE_var_u16_i8"
	.space 1
	.ascii "LE_param_u16_u32"
	.space 1
	.ascii "uLE_param_u16_u32"
	.space 1
	.ascii "LE_var_u16_u32"
	.space 1
	.ascii "uLE_var_u16_u32"
	.space 1
	.ascii "LE_param_u16_C"
	.space 1
	.ascii "uLE_param_u16_C"
	.space 1
	.ascii "LE_var_u16_C"
	.space 1
	.ascii "uLE_var_u16_C"
	.space 1
	.ascii "LE_param_u16_u8"
	.space 1
	.ascii "uLE_param_u16_u8"
	.space 1
	.ascii "LE_var_u16_u8"
	.space 1
	.ascii "uLE_var_u16_u8"
	.space 1
	.ascii "LE_param_u16_I"
	.space 1
	.ascii "uLE_param_u16_I"
	.space 1
	.ascii "LE_var_u16_I"
	.space 1
	.ascii "uLE_var_u16_I"
	.space 1
	.ascii "LE_param_u16_i64"
	.space 1
	.ascii "uLE_param_u16_i64"
	.space 1
	.ascii "LE_var_u16_i64"
	.space 1
	.ascii "uLE_var_u16_i64"
	.space 1
	.ascii "LE_param_u16_LC"
	.space 1
	.ascii "uLE_param_u16_LC"
	.space 1
	.ascii "LE_var_u16_LC"
	.space 1
	.ascii "uLE_var_u16_LC"
	.space 1
	.ascii "LE_param_u16_i16"
	.space 1
	.ascii "uLE_param_u16_i16"
	.space 1
	.ascii "LE_var_u16_i16"
	.space 1
	.ascii "uLE_var_u16_i16"
	.space 1
	.ascii "LE_param_u64_i32"
	.space 1
	.ascii "uLE_param_u64_i32"
	.space 1
	.ascii "LE_var_u64_i32"
	.space 1
	.ascii "uLE_var_u64_i32"
	.space 1
	.ascii "LE_param_u64_u16"
	.space 1
	.ascii "uLE_param_u64_u16"
	.space 1
	.ascii "LE_var_u64_u16"
	.space 1
	.ascii "uLE_var_u64_u16"
	.space 1
	.ascii "LE_param_u64_u64"
	.space 1
	.ascii "uLE_param_u64_u64"
	.space 1
	.ascii "LE_var_u64_u64"
	.space 1
	.ascii "uLE_var_u64_u64"
	.space 1
	.ascii "LE_param_u64_L"
	.space 1
	.ascii "uLE_param_u64_L"
	.space 1
	.ascii "LE_var_u64_L"
	.space 1
	.ascii "uLE_var_u64_L"
	.space 1
	.ascii "LE_param_u64_i8"
	.space 1
	.ascii "uLE_param_u64_i8"
	.space 1
	.ascii "LE_var_u64_i8"
	.space 1
	.ascii "uLE_var_u64_i8"
	.space 1
	.ascii "LE_param_u64_u32"
	.space 1
	.ascii "uLE_param_u64_u32"
	.space 1
	.ascii "LE_var_u64_u32"
	.space 1
	.ascii "uLE_var_u64_u32"
	.space 1
	.ascii "LE_param_u64_C"
	.space 1
	.ascii "uLE_param_u64_C"
	.space 1
	.ascii "LE_var_u64_C"
	.space 1
	.ascii "uLE_var_u64_C"
	.space 1
	.ascii "LE_param_u64_u8"
	.space 1
	.ascii "uLE_param_u64_u8"
	.space 1
	.ascii "LE_var_u64_u8"
	.space 1
	.ascii "uLE_var_u64_u8"
	.space 1
	.ascii "LE_param_u64_I"
	.space 1
	.ascii "uLE_param_u64_I"
	.space 1
	.ascii "LE_var_u64_I"
	.space 1
	.ascii "uLE_var_u64_I"
	.space 1
	.ascii "LE_param_u64_i64"
	.space 1
	.ascii "uLE_param_u64_i64"
	.space 1
	.ascii "LE_var_u64_i64"
	.space 1
	.ascii "uLE_var_u64_i64"
	.space 1
	.ascii "LE_param_u64_LC"
	.space 1
	.ascii "uLE_param_u64_LC"
	.space 1
	.ascii "LE_var_u64_LC"
	.space 1
	.ascii "uLE_var_u64_LC"
	.space 1
	.ascii "LE_param_u64_i16"
	.space 1
	.ascii "uLE_param_u64_i16"
	.space 1
	.ascii "LE_var_u64_i16"
	.space 1
	.ascii "uLE_var_u64_i16"
	.space 1
	.ascii "LE_param_L_i32"
	.space 1
	.ascii "uLE_param_L_i32"
	.space 1
	.ascii "LE_var_L_i32"
	.space 1
	.ascii "uLE_var_L_i32"
	.space 1
	.ascii "LE_param_L_u16"
	.space 1
	.ascii "uLE_param_L_u16"
	.space 1
	.ascii "LE_var_L_u16"
	.space 1
	.ascii "uLE_var_L_u16"
	.space 1
	.ascii "LE_param_L_u64"
	.space 1
	.ascii "uLE_param_L_u64"
	.space 1
	.ascii "LE_var_L_u64"
	.space 1
	.ascii "uLE_var_L_u64"
	.space 1
	.ascii "LE_param_L_L"
	.space 1
	.ascii "uLE_param_L_L"
	.space 1
	.ascii "LE_var_L_L"
	.space 1
	.ascii "uLE_var_L_L"
	.space 1
	.ascii "LE_param_L_i8"
	.space 1
	.ascii "uLE_param_L_i8"
	.space 1
	.ascii "LE_var_L_i8"
	.space 1
	.ascii "uLE_var_L_i8"
	.space 1
	.ascii "LE_param_L_u32"
	.space 1
	.ascii "uLE_param_L_u32"
	.space 1
	.ascii "LE_var_L_u32"
	.space 1
	.ascii "uLE_var_L_u32"
	.space 1
	.ascii "LE_param_L_C"
	.space 1
	.ascii "uLE_param_L_C"
	.space 1
	.ascii "LE_var_L_C"
	.space 1
	.ascii "uLE_var_L_C"
	.space 1
	.ascii "LE_param_L_u8"
	.space 1
	.ascii "uLE_param_L_u8"
	.space 1
	.ascii "LE_var_L_u8"
	.space 1
	.ascii "uLE_var_L_u8"
	.space 1
	.ascii "LE_param_L_I"
	.space 1
	.ascii "uLE_param_L_I"
	.space 1
	.ascii "LE_var_L_I"
	.space 1
	.ascii "uLE_var_L_I"
	.space 1
	.ascii "LE_param_L_i64"
	.space 1
	.ascii "uLE_param_L_i64"
	.space 1
	.ascii "LE_var_L_i64"
	.space 1
	.ascii "uLE_var_L_i64"
	.space 1
	.ascii "LE_param_L_LC"
	.space 1
	.ascii "uLE_param_L_LC"
	.space 1
	.ascii "LE_var_L_LC"
	.space 1
	.ascii "uLE_var_L_LC"
	.space 1
	.ascii "LE_param_L_i16"
	.space 1
	.ascii "uLE_param_L_i16"
	.space 1
	.ascii "LE_var_L_i16"
	.space 1
	.ascii "uLE_var_L_i16"
	.space 1
	.ascii "LE_param_i8_i32"
	.space 1
	.ascii "uLE_param_i8_i32"
	.space 1
	.ascii "LE_var_i8_i32"
	.space 1
	.ascii "uLE_var_i8_i32"
	.space 1
	.ascii "LE_param_i8_u16"
	.space 1
	.ascii "uLE_param_i8_u16"
	.space 1
	.ascii "LE_var_i8_u16"
	.space 1
	.ascii "uLE_var_i8_u16"
	.space 1
	.ascii "LE_param_i8_u64"
	.space 1
	.ascii "uLE_param_i8_u64"
	.space 1
	.ascii "LE_var_i8_u64"
	.space 1
	.ascii "uLE_var_i8_u64"
	.space 1
	.ascii "LE_param_i8_L"
	.space 1
	.ascii "uLE_param_i8_L"
	.space 1
	.ascii "LE_var_i8_L"
	.space 1
	.ascii "uLE_var_i8_L"
	.space 1
	.ascii "LE_param_i8_i8"
	.space 1
	.ascii "uLE_param_i8_i8"
	.space 1
	.ascii "LE_var_i8_i8"
	.space 1
	.ascii "uLE_var_i8_i8"
	.space 1
	.ascii "LE_param_i8_u32"
	.space 1
	.ascii "uLE_param_i8_u32"
	.space 1
	.ascii "LE_var_i8_u32"
	.space 1
	.ascii "uLE_var_i8_u32"
	.space 1
	.ascii "LE_param_i8_C"
	.space 1
	.ascii "uLE_param_i8_C"
	.space 1
	.ascii "LE_var_i8_C"
	.space 1
	.ascii "uLE_var_i8_C"
	.space 1
	.ascii "LE_param_i8_u8"
	.space 1
	.ascii "uLE_param_i8_u8"
	.space 1
	.ascii "LE_var_i8_u8"
	.space 1
	.ascii "uLE_var_i8_u8"
	.space 1
	.ascii "LE_param_i8_I"
	.space 1
	.ascii "uLE_param_i8_I"
	.space 1
	.ascii "LE_var_i8_I"
	.space 1
	.ascii "uLE_var_i8_I"
	.space 1
	.ascii "LE_param_i8_i64"
	.space 1
	.ascii "uLE_param_i8_i64"
	.space 1
	.ascii "LE_var_i8_i64"
	.space 1
	.ascii "uLE_var_i8_i64"
	.space 1
	.ascii "LE_param_i8_LC"
	.space 1
	.ascii "uLE_param_i8_LC"
	.space 1
	.ascii "LE_var_i8_LC"
	.space 1
	.ascii "uLE_var_i8_LC"
	.space 1
	.ascii "LE_param_i8_i16"
	.space 1
	.ascii "uLE_param_i8_i16"
	.space 1
	.ascii "LE_var_i8_i16"
	.space 1
	.ascii "uLE_var_i8_i16"
	.space 1
	.ascii "LE_param_u32_i32"
	.space 1
	.ascii "uLE_param_u32_i32"
	.space 1
	.ascii "LE_var_u32_i32"
	.space 1
	.ascii "uLE_var_u32_i32"
	.space 1
	.ascii "LE_param_u32_u16"
	.space 1
	.ascii "uLE_param_u32_u16"
	.space 1
	.ascii "LE_var_u32_u16"
	.space 1
	.ascii "uLE_var_u32_u16"
	.space 1
	.ascii "LE_param_u32_u64"
	.space 1
	.ascii "uLE_param_u32_u64"
	.space 1
	.ascii "LE_var_u32_u64"
	.space 1
	.ascii "uLE_var_u32_u64"
	.space 1
	.ascii "LE_param_u32_L"
	.space 1
	.ascii "uLE_param_u32_L"
	.space 1
	.ascii "LE_var_u32_L"
	.space 1
	.ascii "uLE_var_u32_L"
	.space 1
	.ascii "LE_param_u32_i8"
	.space 1
	.ascii "uLE_param_u32_i8"
	.space 1
	.ascii "LE_var_u32_i8"
	.space 1
	.ascii "uLE_var_u32_i8"
	.space 1
	.ascii "LE_param_u32_u32"
	.space 1
	.ascii "uLE_param_u32_u32"
	.space 1
	.ascii "LE_var_u32_u32"
	.space 1
	.ascii "uLE_var_u32_u32"
	.space 1
	.ascii "LE_param_u32_C"
	.space 1
	.ascii "uLE_param_u32_C"
	.space 1
	.ascii "LE_var_u32_C"
	.space 1
	.ascii "uLE_var_u32_C"
	.space 1
	.ascii "LE_param_u32_u8"
	.space 1
	.ascii "uLE_param_u32_u8"
	.space 1
	.ascii "LE_var_u32_u8"
	.space 1
	.ascii "uLE_var_u32_u8"
	.space 1
	.ascii "LE_param_u32_I"
	.space 1
	.ascii "uLE_param_u32_I"
	.space 1
	.ascii "LE_var_u32_I"
	.space 1
	.ascii "uLE_var_u32_I"
	.space 1
	.ascii "LE_param_u32_i64"
	.space 1
	.ascii "uLE_param_u32_i64"
	.space 1
	.ascii "LE_var_u32_i64"
	.space 1
	.ascii "uLE_var_u32_i64"
	.space 1
	.ascii "LE_param_u32_LC"
	.space 1
	.ascii "uLE_param_u32_LC"
	.space 1
	.ascii "LE_var_u32_LC"
	.space 1
	.ascii "uLE_var_u32_LC"
	.space 1
	.ascii "LE_param_u32_i16"
	.space 1
	.ascii "uLE_param_u32_i16"
	.space 1
	.ascii "LE_var_u32_i16"
	.space 1
	.ascii "uLE_var_u32_i16"
	.space 1
	.ascii "LE_param_f32_f32"
	.space 1
	.ascii "LE_var_f32_f32"
	.space 1
	.ascii "LE_param_C_i32"
	.space 1
	.ascii "uLE_param_C_i32"
	.space 1
	.ascii "LE_var_C_i32"
	.space 1
	.ascii "uLE_var_C_i32"
	.space 1
	.ascii "LE_param_C_u16"
	.space 1
	.ascii "uLE_param_C_u16"
	.space 1
	.ascii "LE_var_C_u16"
	.space 1
	.ascii "uLE_var_C_u16"
	.space 1
	.ascii "LE_param_C_u64"
	.space 1
	.ascii "uLE_param_C_u64"
	.space 1
	.ascii "LE_var_C_u64"
	.space 1
	.ascii "uLE_var_C_u64"
	.space 1
	.ascii "LE_param_C_L"
	.space 1
	.ascii "uLE_param_C_L"
	.space 1
	.ascii "LE_var_C_L"
	.space 1
	.ascii "uLE_var_C_L"
	.space 1
	.ascii "LE_param_C_i8"
	.space 1
	.ascii "uLE_param_C_i8"
	.space 1
	.ascii "LE_var_C_i8"
	.space 1
	.ascii "uLE_var_C_i8"
	.space 1
	.ascii "LE_param_C_u32"
	.space 1
	.ascii "uLE_param_C_u32"
	.space 1
	.ascii "LE_var_C_u32"
	.space 1
	.ascii "uLE_var_C_u32"
	.space 1
	.ascii "LE_param_C_C"
	.space 1
	.ascii "uLE_param_C_C"
	.space 1
	.ascii "LE_var_C_C"
	.space 1
	.ascii "uLE_var_C_C"
	.space 1
	.ascii "LE_param_C_u8"
	.space 1
	.ascii "uLE_param_C_u8"
	.space 1
	.ascii "LE_var_C_u8"
	.space 1
	.ascii "uLE_var_C_u8"
	.space 1
	.ascii "LE_param_C_I"
	.space 1
	.ascii "uLE_param_C_I"
	.space 1
	.ascii "LE_var_C_I"
	.space 1
	.ascii "uLE_var_C_I"
	.space 1
	.ascii "LE_param_C_i64"
	.space 1
	.ascii "uLE_param_C_i64"
	.space 1
	.ascii "LE_var_C_i64"
	.space 1
	.ascii "uLE_var_C_i64"
	.space 1
	.ascii "LE_param_C_LC"
	.space 1
	.ascii "uLE_param_C_LC"
	.space 1
	.ascii "LE_var_C_LC"
	.space 1
	.ascii "uLE_var_C_LC"
	.space 1
	.ascii "LE_param_C_i16"
	.space 1
	.ascii "uLE_param_C_i16"
	.space 1
	.ascii "LE_var_C_i16"
	.space 1
	.ascii "uLE_var_C_i16"
	.space 1
	.ascii "LE_param_u8_i32"
	.space 1
	.ascii "uLE_param_u8_i32"
	.space 1
	.ascii "LE_var_u8_i32"
	.space 1
	.ascii "uLE_var_u8_i32"
	.space 1
	.ascii "LE_param_u8_u16"
	.space 1
	.ascii "uLE_param_u8_u16"
	.space 1
	.ascii "LE_var_u8_u16"
	.space 1
	.ascii "uLE_var_u8_u16"
	.space 1
	.ascii "LE_param_u8_u64"
	.space 1
	.ascii "uLE_param_u8_u64"
	.space 1
	.ascii "LE_var_u8_u64"
	.space 1
	.ascii "uLE_var_u8_u64"
	.space 1
	.ascii "LE_param_u8_L"
	.space 1
	.ascii "uLE_param_u8_L"
	.space 1
	.ascii "LE_var_u8_L"
	.space 1
	.ascii "uLE_var_u8_L"
	.space 1
	.ascii "LE_param_u8_i8"
	.space 1
	.ascii "uLE_param_u8_i8"
	.space 1
	.ascii "LE_var_u8_i8"
	.space 1
	.ascii "uLE_var_u8_i8"
	.space 1
	.ascii "LE_param_u8_u32"
	.space 1
	.ascii "uLE_param_u8_u32"
	.space 1
	.ascii "LE_var_u8_u32"
	.space 1
	.ascii "uLE_var_u8_u32"
	.space 1
	.ascii "LE_param_u8_C"
	.space 1
	.ascii "uLE_param_u8_C"
	.space 1
	.ascii "LE_var_u8_C"
	.space 1
	.ascii "uLE_var_u8_C"
	.space 1
	.ascii "LE_param_u8_u8"
	.space 1
	.ascii "uLE_param_u8_u8"
	.space 1
	.ascii "LE_var_u8_u8"
	.space 1
	.ascii "uLE_var_u8_u8"
	.space 1
	.ascii "LE_param_u8_I"
	.space 1
	.ascii "uLE_param_u8_I"
	.space 1
	.ascii "LE_var_u8_I"
	.space 1
	.ascii "uLE_var_u8_I"
	.space 1
	.ascii "LE_param_u8_i64"
	.space 1
	.ascii "uLE_param_u8_i64"
	.space 1
	.ascii "LE_var_u8_i64"
	.space 1
	.ascii "uLE_var_u8_i64"
	.space 1
	.ascii "LE_param_u8_LC"
	.space 1
	.ascii "uLE_param_u8_LC"
	.space 1
	.ascii "LE_var_u8_LC"
	.space 1
	.ascii "uLE_var_u8_LC"
	.space 1
	.ascii "LE_param_u8_i16"
	.space 1
	.ascii "uLE_param_u8_i16"
	.space 1
	.ascii "LE_var_u8_i16"
	.space 1
	.ascii "uLE_var_u8_i16"
	.space 1
	.ascii "LE_param_I_i32"
	.space 1
	.ascii "uLE_param_I_i32"
	.space 1
	.ascii "LE_var_I_i32"
	.space 1
	.ascii "uLE_var_I_i32"
	.space 1
	.ascii "LE_param_I_u16"
	.space 1
	.ascii "uLE_param_I_u16"
	.space 1
	.ascii "LE_var_I_u16"
	.space 1
	.ascii "uLE_var_I_u16"
	.space 1
	.ascii "LE_param_I_u64"
	.space 1
	.ascii "uLE_param_I_u64"
	.space 1
	.ascii "LE_var_I_u64"
	.space 1
	.ascii "uLE_var_I_u64"
	.space 1
	.ascii "LE_param_I_L"
	.space 1
	.ascii "uLE_param_I_L"
	.space 1
	.ascii "LE_var_I_L"
	.space 1
	.ascii "uLE_var_I_L"
	.space 1
	.ascii "LE_param_I_i8"
	.space 1
	.ascii "uLE_param_I_i8"
	.space 1
	.ascii "LE_var_I_i8"
	.space 1
	.ascii "uLE_var_I_i8"
	.space 1
	.ascii "LE_param_I_u32"
	.space 1
	.ascii "uLE_param_I_u32"
	.space 1
	.ascii "LE_var_I_u32"
	.space 1
	.ascii "uLE_var_I_u32"
	.space 1
	.ascii "LE_param_I_C"
	.space 1
	.ascii "uLE_param_I_C"
	.space 1
	.ascii "LE_var_I_C"
	.space 1
	.ascii "uLE_var_I_C"
	.space 1
	.ascii "LE_param_I_u8"
	.space 1
	.ascii "uLE_param_I_u8"
	.space 1
	.ascii "LE_var_I_u8"
	.space 1
	.ascii "uLE_var_I_u8"
	.space 1
	.ascii "LE_param_I_I"
	.space 1
	.ascii "uLE_param_I_I"
	.space 1
	.ascii "LE_var_I_I"
	.space 1
	.ascii "uLE_var_I_I"
	.space 1
	.ascii "LE_param_I_i64"
	.space 1
	.ascii "uLE_param_I_i64"
	.space 1
	.ascii "LE_var_I_i64"
	.space 1
	.ascii "uLE_var_I_i64"
	.space 1
	.ascii "LE_param_I_LC"
	.space 1
	.ascii "uLE_param_I_LC"
	.space 1
	.ascii "LE_var_I_LC"
	.space 1
	.ascii "uLE_var_I_LC"
	.space 1
	.ascii "LE_param_I_i16"
	.space 1
	.ascii "uLE_param_I_i16"
	.space 1
	.ascii "LE_var_I_i16"
	.space 1
	.ascii "uLE_var_I_i16"
	.space 1
	.ascii "LE_param_i64_i32"
	.space 1
	.ascii "uLE_param_i64_i32"
	.space 1
	.ascii "LE_var_i64_i32"
	.space 1
	.ascii "uLE_var_i64_i32"
	.space 1
	.ascii "LE_param_i64_u16"
	.space 1
	.ascii "uLE_param_i64_u16"
	.space 1
	.ascii "LE_var_i64_u16"
	.space 1
	.ascii "uLE_var_i64_u16"
	.space 1
	.ascii "LE_param_i64_u64"
	.space 1
	.ascii "uLE_param_i64_u64"
	.space 1
	.ascii "LE_var_i64_u64"
	.space 1
	.ascii "uLE_var_i64_u64"
	.space 1
	.ascii "LE_param_i64_L"
	.space 1
	.ascii "uLE_param_i64_L"
	.space 1
	.ascii "LE_var_i64_L"
	.space 1
	.ascii "uLE_var_i64_L"
	.space 1
	.ascii "LE_param_i64_i8"
	.space 1
	.ascii "uLE_param_i64_i8"
	.space 1
	.ascii "LE_var_i64_i8"
	.space 1
	.ascii "uLE_var_i64_i8"
	.space 1
	.ascii "LE_param_i64_u32"
	.space 1
	.ascii "uLE_param_i64_u32"
	.space 1
	.ascii "LE_var_i64_u32"
	.space 1
	.ascii "uLE_var_i64_u32"
	.space 1
	.ascii "LE_param_i64_C"
	.space 1
	.ascii "uLE_param_i64_C"
	.space 1
	.ascii "LE_var_i64_C"
	.space 1
	.ascii "uLE_var_i64_C"
	.space 1
	.ascii "LE_param_i64_u8"
	.space 1
	.ascii "uLE_param_i64_u8"
	.space 1
	.ascii "LE_var_i64_u8"
	.space 1
	.ascii "uLE_var_i64_u8"
	.space 1
	.ascii "LE_param_i64_I"
	.space 1
	.ascii "uLE_param_i64_I"
	.space 1
	.ascii "LE_var_i64_I"
	.space 1
	.ascii "uLE_var_i64_I"
	.space 1
	.ascii "LE_param_i64_i64"
	.space 1
	.ascii "uLE_param_i64_i64"
	.space 1
	.ascii "LE_var_i64_i64"
	.space 1
	.ascii "uLE_var_i64_i64"
	.space 1
	.ascii "LE_param_i64_LC"
	.space 1
	.ascii "uLE_param_i64_LC"
	.space 1
	.ascii "LE_var_i64_LC"
	.space 1
	.ascii "uLE_var_i64_LC"
	.space 1
	.ascii "LE_param_i64_i16"
	.space 1
	.ascii "uLE_param_i64_i16"
	.space 1
	.ascii "LE_var_i64_i16"
	.space 1
	.ascii "uLE_var_i64_i16"
	.space 1
	.ascii "LE_param_f64_f64"
	.space 1
	.ascii "LE_var_f64_f64"
	.space 1
	.ascii "LE_param_LC_i32"
	.space 1
	.ascii "uLE_param_LC_i32"
	.space 1
	.ascii "LE_var_LC_i32"
	.space 1
	.ascii "uLE_var_LC_i32"
	.space 1
	.ascii "LE_param_LC_u16"
	.space 1
	.ascii "uLE_param_LC_u16"
	.space 1
	.ascii "LE_var_LC_u16"
	.space 1
	.ascii "uLE_var_LC_u16"
	.space 1
	.ascii "LE_param_LC_u64"
	.space 1
	.ascii "uLE_param_LC_u64"
	.space 1
	.ascii "LE_var_LC_u64"
	.space 1
	.ascii "uLE_var_LC_u64"
	.space 1
	.ascii "LE_param_LC_L"
	.space 1
	.ascii "uLE_param_LC_L"
	.space 1
	.ascii "LE_var_LC_L"
	.space 1
	.ascii "uLE_var_LC_L"
	.space 1
	.ascii "LE_param_LC_i8"
	.space 1
	.ascii "uLE_param_LC_i8"
	.space 1
	.ascii "LE_var_LC_i8"
	.space 1
	.ascii "uLE_var_LC_i8"
	.space 1
	.ascii "LE_param_LC_u32"
	.space 1
	.ascii "uLE_param_LC_u32"
	.space 1
	.ascii "LE_var_LC_u32"
	.space 1
	.ascii "uLE_var_LC_u32"
	.space 1
	.ascii "LE_param_LC_C"
	.space 1
	.ascii "uLE_param_LC_C"
	.space 1
	.ascii "LE_var_LC_C"
	.space 1
	.ascii "uLE_var_LC_C"
	.space 1
	.ascii "LE_param_LC_u8"
	.space 1
	.ascii "uLE_param_LC_u8"
	.space 1
	.ascii "LE_var_LC_u8"
	.space 1
	.ascii "uLE_var_LC_u8"
	.space 1
	.ascii "LE_param_LC_I"
	.space 1
	.ascii "uLE_param_LC_I"
	.space 1
	.ascii "LE_var_LC_I"
	.space 1
	.ascii "uLE_var_LC_I"
	.space 1
	.ascii "LE_param_LC_i64"
	.space 1
	.ascii "uLE_param_LC_i64"
	.space 1
	.ascii "LE_var_LC_i64"
	.space 1
	.ascii "uLE_var_LC_i64"
	.space 1
	.ascii "LE_param_LC_LC"
	.space 1
	.ascii "uLE_param_LC_LC"
	.space 1
	.ascii "LE_var_LC_LC"
	.space 1
	.ascii "uLE_var_LC_LC"
	.space 1
	.ascii "LE_param_LC_i16"
	.space 1
	.ascii "uLE_param_LC_i16"
	.space 1
	.ascii "LE_var_LC_i16"
	.space 1
	.ascii "uLE_var_LC_i16"
	.space 1
	.ascii "LE_param_i16_i32"
	.space 1
	.ascii "uLE_param_i16_i32"
	.space 1
	.ascii "LE_var_i16_i32"
	.space 1
	.ascii "uLE_var_i16_i32"
	.space 1
	.ascii "LE_param_i16_u16"
	.space 1
	.ascii "uLE_param_i16_u16"
	.space 1
	.ascii "LE_var_i16_u16"
	.space 1
	.ascii "uLE_var_i16_u16"
	.space 1
	.ascii "LE_param_i16_u64"
	.space 1
	.ascii "uLE_param_i16_u64"
	.space 1
	.ascii "LE_var_i16_u64"
	.space 1
	.ascii "uLE_var_i16_u64"
	.space 1
	.ascii "LE_param_i16_L"
	.space 1
	.ascii "uLE_param_i16_L"
	.space 1
	.ascii "LE_var_i16_L"
	.space 1
	.ascii "uLE_var_i16_L"
	.space 1
	.ascii "LE_param_i16_i8"
	.space 1
	.ascii "uLE_param_i16_i8"
	.space 1
	.ascii "LE_var_i16_i8"
	.space 1
	.ascii "uLE_var_i16_i8"
	.space 1
	.ascii "LE_param_i16_u32"
	.space 1
	.ascii "uLE_param_i16_u32"
	.space 1
	.ascii "LE_var_i16_u32"
	.space 1
	.ascii "uLE_var_i16_u32"
	.space 1
	.ascii "LE_param_i16_C"
	.space 1
	.ascii "uLE_param_i16_C"
	.space 1
	.ascii "LE_var_i16_C"
	.space 1
	.ascii "uLE_var_i16_C"
	.space 1
	.ascii "LE_param_i16_u8"
	.space 1
	.ascii "uLE_param_i16_u8"
	.space 1
	.ascii "LE_var_i16_u8"
	.space 1
	.ascii "uLE_var_i16_u8"
	.space 1
	.ascii "LE_param_i16_I"
	.space 1
	.ascii "uLE_param_i16_I"
	.space 1
	.ascii "LE_var_i16_I"
	.space 1
	.ascii "uLE_var_i16_I"
	.space 1
	.ascii "LE_param_i16_i64"
	.space 1
	.ascii "uLE_param_i16_i64"
	.space 1
	.ascii "LE_var_i16_i64"
	.space 1
	.ascii "uLE_var_i16_i64"
	.space 1
	.ascii "LE_param_i16_LC"
	.space 1
	.ascii "uLE_param_i16_LC"
	.space 1
	.ascii "LE_var_i16_LC"
	.space 1
	.ascii "uLE_var_i16_LC"
	.space 1
	.ascii "LE_param_i16_i16"
	.space 1
	.ascii "uLE_param_i16_i16"
	.space 1
	.ascii "LE_var_i16_i16"
	.space 1
	.ascii "uLE_var_i16_i16"
	.space 1
	.ascii "LT_param_i32_i32"
	.space 1
	.ascii "uLT_param_i32_i32"
	.space 1
	.ascii "LT_var_i32_i32"
	.space 1
	.ascii "uLT_var_i32_i32"
	.space 1
	.ascii "LT_param_i32_u16"
	.space 1
	.ascii "uLT_param_i32_u16"
	.space 1
	.ascii "LT_var_i32_u16"
	.space 1
	.ascii "uLT_var_i32_u16"
	.space 1
	.ascii "LT_param_i32_u64"
	.space 1
	.ascii "uLT_param_i32_u64"
	.space 1
	.ascii "LT_var_i32_u64"
	.space 1
	.ascii "uLT_var_i32_u64"
	.space 1
	.ascii "LT_param_i32_L"
	.space 1
	.ascii "uLT_param_i32_L"
	.space 1
	.ascii "LT_var_i32_L"
	.space 1
	.ascii "uLT_var_i32_L"
	.space 1
	.ascii "LT_param_i32_i8"
	.space 1
	.ascii "uLT_param_i32_i8"
	.space 1
	.ascii "LT_var_i32_i8"
	.space 1
	.ascii "uLT_var_i32_i8"
	.space 1
	.ascii "LT_param_i32_u32"
	.space 1
	.ascii "uLT_param_i32_u32"
	.space 1
	.ascii "LT_var_i32_u32"
	.space 1
	.ascii "uLT_var_i32_u32"
	.space 1
	.ascii "LT_param_i32_C"
	.space 1
	.ascii "uLT_param_i32_C"
	.space 1
	.ascii "LT_var_i32_C"
	.space 1
	.ascii "uLT_var_i32_C"
	.space 1
	.ascii "LT_param_i32_u8"
	.space 1
	.ascii "uLT_param_i32_u8"
	.space 1
	.ascii "LT_var_i32_u8"
	.space 1
	.ascii "uLT_var_i32_u8"
	.space 1
	.ascii "LT_param_i32_I"
	.space 1
	.ascii "uLT_param_i32_I"
	.space 1
	.ascii "LT_var_i32_I"
	.space 1
	.ascii "uLT_var_i32_I"
	.space 1
	.ascii "LT_param_i32_i64"
	.space 1
	.ascii "uLT_param_i32_i64"
	.space 1
	.ascii "LT_var_i32_i64"
	.space 1
	.ascii "uLT_var_i32_i64"
	.space 1
	.ascii "LT_param_i32_LC"
	.space 1
	.ascii "uLT_param_i32_LC"
	.space 1
	.ascii "LT_var_i32_LC"
	.space 1
	.ascii "uLT_var_i32_LC"
	.space 1
	.ascii "LT_param_i32_i16"
	.space 1
	.ascii "uLT_param_i32_i16"
	.space 1
	.ascii "LT_var_i32_i16"
	.space 1
	.ascii "uLT_var_i32_i16"
	.space 1
	.ascii "LT_param_u16_i32"
	.space 1
	.ascii "uLT_param_u16_i32"
	.space 1
	.ascii "LT_var_u16_i32"
	.space 1
	.ascii "uLT_var_u16_i32"
	.space 1
	.ascii "LT_param_u16_u16"
	.space 1
	.ascii "uLT_param_u16_u16"
	.space 1
	.ascii "LT_var_u16_u16"
	.space 1
	.ascii "uLT_var_u16_u16"
	.space 1
	.ascii "LT_param_u16_u64"
	.space 1
	.ascii "uLT_param_u16_u64"
	.space 1
	.ascii "LT_var_u16_u64"
	.space 1
	.ascii "uLT_var_u16_u64"
	.space 1
	.ascii "LT_param_u16_L"
	.space 1
	.ascii "uLT_param_u16_L"
	.space 1
	.ascii "LT_var_u16_L"
	.space 1
	.ascii "uLT_var_u16_L"
	.space 1
	.ascii "LT_param_u16_i8"
	.space 1
	.ascii "uLT_param_u16_i8"
	.space 1
	.ascii "LT_var_u16_i8"
	.space 1
	.ascii "uLT_var_u16_i8"
	.space 1
	.ascii "LT_param_u16_u32"
	.space 1
	.ascii "uLT_param_u16_u32"
	.space 1
	.ascii "LT_var_u16_u32"
	.space 1
	.ascii "uLT_var_u16_u32"
	.space 1
	.ascii "LT_param_u16_C"
	.space 1
	.ascii "uLT_param_u16_C"
	.space 1
	.ascii "LT_var_u16_C"
	.space 1
	.ascii "uLT_var_u16_C"
	.space 1
	.ascii "LT_param_u16_u8"
	.space 1
	.ascii "uLT_param_u16_u8"
	.space 1
	.ascii "LT_var_u16_u8"
	.space 1
	.ascii "uLT_var_u16_u8"
	.space 1
	.ascii "LT_param_u16_I"
	.space 1
	.ascii "uLT_param_u16_I"
	.space 1
	.ascii "LT_var_u16_I"
	.space 1
	.ascii "uLT_var_u16_I"
	.space 1
	.ascii "LT_param_u16_i64"
	.space 1
	.ascii "uLT_param_u16_i64"
	.space 1
	.ascii "LT_var_u16_i64"
	.space 1
	.ascii "uLT_var_u16_i64"
	.space 1
	.ascii "LT_param_u16_LC"
	.space 1
	.ascii "uLT_param_u16_LC"
	.space 1
	.ascii "LT_var_u16_LC"
	.space 1
	.ascii "uLT_var_u16_LC"
	.space 1
	.ascii "LT_param_u16_i16"
	.space 1
	.ascii "uLT_param_u16_i16"
	.space 1
	.ascii "LT_var_u16_i16"
	.space 1
	.ascii "uLT_var_u16_i16"
	.space 1
	.ascii "LT_param_u64_i32"
	.space 1
	.ascii "uLT_param_u64_i32"
	.space 1
	.ascii "LT_var_u64_i32"
	.space 1
	.ascii "uLT_var_u64_i32"
	.space 1
	.ascii "LT_param_u64_u16"
	.space 1
	.ascii "uLT_param_u64_u16"
	.space 1
	.ascii "LT_var_u64_u16"
	.space 1
	.ascii "uLT_var_u64_u16"
	.space 1
	.ascii "LT_param_u64_u64"
	.space 1
	.ascii "uLT_param_u64_u64"
	.space 1
	.ascii "LT_var_u64_u64"
	.space 1
	.ascii "uLT_var_u64_u64"
	.space 1
	.ascii "LT_param_u64_L"
	.space 1
	.ascii "uLT_param_u64_L"
	.space 1
	.ascii "LT_var_u64_L"
	.space 1
	.ascii "uLT_var_u64_L"
	.space 1
	.ascii "LT_param_u64_i8"
	.space 1
	.ascii "uLT_param_u64_i8"
	.space 1
	.ascii "LT_var_u64_i8"
	.space 1
	.ascii "uLT_var_u64_i8"
	.space 1
	.ascii "LT_param_u64_u32"
	.space 1
	.ascii "uLT_param_u64_u32"
	.space 1
	.ascii "LT_var_u64_u32"
	.space 1
	.ascii "uLT_var_u64_u32"
	.space 1
	.ascii "LT_param_u64_C"
	.space 1
	.ascii "uLT_param_u64_C"
	.space 1
	.ascii "LT_var_u64_C"
	.space 1
	.ascii "uLT_var_u64_C"
	.space 1
	.ascii "LT_param_u64_u8"
	.space 1
	.ascii "uLT_param_u64_u8"
	.space 1
	.ascii "LT_var_u64_u8"
	.space 1
	.ascii "uLT_var_u64_u8"
	.space 1
	.ascii "LT_param_u64_I"
	.space 1
	.ascii "uLT_param_u64_I"
	.space 1
	.ascii "LT_var_u64_I"
	.space 1
	.ascii "uLT_var_u64_I"
	.space 1
	.ascii "LT_param_u64_i64"
	.space 1
	.ascii "uLT_param_u64_i64"
	.space 1
	.ascii "LT_var_u64_i64"
	.space 1
	.ascii "uLT_var_u64_i64"
	.space 1
	.ascii "LT_param_u64_LC"
	.space 1
	.ascii "uLT_param_u64_LC"
	.space 1
	.ascii "LT_var_u64_LC"
	.space 1
	.ascii "uLT_var_u64_LC"
	.space 1
	.ascii "LT_param_u64_i16"
	.space 1
	.ascii "uLT_param_u64_i16"
	.space 1
	.ascii "LT_var_u64_i16"
	.space 1
	.ascii "uLT_var_u64_i16"
	.space 1
	.ascii "LT_param_L_i32"
	.space 1
	.ascii "uLT_param_L_i32"
	.space 1
	.ascii "LT_var_L_i32"
	.space 1
	.ascii "uLT_var_L_i32"
	.space 1
	.ascii "LT_param_L_u16"
	.space 1
	.ascii "uLT_param_L_u16"
	.space 1
	.ascii "LT_var_L_u16"
	.space 1
	.ascii "uLT_var_L_u16"
	.space 1
	.ascii "LT_param_L_u64"
	.space 1
	.ascii "uLT_param_L_u64"
	.space 1
	.ascii "LT_var_L_u64"
	.space 1
	.ascii "uLT_var_L_u64"
	.space 1
	.ascii "LT_param_L_L"
	.space 1
	.ascii "uLT_param_L_L"
	.space 1
	.ascii "LT_var_L_L"
	.space 1
	.ascii "uLT_var_L_L"
	.space 1
	.ascii "LT_param_L_i8"
	.space 1
	.ascii "uLT_param_L_i8"
	.space 1
	.ascii "LT_var_L_i8"
	.space 1
	.ascii "uLT_var_L_i8"
	.space 1
	.ascii "LT_param_L_u32"
	.space 1
	.ascii "uLT_param_L_u32"
	.space 1
	.ascii "LT_var_L_u32"
	.space 1
	.ascii "uLT_var_L_u32"
	.space 1
	.ascii "LT_param_L_C"
	.space 1
	.ascii "uLT_param_L_C"
	.space 1
	.ascii "LT_var_L_C"
	.space 1
	.ascii "uLT_var_L_C"
	.space 1
	.ascii "LT_param_L_u8"
	.space 1
	.ascii "uLT_param_L_u8"
	.space 1
	.ascii "LT_var_L_u8"
	.space 1
	.ascii "uLT_var_L_u8"
	.space 1
	.ascii "LT_param_L_I"
	.space 1
	.ascii "uLT_param_L_I"
	.space 1
	.ascii "LT_var_L_I"
	.space 1
	.ascii "uLT_var_L_I"
	.space 1
	.ascii "LT_param_L_i64"
	.space 1
	.ascii "uLT_param_L_i64"
	.space 1
	.ascii "LT_var_L_i64"
	.space 1
	.ascii "uLT_var_L_i64"
	.space 1
	.ascii "LT_param_L_LC"
	.space 1
	.ascii "uLT_param_L_LC"
	.space 1
	.ascii "LT_var_L_LC"
	.space 1
	.ascii "uLT_var_L_LC"
	.space 1
	.ascii "LT_param_L_i16"
	.space 1
	.ascii "uLT_param_L_i16"
	.space 1
	.ascii "LT_var_L_i16"
	.space 1
	.ascii "uLT_var_L_i16"
	.space 1
	.ascii "LT_param_i8_i32"
	.space 1
	.ascii "uLT_param_i8_i32"
	.space 1
	.ascii "LT_var_i8_i32"
	.space 1
	.ascii "uLT_var_i8_i32"
	.space 1
	.ascii "LT_param_i8_u16"
	.space 1
	.ascii "uLT_param_i8_u16"
	.space 1
	.ascii "LT_var_i8_u16"
	.space 1
	.ascii "uLT_var_i8_u16"
	.space 1
	.ascii "LT_param_i8_u64"
	.space 1
	.ascii "uLT_param_i8_u64"
	.space 1
	.ascii "LT_var_i8_u64"
	.space 1
	.ascii "uLT_var_i8_u64"
	.space 1
	.ascii "LT_param_i8_L"
	.space 1
	.ascii "uLT_param_i8_L"
	.space 1
	.ascii "LT_var_i8_L"
	.space 1
	.ascii "uLT_var_i8_L"
	.space 1
	.ascii "LT_param_i8_i8"
	.space 1
	.ascii "uLT_param_i8_i8"
	.space 1
	.ascii "LT_var_i8_i8"
	.space 1
	.ascii "uLT_var_i8_i8"
	.space 1
	.ascii "LT_param_i8_u32"
	.space 1
	.ascii "uLT_param_i8_u32"
	.space 1
	.ascii "LT_var_i8_u32"
	.space 1
	.ascii "uLT_var_i8_u32"
	.space 1
	.ascii "LT_param_i8_C"
	.space 1
	.ascii "uLT_param_i8_C"
	.space 1
	.ascii "LT_var_i8_C"
	.space 1
	.ascii "uLT_var_i8_C"
	.space 1
	.ascii "LT_param_i8_u8"
	.space 1
	.ascii "uLT_param_i8_u8"
	.space 1
	.ascii "LT_var_i8_u8"
	.space 1
	.ascii "uLT_var_i8_u8"
	.space 1
	.ascii "LT_param_i8_I"
	.space 1
	.ascii "uLT_param_i8_I"
	.space 1
	.ascii "LT_var_i8_I"
	.space 1
	.ascii "uLT_var_i8_I"
	.space 1
	.ascii "LT_param_i8_i64"
	.space 1
	.ascii "uLT_param_i8_i64"
	.space 1
	.ascii "LT_var_i8_i64"
	.space 1
	.ascii "uLT_var_i8_i64"
	.space 1
	.ascii "LT_param_i8_LC"
	.space 1
	.ascii "uLT_param_i8_LC"
	.space 1
	.ascii "LT_var_i8_LC"
	.space 1
	.ascii "uLT_var_i8_LC"
	.space 1
	.ascii "LT_param_i8_i16"
	.space 1
	.ascii "uLT_param_i8_i16"
	.space 1
	.ascii "LT_var_i8_i16"
	.space 1
	.ascii "uLT_var_i8_i16"
	.space 1
	.ascii "LT_param_u32_i32"
	.space 1
	.ascii "uLT_param_u32_i32"
	.space 1
	.ascii "LT_var_u32_i32"
	.space 1
	.ascii "uLT_var_u32_i32"
	.space 1
	.ascii "LT_param_u32_u16"
	.space 1
	.ascii "uLT_param_u32_u16"
	.space 1
	.ascii "LT_var_u32_u16"
	.space 1
	.ascii "uLT_var_u32_u16"
	.space 1
	.ascii "LT_param_u32_u64"
	.space 1
	.ascii "uLT_param_u32_u64"
	.space 1
	.ascii "LT_var_u32_u64"
	.space 1
	.ascii "uLT_var_u32_u64"
	.space 1
	.ascii "LT_param_u32_L"
	.space 1
	.ascii "uLT_param_u32_L"
	.space 1
	.ascii "LT_var_u32_L"
	.space 1
	.ascii "uLT_var_u32_L"
	.space 1
	.ascii "LT_param_u32_i8"
	.space 1
	.ascii "uLT_param_u32_i8"
	.space 1
	.ascii "LT_var_u32_i8"
	.space 1
	.ascii "uLT_var_u32_i8"
	.space 1
	.ascii "LT_param_u32_u32"
	.space 1
	.ascii "uLT_param_u32_u32"
	.space 1
	.ascii "LT_var_u32_u32"
	.space 1
	.ascii "uLT_var_u32_u32"
	.space 1
	.ascii "LT_param_u32_C"
	.space 1
	.ascii "uLT_param_u32_C"
	.space 1
	.ascii "LT_var_u32_C"
	.space 1
	.ascii "uLT_var_u32_C"
	.space 1
	.ascii "LT_param_u32_u8"
	.space 1
	.ascii "uLT_param_u32_u8"
	.space 1
	.ascii "LT_var_u32_u8"
	.space 1
	.ascii "uLT_var_u32_u8"
	.space 1
	.ascii "LT_param_u32_I"
	.space 1
	.ascii "uLT_param_u32_I"
	.space 1
	.ascii "LT_var_u32_I"
	.space 1
	.ascii "uLT_var_u32_I"
	.space 1
	.ascii "LT_param_u32_i64"
	.space 1
	.ascii "uLT_param_u32_i64"
	.space 1
	.ascii "LT_var_u32_i64"
	.space 1
	.ascii "uLT_var_u32_i64"
	.space 1
	.ascii "LT_param_u32_LC"
	.space 1
	.ascii "uLT_param_u32_LC"
	.space 1
	.ascii "LT_var_u32_LC"
	.space 1
	.ascii "uLT_var_u32_LC"
	.space 1
	.ascii "LT_param_u32_i16"
	.space 1
	.ascii "uLT_param_u32_i16"
	.space 1
	.ascii "LT_var_u32_i16"
	.space 1
	.ascii "uLT_var_u32_i16"
	.space 1
	.ascii "LT_param_f32_f32"
	.space 1
	.ascii "LT_var_f32_f32"
	.space 1
	.ascii "LT_param_C_i32"
	.space 1
	.ascii "uLT_param_C_i32"
	.space 1
	.ascii "LT_var_C_i32"
	.space 1
	.ascii "uLT_var_C_i32"
	.space 1
	.ascii "LT_param_C_u16"
	.space 1
	.ascii "uLT_param_C_u16"
	.space 1
	.ascii "LT_var_C_u16"
	.space 1
	.ascii "uLT_var_C_u16"
	.space 1
	.ascii "LT_param_C_u64"
	.space 1
	.ascii "uLT_param_C_u64"
	.space 1
	.ascii "LT_var_C_u64"
	.space 1
	.ascii "uLT_var_C_u64"
	.space 1
	.ascii "LT_param_C_L"
	.space 1
	.ascii "uLT_param_C_L"
	.space 1
	.ascii "LT_var_C_L"
	.space 1
	.ascii "uLT_var_C_L"
	.space 1
	.ascii "LT_param_C_i8"
	.space 1
	.ascii "uLT_param_C_i8"
	.space 1
	.ascii "LT_var_C_i8"
	.space 1
	.ascii "uLT_var_C_i8"
	.space 1
	.ascii "LT_param_C_u32"
	.space 1
	.ascii "uLT_param_C_u32"
	.space 1
	.ascii "LT_var_C_u32"
	.space 1
	.ascii "uLT_var_C_u32"
	.space 1
	.ascii "LT_param_C_C"
	.space 1
	.ascii "uLT_param_C_C"
	.space 1
	.ascii "LT_var_C_C"
	.space 1
	.ascii "uLT_var_C_C"
	.space 1
	.ascii "LT_param_C_u8"
	.space 1
	.ascii "uLT_param_C_u8"
	.space 1
	.ascii "LT_var_C_u8"
	.space 1
	.ascii "uLT_var_C_u8"
	.space 1
	.ascii "LT_param_C_I"
	.space 1
	.ascii "uLT_param_C_I"
	.space 1
	.ascii "LT_var_C_I"
	.space 1
	.ascii "uLT_var_C_I"
	.space 1
	.ascii "LT_param_C_i64"
	.space 1
	.ascii "uLT_param_C_i64"
	.space 1
	.ascii "LT_var_C_i64"
	.space 1
	.ascii "uLT_var_C_i64"
	.space 1
	.ascii "LT_param_C_LC"
	.space 1
	.ascii "uLT_param_C_LC"
	.space 1
	.ascii "LT_var_C_LC"
	.space 1
	.ascii "uLT_var_C_LC"
	.space 1
	.ascii "LT_param_C_i16"
	.space 1
	.ascii "uLT_param_C_i16"
	.space 1
	.ascii "LT_var_C_i16"
	.space 1
	.ascii "uLT_var_C_i16"
	.space 1
	.ascii "LT_param_u8_i32"
	.space 1
	.ascii "uLT_param_u8_i32"
	.space 1
	.ascii "LT_var_u8_i32"
	.space 1
	.ascii "uLT_var_u8_i32"
	.space 1
	.ascii "LT_param_u8_u16"
	.space 1
	.ascii "uLT_param_u8_u16"
	.space 1
	.ascii "LT_var_u8_u16"
	.space 1
	.ascii "uLT_var_u8_u16"
	.space 1
	.ascii "LT_param_u8_u64"
	.space 1
	.ascii "uLT_param_u8_u64"
	.space 1
	.ascii "LT_var_u8_u64"
	.space 1
	.ascii "uLT_var_u8_u64"
	.space 1
	.ascii "LT_param_u8_L"
	.space 1
	.ascii "uLT_param_u8_L"
	.space 1
	.ascii "LT_var_u8_L"
	.space 1
	.ascii "uLT_var_u8_L"
	.space 1
	.ascii "LT_param_u8_i8"
	.space 1
	.ascii "uLT_param_u8_i8"
	.space 1
	.ascii "LT_var_u8_i8"
	.space 1
	.ascii "uLT_var_u8_i8"
	.space 1
	.ascii "LT_param_u8_u32"
	.space 1
	.ascii "uLT_param_u8_u32"
	.space 1
	.ascii "LT_var_u8_u32"
	.space 1
	.ascii "uLT_var_u8_u32"
	.space 1
	.ascii "LT_param_u8_C"
	.space 1
	.ascii "uLT_param_u8_C"
	.space 1
	.ascii "LT_var_u8_C"
	.space 1
	.ascii "uLT_var_u8_C"
	.space 1
	.ascii "LT_param_u8_u8"
	.space 1
	.ascii "uLT_param_u8_u8"
	.space 1
	.ascii "LT_var_u8_u8"
	.space 1
	.ascii "uLT_var_u8_u8"
	.space 1
	.ascii "LT_param_u8_I"
	.space 1
	.ascii "uLT_param_u8_I"
	.space 1
	.ascii "LT_var_u8_I"
	.space 1
	.ascii "uLT_var_u8_I"
	.space 1
	.ascii "LT_param_u8_i64"
	.space 1
	.ascii "uLT_param_u8_i64"
	.space 1
	.ascii "LT_var_u8_i64"
	.space 1
	.ascii "uLT_var_u8_i64"
	.space 1
	.ascii "LT_param_u8_LC"
	.space 1
	.ascii "uLT_param_u8_LC"
	.space 1
	.ascii "LT_var_u8_LC"
	.space 1
	.ascii "uLT_var_u8_LC"
	.space 1
	.ascii "LT_param_u8_i16"
	.space 1
	.ascii "uLT_param_u8_i16"
	.space 1
	.ascii "LT_var_u8_i16"
	.space 1
	.ascii "uLT_var_u8_i16"
	.space 1
	.ascii "LT_param_I_i32"
	.space 1
	.ascii "uLT_param_I_i32"
	.space 1
	.ascii "LT_var_I_i32"
	.space 1
	.ascii "uLT_var_I_i32"
	.space 1
	.ascii "LT_param_I_u16"
	.space 1
	.ascii "uLT_param_I_u16"
	.space 1
	.ascii "LT_var_I_u16"
	.space 1
	.ascii "uLT_var_I_u16"
	.space 1
	.ascii "LT_param_I_u64"
	.space 1
	.ascii "uLT_param_I_u64"
	.space 1
	.ascii "LT_var_I_u64"
	.space 1
	.ascii "uLT_var_I_u64"
	.space 1
	.ascii "LT_param_I_L"
	.space 1
	.ascii "uLT_param_I_L"
	.space 1
	.ascii "LT_var_I_L"
	.space 1
	.ascii "uLT_var_I_L"
	.space 1
	.ascii "LT_param_I_i8"
	.space 1
	.ascii "uLT_param_I_i8"
	.space 1
	.ascii "LT_var_I_i8"
	.space 1
	.ascii "uLT_var_I_i8"
	.space 1
	.ascii "LT_param_I_u32"
	.space 1
	.ascii "uLT_param_I_u32"
	.space 1
	.ascii "LT_var_I_u32"
	.space 1
	.ascii "uLT_var_I_u32"
	.space 1
	.ascii "LT_param_I_C"
	.space 1
	.ascii "uLT_param_I_C"
	.space 1
	.ascii "LT_var_I_C"
	.space 1
	.ascii "uLT_var_I_C"
	.space 1
	.ascii "LT_param_I_u8"
	.space 1
	.ascii "uLT_param_I_u8"
	.space 1
	.ascii "LT_var_I_u8"
	.space 1
	.ascii "uLT_var_I_u8"
	.space 1
	.ascii "LT_param_I_I"
	.space 1
	.ascii "uLT_param_I_I"
	.space 1
	.ascii "LT_var_I_I"
	.space 1
	.ascii "uLT_var_I_I"
	.space 1
	.ascii "LT_param_I_i64"
	.space 1
	.ascii "uLT_param_I_i64"
	.space 1
	.ascii "LT_var_I_i64"
	.space 1
	.ascii "uLT_var_I_i64"
	.space 1
	.ascii "LT_param_I_LC"
	.space 1
	.ascii "uLT_param_I_LC"
	.space 1
	.ascii "LT_var_I_LC"
	.space 1
	.ascii "uLT_var_I_LC"
	.space 1
	.ascii "LT_param_I_i16"
	.space 1
	.ascii "uLT_param_I_i16"
	.space 1
	.ascii "LT_var_I_i16"
	.space 1
	.ascii "uLT_var_I_i16"
	.space 1
	.ascii "LT_param_i64_i32"
	.space 1
	.ascii "uLT_param_i64_i32"
	.space 1
	.ascii "LT_var_i64_i32"
	.space 1
	.ascii "uLT_var_i64_i32"
	.space 1
	.ascii "LT_param_i64_u16"
	.space 1
	.ascii "uLT_param_i64_u16"
	.space 1
	.ascii "LT_var_i64_u16"
	.space 1
	.ascii "uLT_var_i64_u16"
	.space 1
	.ascii "LT_param_i64_u64"
	.space 1
	.ascii "uLT_param_i64_u64"
	.space 1
	.ascii "LT_var_i64_u64"
	.space 1
	.ascii "uLT_var_i64_u64"
	.space 1
	.ascii "LT_param_i64_L"
	.space 1
	.ascii "uLT_param_i64_L"
	.space 1
	.ascii "LT_var_i64_L"
	.space 1
	.ascii "uLT_var_i64_L"
	.space 1
	.ascii "LT_param_i64_i8"
	.space 1
	.ascii "uLT_param_i64_i8"
	.space 1
	.ascii "LT_var_i64_i8"
	.space 1
	.ascii "uLT_var_i64_i8"
	.space 1
	.ascii "LT_param_i64_u32"
	.space 1
	.ascii "uLT_param_i64_u32"
	.space 1
	.ascii "LT_var_i64_u32"
	.space 1
	.ascii "uLT_var_i64_u32"
	.space 1
	.ascii "LT_param_i64_C"
	.space 1
	.ascii "uLT_param_i64_C"
	.space 1
	.ascii "LT_var_i64_C"
	.space 1
	.ascii "uLT_var_i64_C"
	.space 1
	.ascii "LT_param_i64_u8"
	.space 1
	.ascii "uLT_param_i64_u8"
	.space 1
	.ascii "LT_var_i64_u8"
	.space 1
	.ascii "uLT_var_i64_u8"
	.space 1
	.ascii "LT_param_i64_I"
	.space 1
	.ascii "uLT_param_i64_I"
	.space 1
	.ascii "LT_var_i64_I"
	.space 1
	.ascii "uLT_var_i64_I"
	.space 1
	.ascii "LT_param_i64_i64"
	.space 1
	.ascii "uLT_param_i64_i64"
	.space 1
	.ascii "LT_var_i64_i64"
	.space 1
	.ascii "uLT_var_i64_i64"
	.space 1
	.ascii "LT_param_i64_LC"
	.space 1
	.ascii "uLT_param_i64_LC"
	.space 1
	.ascii "LT_var_i64_LC"
	.space 1
	.ascii "uLT_var_i64_LC"
	.space 1
	.ascii "LT_param_i64_i16"
	.space 1
	.ascii "uLT_param_i64_i16"
	.space 1
	.ascii "LT_var_i64_i16"
	.space 1
	.ascii "uLT_var_i64_i16"
	.space 1
	.ascii "LT_param_f64_f64"
	.space 1
	.ascii "LT_var_f64_f64"
	.space 1
	.ascii "LT_param_LC_i32"
	.space 1
	.ascii "uLT_param_LC_i32"
	.space 1
	.ascii "LT_var_LC_i32"
	.space 1
	.ascii "uLT_var_LC_i32"
	.space 1
	.ascii "LT_param_LC_u16"
	.space 1
	.ascii "uLT_param_LC_u16"
	.space 1
	.ascii "LT_var_LC_u16"
	.space 1
	.ascii "uLT_var_LC_u16"
	.space 1
	.ascii "LT_param_LC_u64"
	.space 1
	.ascii "uLT_param_LC_u64"
	.space 1
	.ascii "LT_var_LC_u64"
	.space 1
	.ascii "uLT_var_LC_u64"
	.space 1
	.ascii "LT_param_LC_L"
	.space 1
	.ascii "uLT_param_LC_L"
	.space 1
	.ascii "LT_var_LC_L"
	.space 1
	.ascii "uLT_var_LC_L"
	.space 1
	.ascii "LT_param_LC_i8"
	.space 1
	.ascii "uLT_param_LC_i8"
	.space 1
	.ascii "LT_var_LC_i8"
	.space 1
	.ascii "uLT_var_LC_i8"
	.space 1
	.ascii "LT_param_LC_u32"
	.space 1
	.ascii "uLT_param_LC_u32"
	.space 1
	.ascii "LT_var_LC_u32"
	.space 1
	.ascii "uLT_var_LC_u32"
	.space 1
	.ascii "LT_param_LC_C"
	.space 1
	.ascii "uLT_param_LC_C"
	.space 1
	.ascii "LT_var_LC_C"
	.space 1
	.ascii "uLT_var_LC_C"
	.space 1
	.ascii "LT_param_LC_u8"
	.space 1
	.ascii "uLT_param_LC_u8"
	.space 1
	.ascii "LT_var_LC_u8"
	.space 1
	.ascii "uLT_var_LC_u8"
	.space 1
	.ascii "LT_param_LC_I"
	.space 1
	.ascii "uLT_param_LC_I"
	.space 1
	.ascii "LT_var_LC_I"
	.space 1
	.ascii "uLT_var_LC_I"
	.space 1
	.ascii "LT_param_LC_i64"
	.space 1
	.ascii "uLT_param_LC_i64"
	.space 1
	.ascii "LT_var_LC_i64"
	.space 1
	.ascii "uLT_var_LC_i64"
	.space 1
	.ascii "LT_param_LC_LC"
	.space 1
	.ascii "uLT_param_LC_LC"
	.space 1
	.ascii "LT_var_LC_LC"
	.space 1
	.ascii "uLT_var_LC_LC"
	.space 1
	.ascii "LT_param_LC_i16"
	.space 1
	.ascii "uLT_param_LC_i16"
	.space 1
	.ascii "LT_var_LC_i16"
	.space 1
	.ascii "uLT_var_LC_i16"
	.space 1
	.ascii "LT_param_i16_i32"
	.space 1
	.ascii "uLT_param_i16_i32"
	.space 1
	.ascii "LT_var_i16_i32"
	.space 1
	.ascii "uLT_var_i16_i32"
	.space 1
	.ascii "LT_param_i16_u16"
	.space 1
	.ascii "uLT_param_i16_u16"
	.space 1
	.ascii "LT_var_i16_u16"
	.space 1
	.ascii "uLT_var_i16_u16"
	.space 1
	.ascii "LT_param_i16_u64"
	.space 1
	.ascii "uLT_param_i16_u64"
	.space 1
	.ascii "LT_var_i16_u64"
	.space 1
	.ascii "uLT_var_i16_u64"
	.space 1
	.ascii "LT_param_i16_L"
	.space 1
	.ascii "uLT_param_i16_L"
	.space 1
	.ascii "LT_var_i16_L"
	.space 1
	.ascii "uLT_var_i16_L"
	.space 1
	.ascii "LT_param_i16_i8"
	.space 1
	.ascii "uLT_param_i16_i8"
	.space 1
	.ascii "LT_var_i16_i8"
	.space 1
	.ascii "uLT_var_i16_i8"
	.space 1
	.ascii "LT_param_i16_u32"
	.space 1
	.ascii "uLT_param_i16_u32"
	.space 1
	.ascii "LT_var_i16_u32"
	.space 1
	.ascii "uLT_var_i16_u32"
	.space 1
	.ascii "LT_param_i16_C"
	.space 1
	.ascii "uLT_param_i16_C"
	.space 1
	.ascii "LT_var_i16_C"
	.space 1
	.ascii "uLT_var_i16_C"
	.space 1
	.ascii "LT_param_i16_u8"
	.space 1
	.ascii "uLT_param_i16_u8"
	.space 1
	.ascii "LT_var_i16_u8"
	.space 1
	.ascii "uLT_var_i16_u8"
	.space 1
	.ascii "LT_param_i16_I"
	.space 1
	.ascii "uLT_param_i16_I"
	.space 1
	.ascii "LT_var_i16_I"
	.space 1
	.ascii "uLT_var_i16_I"
	.space 1
	.ascii "LT_param_i16_i64"
	.space 1
	.ascii "uLT_param_i16_i64"
	.space 1
	.ascii "LT_var_i16_i64"
	.space 1
	.ascii "uLT_var_i16_i64"
	.space 1
	.ascii "LT_param_i16_LC"
	.space 1
	.ascii "uLT_param_i16_LC"
	.space 1
	.ascii "LT_var_i16_LC"
	.space 1
	.ascii "uLT_var_i16_LC"
	.space 1
	.ascii "LT_param_i16_i16"
	.space 1
	.ascii "uLT_param_i16_i16"
	.space 1
	.ascii "LT_var_i16_i16"
	.space 1
	.ascii "uLT_var_i16_i16"
	.space 1
	.ascii "Mod_param_i32_i32"
	.space 1
	.ascii "uMod_param_i32_i32"
	.space 1
	.ascii "Mod_var_i32_i32"
	.space 1
	.ascii "uMod_var_i32_i32"
	.space 1
	.ascii "Mod_param_i32_u16"
	.space 1
	.ascii "uMod_param_i32_u16"
	.space 1
	.ascii "Mod_var_i32_u16"
	.space 1
	.ascii "uMod_var_i32_u16"
	.space 1
	.ascii "Mod_param_i32_u64"
	.space 1
	.ascii "uMod_param_i32_u64"
	.space 1
	.ascii "Mod_var_i32_u64"
	.space 1
	.ascii "uMod_var_i32_u64"
	.space 1
	.ascii "Mod_param_i32_L"
	.space 1
	.ascii "uMod_param_i32_L"
	.space 1
	.ascii "Mod_var_i32_L"
	.space 1
	.ascii "uMod_var_i32_L"
	.space 1
	.ascii "Mod_param_i32_i8"
	.space 1
	.ascii "uMod_param_i32_i8"
	.space 1
	.ascii "Mod_var_i32_i8"
	.space 1
	.ascii "uMod_var_i32_i8"
	.space 1
	.ascii "Mod_param_i32_u32"
	.space 1
	.ascii "uMod_param_i32_u32"
	.space 1
	.ascii "Mod_var_i32_u32"
	.space 1
	.ascii "uMod_var_i32_u32"
	.space 1
	.ascii "Mod_param_i32_C"
	.space 1
	.ascii "uMod_param_i32_C"
	.space 1
	.ascii "Mod_var_i32_C"
	.space 1
	.ascii "uMod_var_i32_C"
	.space 1
	.ascii "Mod_param_i32_u8"
	.space 1
	.ascii "uMod_param_i32_u8"
	.space 1
	.ascii "Mod_var_i32_u8"
	.space 1
	.ascii "uMod_var_i32_u8"
	.space 1
	.ascii "Mod_param_i32_I"
	.space 1
	.ascii "uMod_param_i32_I"
	.space 1
	.ascii "Mod_var_i32_I"
	.space 1
	.ascii "uMod_var_i32_I"
	.space 1
	.ascii "Mod_param_i32_i64"
	.space 1
	.ascii "uMod_param_i32_i64"
	.space 1
	.ascii "Mod_var_i32_i64"
	.space 1
	.ascii "uMod_var_i32_i64"
	.space 1
	.ascii "Mod_param_i32_LC"
	.space 1
	.ascii "uMod_param_i32_LC"
	.space 1
	.ascii "Mod_var_i32_LC"
	.space 1
	.ascii "uMod_var_i32_LC"
	.space 1
	.ascii "Mod_param_i32_i16"
	.space 1
	.ascii "uMod_param_i32_i16"
	.space 1
	.ascii "Mod_var_i32_i16"
	.space 1
	.ascii "uMod_var_i32_i16"
	.space 1
	.ascii "Mod_param_u16_i32"
	.space 1
	.ascii "uMod_param_u16_i32"
	.space 1
	.ascii "Mod_var_u16_i32"
	.space 1
	.ascii "uMod_var_u16_i32"
	.space 1
	.ascii "Mod_param_u16_u16"
	.space 1
	.ascii "uMod_param_u16_u16"
	.space 1
	.ascii "Mod_var_u16_u16"
	.space 1
	.ascii "uMod_var_u16_u16"
	.space 1
	.ascii "Mod_param_u16_u64"
	.space 1
	.ascii "uMod_param_u16_u64"
	.space 1
	.ascii "Mod_var_u16_u64"
	.space 1
	.ascii "uMod_var_u16_u64"
	.space 1
	.ascii "Mod_param_u16_L"
	.space 1
	.ascii "uMod_param_u16_L"
	.space 1
	.ascii "Mod_var_u16_L"
	.space 1
	.ascii "uMod_var_u16_L"
	.space 1
	.ascii "Mod_param_u16_i8"
	.space 1
	.ascii "uMod_param_u16_i8"
	.space 1
	.ascii "Mod_var_u16_i8"
	.space 1
	.ascii "uMod_var_u16_i8"
	.space 1
	.ascii "Mod_param_u16_u32"
	.space 1
	.ascii "uMod_param_u16_u32"
	.space 1
	.ascii "Mod_var_u16_u32"
	.space 1
	.ascii "uMod_var_u16_u32"
	.space 1
	.ascii "Mod_param_u16_C"
	.space 1
	.ascii "uMod_param_u16_C"
	.space 1
	.ascii "Mod_var_u16_C"
	.space 1
	.ascii "uMod_var_u16_C"
	.space 1
	.ascii "Mod_param_u16_u8"
	.space 1
	.ascii "uMod_param_u16_u8"
	.space 1
	.ascii "Mod_var_u16_u8"
	.space 1
	.ascii "uMod_var_u16_u8"
	.space 1
	.ascii "Mod_param_u16_I"
	.space 1
	.ascii "uMod_param_u16_I"
	.space 1
	.ascii "Mod_var_u16_I"
	.space 1
	.ascii "uMod_var_u16_I"
	.space 1
	.ascii "Mod_param_u16_i64"
	.space 1
	.ascii "uMod_param_u16_i64"
	.space 1
	.ascii "Mod_var_u16_i64"
	.space 1
	.ascii "uMod_var_u16_i64"
	.space 1
	.ascii "Mod_param_u16_LC"
	.space 1
	.ascii "uMod_param_u16_LC"
	.space 1
	.ascii "Mod_var_u16_LC"
	.space 1
	.ascii "uMod_var_u16_LC"
	.space 1
	.ascii "Mod_param_u16_i16"
	.space 1
	.ascii "uMod_param_u16_i16"
	.space 1
	.ascii "Mod_var_u16_i16"
	.space 1
	.ascii "uMod_var_u16_i16"
	.space 1
	.ascii "Mod_param_u64_i32"
	.space 1
	.ascii "uMod_param_u64_i32"
	.space 1
	.ascii "Mod_var_u64_i32"
	.space 1
	.ascii "uMod_var_u64_i32"
	.space 1
	.ascii "Mod_param_u64_u16"
	.space 1
	.ascii "uMod_param_u64_u16"
	.space 1
	.ascii "Mod_var_u64_u16"
	.space 1
	.ascii "uMod_var_u64_u16"
	.space 1
	.ascii "Mod_param_u64_u64"
	.space 1
	.ascii "uMod_param_u64_u64"
	.space 1
	.ascii "Mod_var_u64_u64"
	.space 1
	.ascii "uMod_var_u64_u64"
	.space 1
	.ascii "Mod_param_u64_L"
	.space 1
	.ascii "uMod_param_u64_L"
	.space 1
	.ascii "Mod_var_u64_L"
	.space 1
	.ascii "uMod_var_u64_L"
	.space 1
	.ascii "Mod_param_u64_i8"
	.space 1
	.ascii "uMod_param_u64_i8"
	.space 1
	.ascii "Mod_var_u64_i8"
	.space 1
	.ascii "uMod_var_u64_i8"
	.space 1
	.ascii "Mod_param_u64_u32"
	.space 1
	.ascii "uMod_param_u64_u32"
	.space 1
	.ascii "Mod_var_u64_u32"
	.space 1
	.ascii "uMod_var_u64_u32"
	.space 1
	.ascii "Mod_param_u64_C"
	.space 1
	.ascii "uMod_param_u64_C"
	.space 1
	.ascii "Mod_var_u64_C"
	.space 1
	.ascii "uMod_var_u64_C"
	.space 1
	.ascii "Mod_param_u64_u8"
	.space 1
	.ascii "uMod_param_u64_u8"
	.space 1
	.ascii "Mod_var_u64_u8"
	.space 1
	.ascii "uMod_var_u64_u8"
	.space 1
	.ascii "Mod_param_u64_I"
	.space 1
	.ascii "uMod_param_u64_I"
	.space 1
	.ascii "Mod_var_u64_I"
	.space 1
	.ascii "uMod_var_u64_I"
	.space 1
	.ascii "Mod_param_u64_i64"
	.space 1
	.ascii "uMod_param_u64_i64"
	.space 1
	.ascii "Mod_var_u64_i64"
	.space 1
	.ascii "uMod_var_u64_i64"
	.space 1
	.ascii "Mod_param_u64_LC"
	.space 1
	.ascii "uMod_param_u64_LC"
	.space 1
	.ascii "Mod_var_u64_LC"
	.space 1
	.ascii "uMod_var_u64_LC"
	.space 1
	.ascii "Mod_param_u64_i16"
	.space 1
	.ascii "uMod_param_u64_i16"
	.space 1
	.ascii "Mod_var_u64_i16"
	.space 1
	.ascii "uMod_var_u64_i16"
	.space 1
	.ascii "Mod_param_L_i32"
	.space 1
	.ascii "uMod_param_L_i32"
	.space 1
	.ascii "Mod_var_L_i32"
	.space 1
	.ascii "uMod_var_L_i32"
	.space 1
	.ascii "Mod_param_L_u16"
	.space 1
	.ascii "uMod_param_L_u16"
	.space 1
	.ascii "Mod_var_L_u16"
	.space 1
	.ascii "uMod_var_L_u16"
	.space 1
	.ascii "Mod_param_L_u64"
	.space 1
	.ascii "uMod_param_L_u64"
	.space 1
	.ascii "Mod_var_L_u64"
	.space 1
	.ascii "uMod_var_L_u64"
	.space 1
	.ascii "Mod_param_L_L"
	.space 1
	.ascii "uMod_param_L_L"
	.space 1
	.ascii "Mod_var_L_L"
	.space 1
	.ascii "uMod_var_L_L"
	.space 1
	.ascii "Mod_param_L_i8"
	.space 1
	.ascii "uMod_param_L_i8"
	.space 1
	.ascii "Mod_var_L_i8"
	.space 1
	.ascii "uMod_var_L_i8"
	.space 1
	.ascii "Mod_param_L_u32"
	.space 1
	.ascii "uMod_param_L_u32"
	.space 1
	.ascii "Mod_var_L_u32"
	.space 1
	.ascii "uMod_var_L_u32"
	.space 1
	.ascii "Mod_param_L_C"
	.space 1
	.ascii "uMod_param_L_C"
	.space 1
	.ascii "Mod_var_L_C"
	.space 1
	.ascii "uMod_var_L_C"
	.space 1
	.ascii "Mod_param_L_u8"
	.space 1
	.ascii "uMod_param_L_u8"
	.space 1
	.ascii "Mod_var_L_u8"
	.space 1
	.ascii "uMod_var_L_u8"
	.space 1
	.ascii "Mod_param_L_I"
	.space 1
	.ascii "uMod_param_L_I"
	.space 1
	.ascii "Mod_var_L_I"
	.space 1
	.ascii "uMod_var_L_I"
	.space 1
	.ascii "Mod_param_L_i64"
	.space 1
	.ascii "uMod_param_L_i64"
	.space 1
	.ascii "Mod_var_L_i64"
	.space 1
	.ascii "uMod_var_L_i64"
	.space 1
	.ascii "Mod_param_L_LC"
	.space 1
	.ascii "uMod_param_L_LC"
	.space 1
	.ascii "Mod_var_L_LC"
	.space 1
	.ascii "uMod_var_L_LC"
	.space 1
	.ascii "Mod_param_L_i16"
	.space 1
	.ascii "uMod_param_L_i16"
	.space 1
	.ascii "Mod_var_L_i16"
	.space 1
	.ascii "uMod_var_L_i16"
	.space 1
	.ascii "Mod_param_i8_i32"
	.space 1
	.ascii "uMod_param_i8_i32"
	.space 1
	.ascii "Mod_var_i8_i32"
	.space 1
	.ascii "uMod_var_i8_i32"
	.space 1
	.ascii "Mod_param_i8_u16"
	.space 1
	.ascii "uMod_param_i8_u16"
	.space 1
	.ascii "Mod_var_i8_u16"
	.space 1
	.ascii "uMod_var_i8_u16"
	.space 1
	.ascii "Mod_param_i8_u64"
	.space 1
	.ascii "uMod_param_i8_u64"
	.space 1
	.ascii "Mod_var_i8_u64"
	.space 1
	.ascii "uMod_var_i8_u64"
	.space 1
	.ascii "Mod_param_i8_L"
	.space 1
	.ascii "uMod_param_i8_L"
	.space 1
	.ascii "Mod_var_i8_L"
	.space 1
	.ascii "uMod_var_i8_L"
	.space 1
	.ascii "Mod_param_i8_i8"
	.space 1
	.ascii "uMod_param_i8_i8"
	.space 1
	.ascii "Mod_var_i8_i8"
	.space 1
	.ascii "uMod_var_i8_i8"
	.space 1
	.ascii "Mod_param_i8_u32"
	.space 1
	.ascii "uMod_param_i8_u32"
	.space 1
	.ascii "Mod_var_i8_u32"
	.space 1
	.ascii "uMod_var_i8_u32"
	.space 1
	.ascii "Mod_param_i8_C"
	.space 1
	.ascii "uMod_param_i8_C"
	.space 1
	.ascii "Mod_var_i8_C"
	.space 1
	.ascii "uMod_var_i8_C"
	.space 1
	.ascii "Mod_param_i8_u8"
	.space 1
	.ascii "uMod_param_i8_u8"
	.space 1
	.ascii "Mod_var_i8_u8"
	.space 1
	.ascii "uMod_var_i8_u8"
	.space 1
	.ascii "Mod_param_i8_I"
	.space 1
	.ascii "uMod_param_i8_I"
	.space 1
	.ascii "Mod_var_i8_I"
	.space 1
	.ascii "uMod_var_i8_I"
	.space 1
	.ascii "Mod_param_i8_i64"
	.space 1
	.ascii "uMod_param_i8_i64"
	.space 1
	.ascii "Mod_var_i8_i64"
	.space 1
	.ascii "uMod_var_i8_i64"
	.space 1
	.ascii "Mod_param_i8_LC"
	.space 1
	.ascii "uMod_param_i8_LC"
	.space 1
	.ascii "Mod_var_i8_LC"
	.space 1
	.ascii "uMod_var_i8_LC"
	.space 1
	.ascii "Mod_param_i8_i16"
	.space 1
	.ascii "uMod_param_i8_i16"
	.space 1
	.ascii "Mod_var_i8_i16"
	.space 1
	.ascii "uMod_var_i8_i16"
	.space 1
	.ascii "Mod_param_u32_i32"
	.space 1
	.ascii "uMod_param_u32_i32"
	.space 1
	.ascii "Mod_var_u32_i32"
	.space 1
	.ascii "uMod_var_u32_i32"
	.space 1
	.ascii "Mod_param_u32_u16"
	.space 1
	.ascii "uMod_param_u32_u16"
	.space 1
	.ascii "Mod_var_u32_u16"
	.space 1
	.ascii "uMod_var_u32_u16"
	.space 1
	.ascii "Mod_param_u32_u64"
	.space 1
	.ascii "uMod_param_u32_u64"
	.space 1
	.ascii "Mod_var_u32_u64"
	.space 1
	.ascii "uMod_var_u32_u64"
	.space 1
	.ascii "Mod_param_u32_L"
	.space 1
	.ascii "uMod_param_u32_L"
	.space 1
	.ascii "Mod_var_u32_L"
	.space 1
	.ascii "uMod_var_u32_L"
	.space 1
	.ascii "Mod_param_u32_i8"
	.space 1
	.ascii "uMod_param_u32_i8"
	.space 1
	.ascii "Mod_var_u32_i8"
	.space 1
	.ascii "uMod_var_u32_i8"
	.space 1
	.ascii "Mod_param_u32_u32"
	.space 1
	.ascii "uMod_param_u32_u32"
	.space 1
	.ascii "Mod_var_u32_u32"
	.space 1
	.ascii "uMod_var_u32_u32"
	.space 1
	.ascii "Mod_param_u32_C"
	.space 1
	.ascii "uMod_param_u32_C"
	.space 1
	.ascii "Mod_var_u32_C"
	.space 1
	.ascii "uMod_var_u32_C"
	.space 1
	.ascii "Mod_param_u32_u8"
	.space 1
	.ascii "uMod_param_u32_u8"
	.space 1
	.ascii "Mod_var_u32_u8"
	.space 1
	.ascii "uMod_var_u32_u8"
	.space 1
	.ascii "Mod_param_u32_I"
	.space 1
	.ascii "uMod_param_u32_I"
	.space 1
	.ascii "Mod_var_u32_I"
	.space 1
	.ascii "uMod_var_u32_I"
	.space 1
	.ascii "Mod_param_u32_i64"
	.space 1
	.ascii "uMod_param_u32_i64"
	.space 1
	.ascii "Mod_var_u32_i64"
	.space 1
	.ascii "uMod_var_u32_i64"
	.space 1
	.ascii "Mod_param_u32_LC"
	.space 1
	.ascii "uMod_param_u32_LC"
	.space 1
	.ascii "Mod_var_u32_LC"
	.space 1
	.ascii "uMod_var_u32_LC"
	.space 1
	.ascii "Mod_param_u32_i16"
	.space 1
	.ascii "uMod_param_u32_i16"
	.space 1
	.ascii "Mod_var_u32_i16"
	.space 1
	.ascii "uMod_var_u32_i16"
	.space 1
	.ascii "Mod_param_f32_f32"
	.space 1
	.ascii "Mod_var_f32_f32"
	.space 1
	.ascii "Mod_param_C_i32"
	.space 1
	.ascii "uMod_param_C_i32"
	.space 1
	.ascii "Mod_var_C_i32"
	.space 1
	.ascii "uMod_var_C_i32"
	.space 1
	.ascii "Mod_param_C_u16"
	.space 1
	.ascii "uMod_param_C_u16"
	.space 1
	.ascii "Mod_var_C_u16"
	.space 1
	.ascii "uMod_var_C_u16"
	.space 1
	.ascii "Mod_param_C_u64"
	.space 1
	.ascii "uMod_param_C_u64"
	.space 1
	.ascii "Mod_var_C_u64"
	.space 1
	.ascii "uMod_var_C_u64"
	.space 1
	.ascii "Mod_param_C_L"
	.space 1
	.ascii "uMod_param_C_L"
	.space 1
	.ascii "Mod_var_C_L"
	.space 1
	.ascii "uMod_var_C_L"
	.space 1
	.ascii "Mod_param_C_i8"
	.space 1
	.ascii "uMod_param_C_i8"
	.space 1
	.ascii "Mod_var_C_i8"
	.space 1
	.ascii "uMod_var_C_i8"
	.space 1
	.ascii "Mod_param_C_u32"
	.space 1
	.ascii "uMod_param_C_u32"
	.space 1
	.ascii "Mod_var_C_u32"
	.space 1
	.ascii "uMod_var_C_u32"
	.space 1
	.ascii "Mod_param_C_C"
	.space 1
	.ascii "uMod_param_C_C"
	.space 1
	.ascii "Mod_var_C_C"
	.space 1
	.ascii "uMod_var_C_C"
	.space 1
	.ascii "Mod_param_C_u8"
	.space 1
	.ascii "uMod_param_C_u8"
	.space 1
	.ascii "Mod_var_C_u8"
	.space 1
	.ascii "uMod_var_C_u8"
	.space 1
	.ascii "Mod_param_C_I"
	.space 1
	.ascii "uMod_param_C_I"
	.space 1
	.ascii "Mod_var_C_I"
	.space 1
	.ascii "uMod_var_C_I"
	.space 1
	.ascii "Mod_param_C_i64"
	.space 1
	.ascii "uMod_param_C_i64"
	.space 1
	.ascii "Mod_var_C_i64"
	.space 1
	.ascii "uMod_var_C_i64"
	.space 1
	.ascii "Mod_param_C_LC"
	.space 1
	.ascii "uMod_param_C_LC"
	.space 1
	.ascii "Mod_var_C_LC"
	.space 1
	.ascii "uMod_var_C_LC"
	.space 1
	.ascii "Mod_param_C_i16"
	.space 1
	.ascii "uMod_param_C_i16"
	.space 1
	.ascii "Mod_var_C_i16"
	.space 1
	.ascii "uMod_var_C_i16"
	.space 1
	.ascii "Mod_param_u8_i32"
	.space 1
	.ascii "uMod_param_u8_i32"
	.space 1
	.ascii "Mod_var_u8_i32"
	.space 1
	.ascii "uMod_var_u8_i32"
	.space 1
	.ascii "Mod_param_u8_u16"
	.space 1
	.ascii "uMod_param_u8_u16"
	.space 1
	.ascii "Mod_var_u8_u16"
	.space 1
	.ascii "uMod_var_u8_u16"
	.space 1
	.ascii "Mod_param_u8_u64"
	.space 1
	.ascii "uMod_param_u8_u64"
	.space 1
	.ascii "Mod_var_u8_u64"
	.space 1
	.ascii "uMod_var_u8_u64"
	.space 1
	.ascii "Mod_param_u8_L"
	.space 1
	.ascii "uMod_param_u8_L"
	.space 1
	.ascii "Mod_var_u8_L"
	.space 1
	.ascii "uMod_var_u8_L"
	.space 1
	.ascii "Mod_param_u8_i8"
	.space 1
	.ascii "uMod_param_u8_i8"
	.space 1
	.ascii "Mod_var_u8_i8"
	.space 1
	.ascii "uMod_var_u8_i8"
	.space 1
	.ascii "Mod_param_u8_u32"
	.space 1
	.ascii "uMod_param_u8_u32"
	.space 1
	.ascii "Mod_var_u8_u32"
	.space 1
	.ascii "uMod_var_u8_u32"
	.space 1
	.ascii "Mod_param_u8_C"
	.space 1
	.ascii "uMod_param_u8_C"
	.space 1
	.ascii "Mod_var_u8_C"
	.space 1
	.ascii "uMod_var_u8_C"
	.space 1
	.ascii "Mod_param_u8_u8"
	.space 1
	.ascii "uMod_param_u8_u8"
	.space 1
	.ascii "Mod_var_u8_u8"
	.space 1
	.ascii "uMod_var_u8_u8"
	.space 1
	.ascii "Mod_param_u8_I"
	.space 1
	.ascii "uMod_param_u8_I"
	.space 1
	.ascii "Mod_var_u8_I"
	.space 1
	.ascii "uMod_var_u8_I"
	.space 1
	.ascii "Mod_param_u8_i64"
	.space 1
	.ascii "uMod_param_u8_i64"
	.space 1
	.ascii "Mod_var_u8_i64"
	.space 1
	.ascii "uMod_var_u8_i64"
	.space 1
	.ascii "Mod_param_u8_LC"
	.space 1
	.ascii "uMod_param_u8_LC"
	.space 1
	.ascii "Mod_var_u8_LC"
	.space 1
	.ascii "uMod_var_u8_LC"
	.space 1
	.ascii "Mod_param_u8_i16"
	.space 1
	.ascii "uMod_param_u8_i16"
	.space 1
	.ascii "Mod_var_u8_i16"
	.space 1
	.ascii "uMod_var_u8_i16"
	.space 1
	.ascii "Mod_param_I_i32"
	.space 1
	.ascii "uMod_param_I_i32"
	.space 1
	.ascii "Mod_var_I_i32"
	.space 1
	.ascii "uMod_var_I_i32"
	.space 1
	.ascii "Mod_param_I_u16"
	.space 1
	.ascii "uMod_param_I_u16"
	.space 1
	.ascii "Mod_var_I_u16"
	.space 1
	.ascii "uMod_var_I_u16"
	.space 1
	.ascii "Mod_param_I_u64"
	.space 1
	.ascii "uMod_param_I_u64"
	.space 1
	.ascii "Mod_var_I_u64"
	.space 1
	.ascii "uMod_var_I_u64"
	.space 1
	.ascii "Mod_param_I_L"
	.space 1
	.ascii "uMod_param_I_L"
	.space 1
	.ascii "Mod_var_I_L"
	.space 1
	.ascii "uMod_var_I_L"
	.space 1
	.ascii "Mod_param_I_i8"
	.space 1
	.ascii "uMod_param_I_i8"
	.space 1
	.ascii "Mod_var_I_i8"
	.space 1
	.ascii "uMod_var_I_i8"
	.space 1
	.ascii "Mod_param_I_u32"
	.space 1
	.ascii "uMod_param_I_u32"
	.space 1
	.ascii "Mod_var_I_u32"
	.space 1
	.ascii "uMod_var_I_u32"
	.space 1
	.ascii "Mod_param_I_C"
	.space 1
	.ascii "uMod_param_I_C"
	.space 1
	.ascii "Mod_var_I_C"
	.space 1
	.ascii "uMod_var_I_C"
	.space 1
	.ascii "Mod_param_I_u8"
	.space 1
	.ascii "uMod_param_I_u8"
	.space 1
	.ascii "Mod_var_I_u8"
	.space 1
	.ascii "uMod_var_I_u8"
	.space 1
	.ascii "Mod_param_I_I"
	.space 1
	.ascii "uMod_param_I_I"
	.space 1
	.ascii "Mod_var_I_I"
	.space 1
	.ascii "uMod_var_I_I"
	.space 1
	.ascii "Mod_param_I_i64"
	.space 1
	.ascii "uMod_param_I_i64"
	.space 1
	.ascii "Mod_var_I_i64"
	.space 1
	.ascii "uMod_var_I_i64"
	.space 1
	.ascii "Mod_param_I_LC"
	.space 1
	.ascii "uMod_param_I_LC"
	.space 1
	.ascii "Mod_var_I_LC"
	.space 1
	.ascii "uMod_var_I_LC"
	.space 1
	.ascii "Mod_param_I_i16"
	.space 1
	.ascii "uMod_param_I_i16"
	.space 1
	.ascii "Mod_var_I_i16"
	.space 1
	.ascii "uMod_var_I_i16"
	.space 1
	.ascii "Mod_param_i64_i32"
	.space 1
	.ascii "uMod_param_i64_i32"
	.space 1
	.ascii "Mod_var_i64_i32"
	.space 1
	.ascii "uMod_var_i64_i32"
	.space 1
	.ascii "Mod_param_i64_u16"
	.space 1
	.ascii "uMod_param_i64_u16"
	.space 1
	.ascii "Mod_var_i64_u16"
	.space 1
	.ascii "uMod_var_i64_u16"
	.space 1
	.ascii "Mod_param_i64_u64"
	.space 1
	.ascii "uMod_param_i64_u64"
	.space 1
	.ascii "Mod_var_i64_u64"
	.space 1
	.ascii "uMod_var_i64_u64"
	.space 1
	.ascii "Mod_param_i64_L"
	.space 1
	.ascii "uMod_param_i64_L"
	.space 1
	.ascii "Mod_var_i64_L"
	.space 1
	.ascii "uMod_var_i64_L"
	.space 1
	.ascii "Mod_param_i64_i8"
	.space 1
	.ascii "uMod_param_i64_i8"
	.space 1
	.ascii "Mod_var_i64_i8"
	.space 1
	.ascii "uMod_var_i64_i8"
	.space 1
	.ascii "Mod_param_i64_u32"
	.space 1
	.ascii "uMod_param_i64_u32"
	.space 1
	.ascii "Mod_var_i64_u32"
	.space 1
	.ascii "uMod_var_i64_u32"
	.space 1
	.ascii "Mod_param_i64_C"
	.space 1
	.ascii "uMod_param_i64_C"
	.space 1
	.ascii "Mod_var_i64_C"
	.space 1
	.ascii "uMod_var_i64_C"
	.space 1
	.ascii "Mod_param_i64_u8"
	.space 1
	.ascii "uMod_param_i64_u8"
	.space 1
	.ascii "Mod_var_i64_u8"
	.space 1
	.ascii "uMod_var_i64_u8"
	.space 1
	.ascii "Mod_param_i64_I"
	.space 1
	.ascii "uMod_param_i64_I"
	.space 1
	.ascii "Mod_var_i64_I"
	.space 1
	.ascii "uMod_var_i64_I"
	.space 1
	.ascii "Mod_param_i64_i64"
	.space 1
	.ascii "uMod_param_i64_i64"
	.space 1
	.ascii "Mod_var_i64_i64"
	.space 1
	.ascii "uMod_var_i64_i64"
	.space 1
	.ascii "Mod_param_i64_LC"
	.space 1
	.ascii "uMod_param_i64_LC"
	.space 1
	.ascii "Mod_var_i64_LC"
	.space 1
	.ascii "uMod_var_i64_LC"
	.space 1
	.ascii "Mod_param_i64_i16"
	.space 1
	.ascii "uMod_param_i64_i16"
	.space 1
	.ascii "Mod_var_i64_i16"
	.space 1
	.ascii "uMod_var_i64_i16"
	.space 1
	.ascii "Mod_param_f64_f64"
	.space 1
	.ascii "Mod_var_f64_f64"
	.space 1
	.ascii "Mod_param_LC_i32"
	.space 1
	.ascii "uMod_param_LC_i32"
	.space 1
	.ascii "Mod_var_LC_i32"
	.space 1
	.ascii "uMod_var_LC_i32"
	.space 1
	.ascii "Mod_param_LC_u16"
	.space 1
	.ascii "uMod_param_LC_u16"
	.space 1
	.ascii "Mod_var_LC_u16"
	.space 1
	.ascii "uMod_var_LC_u16"
	.space 1
	.ascii "Mod_param_LC_u64"
	.space 1
	.ascii "uMod_param_LC_u64"
	.space 1
	.ascii "Mod_var_LC_u64"
	.space 1
	.ascii "uMod_var_LC_u64"
	.space 1
	.ascii "Mod_param_LC_L"
	.space 1
	.ascii "uMod_param_LC_L"
	.space 1
	.ascii "Mod_var_LC_L"
	.space 1
	.ascii "uMod_var_LC_L"
	.space 1
	.ascii "Mod_param_LC_i8"
	.space 1
	.ascii "uMod_param_LC_i8"
	.space 1
	.ascii "Mod_var_LC_i8"
	.space 1
	.ascii "uMod_var_LC_i8"
	.space 1
	.ascii "Mod_param_LC_u32"
	.space 1
	.ascii "uMod_param_LC_u32"
	.space 1
	.ascii "Mod_var_LC_u32"
	.space 1
	.ascii "uMod_var_LC_u32"
	.space 1
	.ascii "Mod_param_LC_C"
	.space 1
	.ascii "uMod_param_LC_C"
	.space 1
	.ascii "Mod_var_LC_C"
	.space 1
	.ascii "uMod_var_LC_C"
	.space 1
	.ascii "Mod_param_LC_u8"
	.space 1
	.ascii "uMod_param_LC_u8"
	.space 1
	.ascii "Mod_var_LC_u8"
	.space 1
	.ascii "uMod_var_LC_u8"
	.space 1
	.ascii "Mod_param_LC_I"
	.space 1
	.ascii "uMod_param_LC_I"
	.space 1
	.ascii "Mod_var_LC_I"
	.space 1
	.ascii "uMod_var_LC_I"
	.space 1
	.ascii "Mod_param_LC_i64"
	.space 1
	.ascii "uMod_param_LC_i64"
	.space 1
	.ascii "Mod_var_LC_i64"
	.space 1
	.ascii "uMod_var_LC_i64"
	.space 1
	.ascii "Mod_param_LC_LC"
	.space 1
	.ascii "uMod_param_LC_LC"
	.space 1
	.ascii "Mod_var_LC_LC"
	.space 1
	.ascii "uMod_var_LC_LC"
	.space 1
	.ascii "Mod_param_LC_i16"
	.space 1
	.ascii "uMod_param_LC_i16"
	.space 1
	.ascii "Mod_var_LC_i16"
	.space 1
	.ascii "uMod_var_LC_i16"
	.space 1
	.ascii "Mod_param_i16_i32"
	.space 1
	.ascii "uMod_param_i16_i32"
	.space 1
	.ascii "Mod_var_i16_i32"
	.space 1
	.ascii "uMod_var_i16_i32"
	.space 1
	.ascii "Mod_param_i16_u16"
	.space 1
	.ascii "uMod_param_i16_u16"
	.space 1
	.ascii "Mod_var_i16_u16"
	.space 1
	.ascii "uMod_var_i16_u16"
	.space 1
	.ascii "Mod_param_i16_u64"
	.space 1
	.ascii "uMod_param_i16_u64"
	.space 1
	.ascii "Mod_var_i16_u64"
	.space 1
	.ascii "uMod_var_i16_u64"
	.space 1
	.ascii "Mod_param_i16_L"
	.space 1
	.ascii "uMod_param_i16_L"
	.space 1
	.ascii "Mod_var_i16_L"
	.space 1
	.ascii "uMod_var_i16_L"
	.space 1
	.ascii "Mod_param_i16_i8"
	.space 1
	.ascii "uMod_param_i16_i8"
	.space 1
	.ascii "Mod_var_i16_i8"
	.space 1
	.ascii "uMod_var_i16_i8"
	.space 1
	.ascii "Mod_param_i16_u32"
	.space 1
	.ascii "uMod_param_i16_u32"
	.space 1
	.ascii "Mod_var_i16_u32"
	.space 1
	.ascii "uMod_var_i16_u32"
	.space 1
	.ascii "Mod_param_i16_C"
	.space 1
	.ascii "uMod_param_i16_C"
	.space 1
	.ascii "Mod_var_i16_C"
	.space 1
	.ascii "uMod_var_i16_C"
	.space 1
	.ascii "Mod_param_i16_u8"
	.space 1
	.ascii "uMod_param_i16_u8"
	.space 1
	.ascii "Mod_var_i16_u8"
	.space 1
	.ascii "uMod_var_i16_u8"
	.space 1
	.ascii "Mod_param_i16_I"
	.space 1
	.ascii "uMod_param_i16_I"
	.space 1
	.ascii "Mod_var_i16_I"
	.space 1
	.ascii "uMod_var_i16_I"
	.space 1
	.ascii "Mod_param_i16_i64"
	.space 1
	.ascii "uMod_param_i16_i64"
	.space 1
	.ascii "Mod_var_i16_i64"
	.space 1
	.ascii "uMod_var_i16_i64"
	.space 1
	.ascii "Mod_param_i16_LC"
	.space 1
	.ascii "uMod_param_i16_LC"
	.space 1
	.ascii "Mod_var_i16_LC"
	.space 1
	.ascii "uMod_var_i16_LC"
	.space 1
	.ascii "Mod_param_i16_i16"
	.space 1
	.ascii "uMod_param_i16_i16"
	.space 1
	.ascii "Mod_var_i16_i16"
	.space 1
	.ascii "uMod_var_i16_i16"
	.space 1
	.ascii "Divide_param_i32_i32"
	.space 1
	.ascii "uDivide_param_i32_i32"
	.space 1
	.ascii "Divide_var_i32_i32"
	.space 1
	.ascii "uDivide_var_i32_i32"
	.space 1
	.ascii "Divide_param_i32_u16"
	.space 1
	.ascii "uDivide_param_i32_u16"
	.space 1
	.ascii "Divide_var_i32_u16"
	.space 1
	.ascii "uDivide_var_i32_u16"
	.space 1
	.ascii "Divide_param_i32_u64"
	.space 1
	.ascii "uDivide_param_i32_u64"
	.space 1
	.ascii "Divide_var_i32_u64"
	.space 1
	.ascii "uDivide_var_i32_u64"
	.space 1
	.ascii "Divide_param_i32_L"
	.space 1
	.ascii "uDivide_param_i32_L"
	.space 1
	.ascii "Divide_var_i32_L"
	.space 1
	.ascii "uDivide_var_i32_L"
	.space 1
	.ascii "Divide_param_i32_i8"
	.space 1
	.ascii "uDivide_param_i32_i8"
	.space 1
	.ascii "Divide_var_i32_i8"
	.space 1
	.ascii "uDivide_var_i32_i8"
	.space 1
	.ascii "Divide_param_i32_u32"
	.space 1
	.ascii "uDivide_param_i32_u32"
	.space 1
	.ascii "Divide_var_i32_u32"
	.space 1
	.ascii "uDivide_var_i32_u32"
	.space 1
	.ascii "Divide_param_i32_C"
	.space 1
	.ascii "uDivide_param_i32_C"
	.space 1
	.ascii "Divide_var_i32_C"
	.space 1
	.ascii "uDivide_var_i32_C"
	.space 1
	.ascii "Divide_param_i32_u8"
	.space 1
	.ascii "uDivide_param_i32_u8"
	.space 1
	.ascii "Divide_var_i32_u8"
	.space 1
	.ascii "uDivide_var_i32_u8"
	.space 1
	.ascii "Divide_param_i32_I"
	.space 1
	.ascii "uDivide_param_i32_I"
	.space 1
	.ascii "Divide_var_i32_I"
	.space 1
	.ascii "uDivide_var_i32_I"
	.space 1
	.ascii "Divide_param_i32_i64"
	.space 1
	.ascii "uDivide_param_i32_i64"
	.space 1
	.ascii "Divide_var_i32_i64"
	.space 1
	.ascii "uDivide_var_i32_i64"
	.space 1
	.ascii "Divide_param_i32_LC"
	.space 1
	.ascii "uDivide_param_i32_LC"
	.space 1
	.ascii "Divide_var_i32_LC"
	.space 1
	.ascii "uDivide_var_i32_LC"
	.space 1
	.ascii "Divide_param_i32_i16"
	.space 1
	.ascii "uDivide_param_i32_i16"
	.space 1
	.ascii "Divide_var_i32_i16"
	.space 1
	.ascii "uDivide_var_i32_i16"
	.space 1
	.ascii "Divide_param_u16_i32"
	.space 1
	.ascii "uDivide_param_u16_i32"
	.space 1
	.ascii "Divide_var_u16_i32"
	.space 1
	.ascii "uDivide_var_u16_i32"
	.space 1
	.ascii "Divide_param_u16_u16"
	.space 1
	.ascii "uDivide_param_u16_u16"
	.space 1
	.ascii "Divide_var_u16_u16"
	.space 1
	.ascii "uDivide_var_u16_u16"
	.space 1
	.ascii "Divide_param_u16_u64"
	.space 1
	.ascii "uDivide_param_u16_u64"
	.space 1
	.ascii "Divide_var_u16_u64"
	.space 1
	.ascii "uDivide_var_u16_u64"
	.space 1
	.ascii "Divide_param_u16_L"
	.space 1
	.ascii "uDivide_param_u16_L"
	.space 1
	.ascii "Divide_var_u16_L"
	.space 1
	.ascii "uDivide_var_u16_L"
	.space 1
	.ascii "Divide_param_u16_i8"
	.space 1
	.ascii "uDivide_param_u16_i8"
	.space 1
	.ascii "Divide_var_u16_i8"
	.space 1
	.ascii "uDivide_var_u16_i8"
	.space 1
	.ascii "Divide_param_u16_u32"
	.space 1
	.ascii "uDivide_param_u16_u32"
	.space 1
	.ascii "Divide_var_u16_u32"
	.space 1
	.ascii "uDivide_var_u16_u32"
	.space 1
	.ascii "Divide_param_u16_C"
	.space 1
	.ascii "uDivide_param_u16_C"
	.space 1
	.ascii "Divide_var_u16_C"
	.space 1
	.ascii "uDivide_var_u16_C"
	.space 1
	.ascii "Divide_param_u16_u8"
	.space 1
	.ascii "uDivide_param_u16_u8"
	.space 1
	.ascii "Divide_var_u16_u8"
	.space 1
	.ascii "uDivide_var_u16_u8"
	.space 1
	.ascii "Divide_param_u16_I"
	.space 1
	.ascii "uDivide_param_u16_I"
	.space 1
	.ascii "Divide_var_u16_I"
	.space 1
	.ascii "uDivide_var_u16_I"
	.space 1
	.ascii "Divide_param_u16_i64"
	.space 1
	.ascii "uDivide_param_u16_i64"
	.space 1
	.ascii "Divide_var_u16_i64"
	.space 1
	.ascii "uDivide_var_u16_i64"
	.space 1
	.ascii "Divide_param_u16_LC"
	.space 1
	.ascii "uDivide_param_u16_LC"
	.space 1
	.ascii "Divide_var_u16_LC"
	.space 1
	.ascii "uDivide_var_u16_LC"
	.space 1
	.ascii "Divide_param_u16_i16"
	.space 1
	.ascii "uDivide_param_u16_i16"
	.space 1
	.ascii "Divide_var_u16_i16"
	.space 1
	.ascii "uDivide_var_u16_i16"
	.space 1
	.ascii "Divide_param_u64_i32"
	.space 1
	.ascii "uDivide_param_u64_i32"
	.space 1
	.ascii "Divide_var_u64_i32"
	.space 1
	.ascii "uDivide_var_u64_i32"
	.space 1
	.ascii "Divide_param_u64_u16"
	.space 1
	.ascii "uDivide_param_u64_u16"
	.space 1
	.ascii "Divide_var_u64_u16"
	.space 1
	.ascii "uDivide_var_u64_u16"
	.space 1
	.ascii "Divide_param_u64_u64"
	.space 1
	.ascii "uDivide_param_u64_u64"
	.space 1
	.ascii "Divide_var_u64_u64"
	.space 1
	.ascii "uDivide_var_u64_u64"
	.space 1
	.ascii "Divide_param_u64_L"
	.space 1
	.ascii "uDivide_param_u64_L"
	.space 1
	.ascii "Divide_var_u64_L"
	.space 1
	.ascii "uDivide_var_u64_L"
	.space 1
	.ascii "Divide_param_u64_i8"
	.space 1
	.ascii "uDivide_param_u64_i8"
	.space 1
	.ascii "Divide_var_u64_i8"
	.space 1
	.ascii "uDivide_var_u64_i8"
	.space 1
	.ascii "Divide_param_u64_u32"
	.space 1
	.ascii "uDivide_param_u64_u32"
	.space 1
	.ascii "Divide_var_u64_u32"
	.space 1
	.ascii "uDivide_var_u64_u32"
	.space 1
	.ascii "Divide_param_u64_C"
	.space 1
	.ascii "uDivide_param_u64_C"
	.space 1
	.ascii "Divide_var_u64_C"
	.space 1
	.ascii "uDivide_var_u64_C"
	.space 1
	.ascii "Divide_param_u64_u8"
	.space 1
	.ascii "uDivide_param_u64_u8"
	.space 1
	.ascii "Divide_var_u64_u8"
	.space 1
	.ascii "uDivide_var_u64_u8"
	.space 1
	.ascii "Divide_param_u64_I"
	.space 1
	.ascii "uDivide_param_u64_I"
	.space 1
	.ascii "Divide_var_u64_I"
	.space 1
	.ascii "uDivide_var_u64_I"
	.space 1
	.ascii "Divide_param_u64_i64"
	.space 1
	.ascii "uDivide_param_u64_i64"
	.space 1
	.ascii "Divide_var_u64_i64"
	.space 1
	.ascii "uDivide_var_u64_i64"
	.space 1
	.ascii "Divide_param_u64_LC"
	.space 1
	.ascii "uDivide_param_u64_LC"
	.space 1
	.ascii "Divide_var_u64_LC"
	.space 1
	.ascii "uDivide_var_u64_LC"
	.space 1
	.ascii "Divide_param_u64_i16"
	.space 1
	.ascii "uDivide_param_u64_i16"
	.space 1
	.ascii "Divide_var_u64_i16"
	.space 1
	.ascii "uDivide_var_u64_i16"
	.space 1
	.ascii "Divide_param_L_i32"
	.space 1
	.ascii "uDivide_param_L_i32"
	.space 1
	.ascii "Divide_var_L_i32"
	.space 1
	.ascii "uDivide_var_L_i32"
	.space 1
	.ascii "Divide_param_L_u16"
	.space 1
	.ascii "uDivide_param_L_u16"
	.space 1
	.ascii "Divide_var_L_u16"
	.space 1
	.ascii "uDivide_var_L_u16"
	.space 1
	.ascii "Divide_param_L_u64"
	.space 1
	.ascii "uDivide_param_L_u64"
	.space 1
	.ascii "Divide_var_L_u64"
	.space 1
	.ascii "uDivide_var_L_u64"
	.space 1
	.ascii "Divide_param_L_L"
	.space 1
	.ascii "uDivide_param_L_L"
	.space 1
	.ascii "Divide_var_L_L"
	.space 1
	.ascii "uDivide_var_L_L"
	.space 1
	.ascii "Divide_param_L_i8"
	.space 1
	.ascii "uDivide_param_L_i8"
	.space 1
	.ascii "Divide_var_L_i8"
	.space 1
	.ascii "uDivide_var_L_i8"
	.space 1
	.ascii "Divide_param_L_u32"
	.space 1
	.ascii "uDivide_param_L_u32"
	.space 1
	.ascii "Divide_var_L_u32"
	.space 1
	.ascii "uDivide_var_L_u32"
	.space 1
	.ascii "Divide_param_L_C"
	.space 1
	.ascii "uDivide_param_L_C"
	.space 1
	.ascii "Divide_var_L_C"
	.space 1
	.ascii "uDivide_var_L_C"
	.space 1
	.ascii "Divide_param_L_u8"
	.space 1
	.ascii "uDivide_param_L_u8"
	.space 1
	.ascii "Divide_var_L_u8"
	.space 1
	.ascii "uDivide_var_L_u8"
	.space 1
	.ascii "Divide_param_L_I"
	.space 1
	.ascii "uDivide_param_L_I"
	.space 1
	.ascii "Divide_var_L_I"
	.space 1
	.ascii "uDivide_var_L_I"
	.space 1
	.ascii "Divide_param_L_i64"
	.space 1
	.ascii "uDivide_param_L_i64"
	.space 1
	.ascii "Divide_var_L_i64"
	.space 1
	.ascii "uDivide_var_L_i64"
	.space 1
	.ascii "Divide_param_L_LC"
	.space 1
	.ascii "uDivide_param_L_LC"
	.space 1
	.ascii "Divide_var_L_LC"
	.space 1
	.ascii "uDivide_var_L_LC"
	.space 1
	.ascii "Divide_param_L_i16"
	.space 1
	.ascii "uDivide_param_L_i16"
	.space 1
	.ascii "Divide_var_L_i16"
	.space 1
	.ascii "uDivide_var_L_i16"
	.space 1
	.ascii "Divide_param_i8_i32"
	.space 1
	.ascii "uDivide_param_i8_i32"
	.space 1
	.ascii "Divide_var_i8_i32"
	.space 1
	.ascii "uDivide_var_i8_i32"
	.space 1
	.ascii "Divide_param_i8_u16"
	.space 1
	.ascii "uDivide_param_i8_u16"
	.space 1
	.ascii "Divide_var_i8_u16"
	.space 1
	.ascii "uDivide_var_i8_u16"
	.space 1
	.ascii "Divide_param_i8_u64"
	.space 1
	.ascii "uDivide_param_i8_u64"
	.space 1
	.ascii "Divide_var_i8_u64"
	.space 1
	.ascii "uDivide_var_i8_u64"
	.space 1
	.ascii "Divide_param_i8_L"
	.space 1
	.ascii "uDivide_param_i8_L"
	.space 1
	.ascii "Divide_var_i8_L"
	.space 1
	.ascii "uDivide_var_i8_L"
	.space 1
	.ascii "Divide_param_i8_i8"
	.space 1
	.ascii "uDivide_param_i8_i8"
	.space 1
	.ascii "Divide_var_i8_i8"
	.space 1
	.ascii "uDivide_var_i8_i8"
	.space 1
	.ascii "Divide_param_i8_u32"
	.space 1
	.ascii "uDivide_param_i8_u32"
	.space 1
	.ascii "Divide_var_i8_u32"
	.space 1
	.ascii "uDivide_var_i8_u32"
	.space 1
	.ascii "Divide_param_i8_C"
	.space 1
	.ascii "uDivide_param_i8_C"
	.space 1
	.ascii "Divide_var_i8_C"
	.space 1
	.ascii "uDivide_var_i8_C"
	.space 1
	.ascii "Divide_param_i8_u8"
	.space 1
	.ascii "uDivide_param_i8_u8"
	.space 1
	.ascii "Divide_var_i8_u8"
	.space 1
	.ascii "uDivide_var_i8_u8"
	.space 1
	.ascii "Divide_param_i8_I"
	.space 1
	.ascii "uDivide_param_i8_I"
	.space 1
	.ascii "Divide_var_i8_I"
	.space 1
	.ascii "uDivide_var_i8_I"
	.space 1
	.ascii "Divide_param_i8_i64"
	.space 1
	.ascii "uDivide_param_i8_i64"
	.space 1
	.ascii "Divide_var_i8_i64"
	.space 1
	.ascii "uDivide_var_i8_i64"
	.space 1
	.ascii "Divide_param_i8_LC"
	.space 1
	.ascii "uDivide_param_i8_LC"
	.space 1
	.ascii "Divide_var_i8_LC"
	.space 1
	.ascii "uDivide_var_i8_LC"
	.space 1
	.ascii "Divide_param_i8_i16"
	.space 1
	.ascii "uDivide_param_i8_i16"
	.space 1
	.ascii "Divide_var_i8_i16"
	.space 1
	.ascii "uDivide_var_i8_i16"
	.space 1
	.ascii "Divide_param_u32_i32"
	.space 1
	.ascii "uDivide_param_u32_i32"
	.space 1
	.ascii "Divide_var_u32_i32"
	.space 1
	.ascii "uDivide_var_u32_i32"
	.space 1
	.ascii "Divide_param_u32_u16"
	.space 1
	.ascii "uDivide_param_u32_u16"
	.space 1
	.ascii "Divide_var_u32_u16"
	.space 1
	.ascii "uDivide_var_u32_u16"
	.space 1
	.ascii "Divide_param_u32_u64"
	.space 1
	.ascii "uDivide_param_u32_u64"
	.space 1
	.ascii "Divide_var_u32_u64"
	.space 1
	.ascii "uDivide_var_u32_u64"
	.space 1
	.ascii "Divide_param_u32_L"
	.space 1
	.ascii "uDivide_param_u32_L"
	.space 1
	.ascii "Divide_var_u32_L"
	.space 1
	.ascii "uDivide_var_u32_L"
	.space 1
	.ascii "Divide_param_u32_i8"
	.space 1
	.ascii "uDivide_param_u32_i8"
	.space 1
	.ascii "Divide_var_u32_i8"
	.space 1
	.ascii "uDivide_var_u32_i8"
	.space 1
	.ascii "Divide_param_u32_u32"
	.space 1
	.ascii "uDivide_param_u32_u32"
	.space 1
	.ascii "Divide_var_u32_u32"
	.space 1
	.ascii "uDivide_var_u32_u32"
	.space 1
	.ascii "Divide_param_u32_C"
	.space 1
	.ascii "uDivide_param_u32_C"
	.space 1
	.ascii "Divide_var_u32_C"
	.space 1
	.ascii "uDivide_var_u32_C"
	.space 1
	.ascii "Divide_param_u32_u8"
	.space 1
	.ascii "uDivide_param_u32_u8"
	.space 1
	.ascii "Divide_var_u32_u8"
	.space 1
	.ascii "uDivide_var_u32_u8"
	.space 1
	.ascii "Divide_param_u32_I"
	.space 1
	.ascii "uDivide_param_u32_I"
	.space 1
	.ascii "Divide_var_u32_I"
	.space 1
	.ascii "uDivide_var_u32_I"
	.space 1
	.ascii "Divide_param_u32_i64"
	.space 1
	.ascii "uDivide_param_u32_i64"
	.space 1
	.ascii "Divide_var_u32_i64"
	.space 1
	.ascii "uDivide_var_u32_i64"
	.space 1
	.ascii "Divide_param_u32_LC"
	.space 1
	.ascii "uDivide_param_u32_LC"
	.space 1
	.ascii "Divide_var_u32_LC"
	.space 1
	.ascii "uDivide_var_u32_LC"
	.space 1
	.ascii "Divide_param_u32_i16"
	.space 1
	.ascii "uDivide_param_u32_i16"
	.space 1
	.ascii "Divide_var_u32_i16"
	.space 1
	.ascii "uDivide_var_u32_i16"
	.space 1
	.ascii "Divide_param_f32_f32"
	.space 1
	.ascii "Divide_var_f32_f32"
	.space 1
	.ascii "Divide_param_C_i32"
	.space 1
	.ascii "uDivide_param_C_i32"
	.space 1
	.ascii "Divide_var_C_i32"
	.space 1
	.ascii "uDivide_var_C_i32"
	.space 1
	.ascii "Divide_param_C_u16"
	.space 1
	.ascii "uDivide_param_C_u16"
	.space 1
	.ascii "Divide_var_C_u16"
	.space 1
	.ascii "uDivide_var_C_u16"
	.space 1
	.ascii "Divide_param_C_u64"
	.space 1
	.ascii "uDivide_param_C_u64"
	.space 1
	.ascii "Divide_var_C_u64"
	.space 1
	.ascii "uDivide_var_C_u64"
	.space 1
	.ascii "Divide_param_C_L"
	.space 1
	.ascii "uDivide_param_C_L"
	.space 1
	.ascii "Divide_var_C_L"
	.space 1
	.ascii "uDivide_var_C_L"
	.space 1
	.ascii "Divide_param_C_i8"
	.space 1
	.ascii "uDivide_param_C_i8"
	.space 1
	.ascii "Divide_var_C_i8"
	.space 1
	.ascii "uDivide_var_C_i8"
	.space 1
	.ascii "Divide_param_C_u32"
	.space 1
	.ascii "uDivide_param_C_u32"
	.space 1
	.ascii "Divide_var_C_u32"
	.space 1
	.ascii "uDivide_var_C_u32"
	.space 1
	.ascii "Divide_param_C_C"
	.space 1
	.ascii "uDivide_param_C_C"
	.space 1
	.ascii "Divide_var_C_C"
	.space 1
	.ascii "uDivide_var_C_C"
	.space 1
	.ascii "Divide_param_C_u8"
	.space 1
	.ascii "uDivide_param_C_u8"
	.space 1
	.ascii "Divide_var_C_u8"
	.space 1
	.ascii "uDivide_var_C_u8"
	.space 1
	.ascii "Divide_param_C_I"
	.space 1
	.ascii "uDivide_param_C_I"
	.space 1
	.ascii "Divide_var_C_I"
	.space 1
	.ascii "uDivide_var_C_I"
	.space 1
	.ascii "Divide_param_C_i64"
	.space 1
	.ascii "uDivide_param_C_i64"
	.space 1
	.ascii "Divide_var_C_i64"
	.space 1
	.ascii "uDivide_var_C_i64"
	.space 1
	.ascii "Divide_param_C_LC"
	.space 1
	.ascii "uDivide_param_C_LC"
	.space 1
	.ascii "Divide_var_C_LC"
	.space 1
	.ascii "uDivide_var_C_LC"
	.space 1
	.ascii "Divide_param_C_i16"
	.space 1
	.ascii "uDivide_param_C_i16"
	.space 1
	.ascii "Divide_var_C_i16"
	.space 1
	.ascii "uDivide_var_C_i16"
	.space 1
	.ascii "Divide_param_u8_i32"
	.space 1
	.ascii "uDivide_param_u8_i32"
	.space 1
	.ascii "Divide_var_u8_i32"
	.space 1
	.ascii "uDivide_var_u8_i32"
	.space 1
	.ascii "Divide_param_u8_u16"
	.space 1
	.ascii "uDivide_param_u8_u16"
	.space 1
	.ascii "Divide_var_u8_u16"
	.space 1
	.ascii "uDivide_var_u8_u16"
	.space 1
	.ascii "Divide_param_u8_u64"
	.space 1
	.ascii "uDivide_param_u8_u64"
	.space 1
	.ascii "Divide_var_u8_u64"
	.space 1
	.ascii "uDivide_var_u8_u64"
	.space 1
	.ascii "Divide_param_u8_L"
	.space 1
	.ascii "uDivide_param_u8_L"
	.space 1
	.ascii "Divide_var_u8_L"
	.space 1
	.ascii "uDivide_var_u8_L"
	.space 1
	.ascii "Divide_param_u8_i8"
	.space 1
	.ascii "uDivide_param_u8_i8"
	.space 1
	.ascii "Divide_var_u8_i8"
	.space 1
	.ascii "uDivide_var_u8_i8"
	.space 1
	.ascii "Divide_param_u8_u32"
	.space 1
	.ascii "uDivide_param_u8_u32"
	.space 1
	.ascii "Divide_var_u8_u32"
	.space 1
	.ascii "uDivide_var_u8_u32"
	.space 1
	.ascii "Divide_param_u8_C"
	.space 1
	.ascii "uDivide_param_u8_C"
	.space 1
	.ascii "Divide_var_u8_C"
	.space 1
	.ascii "uDivide_var_u8_C"
	.space 1
	.ascii "Divide_param_u8_u8"
	.space 1
	.ascii "uDivide_param_u8_u8"
	.space 1
	.ascii "Divide_var_u8_u8"
	.space 1
	.ascii "uDivide_var_u8_u8"
	.space 1
	.ascii "Divide_param_u8_I"
	.space 1
	.ascii "uDivide_param_u8_I"
	.space 1
	.ascii "Divide_var_u8_I"
	.space 1
	.ascii "uDivide_var_u8_I"
	.space 1
	.ascii "Divide_param_u8_i64"
	.space 1
	.ascii "uDivide_param_u8_i64"
	.space 1
	.ascii "Divide_var_u8_i64"
	.space 1
	.ascii "uDivide_var_u8_i64"
	.space 1
	.ascii "Divide_param_u8_LC"
	.space 1
	.ascii "uDivide_param_u8_LC"
	.space 1
	.ascii "Divide_var_u8_LC"
	.space 1
	.ascii "uDivide_var_u8_LC"
	.space 1
	.ascii "Divide_param_u8_i16"
	.space 1
	.ascii "uDivide_param_u8_i16"
	.space 1
	.ascii "Divide_var_u8_i16"
	.space 1
	.ascii "uDivide_var_u8_i16"
	.space 1
	.ascii "Divide_param_I_i32"
	.space 1
	.ascii "uDivide_param_I_i32"
	.space 1
	.ascii "Divide_var_I_i32"
	.space 1
	.ascii "uDivide_var_I_i32"
	.space 1
	.ascii "Divide_param_I_u16"
	.space 1
	.ascii "uDivide_param_I_u16"
	.space 1
	.ascii "Divide_var_I_u16"
	.space 1
	.ascii "uDivide_var_I_u16"
	.space 1
	.ascii "Divide_param_I_u64"
	.space 1
	.ascii "uDivide_param_I_u64"
	.space 1
	.ascii "Divide_var_I_u64"
	.space 1
	.ascii "uDivide_var_I_u64"
	.space 1
	.ascii "Divide_param_I_L"
	.space 1
	.ascii "uDivide_param_I_L"
	.space 1
	.ascii "Divide_var_I_L"
	.space 1
	.ascii "uDivide_var_I_L"
	.space 1
	.ascii "Divide_param_I_i8"
	.space 1
	.ascii "uDivide_param_I_i8"
	.space 1
	.ascii "Divide_var_I_i8"
	.space 1
	.ascii "uDivide_var_I_i8"
	.space 1
	.ascii "Divide_param_I_u32"
	.space 1
	.ascii "uDivide_param_I_u32"
	.space 1
	.ascii "Divide_var_I_u32"
	.space 1
	.ascii "uDivide_var_I_u32"
	.space 1
	.ascii "Divide_param_I_C"
	.space 1
	.ascii "uDivide_param_I_C"
	.space 1
	.ascii "Divide_var_I_C"
	.space 1
	.ascii "uDivide_var_I_C"
	.space 1
	.ascii "Divide_param_I_u8"
	.space 1
	.ascii "uDivide_param_I_u8"
	.space 1
	.ascii "Divide_var_I_u8"
	.space 1
	.ascii "uDivide_var_I_u8"
	.space 1
	.ascii "Divide_param_I_I"
	.space 1
	.ascii "uDivide_param_I_I"
	.space 1
	.ascii "Divide_var_I_I"
	.space 1
	.ascii "uDivide_var_I_I"
	.space 1
	.ascii "Divide_param_I_i64"
	.space 1
	.ascii "uDivide_param_I_i64"
	.space 1
	.ascii "Divide_var_I_i64"
	.space 1
	.ascii "uDivide_var_I_i64"
	.space 1
	.ascii "Divide_param_I_LC"
	.space 1
	.ascii "uDivide_param_I_LC"
	.space 1
	.ascii "Divide_var_I_LC"
	.space 1
	.ascii "uDivide_var_I_LC"
	.space 1
	.ascii "Divide_param_I_i16"
	.space 1
	.ascii "uDivide_param_I_i16"
	.space 1
	.ascii "Divide_var_I_i16"
	.space 1
	.ascii "uDivide_var_I_i16"
	.space 1
	.ascii "Divide_param_i64_i32"
	.space 1
	.ascii "uDivide_param_i64_i32"
	.space 1
	.ascii "Divide_var_i64_i32"
	.space 1
	.ascii "uDivide_var_i64_i32"
	.space 1
	.ascii "Divide_param_i64_u16"
	.space 1
	.ascii "uDivide_param_i64_u16"
	.space 1
	.ascii "Divide_var_i64_u16"
	.space 1
	.ascii "uDivide_var_i64_u16"
	.space 1
	.ascii "Divide_param_i64_u64"
	.space 1
	.ascii "uDivide_param_i64_u64"
	.space 1
	.ascii "Divide_var_i64_u64"
	.space 1
	.ascii "uDivide_var_i64_u64"
	.space 1
	.ascii "Divide_param_i64_L"
	.space 1
	.ascii "uDivide_param_i64_L"
	.space 1
	.ascii "Divide_var_i64_L"
	.space 1
	.ascii "uDivide_var_i64_L"
	.space 1
	.ascii "Divide_param_i64_i8"
	.space 1
	.ascii "uDivide_param_i64_i8"
	.space 1
	.ascii "Divide_var_i64_i8"
	.space 1
	.ascii "uDivide_var_i64_i8"
	.space 1
	.ascii "Divide_param_i64_u32"
	.space 1
	.ascii "uDivide_param_i64_u32"
	.space 1
	.ascii "Divide_var_i64_u32"
	.space 1
	.ascii "uDivide_var_i64_u32"
	.space 1
	.ascii "Divide_param_i64_C"
	.space 1
	.ascii "uDivide_param_i64_C"
	.space 1
	.ascii "Divide_var_i64_C"
	.space 1
	.ascii "uDivide_var_i64_C"
	.space 1
	.ascii "Divide_param_i64_u8"
	.space 1
	.ascii "uDivide_param_i64_u8"
	.space 1
	.ascii "Divide_var_i64_u8"
	.space 1
	.ascii "uDivide_var_i64_u8"
	.space 1
	.ascii "Divide_param_i64_I"
	.space 1
	.ascii "uDivide_param_i64_I"
	.space 1
	.ascii "Divide_var_i64_I"
	.space 1
	.ascii "uDivide_var_i64_I"
	.space 1
	.ascii "Divide_param_i64_i64"
	.space 1
	.ascii "uDivide_param_i64_i64"
	.space 1
	.ascii "Divide_var_i64_i64"
	.space 1
	.ascii "uDivide_var_i64_i64"
	.space 1
	.ascii "Divide_param_i64_LC"
	.space 1
	.ascii "uDivide_param_i64_LC"
	.space 1
	.ascii "Divide_var_i64_LC"
	.space 1
	.ascii "uDivide_var_i64_LC"
	.space 1
	.ascii "Divide_param_i64_i16"
	.space 1
	.ascii "uDivide_param_i64_i16"
	.space 1
	.ascii "Divide_var_i64_i16"
	.space 1
	.ascii "uDivide_var_i64_i16"
	.space 1
	.ascii "Divide_param_f64_f64"
	.space 1
	.ascii "Divide_var_f64_f64"
	.space 1
	.ascii "Divide_param_LC_i32"
	.space 1
	.ascii "uDivide_param_LC_i32"
	.space 1
	.ascii "Divide_var_LC_i32"
	.space 1
	.ascii "uDivide_var_LC_i32"
	.space 1
	.ascii "Divide_param_LC_u16"
	.space 1
	.ascii "uDivide_param_LC_u16"
	.space 1
	.ascii "Divide_var_LC_u16"
	.space 1
	.ascii "uDivide_var_LC_u16"
	.space 1
	.ascii "Divide_param_LC_u64"
	.space 1
	.ascii "uDivide_param_LC_u64"
	.space 1
	.ascii "Divide_var_LC_u64"
	.space 1
	.ascii "uDivide_var_LC_u64"
	.space 1
	.ascii "Divide_param_LC_L"
	.space 1
	.ascii "uDivide_param_LC_L"
	.space 1
	.ascii "Divide_var_LC_L"
	.space 1
	.ascii "uDivide_var_LC_L"
	.space 1
	.ascii "Divide_param_LC_i8"
	.space 1
	.ascii "uDivide_param_LC_i8"
	.space 1
	.ascii "Divide_var_LC_i8"
	.space 1
	.ascii "uDivide_var_LC_i8"
	.space 1
	.ascii "Divide_param_LC_u32"
	.space 1
	.ascii "uDivide_param_LC_u32"
	.space 1
	.ascii "Divide_var_LC_u32"
	.space 1
	.ascii "uDivide_var_LC_u32"
	.space 1
	.ascii "Divide_param_LC_C"
	.space 1
	.ascii "uDivide_param_LC_C"
	.space 1
	.ascii "Divide_var_LC_C"
	.space 1
	.ascii "uDivide_var_LC_C"
	.space 1
	.ascii "Divide_param_LC_u8"
	.space 1
	.ascii "uDivide_param_LC_u8"
	.space 1
	.ascii "Divide_var_LC_u8"
	.space 1
	.ascii "uDivide_var_LC_u8"
	.space 1
	.ascii "Divide_param_LC_I"
	.space 1
	.ascii "uDivide_param_LC_I"
	.space 1
	.ascii "Divide_var_LC_I"
	.space 1
	.ascii "uDivide_var_LC_I"
	.space 1
	.ascii "Divide_param_LC_i64"
	.space 1
	.ascii "uDivide_param_LC_i64"
	.space 1
	.ascii "Divide_var_LC_i64"
	.space 1
	.ascii "uDivide_var_LC_i64"
	.space 1
	.ascii "Divide_param_LC_LC"
	.space 1
	.ascii "uDivide_param_LC_LC"
	.space 1
	.ascii "Divide_var_LC_LC"
	.space 1
	.ascii "uDivide_var_LC_LC"
	.space 1
	.ascii "Divide_param_LC_i16"
	.space 1
	.ascii "uDivide_param_LC_i16"
	.space 1
	.ascii "Divide_var_LC_i16"
	.space 1
	.ascii "uDivide_var_LC_i16"
	.space 1
	.ascii "Divide_param_i16_i32"
	.space 1
	.ascii "uDivide_param_i16_i32"
	.space 1
	.ascii "Divide_var_i16_i32"
	.space 1
	.ascii "uDivide_var_i16_i32"
	.space 1
	.ascii "Divide_param_i16_u16"
	.space 1
	.ascii "uDivide_param_i16_u16"
	.space 1
	.ascii "Divide_var_i16_u16"
	.space 1
	.ascii "uDivide_var_i16_u16"
	.space 1
	.ascii "Divide_param_i16_u64"
	.space 1
	.ascii "uDivide_param_i16_u64"
	.space 1
	.ascii "Divide_var_i16_u64"
	.space 1
	.ascii "uDivide_var_i16_u64"
	.space 1
	.ascii "Divide_param_i16_L"
	.space 1
	.ascii "uDivide_param_i16_L"
	.space 1
	.ascii "Divide_var_i16_L"
	.space 1
	.ascii "uDivide_var_i16_L"
	.space 1
	.ascii "Divide_param_i16_i8"
	.space 1
	.ascii "uDivide_param_i16_i8"
	.space 1
	.ascii "Divide_var_i16_i8"
	.space 1
	.ascii "uDivide_var_i16_i8"
	.space 1
	.ascii "Divide_param_i16_u32"
	.space 1
	.ascii "uDivide_param_i16_u32"
	.space 1
	.ascii "Divide_var_i16_u32"
	.space 1
	.ascii "uDivide_var_i16_u32"
	.space 1
	.ascii "Divide_param_i16_C"
	.space 1
	.ascii "uDivide_param_i16_C"
	.space 1
	.ascii "Divide_var_i16_C"
	.space 1
	.ascii "uDivide_var_i16_C"
	.space 1
	.ascii "Divide_param_i16_u8"
	.space 1
	.ascii "uDivide_param_i16_u8"
	.space 1
	.ascii "Divide_var_i16_u8"
	.space 1
	.ascii "uDivide_var_i16_u8"
	.space 1
	.ascii "Divide_param_i16_I"
	.space 1
	.ascii "uDivide_param_i16_I"
	.space 1
	.ascii "Divide_var_i16_I"
	.space 1
	.ascii "uDivide_var_i16_I"
	.space 1
	.ascii "Divide_param_i16_i64"
	.space 1
	.ascii "uDivide_param_i16_i64"
	.space 1
	.ascii "Divide_var_i16_i64"
	.space 1
	.ascii "uDivide_var_i16_i64"
	.space 1
	.ascii "Divide_param_i16_LC"
	.space 1
	.ascii "uDivide_param_i16_LC"
	.space 1
	.ascii "Divide_var_i16_LC"
	.space 1
	.ascii "uDivide_var_i16_LC"
	.space 1
	.ascii "Divide_param_i16_i16"
	.space 1
	.ascii "uDivide_param_i16_i16"
	.space 1
	.ascii "Divide_var_i16_i16"
	.space 1
	.ascii "uDivide_var_i16_i16"
	.space 1
	.ascii "Minus_param_i32_i32"
	.space 1
	.ascii "uMinus_param_i32_i32"
	.space 1
	.ascii "Minus_var_i32_i32"
	.space 1
	.ascii "uMinus_var_i32_i32"
	.space 1
	.ascii "Minus_param_i32_u16"
	.space 1
	.ascii "uMinus_param_i32_u16"
	.space 1
	.ascii "Minus_var_i32_u16"
	.space 1
	.ascii "uMinus_var_i32_u16"
	.space 1
	.ascii "Minus_param_i32_u64"
	.space 1
	.ascii "uMinus_param_i32_u64"
	.space 1
	.ascii "Minus_var_i32_u64"
	.space 1
	.ascii "uMinus_var_i32_u64"
	.space 1
	.ascii "Minus_param_i32_L"
	.space 1
	.ascii "uMinus_param_i32_L"
	.space 1
	.ascii "Minus_var_i32_L"
	.space 1
	.ascii "uMinus_var_i32_L"
	.space 1
	.ascii "Minus_param_i32_i8"
	.space 1
	.ascii "uMinus_param_i32_i8"
	.space 1
	.ascii "Minus_var_i32_i8"
	.space 1
	.ascii "uMinus_var_i32_i8"
	.space 1
	.ascii "Minus_param_i32_u32"
	.space 1
	.ascii "uMinus_param_i32_u32"
	.space 1
	.ascii "Minus_var_i32_u32"
	.space 1
	.ascii "uMinus_var_i32_u32"
	.space 1
	.ascii "Minus_param_i32_C"
	.space 1
	.ascii "uMinus_param_i32_C"
	.space 1
	.ascii "Minus_var_i32_C"
	.space 1
	.ascii "uMinus_var_i32_C"
	.space 1
	.ascii "Minus_param_i32_u8"
	.space 1
	.ascii "uMinus_param_i32_u8"
	.space 1
	.ascii "Minus_var_i32_u8"
	.space 1
	.ascii "uMinus_var_i32_u8"
	.space 1
	.ascii "Minus_param_i32_I"
	.space 1
	.ascii "uMinus_param_i32_I"
	.space 1
	.ascii "Minus_var_i32_I"
	.space 1
	.ascii "uMinus_var_i32_I"
	.space 1
	.ascii "Minus_param_i32_i64"
	.space 1
	.ascii "uMinus_param_i32_i64"
	.space 1
	.ascii "Minus_var_i32_i64"
	.space 1
	.ascii "uMinus_var_i32_i64"
	.space 1
	.ascii "Minus_param_i32_LC"
	.space 1
	.ascii "uMinus_param_i32_LC"
	.space 1
	.ascii "Minus_var_i32_LC"
	.space 1
	.ascii "uMinus_var_i32_LC"
	.space 1
	.ascii "Minus_param_i32_i16"
	.space 1
	.ascii "uMinus_param_i32_i16"
	.space 1
	.ascii "Minus_var_i32_i16"
	.space 1
	.ascii "uMinus_var_i32_i16"
	.space 1
	.ascii "Minus_param_u16_i32"
	.space 1
	.ascii "uMinus_param_u16_i32"
	.space 1
	.ascii "Minus_var_u16_i32"
	.space 1
	.ascii "uMinus_var_u16_i32"
	.space 1
	.ascii "Minus_param_u16_u16"
	.space 1
	.ascii "uMinus_param_u16_u16"
	.space 1
	.ascii "Minus_var_u16_u16"
	.space 1
	.ascii "uMinus_var_u16_u16"
	.space 1
	.ascii "Minus_param_u16_u64"
	.space 1
	.ascii "uMinus_param_u16_u64"
	.space 1
	.ascii "Minus_var_u16_u64"
	.space 1
	.ascii "uMinus_var_u16_u64"
	.space 1
	.ascii "Minus_param_u16_L"
	.space 1
	.ascii "uMinus_param_u16_L"
	.space 1
	.ascii "Minus_var_u16_L"
	.space 1
	.ascii "uMinus_var_u16_L"
	.space 1
	.ascii "Minus_param_u16_i8"
	.space 1
	.ascii "uMinus_param_u16_i8"
	.space 1
	.ascii "Minus_var_u16_i8"
	.space 1
	.ascii "uMinus_var_u16_i8"
	.space 1
	.ascii "Minus_param_u16_u32"
	.space 1
	.ascii "uMinus_param_u16_u32"
	.space 1
	.ascii "Minus_var_u16_u32"
	.space 1
	.ascii "uMinus_var_u16_u32"
	.space 1
	.ascii "Minus_param_u16_C"
	.space 1
	.ascii "uMinus_param_u16_C"
	.space 1
	.ascii "Minus_var_u16_C"
	.space 1
	.ascii "uMinus_var_u16_C"
	.space 1
	.ascii "Minus_param_u16_u8"
	.space 1
	.ascii "uMinus_param_u16_u8"
	.space 1
	.ascii "Minus_var_u16_u8"
	.space 1
	.ascii "uMinus_var_u16_u8"
	.space 1
	.ascii "Minus_param_u16_I"
	.space 1
	.ascii "uMinus_param_u16_I"
	.space 1
	.ascii "Minus_var_u16_I"
	.space 1
	.ascii "uMinus_var_u16_I"
	.space 1
	.ascii "Minus_param_u16_i64"
	.space 1
	.ascii "uMinus_param_u16_i64"
	.space 1
	.ascii "Minus_var_u16_i64"
	.space 1
	.ascii "uMinus_var_u16_i64"
	.space 1
	.ascii "Minus_param_u16_LC"
	.space 1
	.ascii "uMinus_param_u16_LC"
	.space 1
	.ascii "Minus_var_u16_LC"
	.space 1
	.ascii "uMinus_var_u16_LC"
	.space 1
	.ascii "Minus_param_u16_i16"
	.space 1
	.ascii "uMinus_param_u16_i16"
	.space 1
	.ascii "Minus_var_u16_i16"
	.space 1
	.ascii "uMinus_var_u16_i16"
	.space 1
	.ascii "Minus_param_u64_i32"
	.space 1
	.ascii "uMinus_param_u64_i32"
	.space 1
	.ascii "Minus_var_u64_i32"
	.space 1
	.ascii "uMinus_var_u64_i32"
	.space 1
	.ascii "Minus_param_u64_u16"
	.space 1
	.ascii "uMinus_param_u64_u16"
	.space 1
	.ascii "Minus_var_u64_u16"
	.space 1
	.ascii "uMinus_var_u64_u16"
	.space 1
	.ascii "Minus_param_u64_u64"
	.space 1
	.ascii "uMinus_param_u64_u64"
	.space 1
	.ascii "Minus_var_u64_u64"
	.space 1
	.ascii "uMinus_var_u64_u64"
	.space 1
	.ascii "Minus_param_u64_L"
	.space 1
	.ascii "uMinus_param_u64_L"
	.space 1
	.ascii "Minus_var_u64_L"
	.space 1
	.ascii "uMinus_var_u64_L"
	.space 1
	.ascii "Minus_param_u64_i8"
	.space 1
	.ascii "uMinus_param_u64_i8"
	.space 1
	.ascii "Minus_var_u64_i8"
	.space 1
	.ascii "uMinus_var_u64_i8"
	.space 1
	.ascii "Minus_param_u64_u32"
	.space 1
	.ascii "uMinus_param_u64_u32"
	.space 1
	.ascii "Minus_var_u64_u32"
	.space 1
	.ascii "uMinus_var_u64_u32"
	.space 1
	.ascii "Minus_param_u64_C"
	.space 1
	.ascii "uMinus_param_u64_C"
	.space 1
	.ascii "Minus_var_u64_C"
	.space 1
	.ascii "uMinus_var_u64_C"
	.space 1
	.ascii "Minus_param_u64_u8"
	.space 1
	.ascii "uMinus_param_u64_u8"
	.space 1
	.ascii "Minus_var_u64_u8"
	.space 1
	.ascii "uMinus_var_u64_u8"
	.space 1
	.ascii "Minus_param_u64_I"
	.space 1
	.ascii "uMinus_param_u64_I"
	.space 1
	.ascii "Minus_var_u64_I"
	.space 1
	.ascii "uMinus_var_u64_I"
	.space 1
	.ascii "Minus_param_u64_i64"
	.space 1
	.ascii "uMinus_param_u64_i64"
	.space 1
	.ascii "Minus_var_u64_i64"
	.space 1
	.ascii "uMinus_var_u64_i64"
	.space 1
	.ascii "Minus_param_u64_LC"
	.space 1
	.ascii "uMinus_param_u64_LC"
	.space 1
	.ascii "Minus_var_u64_LC"
	.space 1
	.ascii "uMinus_var_u64_LC"
	.space 1
	.ascii "Minus_param_u64_i16"
	.space 1
	.ascii "uMinus_param_u64_i16"
	.space 1
	.ascii "Minus_var_u64_i16"
	.space 1
	.ascii "uMinus_var_u64_i16"
	.space 1
	.ascii "Minus_param_L_i32"
	.space 1
	.ascii "uMinus_param_L_i32"
	.space 1
	.ascii "Minus_var_L_i32"
	.space 1
	.ascii "uMinus_var_L_i32"
	.space 1
	.ascii "Minus_param_L_u16"
	.space 1
	.ascii "uMinus_param_L_u16"
	.space 1
	.ascii "Minus_var_L_u16"
	.space 1
	.ascii "uMinus_var_L_u16"
	.space 1
	.ascii "Minus_param_L_u64"
	.space 1
	.ascii "uMinus_param_L_u64"
	.space 1
	.ascii "Minus_var_L_u64"
	.space 1
	.ascii "uMinus_var_L_u64"
	.space 1
	.ascii "Minus_param_L_L"
	.space 1
	.ascii "uMinus_param_L_L"
	.space 1
	.ascii "Minus_var_L_L"
	.space 1
	.ascii "uMinus_var_L_L"
	.space 1
	.ascii "Minus_param_L_i8"
	.space 1
	.ascii "uMinus_param_L_i8"
	.space 1
	.ascii "Minus_var_L_i8"
	.space 1
	.ascii "uMinus_var_L_i8"
	.space 1
	.ascii "Minus_param_L_u32"
	.space 1
	.ascii "uMinus_param_L_u32"
	.space 1
	.ascii "Minus_var_L_u32"
	.space 1
	.ascii "uMinus_var_L_u32"
	.space 1
	.ascii "Minus_param_L_C"
	.space 1
	.ascii "uMinus_param_L_C"
	.space 1
	.ascii "Minus_var_L_C"
	.space 1
	.ascii "uMinus_var_L_C"
	.space 1
	.ascii "Minus_param_L_u8"
	.space 1
	.ascii "uMinus_param_L_u8"
	.space 1
	.ascii "Minus_var_L_u8"
	.space 1
	.ascii "uMinus_var_L_u8"
	.space 1
	.ascii "Minus_param_L_I"
	.space 1
	.ascii "uMinus_param_L_I"
	.space 1
	.ascii "Minus_var_L_I"
	.space 1
	.ascii "uMinus_var_L_I"
	.space 1
	.ascii "Minus_param_L_i64"
	.space 1
	.ascii "uMinus_param_L_i64"
	.space 1
	.ascii "Minus_var_L_i64"
	.space 1
	.ascii "uMinus_var_L_i64"
	.space 1
	.ascii "Minus_param_L_LC"
	.space 1
	.ascii "uMinus_param_L_LC"
	.space 1
	.ascii "Minus_var_L_LC"
	.space 1
	.ascii "uMinus_var_L_LC"
	.space 1
	.ascii "Minus_param_L_i16"
	.space 1
	.ascii "uMinus_param_L_i16"
	.space 1
	.ascii "Minus_var_L_i16"
	.space 1
	.ascii "uMinus_var_L_i16"
	.space 1
	.ascii "Minus_param_i8_i32"
	.space 1
	.ascii "uMinus_param_i8_i32"
	.space 1
	.ascii "Minus_var_i8_i32"
	.space 1
	.ascii "uMinus_var_i8_i32"
	.space 1
	.ascii "Minus_param_i8_u16"
	.space 1
	.ascii "uMinus_param_i8_u16"
	.space 1
	.ascii "Minus_var_i8_u16"
	.space 1
	.ascii "uMinus_var_i8_u16"
	.space 1
	.ascii "Minus_param_i8_u64"
	.space 1
	.ascii "uMinus_param_i8_u64"
	.space 1
	.ascii "Minus_var_i8_u64"
	.space 1
	.ascii "uMinus_var_i8_u64"
	.space 1
	.ascii "Minus_param_i8_L"
	.space 1
	.ascii "uMinus_param_i8_L"
	.space 1
	.ascii "Minus_var_i8_L"
	.space 1
	.ascii "uMinus_var_i8_L"
	.space 1
	.ascii "Minus_param_i8_i8"
	.space 1
	.ascii "uMinus_param_i8_i8"
	.space 1
	.ascii "Minus_var_i8_i8"
	.space 1
	.ascii "uMinus_var_i8_i8"
	.space 1
	.ascii "Minus_param_i8_u32"
	.space 1
	.ascii "uMinus_param_i8_u32"
	.space 1
	.ascii "Minus_var_i8_u32"
	.space 1
	.ascii "uMinus_var_i8_u32"
	.space 1
	.ascii "Minus_param_i8_C"
	.space 1
	.ascii "uMinus_param_i8_C"
	.space 1
	.ascii "Minus_var_i8_C"
	.space 1
	.ascii "uMinus_var_i8_C"
	.space 1
	.ascii "Minus_param_i8_u8"
	.space 1
	.ascii "uMinus_param_i8_u8"
	.space 1
	.ascii "Minus_var_i8_u8"
	.space 1
	.ascii "uMinus_var_i8_u8"
	.space 1
	.ascii "Minus_param_i8_I"
	.space 1
	.ascii "uMinus_param_i8_I"
	.space 1
	.ascii "Minus_var_i8_I"
	.space 1
	.ascii "uMinus_var_i8_I"
	.space 1
	.ascii "Minus_param_i8_i64"
	.space 1
	.ascii "uMinus_param_i8_i64"
	.space 1
	.ascii "Minus_var_i8_i64"
	.space 1
	.ascii "uMinus_var_i8_i64"
	.space 1
	.ascii "Minus_param_i8_LC"
	.space 1
	.ascii "uMinus_param_i8_LC"
	.space 1
	.ascii "Minus_var_i8_LC"
	.space 1
	.ascii "uMinus_var_i8_LC"
	.space 1
	.ascii "Minus_param_i8_i16"
	.space 1
	.ascii "uMinus_param_i8_i16"
	.space 1
	.ascii "Minus_var_i8_i16"
	.space 1
	.ascii "uMinus_var_i8_i16"
	.space 1
	.ascii "Minus_param_u32_i32"
	.space 1
	.ascii "uMinus_param_u32_i32"
	.space 1
	.ascii "Minus_var_u32_i32"
	.space 1
	.ascii "uMinus_var_u32_i32"
	.space 1
	.ascii "Minus_param_u32_u16"
	.space 1
	.ascii "uMinus_param_u32_u16"
	.space 1
	.ascii "Minus_var_u32_u16"
	.space 1
	.ascii "uMinus_var_u32_u16"
	.space 1
	.ascii "Minus_param_u32_u64"
	.space 1
	.ascii "uMinus_param_u32_u64"
	.space 1
	.ascii "Minus_var_u32_u64"
	.space 1
	.ascii "uMinus_var_u32_u64"
	.space 1
	.ascii "Minus_param_u32_L"
	.space 1
	.ascii "uMinus_param_u32_L"
	.space 1
	.ascii "Minus_var_u32_L"
	.space 1
	.ascii "uMinus_var_u32_L"
	.space 1
	.ascii "Minus_param_u32_i8"
	.space 1
	.ascii "uMinus_param_u32_i8"
	.space 1
	.ascii "Minus_var_u32_i8"
	.space 1
	.ascii "uMinus_var_u32_i8"
	.space 1
	.ascii "Minus_param_u32_u32"
	.space 1
	.ascii "uMinus_param_u32_u32"
	.space 1
	.ascii "Minus_var_u32_u32"
	.space 1
	.ascii "uMinus_var_u32_u32"
	.space 1
	.ascii "Minus_param_u32_C"
	.space 1
	.ascii "uMinus_param_u32_C"
	.space 1
	.ascii "Minus_var_u32_C"
	.space 1
	.ascii "uMinus_var_u32_C"
	.space 1
	.ascii "Minus_param_u32_u8"
	.space 1
	.ascii "uMinus_param_u32_u8"
	.space 1
	.ascii "Minus_var_u32_u8"
	.space 1
	.ascii "uMinus_var_u32_u8"
	.space 1
	.ascii "Minus_param_u32_I"
	.space 1
	.ascii "uMinus_param_u32_I"
	.space 1
	.ascii "Minus_var_u32_I"
	.space 1
	.ascii "uMinus_var_u32_I"
	.space 1
	.ascii "Minus_param_u32_i64"
	.space 1
	.ascii "uMinus_param_u32_i64"
	.space 1
	.ascii "Minus_var_u32_i64"
	.space 1
	.ascii "uMinus_var_u32_i64"
	.space 1
	.ascii "Minus_param_u32_LC"
	.space 1
	.ascii "uMinus_param_u32_LC"
	.space 1
	.ascii "Minus_var_u32_LC"
	.space 1
	.ascii "uMinus_var_u32_LC"
	.space 1
	.ascii "Minus_param_u32_i16"
	.space 1
	.ascii "uMinus_param_u32_i16"
	.space 1
	.ascii "Minus_var_u32_i16"
	.space 1
	.ascii "uMinus_var_u32_i16"
	.space 1
	.ascii "Minus_param_f32_f32"
	.space 1
	.ascii "Minus_var_f32_f32"
	.space 1
	.ascii "Minus_param_C_i32"
	.space 1
	.ascii "uMinus_param_C_i32"
	.space 1
	.ascii "Minus_var_C_i32"
	.space 1
	.ascii "uMinus_var_C_i32"
	.space 1
	.ascii "Minus_param_C_u16"
	.space 1
	.ascii "uMinus_param_C_u16"
	.space 1
	.ascii "Minus_var_C_u16"
	.space 1
	.ascii "uMinus_var_C_u16"
	.space 1
	.ascii "Minus_param_C_u64"
	.space 1
	.ascii "uMinus_param_C_u64"
	.space 1
	.ascii "Minus_var_C_u64"
	.space 1
	.ascii "uMinus_var_C_u64"
	.space 1
	.ascii "Minus_param_C_L"
	.space 1
	.ascii "uMinus_param_C_L"
	.space 1
	.ascii "Minus_var_C_L"
	.space 1
	.ascii "uMinus_var_C_L"
	.space 1
	.ascii "Minus_param_C_i8"
	.space 1
	.ascii "uMinus_param_C_i8"
	.space 1
	.ascii "Minus_var_C_i8"
	.space 1
	.ascii "uMinus_var_C_i8"
	.space 1
	.ascii "Minus_param_C_u32"
	.space 1
	.ascii "uMinus_param_C_u32"
	.space 1
	.ascii "Minus_var_C_u32"
	.space 1
	.ascii "uMinus_var_C_u32"
	.space 1
	.ascii "Minus_param_C_C"
	.space 1
	.ascii "uMinus_param_C_C"
	.space 1
	.ascii "Minus_var_C_C"
	.space 1
	.ascii "uMinus_var_C_C"
	.space 1
	.ascii "Minus_param_C_u8"
	.space 1
	.ascii "uMinus_param_C_u8"
	.space 1
	.ascii "Minus_var_C_u8"
	.space 1
	.ascii "uMinus_var_C_u8"
	.space 1
	.ascii "Minus_param_C_I"
	.space 1
	.ascii "uMinus_param_C_I"
	.space 1
	.ascii "Minus_var_C_I"
	.space 1
	.ascii "uMinus_var_C_I"
	.space 1
	.ascii "Minus_param_C_i64"
	.space 1
	.ascii "uMinus_param_C_i64"
	.space 1
	.ascii "Minus_var_C_i64"
	.space 1
	.ascii "uMinus_var_C_i64"
	.space 1
	.ascii "Minus_param_C_LC"
	.space 1
	.ascii "uMinus_param_C_LC"
	.space 1
	.ascii "Minus_var_C_LC"
	.space 1
	.ascii "uMinus_var_C_LC"
	.space 1
	.ascii "Minus_param_C_i16"
	.space 1
	.ascii "uMinus_param_C_i16"
	.space 1
	.ascii "Minus_var_C_i16"
	.space 1
	.ascii "uMinus_var_C_i16"
	.space 1
	.ascii "Minus_param_u8_i32"
	.space 1
	.ascii "uMinus_param_u8_i32"
	.space 1
	.ascii "Minus_var_u8_i32"
	.space 1
	.ascii "uMinus_var_u8_i32"
	.space 1
	.ascii "Minus_param_u8_u16"
	.space 1
	.ascii "uMinus_param_u8_u16"
	.space 1
	.ascii "Minus_var_u8_u16"
	.space 1
	.ascii "uMinus_var_u8_u16"
	.space 1
	.ascii "Minus_param_u8_u64"
	.space 1
	.ascii "uMinus_param_u8_u64"
	.space 1
	.ascii "Minus_var_u8_u64"
	.space 1
	.ascii "uMinus_var_u8_u64"
	.space 1
	.ascii "Minus_param_u8_L"
	.space 1
	.ascii "uMinus_param_u8_L"
	.space 1
	.ascii "Minus_var_u8_L"
	.space 1
	.ascii "uMinus_var_u8_L"
	.space 1
	.ascii "Minus_param_u8_i8"
	.space 1
	.ascii "uMinus_param_u8_i8"
	.space 1
	.ascii "Minus_var_u8_i8"
	.space 1
	.ascii "uMinus_var_u8_i8"
	.space 1
	.ascii "Minus_param_u8_u32"
	.space 1
	.ascii "uMinus_param_u8_u32"
	.space 1
	.ascii "Minus_var_u8_u32"
	.space 1
	.ascii "uMinus_var_u8_u32"
	.space 1
	.ascii "Minus_param_u8_C"
	.space 1
	.ascii "uMinus_param_u8_C"
	.space 1
	.ascii "Minus_var_u8_C"
	.space 1
	.ascii "uMinus_var_u8_C"
	.space 1
	.ascii "Minus_param_u8_u8"
	.space 1
	.ascii "uMinus_param_u8_u8"
	.space 1
	.ascii "Minus_var_u8_u8"
	.space 1
	.ascii "uMinus_var_u8_u8"
	.space 1
	.ascii "Minus_param_u8_I"
	.space 1
	.ascii "uMinus_param_u8_I"
	.space 1
	.ascii "Minus_var_u8_I"
	.space 1
	.ascii "uMinus_var_u8_I"
	.space 1
	.ascii "Minus_param_u8_i64"
	.space 1
	.ascii "uMinus_param_u8_i64"
	.space 1
	.ascii "Minus_var_u8_i64"
	.space 1
	.ascii "uMinus_var_u8_i64"
	.space 1
	.ascii "Minus_param_u8_LC"
	.space 1
	.ascii "uMinus_param_u8_LC"
	.space 1
	.ascii "Minus_var_u8_LC"
	.space 1
	.ascii "uMinus_var_u8_LC"
	.space 1
	.ascii "Minus_param_u8_i16"
	.space 1
	.ascii "uMinus_param_u8_i16"
	.space 1
	.ascii "Minus_var_u8_i16"
	.space 1
	.ascii "uMinus_var_u8_i16"
	.space 1
	.ascii "Minus_param_I_i32"
	.space 1
	.ascii "uMinus_param_I_i32"
	.space 1
	.ascii "Minus_var_I_i32"
	.space 1
	.ascii "uMinus_var_I_i32"
	.space 1
	.ascii "Minus_param_I_u16"
	.space 1
	.ascii "uMinus_param_I_u16"
	.space 1
	.ascii "Minus_var_I_u16"
	.space 1
	.ascii "uMinus_var_I_u16"
	.space 1
	.ascii "Minus_param_I_u64"
	.space 1
	.ascii "uMinus_param_I_u64"
	.space 1
	.ascii "Minus_var_I_u64"
	.space 1
	.ascii "uMinus_var_I_u64"
	.space 1
	.ascii "Minus_param_I_L"
	.space 1
	.ascii "uMinus_param_I_L"
	.space 1
	.ascii "Minus_var_I_L"
	.space 1
	.ascii "uMinus_var_I_L"
	.space 1
	.ascii "Minus_param_I_i8"
	.space 1
	.ascii "uMinus_param_I_i8"
	.space 1
	.ascii "Minus_var_I_i8"
	.space 1
	.ascii "uMinus_var_I_i8"
	.space 1
	.ascii "Minus_param_I_u32"
	.space 1
	.ascii "uMinus_param_I_u32"
	.space 1
	.ascii "Minus_var_I_u32"
	.space 1
	.ascii "uMinus_var_I_u32"
	.space 1
	.ascii "Minus_param_I_C"
	.space 1
	.ascii "uMinus_param_I_C"
	.space 1
	.ascii "Minus_var_I_C"
	.space 1
	.ascii "uMinus_var_I_C"
	.space 1
	.ascii "Minus_param_I_u8"
	.space 1
	.ascii "uMinus_param_I_u8"
	.space 1
	.ascii "Minus_var_I_u8"
	.space 1
	.ascii "uMinus_var_I_u8"
	.space 1
	.ascii "Minus_param_I_I"
	.space 1
	.ascii "uMinus_param_I_I"
	.space 1
	.ascii "Minus_var_I_I"
	.space 1
	.ascii "uMinus_var_I_I"
	.space 1
	.ascii "Minus_param_I_i64"
	.space 1
	.ascii "uMinus_param_I_i64"
	.space 1
	.ascii "Minus_var_I_i64"
	.space 1
	.ascii "uMinus_var_I_i64"
	.space 1
	.ascii "Minus_param_I_LC"
	.space 1
	.ascii "uMinus_param_I_LC"
	.space 1
	.ascii "Minus_var_I_LC"
	.space 1
	.ascii "uMinus_var_I_LC"
	.space 1
	.ascii "Minus_param_I_i16"
	.space 1
	.ascii "uMinus_param_I_i16"
	.space 1
	.ascii "Minus_var_I_i16"
	.space 1
	.ascii "uMinus_var_I_i16"
	.space 1
	.ascii "Minus_param_i64_i32"
	.space 1
	.ascii "uMinus_param_i64_i32"
	.space 1
	.ascii "Minus_var_i64_i32"
	.space 1
	.ascii "uMinus_var_i64_i32"
	.space 1
	.ascii "Minus_param_i64_u16"
	.space 1
	.ascii "uMinus_param_i64_u16"
	.space 1
	.ascii "Minus_var_i64_u16"
	.space 1
	.ascii "uMinus_var_i64_u16"
	.space 1
	.ascii "Minus_param_i64_u64"
	.space 1
	.ascii "uMinus_param_i64_u64"
	.space 1
	.ascii "Minus_var_i64_u64"
	.space 1
	.ascii "uMinus_var_i64_u64"
	.space 1
	.ascii "Minus_param_i64_L"
	.space 1
	.ascii "uMinus_param_i64_L"
	.space 1
	.ascii "Minus_var_i64_L"
	.space 1
	.ascii "uMinus_var_i64_L"
	.space 1
	.ascii "Minus_param_i64_i8"
	.space 1
	.ascii "uMinus_param_i64_i8"
	.space 1
	.ascii "Minus_var_i64_i8"
	.space 1
	.ascii "uMinus_var_i64_i8"
	.space 1
	.ascii "Minus_param_i64_u32"
	.space 1
	.ascii "uMinus_param_i64_u32"
	.space 1
	.ascii "Minus_var_i64_u32"
	.space 1
	.ascii "uMinus_var_i64_u32"
	.space 1
	.ascii "Minus_param_i64_C"
	.space 1
	.ascii "uMinus_param_i64_C"
	.space 1
	.ascii "Minus_var_i64_C"
	.space 1
	.ascii "uMinus_var_i64_C"
	.space 1
	.ascii "Minus_param_i64_u8"
	.space 1
	.ascii "uMinus_param_i64_u8"
	.space 1
	.ascii "Minus_var_i64_u8"
	.space 1
	.ascii "uMinus_var_i64_u8"
	.space 1
	.ascii "Minus_param_i64_I"
	.space 1
	.ascii "uMinus_param_i64_I"
	.space 1
	.ascii "Minus_var_i64_I"
	.space 1
	.ascii "uMinus_var_i64_I"
	.space 1
	.ascii "Minus_param_i64_i64"
	.space 1
	.ascii "uMinus_param_i64_i64"
	.space 1
	.ascii "Minus_var_i64_i64"
	.space 1
	.ascii "uMinus_var_i64_i64"
	.space 1
	.ascii "Minus_param_i64_LC"
	.space 1
	.ascii "uMinus_param_i64_LC"
	.space 1
	.ascii "Minus_var_i64_LC"
	.space 1
	.ascii "uMinus_var_i64_LC"
	.space 1
	.ascii "Minus_param_i64_i16"
	.space 1
	.ascii "uMinus_param_i64_i16"
	.space 1
	.ascii "Minus_var_i64_i16"
	.space 1
	.ascii "uMinus_var_i64_i16"
	.space 1
	.ascii "Minus_param_f64_f64"
	.space 1
	.ascii "Minus_var_f64_f64"
	.space 1
	.ascii "Minus_param_LC_i32"
	.space 1
	.ascii "uMinus_param_LC_i32"
	.space 1
	.ascii "Minus_var_LC_i32"
	.space 1
	.ascii "uMinus_var_LC_i32"
	.space 1
	.ascii "Minus_param_LC_u16"
	.space 1
	.ascii "uMinus_param_LC_u16"
	.space 1
	.ascii "Minus_var_LC_u16"
	.space 1
	.ascii "uMinus_var_LC_u16"
	.space 1
	.ascii "Minus_param_LC_u64"
	.space 1
	.ascii "uMinus_param_LC_u64"
	.space 1
	.ascii "Minus_var_LC_u64"
	.space 1
	.ascii "uMinus_var_LC_u64"
	.space 1
	.ascii "Minus_param_LC_L"
	.space 1
	.ascii "uMinus_param_LC_L"
	.space 1
	.ascii "Minus_var_LC_L"
	.space 1
	.ascii "uMinus_var_LC_L"
	.space 1
	.ascii "Minus_param_LC_i8"
	.space 1
	.ascii "uMinus_param_LC_i8"
	.space 1
	.ascii "Minus_var_LC_i8"
	.space 1
	.ascii "uMinus_var_LC_i8"
	.space 1
	.ascii "Minus_param_LC_u32"
	.space 1
	.ascii "uMinus_param_LC_u32"
	.space 1
	.ascii "Minus_var_LC_u32"
	.space 1
	.ascii "uMinus_var_LC_u32"
	.space 1
	.ascii "Minus_param_LC_C"
	.space 1
	.ascii "uMinus_param_LC_C"
	.space 1
	.ascii "Minus_var_LC_C"
	.space 1
	.ascii "uMinus_var_LC_C"
	.space 1
	.ascii "Minus_param_LC_u8"
	.space 1
	.ascii "uMinus_param_LC_u8"
	.space 1
	.ascii "Minus_var_LC_u8"
	.space 1
	.ascii "uMinus_var_LC_u8"
	.space 1
	.ascii "Minus_param_LC_I"
	.space 1
	.ascii "uMinus_param_LC_I"
	.space 1
	.ascii "Minus_var_LC_I"
	.space 1
	.ascii "uMinus_var_LC_I"
	.space 1
	.ascii "Minus_param_LC_i64"
	.space 1
	.ascii "uMinus_param_LC_i64"
	.space 1
	.ascii "Minus_var_LC_i64"
	.space 1
	.ascii "uMinus_var_LC_i64"
	.space 1
	.ascii "Minus_param_LC_LC"
	.space 1
	.ascii "uMinus_param_LC_LC"
	.space 1
	.ascii "Minus_var_LC_LC"
	.space 1
	.ascii "uMinus_var_LC_LC"
	.space 1
	.ascii "Minus_param_LC_i16"
	.space 1
	.ascii "uMinus_param_LC_i16"
	.space 1
	.ascii "Minus_var_LC_i16"
	.space 1
	.ascii "uMinus_var_LC_i16"
	.space 1
	.ascii "Minus_param_i16_i32"
	.space 1
	.ascii "uMinus_param_i16_i32"
	.space 1
	.ascii "Minus_var_i16_i32"
	.space 1
	.ascii "uMinus_var_i16_i32"
	.space 1
	.ascii "Minus_param_i16_u16"
	.space 1
	.ascii "uMinus_param_i16_u16"
	.space 1
	.ascii "Minus_var_i16_u16"
	.space 1
	.ascii "uMinus_var_i16_u16"
	.space 1
	.ascii "Minus_param_i16_u64"
	.space 1
	.ascii "uMinus_param_i16_u64"
	.space 1
	.ascii "Minus_var_i16_u64"
	.space 1
	.ascii "uMinus_var_i16_u64"
	.space 1
	.ascii "Minus_param_i16_L"
	.space 1
	.ascii "uMinus_param_i16_L"
	.space 1
	.ascii "Minus_var_i16_L"
	.space 1
	.ascii "uMinus_var_i16_L"
	.space 1
	.ascii "Minus_param_i16_i8"
	.space 1
	.ascii "uMinus_param_i16_i8"
	.space 1
	.ascii "Minus_var_i16_i8"
	.space 1
	.ascii "uMinus_var_i16_i8"
	.space 1
	.ascii "Minus_param_i16_u32"
	.space 1
	.ascii "uMinus_param_i16_u32"
	.space 1
	.ascii "Minus_var_i16_u32"
	.space 1
	.ascii "uMinus_var_i16_u32"
	.space 1
	.ascii "Minus_param_i16_C"
	.space 1
	.ascii "uMinus_param_i16_C"
	.space 1
	.ascii "Minus_var_i16_C"
	.space 1
	.ascii "uMinus_var_i16_C"
	.space 1
	.ascii "Minus_param_i16_u8"
	.space 1
	.ascii "uMinus_param_i16_u8"
	.space 1
	.ascii "Minus_var_i16_u8"
	.space 1
	.ascii "uMinus_var_i16_u8"
	.space 1
	.ascii "Minus_param_i16_I"
	.space 1
	.ascii "uMinus_param_i16_I"
	.space 1
	.ascii "Minus_var_i16_I"
	.space 1
	.ascii "uMinus_var_i16_I"
	.space 1
	.ascii "Minus_param_i16_i64"
	.space 1
	.ascii "uMinus_param_i16_i64"
	.space 1
	.ascii "Minus_var_i16_i64"
	.space 1
	.ascii "uMinus_var_i16_i64"
	.space 1
	.ascii "Minus_param_i16_LC"
	.space 1
	.ascii "uMinus_param_i16_LC"
	.space 1
	.ascii "Minus_var_i16_LC"
	.space 1
	.ascii "uMinus_var_i16_LC"
	.space 1
	.ascii "Minus_param_i16_i16"
	.space 1
	.ascii "uMinus_param_i16_i16"
	.space 1
	.ascii "Minus_var_i16_i16"
	.space 1
	.ascii "uMinus_var_i16_i16"
	.space 1
	.ascii "Times_param_i32_i32"
	.space 1
	.ascii "uTimes_param_i32_i32"
	.space 1
	.ascii "Times_var_i32_i32"
	.space 1
	.ascii "uTimes_var_i32_i32"
	.space 1
	.ascii "Times_param_i32_u16"
	.space 1
	.ascii "uTimes_param_i32_u16"
	.space 1
	.ascii "Times_var_i32_u16"
	.space 1
	.ascii "uTimes_var_i32_u16"
	.space 1
	.ascii "Times_param_i32_u64"
	.space 1
	.ascii "uTimes_param_i32_u64"
	.space 1
	.ascii "Times_var_i32_u64"
	.space 1
	.ascii "uTimes_var_i32_u64"
	.space 1
	.ascii "Times_param_i32_L"
	.space 1
	.ascii "uTimes_param_i32_L"
	.space 1
	.ascii "Times_var_i32_L"
	.space 1
	.ascii "uTimes_var_i32_L"
	.space 1
	.ascii "Times_param_i32_i8"
	.space 1
	.ascii "uTimes_param_i32_i8"
	.space 1
	.ascii "Times_var_i32_i8"
	.space 1
	.ascii "uTimes_var_i32_i8"
	.space 1
	.ascii "Times_param_i32_u32"
	.space 1
	.ascii "uTimes_param_i32_u32"
	.space 1
	.ascii "Times_var_i32_u32"
	.space 1
	.ascii "uTimes_var_i32_u32"
	.space 1
	.ascii "Times_param_i32_C"
	.space 1
	.ascii "uTimes_param_i32_C"
	.space 1
	.ascii "Times_var_i32_C"
	.space 1
	.ascii "uTimes_var_i32_C"
	.space 1
	.ascii "Times_param_i32_u8"
	.space 1
	.ascii "uTimes_param_i32_u8"
	.space 1
	.ascii "Times_var_i32_u8"
	.space 1
	.ascii "uTimes_var_i32_u8"
	.space 1
	.ascii "Times_param_i32_I"
	.space 1
	.ascii "uTimes_param_i32_I"
	.space 1
	.ascii "Times_var_i32_I"
	.space 1
	.ascii "uTimes_var_i32_I"
	.space 1
	.ascii "Times_param_i32_i64"
	.space 1
	.ascii "uTimes_param_i32_i64"
	.space 1
	.ascii "Times_var_i32_i64"
	.space 1
	.ascii "uTimes_var_i32_i64"
	.space 1
	.ascii "Times_param_i32_LC"
	.space 1
	.ascii "uTimes_param_i32_LC"
	.space 1
	.ascii "Times_var_i32_LC"
	.space 1
	.ascii "uTimes_var_i32_LC"
	.space 1
	.ascii "Times_param_i32_i16"
	.space 1
	.ascii "uTimes_param_i32_i16"
	.space 1
	.ascii "Times_var_i32_i16"
	.space 1
	.ascii "uTimes_var_i32_i16"
	.space 1
	.ascii "Times_param_u16_i32"
	.space 1
	.ascii "uTimes_param_u16_i32"
	.space 1
	.ascii "Times_var_u16_i32"
	.space 1
	.ascii "uTimes_var_u16_i32"
	.space 1
	.ascii "Times_param_u16_u16"
	.space 1
	.ascii "uTimes_param_u16_u16"
	.space 1
	.ascii "Times_var_u16_u16"
	.space 1
	.ascii "uTimes_var_u16_u16"
	.space 1
	.ascii "Times_param_u16_u64"
	.space 1
	.ascii "uTimes_param_u16_u64"
	.space 1
	.ascii "Times_var_u16_u64"
	.space 1
	.ascii "uTimes_var_u16_u64"
	.space 1
	.ascii "Times_param_u16_L"
	.space 1
	.ascii "uTimes_param_u16_L"
	.space 1
	.ascii "Times_var_u16_L"
	.space 1
	.ascii "uTimes_var_u16_L"
	.space 1
	.ascii "Times_param_u16_i8"
	.space 1
	.ascii "uTimes_param_u16_i8"
	.space 1
	.ascii "Times_var_u16_i8"
	.space 1
	.ascii "uTimes_var_u16_i8"
	.space 1
	.ascii "Times_param_u16_u32"
	.space 1
	.ascii "uTimes_param_u16_u32"
	.space 1
	.ascii "Times_var_u16_u32"
	.space 1
	.ascii "uTimes_var_u16_u32"
	.space 1
	.ascii "Times_param_u16_C"
	.space 1
	.ascii "uTimes_param_u16_C"
	.space 1
	.ascii "Times_var_u16_C"
	.space 1
	.ascii "uTimes_var_u16_C"
	.space 1
	.ascii "Times_param_u16_u8"
	.space 1
	.ascii "uTimes_param_u16_u8"
	.space 1
	.ascii "Times_var_u16_u8"
	.space 1
	.ascii "uTimes_var_u16_u8"
	.space 1
	.ascii "Times_param_u16_I"
	.space 1
	.ascii "uTimes_param_u16_I"
	.space 1
	.ascii "Times_var_u16_I"
	.space 1
	.ascii "uTimes_var_u16_I"
	.space 1
	.ascii "Times_param_u16_i64"
	.space 1
	.ascii "uTimes_param_u16_i64"
	.space 1
	.ascii "Times_var_u16_i64"
	.space 1
	.ascii "uTimes_var_u16_i64"
	.space 1
	.ascii "Times_param_u16_LC"
	.space 1
	.ascii "uTimes_param_u16_LC"
	.space 1
	.ascii "Times_var_u16_LC"
	.space 1
	.ascii "uTimes_var_u16_LC"
	.space 1
	.ascii "Times_param_u16_i16"
	.space 1
	.ascii "uTimes_param_u16_i16"
	.space 1
	.ascii "Times_var_u16_i16"
	.space 1
	.ascii "uTimes_var_u16_i16"
	.space 1
	.ascii "Times_param_u64_i32"
	.space 1
	.ascii "uTimes_param_u64_i32"
	.space 1
	.ascii "Times_var_u64_i32"
	.space 1
	.ascii "uTimes_var_u64_i32"
	.space 1
	.ascii "Times_param_u64_u16"
	.space 1
	.ascii "uTimes_param_u64_u16"
	.space 1
	.ascii "Times_var_u64_u16"
	.space 1
	.ascii "uTimes_var_u64_u16"
	.space 1
	.ascii "Times_param_u64_u64"
	.space 1
	.ascii "uTimes_param_u64_u64"
	.space 1
	.ascii "Times_var_u64_u64"
	.space 1
	.ascii "uTimes_var_u64_u64"
	.space 1
	.ascii "Times_param_u64_L"
	.space 1
	.ascii "uTimes_param_u64_L"
	.space 1
	.ascii "Times_var_u64_L"
	.space 1
	.ascii "uTimes_var_u64_L"
	.space 1
	.ascii "Times_param_u64_i8"
	.space 1
	.ascii "uTimes_param_u64_i8"
	.space 1
	.ascii "Times_var_u64_i8"
	.space 1
	.ascii "uTimes_var_u64_i8"
	.space 1
	.ascii "Times_param_u64_u32"
	.space 1
	.ascii "uTimes_param_u64_u32"
	.space 1
	.ascii "Times_var_u64_u32"
	.space 1
	.ascii "uTimes_var_u64_u32"
	.space 1
	.ascii "Times_param_u64_C"
	.space 1
	.ascii "uTimes_param_u64_C"
	.space 1
	.ascii "Times_var_u64_C"
	.space 1
	.ascii "uTimes_var_u64_C"
	.space 1
	.ascii "Times_param_u64_u8"
	.space 1
	.ascii "uTimes_param_u64_u8"
	.space 1
	.ascii "Times_var_u64_u8"
	.space 1
	.ascii "uTimes_var_u64_u8"
	.space 1
	.ascii "Times_param_u64_I"
	.space 1
	.ascii "uTimes_param_u64_I"
	.space 1
	.ascii "Times_var_u64_I"
	.space 1
	.ascii "uTimes_var_u64_I"
	.space 1
	.ascii "Times_param_u64_i64"
	.space 1
	.ascii "uTimes_param_u64_i64"
	.space 1
	.ascii "Times_var_u64_i64"
	.space 1
	.ascii "uTimes_var_u64_i64"
	.space 1
	.ascii "Times_param_u64_LC"
	.space 1
	.ascii "uTimes_param_u64_LC"
	.space 1
	.ascii "Times_var_u64_LC"
	.space 1
	.ascii "uTimes_var_u64_LC"
	.space 1
	.ascii "Times_param_u64_i16"
	.space 1
	.ascii "uTimes_param_u64_i16"
	.space 1
	.ascii "Times_var_u64_i16"
	.space 1
	.ascii "uTimes_var_u64_i16"
	.space 1
	.ascii "Times_param_L_i32"
	.space 1
	.ascii "uTimes_param_L_i32"
	.space 1
	.ascii "Times_var_L_i32"
	.space 1
	.ascii "uTimes_var_L_i32"
	.space 1
	.ascii "Times_param_L_u16"
	.space 1
	.ascii "uTimes_param_L_u16"
	.space 1
	.ascii "Times_var_L_u16"
	.space 1
	.ascii "uTimes_var_L_u16"
	.space 1
	.ascii "Times_param_L_u64"
	.space 1
	.ascii "uTimes_param_L_u64"
	.space 1
	.ascii "Times_var_L_u64"
	.space 1
	.ascii "uTimes_var_L_u64"
	.space 1
	.ascii "Times_param_L_L"
	.space 1
	.ascii "uTimes_param_L_L"
	.space 1
	.ascii "Times_var_L_L"
	.space 1
	.ascii "uTimes_var_L_L"
	.space 1
	.ascii "Times_param_L_i8"
	.space 1
	.ascii "uTimes_param_L_i8"
	.space 1
	.ascii "Times_var_L_i8"
	.space 1
	.ascii "uTimes_var_L_i8"
	.space 1
	.ascii "Times_param_L_u32"
	.space 1
	.ascii "uTimes_param_L_u32"
	.space 1
	.ascii "Times_var_L_u32"
	.space 1
	.ascii "uTimes_var_L_u32"
	.space 1
	.ascii "Times_param_L_C"
	.space 1
	.ascii "uTimes_param_L_C"
	.space 1
	.ascii "Times_var_L_C"
	.space 1
	.ascii "uTimes_var_L_C"
	.space 1
	.ascii "Times_param_L_u8"
	.space 1
	.ascii "uTimes_param_L_u8"
	.space 1
	.ascii "Times_var_L_u8"
	.space 1
	.ascii "uTimes_var_L_u8"
	.space 1
	.ascii "Times_param_L_I"
	.space 1
	.ascii "uTimes_param_L_I"
	.space 1
	.ascii "Times_var_L_I"
	.space 1
	.ascii "uTimes_var_L_I"
	.space 1
	.ascii "Times_param_L_i64"
	.space 1
	.ascii "uTimes_param_L_i64"
	.space 1
	.ascii "Times_var_L_i64"
	.space 1
	.ascii "uTimes_var_L_i64"
	.space 1
	.ascii "Times_param_L_LC"
	.space 1
	.ascii "uTimes_param_L_LC"
	.space 1
	.ascii "Times_var_L_LC"
	.space 1
	.ascii "uTimes_var_L_LC"
	.space 1
	.ascii "Times_param_L_i16"
	.space 1
	.ascii "uTimes_param_L_i16"
	.space 1
	.ascii "Times_var_L_i16"
	.space 1
	.ascii "uTimes_var_L_i16"
	.space 1
	.ascii "Times_param_i8_i32"
	.space 1
	.ascii "uTimes_param_i8_i32"
	.space 1
	.ascii "Times_var_i8_i32"
	.space 1
	.ascii "uTimes_var_i8_i32"
	.space 1
	.ascii "Times_param_i8_u16"
	.space 1
	.ascii "uTimes_param_i8_u16"
	.space 1
	.ascii "Times_var_i8_u16"
	.space 1
	.ascii "uTimes_var_i8_u16"
	.space 1
	.ascii "Times_param_i8_u64"
	.space 1
	.ascii "uTimes_param_i8_u64"
	.space 1
	.ascii "Times_var_i8_u64"
	.space 1
	.ascii "uTimes_var_i8_u64"
	.space 1
	.ascii "Times_param_i8_L"
	.space 1
	.ascii "uTimes_param_i8_L"
	.space 1
	.ascii "Times_var_i8_L"
	.space 1
	.ascii "uTimes_var_i8_L"
	.space 1
	.ascii "Times_param_i8_i8"
	.space 1
	.ascii "uTimes_param_i8_i8"
	.space 1
	.ascii "Times_var_i8_i8"
	.space 1
	.ascii "uTimes_var_i8_i8"
	.space 1
	.ascii "Times_param_i8_u32"
	.space 1
	.ascii "uTimes_param_i8_u32"
	.space 1
	.ascii "Times_var_i8_u32"
	.space 1
	.ascii "uTimes_var_i8_u32"
	.space 1
	.ascii "Times_param_i8_C"
	.space 1
	.ascii "uTimes_param_i8_C"
	.space 1
	.ascii "Times_var_i8_C"
	.space 1
	.ascii "uTimes_var_i8_C"
	.space 1
	.ascii "Times_param_i8_u8"
	.space 1
	.ascii "uTimes_param_i8_u8"
	.space 1
	.ascii "Times_var_i8_u8"
	.space 1
	.ascii "uTimes_var_i8_u8"
	.space 1
	.ascii "Times_param_i8_I"
	.space 1
	.ascii "uTimes_param_i8_I"
	.space 1
	.ascii "Times_var_i8_I"
	.space 1
	.ascii "uTimes_var_i8_I"
	.space 1
	.ascii "Times_param_i8_i64"
	.space 1
	.ascii "uTimes_param_i8_i64"
	.space 1
	.ascii "Times_var_i8_i64"
	.space 1
	.ascii "uTimes_var_i8_i64"
	.space 1
	.ascii "Times_param_i8_LC"
	.space 1
	.ascii "uTimes_param_i8_LC"
	.space 1
	.ascii "Times_var_i8_LC"
	.space 1
	.ascii "uTimes_var_i8_LC"
	.space 1
	.ascii "Times_param_i8_i16"
	.space 1
	.ascii "uTimes_param_i8_i16"
	.space 1
	.ascii "Times_var_i8_i16"
	.space 1
	.ascii "uTimes_var_i8_i16"
	.space 1
	.ascii "Times_param_u32_i32"
	.space 1
	.ascii "uTimes_param_u32_i32"
	.space 1
	.ascii "Times_var_u32_i32"
	.space 1
	.ascii "uTimes_var_u32_i32"
	.space 1
	.ascii "Times_param_u32_u16"
	.space 1
	.ascii "uTimes_param_u32_u16"
	.space 1
	.ascii "Times_var_u32_u16"
	.space 1
	.ascii "uTimes_var_u32_u16"
	.space 1
	.ascii "Times_param_u32_u64"
	.space 1
	.ascii "uTimes_param_u32_u64"
	.space 1
	.ascii "Times_var_u32_u64"
	.space 1
	.ascii "uTimes_var_u32_u64"
	.space 1
	.ascii "Times_param_u32_L"
	.space 1
	.ascii "uTimes_param_u32_L"
	.space 1
	.ascii "Times_var_u32_L"
	.space 1
	.ascii "uTimes_var_u32_L"
	.space 1
	.ascii "Times_param_u32_i8"
	.space 1
	.ascii "uTimes_param_u32_i8"
	.space 1
	.ascii "Times_var_u32_i8"
	.space 1
	.ascii "uTimes_var_u32_i8"
	.space 1
	.ascii "Times_param_u32_u32"
	.space 1
	.ascii "uTimes_param_u32_u32"
	.space 1
	.ascii "Times_var_u32_u32"
	.space 1
	.ascii "uTimes_var_u32_u32"
	.space 1
	.ascii "Times_param_u32_C"
	.space 1
	.ascii "uTimes_param_u32_C"
	.space 1
	.ascii "Times_var_u32_C"
	.space 1
	.ascii "uTimes_var_u32_C"
	.space 1
	.ascii "Times_param_u32_u8"
	.space 1
	.ascii "uTimes_param_u32_u8"
	.space 1
	.ascii "Times_var_u32_u8"
	.space 1
	.ascii "uTimes_var_u32_u8"
	.space 1
	.ascii "Times_param_u32_I"
	.space 1
	.ascii "uTimes_param_u32_I"
	.space 1
	.ascii "Times_var_u32_I"
	.space 1
	.ascii "uTimes_var_u32_I"
	.space 1
	.ascii "Times_param_u32_i64"
	.space 1
	.ascii "uTimes_param_u32_i64"
	.space 1
	.ascii "Times_var_u32_i64"
	.space 1
	.ascii "uTimes_var_u32_i64"
	.space 1
	.ascii "Times_param_u32_LC"
	.space 1
	.ascii "uTimes_param_u32_LC"
	.space 1
	.ascii "Times_var_u32_LC"
	.space 1
	.ascii "uTimes_var_u32_LC"
	.space 1
	.ascii "Times_param_u32_i16"
	.space 1
	.ascii "uTimes_param_u32_i16"
	.space 1
	.ascii "Times_var_u32_i16"
	.space 1
	.ascii "uTimes_var_u32_i16"
	.space 1
	.ascii "Times_param_f32_f32"
	.space 1
	.ascii "Times_var_f32_f32"
	.space 1
	.ascii "Times_param_C_i32"
	.space 1
	.ascii "uTimes_param_C_i32"
	.space 1
	.ascii "Times_var_C_i32"
	.space 1
	.ascii "uTimes_var_C_i32"
	.space 1
	.ascii "Times_param_C_u16"
	.space 1
	.ascii "uTimes_param_C_u16"
	.space 1
	.ascii "Times_var_C_u16"
	.space 1
	.ascii "uTimes_var_C_u16"
	.space 1
	.ascii "Times_param_C_u64"
	.space 1
	.ascii "uTimes_param_C_u64"
	.space 1
	.ascii "Times_var_C_u64"
	.space 1
	.ascii "uTimes_var_C_u64"
	.space 1
	.ascii "Times_param_C_L"
	.space 1
	.ascii "uTimes_param_C_L"
	.space 1
	.ascii "Times_var_C_L"
	.space 1
	.ascii "uTimes_var_C_L"
	.space 1
	.ascii "Times_param_C_i8"
	.space 1
	.ascii "uTimes_param_C_i8"
	.space 1
	.ascii "Times_var_C_i8"
	.space 1
	.ascii "uTimes_var_C_i8"
	.space 1
	.ascii "Times_param_C_u32"
	.space 1
	.ascii "uTimes_param_C_u32"
	.space 1
	.ascii "Times_var_C_u32"
	.space 1
	.ascii "uTimes_var_C_u32"
	.space 1
	.ascii "Times_param_C_C"
	.space 1
	.ascii "uTimes_param_C_C"
	.space 1
	.ascii "Times_var_C_C"
	.space 1
	.ascii "uTimes_var_C_C"
	.space 1
	.ascii "Times_param_C_u8"
	.space 1
	.ascii "uTimes_param_C_u8"
	.space 1
	.ascii "Times_var_C_u8"
	.space 1
	.ascii "uTimes_var_C_u8"
	.space 1
	.ascii "Times_param_C_I"
	.space 1
	.ascii "uTimes_param_C_I"
	.space 1
	.ascii "Times_var_C_I"
	.space 1
	.ascii "uTimes_var_C_I"
	.space 1
	.ascii "Times_param_C_i64"
	.space 1
	.ascii "uTimes_param_C_i64"
	.space 1
	.ascii "Times_var_C_i64"
	.space 1
	.ascii "uTimes_var_C_i64"
	.space 1
	.ascii "Times_param_C_LC"
	.space 1
	.ascii "uTimes_param_C_LC"
	.space 1
	.ascii "Times_var_C_LC"
	.space 1
	.ascii "uTimes_var_C_LC"
	.space 1
	.ascii "Times_param_C_i16"
	.space 1
	.ascii "uTimes_param_C_i16"
	.space 1
	.ascii "Times_var_C_i16"
	.space 1
	.ascii "uTimes_var_C_i16"
	.space 1
	.ascii "Times_param_u8_i32"
	.space 1
	.ascii "uTimes_param_u8_i32"
	.space 1
	.ascii "Times_var_u8_i32"
	.space 1
	.ascii "uTimes_var_u8_i32"
	.space 1
	.ascii "Times_param_u8_u16"
	.space 1
	.ascii "uTimes_param_u8_u16"
	.space 1
	.ascii "Times_var_u8_u16"
	.space 1
	.ascii "uTimes_var_u8_u16"
	.space 1
	.ascii "Times_param_u8_u64"
	.space 1
	.ascii "uTimes_param_u8_u64"
	.space 1
	.ascii "Times_var_u8_u64"
	.space 1
	.ascii "uTimes_var_u8_u64"
	.space 1
	.ascii "Times_param_u8_L"
	.space 1
	.ascii "uTimes_param_u8_L"
	.space 1
	.ascii "Times_var_u8_L"
	.space 1
	.ascii "uTimes_var_u8_L"
	.space 1
	.ascii "Times_param_u8_i8"
	.space 1
	.ascii "uTimes_param_u8_i8"
	.space 1
	.ascii "Times_var_u8_i8"
	.space 1
	.ascii "uTimes_var_u8_i8"
	.space 1
	.ascii "Times_param_u8_u32"
	.space 1
	.ascii "uTimes_param_u8_u32"
	.space 1
	.ascii "Times_var_u8_u32"
	.space 1
	.ascii "uTimes_var_u8_u32"
	.space 1
	.ascii "Times_param_u8_C"
	.space 1
	.ascii "uTimes_param_u8_C"
	.space 1
	.ascii "Times_var_u8_C"
	.space 1
	.ascii "uTimes_var_u8_C"
	.space 1
	.ascii "Times_param_u8_u8"
	.space 1
	.ascii "uTimes_param_u8_u8"
	.space 1
	.ascii "Times_var_u8_u8"
	.space 1
	.ascii "uTimes_var_u8_u8"
	.space 1
	.ascii "Times_param_u8_I"
	.space 1
	.ascii "uTimes_param_u8_I"
	.space 1
	.ascii "Times_var_u8_I"
	.space 1
	.ascii "uTimes_var_u8_I"
	.space 1
	.ascii "Times_param_u8_i64"
	.space 1
	.ascii "uTimes_param_u8_i64"
	.space 1
	.ascii "Times_var_u8_i64"
	.space 1
	.ascii "uTimes_var_u8_i64"
	.space 1
	.ascii "Times_param_u8_LC"
	.space 1
	.ascii "uTimes_param_u8_LC"
	.space 1
	.ascii "Times_var_u8_LC"
	.space 1
	.ascii "uTimes_var_u8_LC"
	.space 1
	.ascii "Times_param_u8_i16"
	.space 1
	.ascii "uTimes_param_u8_i16"
	.space 1
	.ascii "Times_var_u8_i16"
	.space 1
	.ascii "uTimes_var_u8_i16"
	.space 1
	.ascii "Times_param_I_i32"
	.space 1
	.ascii "uTimes_param_I_i32"
	.space 1
	.ascii "Times_var_I_i32"
	.space 1
	.ascii "uTimes_var_I_i32"
	.space 1
	.ascii "Times_param_I_u16"
	.space 1
	.ascii "uTimes_param_I_u16"
	.space 1
	.ascii "Times_var_I_u16"
	.space 1
	.ascii "uTimes_var_I_u16"
	.space 1
	.ascii "Times_param_I_u64"
	.space 1
	.ascii "uTimes_param_I_u64"
	.space 1
	.ascii "Times_var_I_u64"
	.space 1
	.ascii "uTimes_var_I_u64"
	.space 1
	.ascii "Times_param_I_L"
	.space 1
	.ascii "uTimes_param_I_L"
	.space 1
	.ascii "Times_var_I_L"
	.space 1
	.ascii "uTimes_var_I_L"
	.space 1
	.ascii "Times_param_I_i8"
	.space 1
	.ascii "uTimes_param_I_i8"
	.space 1
	.ascii "Times_var_I_i8"
	.space 1
	.ascii "uTimes_var_I_i8"
	.space 1
	.ascii "Times_param_I_u32"
	.space 1
	.ascii "uTimes_param_I_u32"
	.space 1
	.ascii "Times_var_I_u32"
	.space 1
	.ascii "uTimes_var_I_u32"
	.space 1
	.ascii "Times_param_I_C"
	.space 1
	.ascii "uTimes_param_I_C"
	.space 1
	.ascii "Times_var_I_C"
	.space 1
	.ascii "uTimes_var_I_C"
	.space 1
	.ascii "Times_param_I_u8"
	.space 1
	.ascii "uTimes_param_I_u8"
	.space 1
	.ascii "Times_var_I_u8"
	.space 1
	.ascii "uTimes_var_I_u8"
	.space 1
	.ascii "Times_param_I_I"
	.space 1
	.ascii "uTimes_param_I_I"
	.space 1
	.ascii "Times_var_I_I"
	.space 1
	.ascii "uTimes_var_I_I"
	.space 1
	.ascii "Times_param_I_i64"
	.space 1
	.ascii "uTimes_param_I_i64"
	.space 1
	.ascii "Times_var_I_i64"
	.space 1
	.ascii "uTimes_var_I_i64"
	.space 1
	.ascii "Times_param_I_LC"
	.space 1
	.ascii "uTimes_param_I_LC"
	.space 1
	.ascii "Times_var_I_LC"
	.space 1
	.ascii "uTimes_var_I_LC"
	.space 1
	.ascii "Times_param_I_i16"
	.space 1
	.ascii "uTimes_param_I_i16"
	.space 1
	.ascii "Times_var_I_i16"
	.space 1
	.ascii "uTimes_var_I_i16"
	.space 1
	.ascii "Times_param_i64_i32"
	.space 1
	.ascii "uTimes_param_i64_i32"
	.space 1
	.ascii "Times_var_i64_i32"
	.space 1
	.ascii "uTimes_var_i64_i32"
	.space 1
	.ascii "Times_param_i64_u16"
	.space 1
	.ascii "uTimes_param_i64_u16"
	.space 1
	.ascii "Times_var_i64_u16"
	.space 1
	.ascii "uTimes_var_i64_u16"
	.space 1
	.ascii "Times_param_i64_u64"
	.space 1
	.ascii "uTimes_param_i64_u64"
	.space 1
	.ascii "Times_var_i64_u64"
	.space 1
	.ascii "uTimes_var_i64_u64"
	.space 1
	.ascii "Times_param_i64_L"
	.space 1
	.ascii "uTimes_param_i64_L"
	.space 1
	.ascii "Times_var_i64_L"
	.space 1
	.ascii "uTimes_var_i64_L"
	.space 1
	.ascii "Times_param_i64_i8"
	.space 1
	.ascii "uTimes_param_i64_i8"
	.space 1
	.ascii "Times_var_i64_i8"
	.space 1
	.ascii "uTimes_var_i64_i8"
	.space 1
	.ascii "Times_param_i64_u32"
	.space 1
	.ascii "uTimes_param_i64_u32"
	.space 1
	.ascii "Times_var_i64_u32"
	.space 1
	.ascii "uTimes_var_i64_u32"
	.space 1
	.ascii "Times_param_i64_C"
	.space 1
	.ascii "uTimes_param_i64_C"
	.space 1
	.ascii "Times_var_i64_C"
	.space 1
	.ascii "uTimes_var_i64_C"
	.space 1
	.ascii "Times_param_i64_u8"
	.space 1
	.ascii "uTimes_param_i64_u8"
	.space 1
	.ascii "Times_var_i64_u8"
	.space 1
	.ascii "uTimes_var_i64_u8"
	.space 1
	.ascii "Times_param_i64_I"
	.space 1
	.ascii "uTimes_param_i64_I"
	.space 1
	.ascii "Times_var_i64_I"
	.space 1
	.ascii "uTimes_var_i64_I"
	.space 1
	.ascii "Times_param_i64_i64"
	.space 1
	.ascii "uTimes_param_i64_i64"
	.space 1
	.ascii "Times_var_i64_i64"
	.space 1
	.ascii "uTimes_var_i64_i64"
	.space 1
	.ascii "Times_param_i64_LC"
	.space 1
	.ascii "uTimes_param_i64_LC"
	.space 1
	.ascii "Times_var_i64_LC"
	.space 1
	.ascii "uTimes_var_i64_LC"
	.space 1
	.ascii "Times_param_i64_i16"
	.space 1
	.ascii "uTimes_param_i64_i16"
	.space 1
	.ascii "Times_var_i64_i16"
	.space 1
	.ascii "uTimes_var_i64_i16"
	.space 1
	.ascii "Times_param_f64_f64"
	.space 1
	.ascii "Times_var_f64_f64"
	.space 1
	.ascii "Times_param_LC_i32"
	.space 1
	.ascii "uTimes_param_LC_i32"
	.space 1
	.ascii "Times_var_LC_i32"
	.space 1
	.ascii "uTimes_var_LC_i32"
	.space 1
	.ascii "Times_param_LC_u16"
	.space 1
	.ascii "uTimes_param_LC_u16"
	.space 1
	.ascii "Times_var_LC_u16"
	.space 1
	.ascii "uTimes_var_LC_u16"
	.space 1
	.ascii "Times_param_LC_u64"
	.space 1
	.ascii "uTimes_param_LC_u64"
	.space 1
	.ascii "Times_var_LC_u64"
	.space 1
	.ascii "uTimes_var_LC_u64"
	.space 1
	.ascii "Times_param_LC_L"
	.space 1
	.ascii "uTimes_param_LC_L"
	.space 1
	.ascii "Times_var_LC_L"
	.space 1
	.ascii "uTimes_var_LC_L"
	.space 1
	.ascii "Times_param_LC_i8"
	.space 1
	.ascii "uTimes_param_LC_i8"
	.space 1
	.ascii "Times_var_LC_i8"
	.space 1
	.ascii "uTimes_var_LC_i8"
	.space 1
	.ascii "Times_param_LC_u32"
	.space 1
	.ascii "uTimes_param_LC_u32"
	.space 1
	.ascii "Times_var_LC_u32"
	.space 1
	.ascii "uTimes_var_LC_u32"
	.space 1
	.ascii "Times_param_LC_C"
	.space 1
	.ascii "uTimes_param_LC_C"
	.space 1
	.ascii "Times_var_LC_C"
	.space 1
	.ascii "uTimes_var_LC_C"
	.space 1
	.ascii "Times_param_LC_u8"
	.space 1
	.ascii "uTimes_param_LC_u8"
	.space 1
	.ascii "Times_var_LC_u8"
	.space 1
	.ascii "uTimes_var_LC_u8"
	.space 1
	.ascii "Times_param_LC_I"
	.space 1
	.ascii "uTimes_param_LC_I"
	.space 1
	.ascii "Times_var_LC_I"
	.space 1
	.ascii "uTimes_var_LC_I"
	.space 1
	.ascii "Times_param_LC_i64"
	.space 1
	.ascii "uTimes_param_LC_i64"
	.space 1
	.ascii "Times_var_LC_i64"
	.space 1
	.ascii "uTimes_var_LC_i64"
	.space 1
	.ascii "Times_param_LC_LC"
	.space 1
	.ascii "uTimes_param_LC_LC"
	.space 1
	.ascii "Times_var_LC_LC"
	.space 1
	.ascii "uTimes_var_LC_LC"
	.space 1
	.ascii "Times_param_LC_i16"
	.space 1
	.ascii "uTimes_param_LC_i16"
	.space 1
	.ascii "Times_var_LC_i16"
	.space 1
	.ascii "uTimes_var_LC_i16"
	.space 1
	.ascii "Times_param_i16_i32"
	.space 1
	.ascii "uTimes_param_i16_i32"
	.space 1
	.ascii "Times_var_i16_i32"
	.space 1
	.ascii "uTimes_var_i16_i32"
	.space 1
	.ascii "Times_param_i16_u16"
	.space 1
	.ascii "uTimes_param_i16_u16"
	.space 1
	.ascii "Times_var_i16_u16"
	.space 1
	.ascii "uTimes_var_i16_u16"
	.space 1
	.ascii "Times_param_i16_u64"
	.space 1
	.ascii "uTimes_param_i16_u64"
	.space 1
	.ascii "Times_var_i16_u64"
	.space 1
	.ascii "uTimes_var_i16_u64"
	.space 1
	.ascii "Times_param_i16_L"
	.space 1
	.ascii "uTimes_param_i16_L"
	.space 1
	.ascii "Times_var_i16_L"
	.space 1
	.ascii "uTimes_var_i16_L"
	.space 1
	.ascii "Times_param_i16_i8"
	.space 1
	.ascii "uTimes_param_i16_i8"
	.space 1
	.ascii "Times_var_i16_i8"
	.space 1
	.ascii "uTimes_var_i16_i8"
	.space 1
	.ascii "Times_param_i16_u32"
	.space 1
	.ascii "uTimes_param_i16_u32"
	.space 1
	.ascii "Times_var_i16_u32"
	.space 1
	.ascii "uTimes_var_i16_u32"
	.space 1
	.ascii "Times_param_i16_C"
	.space 1
	.ascii "uTimes_param_i16_C"
	.space 1
	.ascii "Times_var_i16_C"
	.space 1
	.ascii "uTimes_var_i16_C"
	.space 1
	.ascii "Times_param_i16_u8"
	.space 1
	.ascii "uTimes_param_i16_u8"
	.space 1
	.ascii "Times_var_i16_u8"
	.space 1
	.ascii "uTimes_var_i16_u8"
	.space 1
	.ascii "Times_param_i16_I"
	.space 1
	.ascii "uTimes_param_i16_I"
	.space 1
	.ascii "Times_var_i16_I"
	.space 1
	.ascii "uTimes_var_i16_I"
	.space 1
	.ascii "Times_param_i16_i64"
	.space 1
	.ascii "uTimes_param_i16_i64"
	.space 1
	.ascii "Times_var_i16_i64"
	.space 1
	.ascii "uTimes_var_i16_i64"
	.space 1
	.ascii "Times_param_i16_LC"
	.space 1
	.ascii "uTimes_param_i16_LC"
	.space 1
	.ascii "Times_var_i16_LC"
	.space 1
	.ascii "uTimes_var_i16_LC"
	.space 1
	.ascii "Times_param_i16_i16"
	.space 1
	.ascii "uTimes_param_i16_i16"
	.space 1
	.ascii "Times_var_i16_i16"
	.space 1
	.ascii "uTimes_var_i16_i16"
	.space 1
	.ascii "Plus_param_i32_i32"
	.space 1
	.ascii "uPlus_param_i32_i32"
	.space 1
	.ascii "Plus_var_i32_i32"
	.space 1
	.ascii "uPlus_var_i32_i32"
	.space 1
	.ascii "Plus_param_i32_u16"
	.space 1
	.ascii "uPlus_param_i32_u16"
	.space 1
	.ascii "Plus_var_i32_u16"
	.space 1
	.ascii "uPlus_var_i32_u16"
	.space 1
	.ascii "Plus_param_i32_u64"
	.space 1
	.ascii "uPlus_param_i32_u64"
	.space 1
	.ascii "Plus_var_i32_u64"
	.space 1
	.ascii "uPlus_var_i32_u64"
	.space 1
	.ascii "Plus_param_i32_L"
	.space 1
	.ascii "uPlus_param_i32_L"
	.space 1
	.ascii "Plus_var_i32_L"
	.space 1
	.ascii "uPlus_var_i32_L"
	.space 1
	.ascii "Plus_param_i32_i8"
	.space 1
	.ascii "uPlus_param_i32_i8"
	.space 1
	.ascii "Plus_var_i32_i8"
	.space 1
	.ascii "uPlus_var_i32_i8"
	.space 1
	.ascii "Plus_param_i32_u32"
	.space 1
	.ascii "uPlus_param_i32_u32"
	.space 1
	.ascii "Plus_var_i32_u32"
	.space 1
	.ascii "uPlus_var_i32_u32"
	.space 1
	.ascii "Plus_param_i32_C"
	.space 1
	.ascii "uPlus_param_i32_C"
	.space 1
	.ascii "Plus_var_i32_C"
	.space 1
	.ascii "uPlus_var_i32_C"
	.space 1
	.ascii "Plus_param_i32_u8"
	.space 1
	.ascii "uPlus_param_i32_u8"
	.space 1
	.ascii "Plus_var_i32_u8"
	.space 1
	.ascii "uPlus_var_i32_u8"
	.space 1
	.ascii "Plus_param_i32_I"
	.space 1
	.ascii "uPlus_param_i32_I"
	.space 1
	.ascii "Plus_var_i32_I"
	.space 1
	.ascii "uPlus_var_i32_I"
	.space 1
	.ascii "Plus_param_i32_i64"
	.space 1
	.ascii "uPlus_param_i32_i64"
	.space 1
	.ascii "Plus_var_i32_i64"
	.space 1
	.ascii "uPlus_var_i32_i64"
	.space 1
	.ascii "Plus_param_i32_LC"
	.space 1
	.ascii "uPlus_param_i32_LC"
	.space 1
	.ascii "Plus_var_i32_LC"
	.space 1
	.ascii "uPlus_var_i32_LC"
	.space 1
	.ascii "Plus_param_i32_i16"
	.space 1
	.ascii "uPlus_param_i32_i16"
	.space 1
	.ascii "Plus_var_i32_i16"
	.space 1
	.ascii "uPlus_var_i32_i16"
	.space 1
	.ascii "Plus_param_u16_i32"
	.space 1
	.ascii "uPlus_param_u16_i32"
	.space 1
	.ascii "Plus_var_u16_i32"
	.space 1
	.ascii "uPlus_var_u16_i32"
	.space 1
	.ascii "Plus_param_u16_u16"
	.space 1
	.ascii "uPlus_param_u16_u16"
	.space 1
	.ascii "Plus_var_u16_u16"
	.space 1
	.ascii "uPlus_var_u16_u16"
	.space 1
	.ascii "Plus_param_u16_u64"
	.space 1
	.ascii "uPlus_param_u16_u64"
	.space 1
	.ascii "Plus_var_u16_u64"
	.space 1
	.ascii "uPlus_var_u16_u64"
	.space 1
	.ascii "Plus_param_u16_L"
	.space 1
	.ascii "uPlus_param_u16_L"
	.space 1
	.ascii "Plus_var_u16_L"
	.space 1
	.ascii "uPlus_var_u16_L"
	.space 1
	.ascii "Plus_param_u16_i8"
	.space 1
	.ascii "uPlus_param_u16_i8"
	.space 1
	.ascii "Plus_var_u16_i8"
	.space 1
	.ascii "uPlus_var_u16_i8"
	.space 1
	.ascii "Plus_param_u16_u32"
	.space 1
	.ascii "uPlus_param_u16_u32"
	.space 1
	.ascii "Plus_var_u16_u32"
	.space 1
	.ascii "uPlus_var_u16_u32"
	.space 1
	.ascii "Plus_param_u16_C"
	.space 1
	.ascii "uPlus_param_u16_C"
	.space 1
	.ascii "Plus_var_u16_C"
	.space 1
	.ascii "uPlus_var_u16_C"
	.space 1
	.ascii "Plus_param_u16_u8"
	.space 1
	.ascii "uPlus_param_u16_u8"
	.space 1
	.ascii "Plus_var_u16_u8"
	.space 1
	.ascii "uPlus_var_u16_u8"
	.space 1
	.ascii "Plus_param_u16_I"
	.space 1
	.ascii "uPlus_param_u16_I"
	.space 1
	.ascii "Plus_var_u16_I"
	.space 1
	.ascii "uPlus_var_u16_I"
	.space 1
	.ascii "Plus_param_u16_i64"
	.space 1
	.ascii "uPlus_param_u16_i64"
	.space 1
	.ascii "Plus_var_u16_i64"
	.space 1
	.ascii "uPlus_var_u16_i64"
	.space 1
	.ascii "Plus_param_u16_LC"
	.space 1
	.ascii "uPlus_param_u16_LC"
	.space 1
	.ascii "Plus_var_u16_LC"
	.space 1
	.ascii "uPlus_var_u16_LC"
	.space 1
	.ascii "Plus_param_u16_i16"
	.space 1
	.ascii "uPlus_param_u16_i16"
	.space 1
	.ascii "Plus_var_u16_i16"
	.space 1
	.ascii "uPlus_var_u16_i16"
	.space 1
	.ascii "Plus_param_u64_i32"
	.space 1
	.ascii "uPlus_param_u64_i32"
	.space 1
	.ascii "Plus_var_u64_i32"
	.space 1
	.ascii "uPlus_var_u64_i32"
	.space 1
	.ascii "Plus_param_u64_u16"
	.space 1
	.ascii "uPlus_param_u64_u16"
	.space 1
	.ascii "Plus_var_u64_u16"
	.space 1
	.ascii "uPlus_var_u64_u16"
	.space 1
	.ascii "Plus_param_u64_u64"
	.space 1
	.ascii "uPlus_param_u64_u64"
	.space 1
	.ascii "Plus_var_u64_u64"
	.space 1
	.ascii "uPlus_var_u64_u64"
	.space 1
	.ascii "Plus_param_u64_L"
	.space 1
	.ascii "uPlus_param_u64_L"
	.space 1
	.ascii "Plus_var_u64_L"
	.space 1
	.ascii "uPlus_var_u64_L"
	.space 1
	.ascii "Plus_param_u64_i8"
	.space 1
	.ascii "uPlus_param_u64_i8"
	.space 1
	.ascii "Plus_var_u64_i8"
	.space 1
	.ascii "uPlus_var_u64_i8"
	.space 1
	.ascii "Plus_param_u64_u32"
	.space 1
	.ascii "uPlus_param_u64_u32"
	.space 1
	.ascii "Plus_var_u64_u32"
	.space 1
	.ascii "uPlus_var_u64_u32"
	.space 1
	.ascii "Plus_param_u64_C"
	.space 1
	.ascii "uPlus_param_u64_C"
	.space 1
	.ascii "Plus_var_u64_C"
	.space 1
	.ascii "uPlus_var_u64_C"
	.space 1
	.ascii "Plus_param_u64_u8"
	.space 1
	.ascii "uPlus_param_u64_u8"
	.space 1
	.ascii "Plus_var_u64_u8"
	.space 1
	.ascii "uPlus_var_u64_u8"
	.space 1
	.ascii "Plus_param_u64_I"
	.space 1
	.ascii "uPlus_param_u64_I"
	.space 1
	.ascii "Plus_var_u64_I"
	.space 1
	.ascii "uPlus_var_u64_I"
	.space 1
	.ascii "Plus_param_u64_i64"
	.space 1
	.ascii "uPlus_param_u64_i64"
	.space 1
	.ascii "Plus_var_u64_i64"
	.space 1
	.ascii "uPlus_var_u64_i64"
	.space 1
	.ascii "Plus_param_u64_LC"
	.space 1
	.ascii "uPlus_param_u64_LC"
	.space 1
	.ascii "Plus_var_u64_LC"
	.space 1
	.ascii "uPlus_var_u64_LC"
	.space 1
	.ascii "Plus_param_u64_i16"
	.space 1
	.ascii "uPlus_param_u64_i16"
	.space 1
	.ascii "Plus_var_u64_i16"
	.space 1
	.ascii "uPlus_var_u64_i16"
	.space 1
	.ascii "Plus_param_L_i32"
	.space 1
	.ascii "uPlus_param_L_i32"
	.space 1
	.ascii "Plus_var_L_i32"
	.space 1
	.ascii "uPlus_var_L_i32"
	.space 1
	.ascii "Plus_param_L_u16"
	.space 1
	.ascii "uPlus_param_L_u16"
	.space 1
	.ascii "Plus_var_L_u16"
	.space 1
	.ascii "uPlus_var_L_u16"
	.space 1
	.ascii "Plus_param_L_u64"
	.space 1
	.ascii "uPlus_param_L_u64"
	.space 1
	.ascii "Plus_var_L_u64"
	.space 1
	.ascii "uPlus_var_L_u64"
	.space 1
	.ascii "Plus_param_L_L"
	.space 1
	.ascii "uPlus_param_L_L"
	.space 1
	.ascii "Plus_var_L_L"
	.space 1
	.ascii "uPlus_var_L_L"
	.space 1
	.ascii "Plus_param_L_i8"
	.space 1
	.ascii "uPlus_param_L_i8"
	.space 1
	.ascii "Plus_var_L_i8"
	.space 1
	.ascii "uPlus_var_L_i8"
	.space 1
	.ascii "Plus_param_L_u32"
	.space 1
	.ascii "uPlus_param_L_u32"
	.space 1
	.ascii "Plus_var_L_u32"
	.space 1
	.ascii "uPlus_var_L_u32"
	.space 1
	.ascii "Plus_param_L_C"
	.space 1
	.ascii "uPlus_param_L_C"
	.space 1
	.ascii "Plus_var_L_C"
	.space 1
	.ascii "uPlus_var_L_C"
	.space 1
	.ascii "Plus_param_L_u8"
	.space 1
	.ascii "uPlus_param_L_u8"
	.space 1
	.ascii "Plus_var_L_u8"
	.space 1
	.ascii "uPlus_var_L_u8"
	.space 1
	.ascii "Plus_param_L_I"
	.space 1
	.ascii "uPlus_param_L_I"
	.space 1
	.ascii "Plus_var_L_I"
	.space 1
	.ascii "uPlus_var_L_I"
	.space 1
	.ascii "Plus_param_L_i64"
	.space 1
	.ascii "uPlus_param_L_i64"
	.space 1
	.ascii "Plus_var_L_i64"
	.space 1
	.ascii "uPlus_var_L_i64"
	.space 1
	.ascii "Plus_param_L_LC"
	.space 1
	.ascii "uPlus_param_L_LC"
	.space 1
	.ascii "Plus_var_L_LC"
	.space 1
	.ascii "uPlus_var_L_LC"
	.space 1
	.ascii "Plus_param_L_i16"
	.space 1
	.ascii "uPlus_param_L_i16"
	.space 1
	.ascii "Plus_var_L_i16"
	.space 1
	.ascii "uPlus_var_L_i16"
	.space 1
	.ascii "Plus_param_i8_i32"
	.space 1
	.ascii "uPlus_param_i8_i32"
	.space 1
	.ascii "Plus_var_i8_i32"
	.space 1
	.ascii "uPlus_var_i8_i32"
	.space 1
	.ascii "Plus_param_i8_u16"
	.space 1
	.ascii "uPlus_param_i8_u16"
	.space 1
	.ascii "Plus_var_i8_u16"
	.space 1
	.ascii "uPlus_var_i8_u16"
	.space 1
	.ascii "Plus_param_i8_u64"
	.space 1
	.ascii "uPlus_param_i8_u64"
	.space 1
	.ascii "Plus_var_i8_u64"
	.space 1
	.ascii "uPlus_var_i8_u64"
	.space 1
	.ascii "Plus_param_i8_L"
	.space 1
	.ascii "uPlus_param_i8_L"
	.space 1
	.ascii "Plus_var_i8_L"
	.space 1
	.ascii "uPlus_var_i8_L"
	.space 1
	.ascii "Plus_param_i8_i8"
	.space 1
	.ascii "uPlus_param_i8_i8"
	.space 1
	.ascii "Plus_var_i8_i8"
	.space 1
	.ascii "uPlus_var_i8_i8"
	.space 1
	.ascii "Plus_param_i8_u32"
	.space 1
	.ascii "uPlus_param_i8_u32"
	.space 1
	.ascii "Plus_var_i8_u32"
	.space 1
	.ascii "uPlus_var_i8_u32"
	.space 1
	.ascii "Plus_param_i8_C"
	.space 1
	.ascii "uPlus_param_i8_C"
	.space 1
	.ascii "Plus_var_i8_C"
	.space 1
	.ascii "uPlus_var_i8_C"
	.space 1
	.ascii "Plus_param_i8_u8"
	.space 1
	.ascii "uPlus_param_i8_u8"
	.space 1
	.ascii "Plus_var_i8_u8"
	.space 1
	.ascii "uPlus_var_i8_u8"
	.space 1
	.ascii "Plus_param_i8_I"
	.space 1
	.ascii "uPlus_param_i8_I"
	.space 1
	.ascii "Plus_var_i8_I"
	.space 1
	.ascii "uPlus_var_i8_I"
	.space 1
	.ascii "Plus_param_i8_i64"
	.space 1
	.ascii "uPlus_param_i8_i64"
	.space 1
	.ascii "Plus_var_i8_i64"
	.space 1
	.ascii "uPlus_var_i8_i64"
	.space 1
	.ascii "Plus_param_i8_LC"
	.space 1
	.ascii "uPlus_param_i8_LC"
	.space 1
	.ascii "Plus_var_i8_LC"
	.space 1
	.ascii "uPlus_var_i8_LC"
	.space 1
	.ascii "Plus_param_i8_i16"
	.space 1
	.ascii "uPlus_param_i8_i16"
	.space 1
	.ascii "Plus_var_i8_i16"
	.space 1
	.ascii "uPlus_var_i8_i16"
	.space 1
	.ascii "Plus_param_u32_i32"
	.space 1
	.ascii "uPlus_param_u32_i32"
	.space 1
	.ascii "Plus_var_u32_i32"
	.space 1
	.ascii "uPlus_var_u32_i32"
	.space 1
	.ascii "Plus_param_u32_u16"
	.space 1
	.ascii "uPlus_param_u32_u16"
	.space 1
	.ascii "Plus_var_u32_u16"
	.space 1
	.ascii "uPlus_var_u32_u16"
	.space 1
	.ascii "Plus_param_u32_u64"
	.space 1
	.ascii "uPlus_param_u32_u64"
	.space 1
	.ascii "Plus_var_u32_u64"
	.space 1
	.ascii "uPlus_var_u32_u64"
	.space 1
	.ascii "Plus_param_u32_L"
	.space 1
	.ascii "uPlus_param_u32_L"
	.space 1
	.ascii "Plus_var_u32_L"
	.space 1
	.ascii "uPlus_var_u32_L"
	.space 1
	.ascii "Plus_param_u32_i8"
	.space 1
	.ascii "uPlus_param_u32_i8"
	.space 1
	.ascii "Plus_var_u32_i8"
	.space 1
	.ascii "uPlus_var_u32_i8"
	.space 1
	.ascii "Plus_param_u32_u32"
	.space 1
	.ascii "uPlus_param_u32_u32"
	.space 1
	.ascii "Plus_var_u32_u32"
	.space 1
	.ascii "uPlus_var_u32_u32"
	.space 1
	.ascii "Plus_param_u32_C"
	.space 1
	.ascii "uPlus_param_u32_C"
	.space 1
	.ascii "Plus_var_u32_C"
	.space 1
	.ascii "uPlus_var_u32_C"
	.space 1
	.ascii "Plus_param_u32_u8"
	.space 1
	.ascii "uPlus_param_u32_u8"
	.space 1
	.ascii "Plus_var_u32_u8"
	.space 1
	.ascii "uPlus_var_u32_u8"
	.space 1
	.ascii "Plus_param_u32_I"
	.space 1
	.ascii "uPlus_param_u32_I"
	.space 1
	.ascii "Plus_var_u32_I"
	.space 1
	.ascii "uPlus_var_u32_I"
	.space 1
	.ascii "Plus_param_u32_i64"
	.space 1
	.ascii "uPlus_param_u32_i64"
	.space 1
	.ascii "Plus_var_u32_i64"
	.space 1
	.ascii "uPlus_var_u32_i64"
	.space 1
	.ascii "Plus_param_u32_LC"
	.space 1
	.ascii "uPlus_param_u32_LC"
	.space 1
	.ascii "Plus_var_u32_LC"
	.space 1
	.ascii "uPlus_var_u32_LC"
	.space 1
	.ascii "Plus_param_u32_i16"
	.space 1
	.ascii "uPlus_param_u32_i16"
	.space 1
	.ascii "Plus_var_u32_i16"
	.space 1
	.ascii "uPlus_var_u32_i16"
	.space 1
	.ascii "Plus_param_f32_f32"
	.space 1
	.ascii "Plus_var_f32_f32"
	.space 1
	.ascii "Plus_param_C_i32"
	.space 1
	.ascii "uPlus_param_C_i32"
	.space 1
	.ascii "Plus_var_C_i32"
	.space 1
	.ascii "uPlus_var_C_i32"
	.space 1
	.ascii "Plus_param_C_u16"
	.space 1
	.ascii "uPlus_param_C_u16"
	.space 1
	.ascii "Plus_var_C_u16"
	.space 1
	.ascii "uPlus_var_C_u16"
	.space 1
	.ascii "Plus_param_C_u64"
	.space 1
	.ascii "uPlus_param_C_u64"
	.space 1
	.ascii "Plus_var_C_u64"
	.space 1
	.ascii "uPlus_var_C_u64"
	.space 1
	.ascii "Plus_param_C_L"
	.space 1
	.ascii "uPlus_param_C_L"
	.space 1
	.ascii "Plus_var_C_L"
	.space 1
	.ascii "uPlus_var_C_L"
	.space 1
	.ascii "Plus_param_C_i8"
	.space 1
	.ascii "uPlus_param_C_i8"
	.space 1
	.ascii "Plus_var_C_i8"
	.space 1
	.ascii "uPlus_var_C_i8"
	.space 1
	.ascii "Plus_param_C_u32"
	.space 1
	.ascii "uPlus_param_C_u32"
	.space 1
	.ascii "Plus_var_C_u32"
	.space 1
	.ascii "uPlus_var_C_u32"
	.space 1
	.ascii "Plus_param_C_C"
	.space 1
	.ascii "uPlus_param_C_C"
	.space 1
	.ascii "Plus_var_C_C"
	.space 1
	.ascii "uPlus_var_C_C"
	.space 1
	.ascii "Plus_param_C_u8"
	.space 1
	.ascii "uPlus_param_C_u8"
	.space 1
	.ascii "Plus_var_C_u8"
	.space 1
	.ascii "uPlus_var_C_u8"
	.space 1
	.ascii "Plus_param_C_I"
	.space 1
	.ascii "uPlus_param_C_I"
	.space 1
	.ascii "Plus_var_C_I"
	.space 1
	.ascii "uPlus_var_C_I"
	.space 1
	.ascii "Plus_param_C_i64"
	.space 1
	.ascii "uPlus_param_C_i64"
	.space 1
	.ascii "Plus_var_C_i64"
	.space 1
	.ascii "uPlus_var_C_i64"
	.space 1
	.ascii "Plus_param_C_LC"
	.space 1
	.ascii "uPlus_param_C_LC"
	.space 1
	.ascii "Plus_var_C_LC"
	.space 1
	.ascii "uPlus_var_C_LC"
	.space 1
	.ascii "Plus_param_C_i16"
	.space 1
	.ascii "uPlus_param_C_i16"
	.space 1
	.ascii "Plus_var_C_i16"
	.space 1
	.ascii "uPlus_var_C_i16"
	.space 1
	.ascii "Plus_param_u8_i32"
	.space 1
	.ascii "uPlus_param_u8_i32"
	.space 1
	.ascii "Plus_var_u8_i32"
	.space 1
	.ascii "uPlus_var_u8_i32"
	.space 1
	.ascii "Plus_param_u8_u16"
	.space 1
	.ascii "uPlus_param_u8_u16"
	.space 1
	.ascii "Plus_var_u8_u16"
	.space 1
	.ascii "uPlus_var_u8_u16"
	.space 1
	.ascii "Plus_param_u8_u64"
	.space 1
	.ascii "uPlus_param_u8_u64"
	.space 1
	.ascii "Plus_var_u8_u64"
	.space 1
	.ascii "uPlus_var_u8_u64"
	.space 1
	.ascii "Plus_param_u8_L"
	.space 1
	.ascii "uPlus_param_u8_L"
	.space 1
	.ascii "Plus_var_u8_L"
	.space 1
	.ascii "uPlus_var_u8_L"
	.space 1
	.ascii "Plus_param_u8_i8"
	.space 1
	.ascii "uPlus_param_u8_i8"
	.space 1
	.ascii "Plus_var_u8_i8"
	.space 1
	.ascii "uPlus_var_u8_i8"
	.space 1
	.ascii "Plus_param_u8_u32"
	.space 1
	.ascii "uPlus_param_u8_u32"
	.space 1
	.ascii "Plus_var_u8_u32"
	.space 1
	.ascii "uPlus_var_u8_u32"
	.space 1
	.ascii "Plus_param_u8_C"
	.space 1
	.ascii "uPlus_param_u8_C"
	.space 1
	.ascii "Plus_var_u8_C"
	.space 1
	.ascii "uPlus_var_u8_C"
	.space 1
	.ascii "Plus_param_u8_u8"
	.space 1
	.ascii "uPlus_param_u8_u8"
	.space 1
	.ascii "Plus_var_u8_u8"
	.space 1
	.ascii "uPlus_var_u8_u8"
	.space 1
	.ascii "Plus_param_u8_I"
	.space 1
	.ascii "uPlus_param_u8_I"
	.space 1
	.ascii "Plus_var_u8_I"
	.space 1
	.ascii "uPlus_var_u8_I"
	.space 1
	.ascii "Plus_param_u8_i64"
	.space 1
	.ascii "uPlus_param_u8_i64"
	.space 1
	.ascii "Plus_var_u8_i64"
	.space 1
	.ascii "uPlus_var_u8_i64"
	.space 1
	.ascii "Plus_param_u8_LC"
	.space 1
	.ascii "uPlus_param_u8_LC"
	.space 1
	.ascii "Plus_var_u8_LC"
	.space 1
	.ascii "uPlus_var_u8_LC"
	.space 1
	.ascii "Plus_param_u8_i16"
	.space 1
	.ascii "uPlus_param_u8_i16"
	.space 1
	.ascii "Plus_var_u8_i16"
	.space 1
	.ascii "uPlus_var_u8_i16"
	.space 1
	.ascii "Plus_param_I_i32"
	.space 1
	.ascii "uPlus_param_I_i32"
	.space 1
	.ascii "Plus_var_I_i32"
	.space 1
	.ascii "uPlus_var_I_i32"
	.space 1
	.ascii "Plus_param_I_u16"
	.space 1
	.ascii "uPlus_param_I_u16"
	.space 1
	.ascii "Plus_var_I_u16"
	.space 1
	.ascii "uPlus_var_I_u16"
	.space 1
	.ascii "Plus_param_I_u64"
	.space 1
	.ascii "uPlus_param_I_u64"
	.space 1
	.ascii "Plus_var_I_u64"
	.space 1
	.ascii "uPlus_var_I_u64"
	.space 1
	.ascii "Plus_param_I_L"
	.space 1
	.ascii "uPlus_param_I_L"
	.space 1
	.ascii "Plus_var_I_L"
	.space 1
	.ascii "uPlus_var_I_L"
	.space 1
	.ascii "Plus_param_I_i8"
	.space 1
	.ascii "uPlus_param_I_i8"
	.space 1
	.ascii "Plus_var_I_i8"
	.space 1
	.ascii "uPlus_var_I_i8"
	.space 1
	.ascii "Plus_param_I_u32"
	.space 1
	.ascii "uPlus_param_I_u32"
	.space 1
	.ascii "Plus_var_I_u32"
	.space 1
	.ascii "uPlus_var_I_u32"
	.space 1
	.ascii "Plus_param_I_C"
	.space 1
	.ascii "uPlus_param_I_C"
	.space 1
	.ascii "Plus_var_I_C"
	.space 1
	.ascii "uPlus_var_I_C"
	.space 1
	.ascii "Plus_param_I_u8"
	.space 1
	.ascii "uPlus_param_I_u8"
	.space 1
	.ascii "Plus_var_I_u8"
	.space 1
	.ascii "uPlus_var_I_u8"
	.space 1
	.ascii "Plus_param_I_I"
	.space 1
	.ascii "uPlus_param_I_I"
	.space 1
	.ascii "Plus_var_I_I"
	.space 1
	.ascii "uPlus_var_I_I"
	.space 1
	.ascii "Plus_param_I_i64"
	.space 1
	.ascii "uPlus_param_I_i64"
	.space 1
	.ascii "Plus_var_I_i64"
	.space 1
	.ascii "uPlus_var_I_i64"
	.space 1
	.ascii "Plus_param_I_LC"
	.space 1
	.ascii "uPlus_param_I_LC"
	.space 1
	.ascii "Plus_var_I_LC"
	.space 1
	.ascii "uPlus_var_I_LC"
	.space 1
	.ascii "Plus_param_I_i16"
	.space 1
	.ascii "uPlus_param_I_i16"
	.space 1
	.ascii "Plus_var_I_i16"
	.space 1
	.ascii "uPlus_var_I_i16"
	.space 1
	.ascii "Plus_param_i64_i32"
	.space 1
	.ascii "uPlus_param_i64_i32"
	.space 1
	.ascii "Plus_var_i64_i32"
	.space 1
	.ascii "uPlus_var_i64_i32"
	.space 1
	.ascii "Plus_param_i64_u16"
	.space 1
	.ascii "uPlus_param_i64_u16"
	.space 1
	.ascii "Plus_var_i64_u16"
	.space 1
	.ascii "uPlus_var_i64_u16"
	.space 1
	.ascii "Plus_param_i64_u64"
	.space 1
	.ascii "uPlus_param_i64_u64"
	.space 1
	.ascii "Plus_var_i64_u64"
	.space 1
	.ascii "uPlus_var_i64_u64"
	.space 1
	.ascii "Plus_param_i64_L"
	.space 1
	.ascii "uPlus_param_i64_L"
	.space 1
	.ascii "Plus_var_i64_L"
	.space 1
	.ascii "uPlus_var_i64_L"
	.space 1
	.ascii "Plus_param_i64_i8"
	.space 1
	.ascii "uPlus_param_i64_i8"
	.space 1
	.ascii "Plus_var_i64_i8"
	.space 1
	.ascii "uPlus_var_i64_i8"
	.space 1
	.ascii "Plus_param_i64_u32"
	.space 1
	.ascii "uPlus_param_i64_u32"
	.space 1
	.ascii "Plus_var_i64_u32"
	.space 1
	.ascii "uPlus_var_i64_u32"
	.space 1
	.ascii "Plus_param_i64_C"
	.space 1
	.ascii "uPlus_param_i64_C"
	.space 1
	.ascii "Plus_var_i64_C"
	.space 1
	.ascii "uPlus_var_i64_C"
	.space 1
	.ascii "Plus_param_i64_u8"
	.space 1
	.ascii "uPlus_param_i64_u8"
	.space 1
	.ascii "Plus_var_i64_u8"
	.space 1
	.ascii "uPlus_var_i64_u8"
	.space 1
	.ascii "Plus_param_i64_I"
	.space 1
	.ascii "uPlus_param_i64_I"
	.space 1
	.ascii "Plus_var_i64_I"
	.space 1
	.ascii "uPlus_var_i64_I"
	.space 1
	.ascii "Plus_param_i64_i64"
	.space 1
	.ascii "uPlus_param_i64_i64"
	.space 1
	.ascii "Plus_var_i64_i64"
	.space 1
	.ascii "uPlus_var_i64_i64"
	.space 1
	.ascii "Plus_param_i64_LC"
	.space 1
	.ascii "uPlus_param_i64_LC"
	.space 1
	.ascii "Plus_var_i64_LC"
	.space 1
	.ascii "uPlus_var_i64_LC"
	.space 1
	.ascii "Plus_param_i64_i16"
	.space 1
	.ascii "uPlus_param_i64_i16"
	.space 1
	.ascii "Plus_var_i64_i16"
	.space 1
	.ascii "uPlus_var_i64_i16"
	.space 1
	.ascii "Plus_param_f64_f64"
	.space 1
	.ascii "Plus_var_f64_f64"
	.space 1
	.ascii "Plus_param_LC_i32"
	.space 1
	.ascii "uPlus_param_LC_i32"
	.space 1
	.ascii "Plus_var_LC_i32"
	.space 1
	.ascii "uPlus_var_LC_i32"
	.space 1
	.ascii "Plus_param_LC_u16"
	.space 1
	.ascii "uPlus_param_LC_u16"
	.space 1
	.ascii "Plus_var_LC_u16"
	.space 1
	.ascii "uPlus_var_LC_u16"
	.space 1
	.ascii "Plus_param_LC_u64"
	.space 1
	.ascii "uPlus_param_LC_u64"
	.space 1
	.ascii "Plus_var_LC_u64"
	.space 1
	.ascii "uPlus_var_LC_u64"
	.space 1
	.ascii "Plus_param_LC_L"
	.space 1
	.ascii "uPlus_param_LC_L"
	.space 1
	.ascii "Plus_var_LC_L"
	.space 1
	.ascii "uPlus_var_LC_L"
	.space 1
	.ascii "Plus_param_LC_i8"
	.space 1
	.ascii "uPlus_param_LC_i8"
	.space 1
	.ascii "Plus_var_LC_i8"
	.space 1
	.ascii "uPlus_var_LC_i8"
	.space 1
	.ascii "Plus_param_LC_u32"
	.space 1
	.ascii "uPlus_param_LC_u32"
	.space 1
	.ascii "Plus_var_LC_u32"
	.space 1
	.ascii "uPlus_var_LC_u32"
	.space 1
	.ascii "Plus_param_LC_C"
	.space 1
	.ascii "uPlus_param_LC_C"
	.space 1
	.ascii "Plus_var_LC_C"
	.space 1
	.ascii "uPlus_var_LC_C"
	.space 1
	.ascii "Plus_param_LC_u8"
	.space 1
	.ascii "uPlus_param_LC_u8"
	.space 1
	.ascii "Plus_var_LC_u8"
	.space 1
	.ascii "uPlus_var_LC_u8"
	.space 1
	.ascii "Plus_param_LC_I"
	.space 1
	.ascii "uPlus_param_LC_I"
	.space 1
	.ascii "Plus_var_LC_I"
	.space 1
	.ascii "uPlus_var_LC_I"
	.space 1
	.ascii "Plus_param_LC_i64"
	.space 1
	.ascii "uPlus_param_LC_i64"
	.space 1
	.ascii "Plus_var_LC_i64"
	.space 1
	.ascii "uPlus_var_LC_i64"
	.space 1
	.ascii "Plus_param_LC_LC"
	.space 1
	.ascii "uPlus_param_LC_LC"
	.space 1
	.ascii "Plus_var_LC_LC"
	.space 1
	.ascii "uPlus_var_LC_LC"
	.space 1
	.ascii "Plus_param_LC_i16"
	.space 1
	.ascii "uPlus_param_LC_i16"
	.space 1
	.ascii "Plus_var_LC_i16"
	.space 1
	.ascii "uPlus_var_LC_i16"
	.space 1
	.ascii "Plus_param_i16_i32"
	.space 1
	.ascii "uPlus_param_i16_i32"
	.space 1
	.ascii "Plus_var_i16_i32"
	.space 1
	.ascii "uPlus_var_i16_i32"
	.space 1
	.ascii "Plus_param_i16_u16"
	.space 1
	.ascii "uPlus_param_i16_u16"
	.space 1
	.ascii "Plus_var_i16_u16"
	.space 1
	.ascii "uPlus_var_i16_u16"
	.space 1
	.ascii "Plus_param_i16_u64"
	.space 1
	.ascii "uPlus_param_i16_u64"
	.space 1
	.ascii "Plus_var_i16_u64"
	.space 1
	.ascii "uPlus_var_i16_u64"
	.space 1
	.ascii "Plus_param_i16_L"
	.space 1
	.ascii "uPlus_param_i16_L"
	.space 1
	.ascii "Plus_var_i16_L"
	.space 1
	.ascii "uPlus_var_i16_L"
	.space 1
	.ascii "Plus_param_i16_i8"
	.space 1
	.ascii "uPlus_param_i16_i8"
	.space 1
	.ascii "Plus_var_i16_i8"
	.space 1
	.ascii "uPlus_var_i16_i8"
	.space 1
	.ascii "Plus_param_i16_u32"
	.space 1
	.ascii "uPlus_param_i16_u32"
	.space 1
	.ascii "Plus_var_i16_u32"
	.space 1
	.ascii "uPlus_var_i16_u32"
	.space 1
	.ascii "Plus_param_i16_C"
	.space 1
	.ascii "uPlus_param_i16_C"
	.space 1
	.ascii "Plus_var_i16_C"
	.space 1
	.ascii "uPlus_var_i16_C"
	.space 1
	.ascii "Plus_param_i16_u8"
	.space 1
	.ascii "uPlus_param_i16_u8"
	.space 1
	.ascii "Plus_var_i16_u8"
	.space 1
	.ascii "uPlus_var_i16_u8"
	.space 1
	.ascii "Plus_param_i16_I"
	.space 1
	.ascii "uPlus_param_i16_I"
	.space 1
	.ascii "Plus_var_i16_I"
	.space 1
	.ascii "uPlus_var_i16_I"
	.space 1
	.ascii "Plus_param_i16_i64"
	.space 1
	.ascii "uPlus_param_i16_i64"
	.space 1
	.ascii "Plus_var_i16_i64"
	.space 1
	.ascii "uPlus_var_i16_i64"
	.space 1
	.ascii "Plus_param_i16_LC"
	.space 1
	.ascii "uPlus_param_i16_LC"
	.space 1
	.ascii "Plus_var_i16_LC"
	.space 1
	.ascii "uPlus_var_i16_LC"
	.space 1
	.ascii "Plus_param_i16_i16"
	.space 1
	.ascii "uPlus_param_i16_i16"
	.space 1
	.ascii "Plus_var_i16_i16"
	.space 1
	.ascii "uPlus_var_i16_i16"
	.space 1
	.ascii "ret_u16_u16"
	.space 1
	.ascii "ret_u16_i32"
	.space 1
	.ascii "ret_u16_u64"
	.space 1
	.ascii "ret_u16_L"
	.space 1
	.ascii "ret_u16_i8"
	.space 1
	.ascii "ret_u16_u32"
	.space 1
	.ascii "ret_u16_C"
	.space 1
	.ascii "ret_u16_u8"
	.space 1
	.ascii "ret_u16_I"
	.space 1
	.ascii "ret_u16_i16"
	.space 1
	.ascii "ret_u16_i64"
	.space 1
	.ascii "ret_u16_LC"
	.space 1
	.ascii "ret_i32_u16"
	.space 1
	.ascii "ret_i32_i32"
	.space 1
	.ascii "ret_i32_u64"
	.space 1
	.ascii "ret_i32_L"
	.space 1
	.ascii "ret_i32_i8"
	.space 1
	.ascii "ret_i32_u32"
	.space 1
	.ascii "ret_i32_C"
	.space 1
	.ascii "ret_i32_u8"
	.space 1
	.ascii "ret_i32_I"
	.space 1
	.ascii "ret_i32_i16"
	.space 1
	.ascii "ret_i32_i64"
	.space 1
	.ascii "ret_i32_LC"
	.space 1
	.ascii "ret_u64_u16"
	.space 1
	.ascii "ret_u64_i32"
	.space 1
	.ascii "ret_u64_u64"
	.space 1
	.ascii "ret_u64_L"
	.space 1
	.ascii "ret_u64_i8"
	.space 1
	.ascii "ret_u64_u32"
	.space 1
	.ascii "ret_u64_C"
	.space 1
	.ascii "ret_u64_u8"
	.space 1
	.ascii "ret_u64_I"
	.space 1
	.ascii "ret_u64_i16"
	.space 1
	.ascii "ret_u64_i64"
	.space 1
	.ascii "ret_u64_LC"
	.space 1
	.ascii "ret_L_u16"
	.space 1
	.ascii "ret_L_i32"
	.space 1
	.ascii "ret_L_u64"
	.space 1
	.ascii "ret_L_L"
	.space 1
	.ascii "ret_L_i8"
	.space 1
	.ascii "ret_L_u32"
	.space 1
	.ascii "ret_L_C"
	.space 1
	.ascii "ret_L_u8"
	.space 1
	.ascii "ret_L_I"
	.space 1
	.ascii "ret_L_i16"
	.space 1
	.ascii "ret_L_i64"
	.space 1
	.ascii "ret_L_LC"
	.space 1
	.ascii "ret_i8_u16"
	.space 1
	.ascii "ret_i8_i32"
	.space 1
	.ascii "ret_i8_u64"
	.space 1
	.ascii "ret_i8_L"
	.space 1
	.ascii "ret_i8_i8"
	.space 1
	.ascii "ret_i8_u32"
	.space 1
	.ascii "ret_i8_C"
	.space 1
	.ascii "ret_i8_u8"
	.space 1
	.ascii "ret_i8_I"
	.space 1
	.ascii "ret_i8_i16"
	.space 1
	.ascii "ret_i8_i64"
	.space 1
	.ascii "ret_i8_LC"
	.space 1
	.ascii "ret_u32_u16"
	.space 1
	.ascii "ret_u32_i32"
	.space 1
	.ascii "ret_u32_u64"
	.space 1
	.ascii "ret_u32_L"
	.space 1
	.ascii "ret_u32_i8"
	.space 1
	.ascii "ret_u32_u32"
	.space 1
	.ascii "ret_u32_C"
	.space 1
	.ascii "ret_u32_u8"
	.space 1
	.ascii "ret_u32_I"
	.space 1
	.ascii "ret_u32_i16"
	.space 1
	.ascii "ret_u32_i64"
	.space 1
	.ascii "ret_u32_LC"
	.space 1
	.ascii "ret_C_u16"
	.space 1
	.ascii "ret_C_i32"
	.space 1
	.ascii "ret_C_u64"
	.space 1
	.ascii "ret_C_L"
	.space 1
	.ascii "ret_C_i8"
	.space 1
	.ascii "ret_C_u32"
	.space 1
	.ascii "ret_C_C"
	.space 1
	.ascii "ret_C_u8"
	.space 1
	.ascii "ret_C_I"
	.space 1
	.ascii "ret_C_i16"
	.space 1
	.ascii "ret_C_i64"
	.space 1
	.ascii "ret_C_LC"
	.space 1
	.ascii "ret_u8_u16"
	.space 1
	.ascii "ret_u8_i32"
	.space 1
	.ascii "ret_u8_u64"
	.space 1
	.ascii "ret_u8_L"
	.space 1
	.ascii "ret_u8_i8"
	.space 1
	.ascii "ret_u8_u32"
	.space 1
	.ascii "ret_u8_C"
	.space 1
	.ascii "ret_u8_u8"
	.space 1
	.ascii "ret_u8_I"
	.space 1
	.ascii "ret_u8_i16"
	.space 1
	.ascii "ret_u8_i64"
	.space 1
	.ascii "ret_u8_LC"
	.space 1
	.ascii "ret_I_u16"
	.space 1
	.ascii "ret_I_i32"
	.space 1
	.ascii "ret_I_u64"
	.space 1
	.ascii "ret_I_L"
	.space 1
	.ascii "ret_I_i8"
	.space 1
	.ascii "ret_I_u32"
	.space 1
	.ascii "ret_I_C"
	.space 1
	.ascii "ret_I_u8"
	.space 1
	.ascii "ret_I_I"
	.space 1
	.ascii "ret_I_i16"
	.space 1
	.ascii "ret_I_i64"
	.space 1
	.ascii "ret_I_LC"
	.space 1
	.ascii "ret_i16_u16"
	.space 1
	.ascii "ret_i16_i32"
	.space 1
	.ascii "ret_i16_u64"
	.space 1
	.ascii "ret_i16_L"
	.space 1
	.ascii "ret_i16_i8"
	.space 1
	.ascii "ret_i16_u32"
	.space 1
	.ascii "ret_i16_C"
	.space 1
	.ascii "ret_i16_u8"
	.space 1
	.ascii "ret_i16_I"
	.space 1
	.ascii "ret_i16_i16"
	.space 1
	.ascii "ret_i16_i64"
	.space 1
	.ascii "ret_i16_LC"
	.space 1
	.ascii "ret_i64_u16"
	.space 1
	.ascii "ret_i64_i32"
	.space 1
	.ascii "ret_i64_u64"
	.space 1
	.ascii "ret_i64_L"
	.space 1
	.ascii "ret_i64_i8"
	.space 1
	.ascii "ret_i64_u32"
	.space 1
	.ascii "ret_i64_C"
	.space 1
	.ascii "ret_i64_u8"
	.space 1
	.ascii "ret_i64_I"
	.space 1
	.ascii "ret_i64_i16"
	.space 1
	.ascii "ret_i64_i64"
	.space 1
	.ascii "ret_i64_LC"
	.space 1
	.ascii "ret_LC_u16"
	.space 1
	.ascii "ret_LC_i32"
	.space 1
	.ascii "ret_LC_u64"
	.space 1
	.ascii "ret_LC_L"
	.space 1
	.ascii "ret_LC_i8"
	.space 1
	.ascii "ret_LC_u32"
	.space 1
	.ascii "ret_LC_C"
	.space 1
	.ascii "ret_LC_u8"
	.space 1
	.ascii "ret_LC_I"
	.space 1
	.ascii "ret_LC_i16"
	.space 1
	.ascii "ret_LC_i64"
	.space 1
	.ascii "ret_LC_LC"
	.space 1
	.ascii "ret_pi32"
	.space 1
	.ascii "ret_pu16"
	.space 1
	.ascii "ret_pu64"
	.space 1
	.ascii "ret_pL"
	.space 1
	.ascii "ret_pi8"
	.space 1
	.ascii "ret_pu32"
	.space 1
	.ascii "ret_pf32"
	.space 1
	.ascii "ret_pC"
	.space 1
	.ascii "ret_pu8"
	.space 1
	.ascii "ret_pI"
	.space 1
	.ascii "ret_pi64"
	.space 1
	.ascii "ret_pf64"
	.space 1
	.ascii "ret_pLC"
	.space 1
	.ascii "ret_pi16"
	.space 1
	.ascii "ret_vi32"
	.space 1
	.ascii "ret_vu16"
	.space 1
	.ascii "ret_vu64"
	.space 1
	.ascii "ret_vL"
	.space 1
	.ascii "ret_vi8"
	.space 1
	.ascii "ret_vu32"
	.space 1
	.ascii "ret_vf32"
	.space 1
	.ascii "ret_vC"
	.space 1
	.ascii "ret_vu8"
	.space 1
	.ascii "ret_vI"
	.space 1
	.ascii "ret_vi64"
	.space 1
	.ascii "ret_vf64"
	.space 1
	.ascii "ret_vLC"
	.space 1
	.ascii "ret_vi16"
	.space 1
	.ascii "ret_ki32"
	.space 1
	.ascii "ret_ku16"
	.space 1
	.ascii "ret_ku64"
	.space 1
	.ascii "ret_kL"
	.space 1
	.ascii "ret_ki8"
	.space 1
	.ascii "ret_ku32"
	.space 1
	.ascii "ret_kf32"
	.space 1
	.ascii "ret_kC"
	.space 1
	.ascii "ret_ku8"
	.space 1
	.ascii "ret_kI"
	.space 1
	.ascii "ret_ki64"
	.space 1
	.ascii "ret_kf64"
	.space 1
	.ascii "ret_kLC"
	.space 1
	.ascii "ret_ki16"
	.space 5
	.quad	_A_M3
	.quad	_L_1
	.quad	_A__uExtract_param_i32_i32
	.quad	_L_1+5
	.quad	_A__uExtract_var_i32_i32
	.quad	_L_1+28
	.quad	_A__uExtract_param_u16_u16
	.quad	_L_1+49
	.quad	_A__uExtract_var_u16_u16
	.quad	_L_1+72
	.quad	_A__uExtract_param_u64_u64
	.quad	_L_1+93
	.quad	_A__uExtract_var_u64_u64
	.quad	_L_1+116
	.quad	_A__uExtract_param_L_L
	.quad	_L_1+137
	.quad	_A__uExtract_var_L_L
	.quad	_L_1+156
	.quad	_A__uExtract_param_i8_i8
	.quad	_L_1+173
	.quad	_A__uExtract_var_i8_i8
	.quad	_L_1+194
	.quad	_A__uExtract_param_u32_u32
	.quad	_L_1+213
	.quad	_A__uExtract_var_u32_u32
	.quad	_L_1+236
	.quad	_A__uExtract_param_C_C
	.quad	_L_1+257
	.quad	_A__uExtract_var_C_C
	.quad	_L_1+276
	.quad	_A__uExtract_param_u8_u8
	.quad	_L_1+293
	.quad	_A__uExtract_var_u8_u8
	.quad	_L_1+314
	.quad	_A__uExtract_param_I_I
	.quad	_L_1+333
	.quad	_A__uExtract_var_I_I
	.quad	_L_1+352
	.quad	_A__uExtract_param_i64_i64
	.quad	_L_1+369
	.quad	_A__uExtract_var_i64_i64
	.quad	_L_1+392
	.quad	_A__uExtract_param_LC_LC
	.quad	_L_1+413
	.quad	_A__uExtract_var_LC_LC
	.quad	_L_1+434
	.quad	_A__uExtract_param_i16_i16
	.quad	_L_1+453
	.quad	_A__uExtract_var_i16_i16
	.quad	_L_1+476
	.quad	_A__uInsert_param_i32_i32
	.quad	_L_1+497
	.quad	_A__uInsert_var_i32_i32
	.quad	_L_1+519
	.quad	_A__uInsert_param_u16_u16
	.quad	_L_1+539
	.quad	_A__uInsert_var_u16_u16
	.quad	_L_1+561
	.quad	_A__uInsert_param_u64_u64
	.quad	_L_1+581
	.quad	_A__uInsert_var_u64_u64
	.quad	_L_1+603
	.quad	_A__uInsert_param_L_L
	.quad	_L_1+623
	.quad	_A__uInsert_var_L_L
	.quad	_L_1+641
	.quad	_A__uInsert_param_i8_i8
	.quad	_L_1+657
	.quad	_A__uInsert_var_i8_i8
	.quad	_L_1+677
	.quad	_A__uInsert_param_u32_u32
	.quad	_L_1+695
	.quad	_A__uInsert_var_u32_u32
	.quad	_L_1+717
	.quad	_A__uInsert_param_C_C
	.quad	_L_1+737
	.quad	_A__uInsert_var_C_C
	.quad	_L_1+755
	.quad	_A__uInsert_param_u8_u8
	.quad	_L_1+771
	.quad	_A__uInsert_var_u8_u8
	.quad	_L_1+791
	.quad	_A__uInsert_param_I_I
	.quad	_L_1+809
	.quad	_A__uInsert_var_I_I
	.quad	_L_1+827
	.quad	_A__uInsert_param_i64_i64
	.quad	_L_1+843
	.quad	_A__uInsert_var_i64_i64
	.quad	_L_1+865
	.quad	_A__uInsert_param_LC_LC
	.quad	_L_1+885
	.quad	_A__uInsert_var_LC_LC
	.quad	_L_1+905
	.quad	_A__uInsert_param_i16_i16
	.quad	_L_1+923
	.quad	_A__uInsert_var_i16_i16
	.quad	_L_1+945
	.quad	_A__uRotate_param_i32_C
	.quad	_L_1+965
	.quad	_A__uRotate_var_i32_C
	.quad	_L_1+985
	.quad	_A__uRotate_param_i32_I
	.quad	_L_1+1003
	.quad	_A__uRotate_var_i32_I
	.quad	_L_1+1023
	.quad	_A__uRotate_param_u16_C
	.quad	_L_1+1041
	.quad	_A__uRotate_var_u16_C
	.quad	_L_1+1061
	.quad	_A__uRotate_param_u16_I
	.quad	_L_1+1079
	.quad	_A__uRotate_var_u16_I
	.quad	_L_1+1099
	.quad	_A__uRotate_param_u64_C
	.quad	_L_1+1117
	.quad	_A__uRotate_var_u64_C
	.quad	_L_1+1137
	.quad	_A__uRotate_param_u64_I
	.quad	_L_1+1155
	.quad	_A__uRotate_var_u64_I
	.quad	_L_1+1175
	.quad	_A__uRotate_param_L_C
	.quad	_L_1+1193
	.quad	_A__uRotate_var_L_C
	.quad	_L_1+1211
	.quad	_A__uRotate_param_L_I
	.quad	_L_1+1227
	.quad	_A__uRotate_var_L_I
	.quad	_L_1+1245
	.quad	_A__uRotate_param_i8_C
	.quad	_L_1+1261
	.quad	_A__uRotate_var_i8_C
	.quad	_L_1+1280
	.quad	_A__uRotate_param_i8_I
	.quad	_L_1+1297
	.quad	_A__uRotate_var_i8_I
	.quad	_L_1+1316
	.quad	_A__uRotate_param_u32_C
	.quad	_L_1+1333
	.quad	_A__uRotate_var_u32_C
	.quad	_L_1+1353
	.quad	_A__uRotate_param_u32_I
	.quad	_L_1+1371
	.quad	_A__uRotate_var_u32_I
	.quad	_L_1+1391
	.quad	_A__uRotate_param_C_C
	.quad	_L_1+1409
	.quad	_A__uRotate_var_C_C
	.quad	_L_1+1427
	.quad	_A__uRotate_param_C_I
	.quad	_L_1+1443
	.quad	_A__uRotate_var_C_I
	.quad	_L_1+1461
	.quad	_A__uRotate_param_u8_C
	.quad	_L_1+1477
	.quad	_A__uRotate_var_u8_C
	.quad	_L_1+1496
	.quad	_A__uRotate_param_u8_I
	.quad	_L_1+1513
	.quad	_A__uRotate_var_u8_I
	.quad	_L_1+1532
	.quad	_A__uRotate_param_I_C
	.quad	_L_1+1549
	.quad	_A__uRotate_var_I_C
	.quad	_L_1+1567
	.quad	_A__uRotate_param_I_I
	.quad	_L_1+1583
	.quad	_A__uRotate_var_I_I
	.quad	_L_1+1601
	.quad	_A__uRotate_param_i64_C
	.quad	_L_1+1617
	.quad	_A__uRotate_var_i64_C
	.quad	_L_1+1637
	.quad	_A__uRotate_param_i64_I
	.quad	_L_1+1655
	.quad	_A__uRotate_var_i64_I
	.quad	_L_1+1675
	.quad	_A__uRotate_param_LC_C
	.quad	_L_1+1693
	.quad	_A__uRotate_var_LC_C
	.quad	_L_1+1712
	.quad	_A__uRotate_param_LC_I
	.quad	_L_1+1729
	.quad	_A__uRotate_var_LC_I
	.quad	_L_1+1748
	.quad	_A__uRotate_param_i16_C
	.quad	_L_1+1765
	.quad	_A__uRotate_var_i16_C
	.quad	_L_1+1785
	.quad	_A__uRotate_param_i16_I
	.quad	_L_1+1803
	.quad	_A__uRotate_var_i16_I
	.quad	_L_1+1823
	.quad	_A__uRightRotate_param_i32_C
	.quad	_L_1+1841
	.quad	_A__uRightRotate_var_i32_C
	.quad	_L_1+1866
	.quad	_A__uRightRotate_param_i32_I
	.quad	_L_1+1889
	.quad	_A__uRightRotate_var_i32_I
	.quad	_L_1+1914
	.quad	_A__uRightRotate_param_u16_C
	.quad	_L_1+1937
	.quad	_A__uRightRotate_var_u16_C
	.quad	_L_1+1962
	.quad	_A__uRightRotate_param_u16_I
	.quad	_L_1+1985
	.quad	_A__uRightRotate_var_u16_I
	.quad	_L_1+2010
	.quad	_A__uRightRotate_param_u64_C
	.quad	_L_1+2033
	.quad	_A__uRightRotate_var_u64_C
	.quad	_L_1+2058
	.quad	_A__uRightRotate_param_u64_I
	.quad	_L_1+2081
	.quad	_A__uRightRotate_var_u64_I
	.quad	_L_1+2106
	.quad	_A__uRightRotate_param_L_C
	.quad	_L_1+2129
	.quad	_A__uRightRotate_var_L_C
	.quad	_L_1+2152
	.quad	_A__uRightRotate_param_L_I
	.quad	_L_1+2173
	.quad	_A__uRightRotate_var_L_I
	.quad	_L_1+2196
	.quad	_A__uRightRotate_param_i8_C
	.quad	_L_1+2217
	.quad	_A__uRightRotate_var_i8_C
	.quad	_L_1+2241
	.quad	_A__uRightRotate_param_i8_I
	.quad	_L_1+2263
	.quad	_A__uRightRotate_var_i8_I
	.quad	_L_1+2287
	.quad	_A__uRightRotate_param_u32_C
	.quad	_L_1+2309
	.quad	_A__uRightRotate_var_u32_C
	.quad	_L_1+2334
	.quad	_A__uRightRotate_param_u32_I
	.quad	_L_1+2357
	.quad	_A__uRightRotate_var_u32_I
	.quad	_L_1+2382
	.quad	_A__uRightRotate_param_C_C
	.quad	_L_1+2405
	.quad	_A__uRightRotate_var_C_C
	.quad	_L_1+2428
	.quad	_A__uRightRotate_param_C_I
	.quad	_L_1+2449
	.quad	_A__uRightRotate_var_C_I
	.quad	_L_1+2472
	.quad	_A__uRightRotate_param_u8_C
	.quad	_L_1+2493
	.quad	_A__uRightRotate_var_u8_C
	.quad	_L_1+2517
	.quad	_A__uRightRotate_param_u8_I
	.quad	_L_1+2539
	.quad	_A__uRightRotate_var_u8_I
	.quad	_L_1+2563
	.quad	_A__uRightRotate_param_I_C
	.quad	_L_1+2585
	.quad	_A__uRightRotate_var_I_C
	.quad	_L_1+2608
	.quad	_A__uRightRotate_param_I_I
	.quad	_L_1+2629
	.quad	_A__uRightRotate_var_I_I
	.quad	_L_1+2652
	.quad	_A__uRightRotate_param_i64_C
	.quad	_L_1+2673
	.quad	_A__uRightRotate_var_i64_C
	.quad	_L_1+2698
	.quad	_A__uRightRotate_param_i64_I
	.quad	_L_1+2721
	.quad	_A__uRightRotate_var_i64_I
	.quad	_L_1+2746
	.quad	_A__uRightRotate_param_LC_C
	.quad	_L_1+2769
	.quad	_A__uRightRotate_var_LC_C
	.quad	_L_1+2793
	.quad	_A__uRightRotate_param_LC_I
	.quad	_L_1+2815
	.quad	_A__uRightRotate_var_LC_I
	.quad	_L_1+2839
	.quad	_A__uRightRotate_param_i16_C
	.quad	_L_1+2861
	.quad	_A__uRightRotate_var_i16_C
	.quad	_L_1+2886
	.quad	_A__uRightRotate_param_i16_I
	.quad	_L_1+2909
	.quad	_A__uRightRotate_var_i16_I
	.quad	_L_1+2934
	.quad	_A__uLeftRotate_param_i32_C
	.quad	_L_1+2957
	.quad	_A__uLeftRotate_var_i32_C
	.quad	_L_1+2981
	.quad	_A__uLeftRotate_param_i32_I
	.quad	_L_1+3003
	.quad	_A__uLeftRotate_var_i32_I
	.quad	_L_1+3027
	.quad	_A__uLeftRotate_param_u16_C
	.quad	_L_1+3049
	.quad	_A__uLeftRotate_var_u16_C
	.quad	_L_1+3073
	.quad	_A__uLeftRotate_param_u16_I
	.quad	_L_1+3095
	.quad	_A__uLeftRotate_var_u16_I
	.quad	_L_1+3119
	.quad	_A__uLeftRotate_param_u64_C
	.quad	_L_1+3141
	.quad	_A__uLeftRotate_var_u64_C
	.quad	_L_1+3165
	.quad	_A__uLeftRotate_param_u64_I
	.quad	_L_1+3187
	.quad	_A__uLeftRotate_var_u64_I
	.quad	_L_1+3211
	.quad	_A__uLeftRotate_param_L_C
	.quad	_L_1+3233
	.quad	_A__uLeftRotate_var_L_C
	.quad	_L_1+3255
	.quad	_A__uLeftRotate_param_L_I
	.quad	_L_1+3275
	.quad	_A__uLeftRotate_var_L_I
	.quad	_L_1+3297
	.quad	_A__uLeftRotate_param_i8_C
	.quad	_L_1+3317
	.quad	_A__uLeftRotate_var_i8_C
	.quad	_L_1+3340
	.quad	_A__uLeftRotate_param_i8_I
	.quad	_L_1+3361
	.quad	_A__uLeftRotate_var_i8_I
	.quad	_L_1+3384
	.quad	_A__uLeftRotate_param_u32_C
	.quad	_L_1+3405
	.quad	_A__uLeftRotate_var_u32_C
	.quad	_L_1+3429
	.quad	_A__uLeftRotate_param_u32_I
	.quad	_L_1+3451
	.quad	_A__uLeftRotate_var_u32_I
	.quad	_L_1+3475
	.quad	_A__uLeftRotate_param_C_C
	.quad	_L_1+3497
	.quad	_A__uLeftRotate_var_C_C
	.quad	_L_1+3519
	.quad	_A__uLeftRotate_param_C_I
	.quad	_L_1+3539
	.quad	_A__uLeftRotate_var_C_I
	.quad	_L_1+3561
	.quad	_A__uLeftRotate_param_u8_C
	.quad	_L_1+3581
	.quad	_A__uLeftRotate_var_u8_C
	.quad	_L_1+3604
	.quad	_A__uLeftRotate_param_u8_I
	.quad	_L_1+3625
	.quad	_A__uLeftRotate_var_u8_I
	.quad	_L_1+3648
	.quad	_A__uLeftRotate_param_I_C
	.quad	_L_1+3669
	.quad	_A__uLeftRotate_var_I_C
	.quad	_L_1+3691
	.quad	_A__uLeftRotate_param_I_I
	.quad	_L_1+3711
	.quad	_A__uLeftRotate_var_I_I
	.quad	_L_1+3733
	.quad	_A__uLeftRotate_param_i64_C
	.quad	_L_1+3753
	.quad	_A__uLeftRotate_var_i64_C
	.quad	_L_1+3777
	.quad	_A__uLeftRotate_param_i64_I
	.quad	_L_1+3799
	.quad	_A__uLeftRotate_var_i64_I
	.quad	_L_1+3823
	.quad	_A__uLeftRotate_param_LC_C
	.quad	_L_1+3845
	.quad	_A__uLeftRotate_var_LC_C
	.quad	_L_1+3868
	.quad	_A__uLeftRotate_param_LC_I
	.quad	_L_1+3889
	.quad	_A__uLeftRotate_var_LC_I
	.quad	_L_1+3912
	.quad	_A__uLeftRotate_param_i16_C
	.quad	_L_1+3933
	.quad	_A__uLeftRotate_var_i16_C
	.quad	_L_1+3957
	.quad	_A__uLeftRotate_param_i16_I
	.quad	_L_1+3979
	.quad	_A__uLeftRotate_var_i16_I
	.quad	_L_1+4003
	.quad	_A__uShift_param_i32_C
	.quad	_L_1+4025
	.quad	_A__uShift_var_i32_C
	.quad	_L_1+4044
	.quad	_A__uShift_param_i32_I
	.quad	_L_1+4061
	.quad	_A__uShift_var_i32_I
	.quad	_L_1+4080
	.quad	_A__uShift_param_u16_C
	.quad	_L_1+4097
	.quad	_A__uShift_var_u16_C
	.quad	_L_1+4116
	.quad	_A__uShift_param_u16_I
	.quad	_L_1+4133
	.quad	_A__uShift_var_u16_I
	.quad	_L_1+4152
	.quad	_A__uShift_param_u64_C
	.quad	_L_1+4169
	.quad	_A__uShift_var_u64_C
	.quad	_L_1+4188
	.quad	_A__uShift_param_u64_I
	.quad	_L_1+4205
	.quad	_A__uShift_var_u64_I
	.quad	_L_1+4224
	.quad	_A__uShift_param_L_C
	.quad	_L_1+4241
	.quad	_A__uShift_var_L_C
	.quad	_L_1+4258
	.quad	_A__uShift_param_L_I
	.quad	_L_1+4273
	.quad	_A__uShift_var_L_I
	.quad	_L_1+4290
	.quad	_A__uShift_param_i8_C
	.quad	_L_1+4305
	.quad	_A__uShift_var_i8_C
	.quad	_L_1+4323
	.quad	_A__uShift_param_i8_I
	.quad	_L_1+4339
	.quad	_A__uShift_var_i8_I
	.quad	_L_1+4357
	.quad	_A__uShift_param_u32_C
	.quad	_L_1+4373
	.quad	_A__uShift_var_u32_C
	.quad	_L_1+4392
	.quad	_A__uShift_param_u32_I
	.quad	_L_1+4409
	.quad	_A__uShift_var_u32_I
	.quad	_L_1+4428
	.quad	_A__uShift_param_C_C
	.quad	_L_1+4445
	.quad	_A__uShift_var_C_C
	.quad	_L_1+4462
	.quad	_A__uShift_param_C_I
	.quad	_L_1+4477
	.quad	_A__uShift_var_C_I
	.quad	_L_1+4494
	.quad	_A__uShift_param_u8_C
	.quad	_L_1+4509
	.quad	_A__uShift_var_u8_C
	.quad	_L_1+4527
	.quad	_A__uShift_param_u8_I
	.quad	_L_1+4543
	.quad	_A__uShift_var_u8_I
	.quad	_L_1+4561
	.quad	_A__uShift_param_I_C
	.quad	_L_1+4577
	.quad	_A__uShift_var_I_C
	.quad	_L_1+4594
	.quad	_A__uShift_param_I_I
	.quad	_L_1+4609
	.quad	_A__uShift_var_I_I
	.quad	_L_1+4626
	.quad	_A__uShift_param_i64_C
	.quad	_L_1+4641
	.quad	_A__uShift_var_i64_C
	.quad	_L_1+4660
	.quad	_A__uShift_param_i64_I
	.quad	_L_1+4677
	.quad	_A__uShift_var_i64_I
	.quad	_L_1+4696
	.quad	_A__uShift_param_LC_C
	.quad	_L_1+4713
	.quad	_A__uShift_var_LC_C
	.quad	_L_1+4731
	.quad	_A__uShift_param_LC_I
	.quad	_L_1+4747
	.quad	_A__uShift_var_LC_I
	.quad	_L_1+4765
	.quad	_A__uShift_param_i16_C
	.quad	_L_1+4781
	.quad	_A__uShift_var_i16_C
	.quad	_L_1+4800
	.quad	_A__uShift_param_i16_I
	.quad	_L_1+4817
	.quad	_A__uShift_var_i16_I
	.quad	_L_1+4836
	.quad	_A__uRightShift_param_i32_C
	.quad	_L_1+4853
	.quad	_A__uRightShift_var_i32_C
	.quad	_L_1+4877
	.quad	_A__uRightShift_param_i32_I
	.quad	_L_1+4899
	.quad	_A__uRightShift_var_i32_I
	.quad	_L_1+4923
	.quad	_A__uRightShift_param_u16_C
	.quad	_L_1+4945
	.quad	_A__uRightShift_var_u16_C
	.quad	_L_1+4969
	.quad	_A__uRightShift_param_u16_I
	.quad	_L_1+4991
	.quad	_A__uRightShift_var_u16_I
	.quad	_L_1+5015
	.quad	_A__uRightShift_param_u64_C
	.quad	_L_1+5037
	.quad	_A__uRightShift_var_u64_C
	.quad	_L_1+5061
	.quad	_A__uRightShift_param_u64_I
	.quad	_L_1+5083
	.quad	_A__uRightShift_var_u64_I
	.quad	_L_1+5107
	.quad	_A__uRightShift_param_L_C
	.quad	_L_1+5129
	.quad	_A__uRightShift_var_L_C
	.quad	_L_1+5151
	.quad	_A__uRightShift_param_L_I
	.quad	_L_1+5171
	.quad	_A__uRightShift_var_L_I
	.quad	_L_1+5193
	.quad	_A__uRightShift_param_i8_C
	.quad	_L_1+5213
	.quad	_A__uRightShift_var_i8_C
	.quad	_L_1+5236
	.quad	_A__uRightShift_param_i8_I
	.quad	_L_1+5257
	.quad	_A__uRightShift_var_i8_I
	.quad	_L_1+5280
	.quad	_A__uRightShift_param_u32_C
	.quad	_L_1+5301
	.quad	_A__uRightShift_var_u32_C
	.quad	_L_1+5325
	.quad	_A__uRightShift_param_u32_I
	.quad	_L_1+5347
	.quad	_A__uRightShift_var_u32_I
	.quad	_L_1+5371
	.quad	_A__uRightShift_param_C_C
	.quad	_L_1+5393
	.quad	_A__uRightShift_var_C_C
	.quad	_L_1+5415
	.quad	_A__uRightShift_param_C_I
	.quad	_L_1+5435
	.quad	_A__uRightShift_var_C_I
	.quad	_L_1+5457
	.quad	_A__uRightShift_param_u8_C
	.quad	_L_1+5477
	.quad	_A__uRightShift_var_u8_C
	.quad	_L_1+5500
	.quad	_A__uRightShift_param_u8_I
	.quad	_L_1+5521
	.quad	_A__uRightShift_var_u8_I
	.quad	_L_1+5544
	.quad	_A__uRightShift_param_I_C
	.quad	_L_1+5565
	.quad	_A__uRightShift_var_I_C
	.quad	_L_1+5587
	.quad	_A__uRightShift_param_I_I
	.quad	_L_1+5607
	.quad	_A__uRightShift_var_I_I
	.quad	_L_1+5629
	.quad	_A__uRightShift_param_i64_C
	.quad	_L_1+5649
	.quad	_A__uRightShift_var_i64_C
	.quad	_L_1+5673
	.quad	_A__uRightShift_param_i64_I
	.quad	_L_1+5695
	.quad	_A__uRightShift_var_i64_I
	.quad	_L_1+5719
	.quad	_A__uRightShift_param_LC_C
	.quad	_L_1+5741
	.quad	_A__uRightShift_var_LC_C
	.quad	_L_1+5764
	.quad	_A__uRightShift_param_LC_I
	.quad	_L_1+5785
	.quad	_A__uRightShift_var_LC_I
	.quad	_L_1+5808
	.quad	_A__uRightShift_param_i16_C
	.quad	_L_1+5829
	.quad	_A__uRightShift_var_i16_C
	.quad	_L_1+5853
	.quad	_A__uRightShift_param_i16_I
	.quad	_L_1+5875
	.quad	_A__uRightShift_var_i16_I
	.quad	_L_1+5899
	.quad	_A__uLeftShift_param_i32_C
	.quad	_L_1+5921
	.quad	_A__uLeftShift_var_i32_C
	.quad	_L_1+5944
	.quad	_A__uLeftShift_param_i32_I
	.quad	_L_1+5965
	.quad	_A__uLeftShift_var_i32_I
	.quad	_L_1+5988
	.quad	_A__uLeftShift_param_u16_C
	.quad	_L_1+6009
	.quad	_A__uLeftShift_var_u16_C
	.quad	_L_1+6032
	.quad	_A__uLeftShift_param_u16_I
	.quad	_L_1+6053
	.quad	_A__uLeftShift_var_u16_I
	.quad	_L_1+6076
	.quad	_A__uLeftShift_param_u64_C
	.quad	_L_1+6097
	.quad	_A__uLeftShift_var_u64_C
	.quad	_L_1+6120
	.quad	_A__uLeftShift_param_u64_I
	.quad	_L_1+6141
	.quad	_A__uLeftShift_var_u64_I
	.quad	_L_1+6164
	.quad	_A__uLeftShift_param_L_C
	.quad	_L_1+6185
	.quad	_A__uLeftShift_var_L_C
	.quad	_L_1+6206
	.quad	_A__uLeftShift_param_L_I
	.quad	_L_1+6225
	.quad	_A__uLeftShift_var_L_I
	.quad	_L_1+6246
	.quad	_A__uLeftShift_param_i8_C
	.quad	_L_1+6265
	.quad	_A__uLeftShift_var_i8_C
	.quad	_L_1+6287
	.quad	_A__uLeftShift_param_i8_I
	.quad	_L_1+6307
	.quad	_A__uLeftShift_var_i8_I
	.quad	_L_1+6329
	.quad	_A__uLeftShift_param_u32_C
	.quad	_L_1+6349
	.quad	_A__uLeftShift_var_u32_C
	.quad	_L_1+6372
	.quad	_A__uLeftShift_param_u32_I
	.quad	_L_1+6393
	.quad	_A__uLeftShift_var_u32_I
	.quad	_L_1+6416
	.quad	_A__uLeftShift_param_C_C
	.quad	_L_1+6437
	.quad	_A__uLeftShift_var_C_C
	.quad	_L_1+6458
	.quad	_A__uLeftShift_param_C_I
	.quad	_L_1+6477
	.quad	_A__uLeftShift_var_C_I
	.quad	_L_1+6498
	.quad	_A__uLeftShift_param_u8_C
	.quad	_L_1+6517
	.quad	_A__uLeftShift_var_u8_C
	.quad	_L_1+6539
	.quad	_A__uLeftShift_param_u8_I
	.quad	_L_1+6559
	.quad	_A__uLeftShift_var_u8_I
	.quad	_L_1+6581
	.quad	_A__uLeftShift_param_I_C
	.quad	_L_1+6601
	.quad	_A__uLeftShift_var_I_C
	.quad	_L_1+6622
	.quad	_A__uLeftShift_param_I_I
	.quad	_L_1+6641
	.quad	_A__uLeftShift_var_I_I
	.quad	_L_1+6662
	.quad	_A__uLeftShift_param_i64_C
	.quad	_L_1+6681
	.quad	_A__uLeftShift_var_i64_C
	.quad	_L_1+6704
	.quad	_A__uLeftShift_param_i64_I
	.quad	_L_1+6725
	.quad	_A__uLeftShift_var_i64_I
	.quad	_L_1+6748
	.quad	_A__uLeftShift_param_LC_C
	.quad	_L_1+6769
	.quad	_A__uLeftShift_var_LC_C
	.quad	_L_1+6791
	.quad	_A__uLeftShift_param_LC_I
	.quad	_L_1+6811
	.quad	_A__uLeftShift_var_LC_I
	.quad	_L_1+6833
	.quad	_A__uLeftShift_param_i16_C
	.quad	_L_1+6853
	.quad	_A__uLeftShift_var_i16_C
	.quad	_L_1+6876
	.quad	_A__uLeftShift_param_i16_I
	.quad	_L_1+6897
	.quad	_A__uLeftShift_var_i16_I
	.quad	_L_1+6920
	.quad	_A__Not_param_i32_i32
	.quad	_L_1+6941
	.quad	_A__uNot_param_i32_i32
	.quad	_L_1+6959
	.quad	_A__Not_var_i32_i32
	.quad	_L_1+6978
	.quad	_A__uNot_var_i32_i32
	.quad	_L_1+6994
	.quad	_A__Not_param_u16_u16
	.quad	_L_1+7011
	.quad	_A__uNot_param_u16_u16
	.quad	_L_1+7029
	.quad	_A__Not_var_u16_u16
	.quad	_L_1+7048
	.quad	_A__uNot_var_u16_u16
	.quad	_L_1+7064
	.quad	_A__Not_param_u64_u64
	.quad	_L_1+7081
	.quad	_A__uNot_param_u64_u64
	.quad	_L_1+7099
	.quad	_A__Not_var_u64_u64
	.quad	_L_1+7118
	.quad	_A__uNot_var_u64_u64
	.quad	_L_1+7134
	.quad	_A__Not_param_L_L
	.quad	_L_1+7151
	.quad	_A__uNot_param_L_L
	.quad	_L_1+7165
	.quad	_A__Not_var_L_L
	.quad	_L_1+7180
	.quad	_A__uNot_var_L_L
	.quad	_L_1+7192
	.quad	_A__Not_param_i8_i8
	.quad	_L_1+7205
	.quad	_A__uNot_param_i8_i8
	.quad	_L_1+7221
	.quad	_A__Not_var_i8_i8
	.quad	_L_1+7238
	.quad	_A__uNot_var_i8_i8
	.quad	_L_1+7252
	.quad	_A__Not_param_u32_u32
	.quad	_L_1+7267
	.quad	_A__uNot_param_u32_u32
	.quad	_L_1+7285
	.quad	_A__Not_var_u32_u32
	.quad	_L_1+7304
	.quad	_A__uNot_var_u32_u32
	.quad	_L_1+7320
	.quad	_A__Not_param_f32_f32
	.quad	_L_1+7337
	.quad	_A__Not_var_f32_f32
	.quad	_L_1+7355
	.quad	_A__Not_param_C_C
	.quad	_L_1+7371
	.quad	_A__uNot_param_C_C
	.quad	_L_1+7385
	.quad	_A__Not_var_C_C
	.quad	_L_1+7400
	.quad	_A__uNot_var_C_C
	.quad	_L_1+7412
	.quad	_A__Not_param_u8_u8
	.quad	_L_1+7425
	.quad	_A__uNot_param_u8_u8
	.quad	_L_1+7441
	.quad	_A__Not_var_u8_u8
	.quad	_L_1+7458
	.quad	_A__uNot_var_u8_u8
	.quad	_L_1+7472
	.quad	_A__Not_param_I_I
	.quad	_L_1+7487
	.quad	_A__uNot_param_I_I
	.quad	_L_1+7501
	.quad	_A__Not_var_I_I
	.quad	_L_1+7516
	.quad	_A__uNot_var_I_I
	.quad	_L_1+7528
	.quad	_A__Not_param_i64_i64
	.quad	_L_1+7541
	.quad	_A__uNot_param_i64_i64
	.quad	_L_1+7559
	.quad	_A__Not_var_i64_i64
	.quad	_L_1+7578
	.quad	_A__uNot_var_i64_i64
	.quad	_L_1+7594
	.quad	_A__Not_param_f64_f64
	.quad	_L_1+7611
	.quad	_A__Not_var_f64_f64
	.quad	_L_1+7629
	.quad	_A__Not_param_LC_LC
	.quad	_L_1+7645
	.quad	_A__uNot_param_LC_LC
	.quad	_L_1+7661
	.quad	_A__Not_var_LC_LC
	.quad	_L_1+7678
	.quad	_A__uNot_var_LC_LC
	.quad	_L_1+7692
	.quad	_A__Not_param_i16_i16
	.quad	_L_1+7707
	.quad	_A__uNot_param_i16_i16
	.quad	_L_1+7725
	.quad	_A__Not_var_i16_i16
	.quad	_L_1+7744
	.quad	_A__uNot_var_i16_i16
	.quad	_L_1+7760
	.quad	_A__NE_param_i32_i32
	.quad	_L_1+7777
	.quad	_A__NE_var_i32_i32
	.quad	_L_1+7794
	.quad	_A__NE_param_i32_u16
	.quad	_L_1+7809
	.quad	_A__NE_var_i32_u16
	.quad	_L_1+7826
	.quad	_A__NE_param_i32_u64
	.quad	_L_1+7841
	.quad	_A__NE_var_i32_u64
	.quad	_L_1+7858
	.quad	_A__NE_param_i32_L
	.quad	_L_1+7873
	.quad	_A__NE_var_i32_L
	.quad	_L_1+7888
	.quad	_A__NE_param_i32_i8
	.quad	_L_1+7901
	.quad	_A__NE_var_i32_i8
	.quad	_L_1+7917
	.quad	_A__NE_param_i32_u32
	.quad	_L_1+7931
	.quad	_A__NE_var_i32_u32
	.quad	_L_1+7948
	.quad	_A__NE_param_i32_C
	.quad	_L_1+7963
	.quad	_A__NE_var_i32_C
	.quad	_L_1+7978
	.quad	_A__NE_param_i32_u8
	.quad	_L_1+7991
	.quad	_A__NE_var_i32_u8
	.quad	_L_1+8007
	.quad	_A__NE_param_i32_I
	.quad	_L_1+8021
	.quad	_A__NE_var_i32_I
	.quad	_L_1+8036
	.quad	_A__NE_param_i32_i64
	.quad	_L_1+8049
	.quad	_A__NE_var_i32_i64
	.quad	_L_1+8066
	.quad	_A__NE_param_i32_LC
	.quad	_L_1+8081
	.quad	_A__NE_var_i32_LC
	.quad	_L_1+8097
	.quad	_A__NE_param_i32_i16
	.quad	_L_1+8111
	.quad	_A__NE_var_i32_i16
	.quad	_L_1+8128
	.quad	_A__NE_param_u16_i32
	.quad	_L_1+8143
	.quad	_A__NE_var_u16_i32
	.quad	_L_1+8160
	.quad	_A__NE_param_u16_u16
	.quad	_L_1+8175
	.quad	_A__NE_var_u16_u16
	.quad	_L_1+8192
	.quad	_A__NE_param_u16_u64
	.quad	_L_1+8207
	.quad	_A__NE_var_u16_u64
	.quad	_L_1+8224
	.quad	_A__NE_param_u16_L
	.quad	_L_1+8239
	.quad	_A__NE_var_u16_L
	.quad	_L_1+8254
	.quad	_A__NE_param_u16_i8
	.quad	_L_1+8267
	.quad	_A__NE_var_u16_i8
	.quad	_L_1+8283
	.quad	_A__NE_param_u16_u32
	.quad	_L_1+8297
	.quad	_A__NE_var_u16_u32
	.quad	_L_1+8314
	.quad	_A__NE_param_u16_C
	.quad	_L_1+8329
	.quad	_A__NE_var_u16_C
	.quad	_L_1+8344
	.quad	_A__NE_param_u16_u8
	.quad	_L_1+8357
	.quad	_A__NE_var_u16_u8
	.quad	_L_1+8373
	.quad	_A__NE_param_u16_I
	.quad	_L_1+8387
	.quad	_A__NE_var_u16_I
	.quad	_L_1+8402
	.quad	_A__NE_param_u16_i64
	.quad	_L_1+8415
	.quad	_A__NE_var_u16_i64
	.quad	_L_1+8432
	.quad	_A__NE_param_u16_LC
	.quad	_L_1+8447
	.quad	_A__NE_var_u16_LC
	.quad	_L_1+8463
	.quad	_A__NE_param_u16_i16
	.quad	_L_1+8477
	.quad	_A__NE_var_u16_i16
	.quad	_L_1+8494
	.quad	_A__NE_param_u64_i32
	.quad	_L_1+8509
	.quad	_A__NE_var_u64_i32
	.quad	_L_1+8526
	.quad	_A__NE_param_u64_u16
	.quad	_L_1+8541
	.quad	_A__NE_var_u64_u16
	.quad	_L_1+8558
	.quad	_A__NE_param_u64_u64
	.quad	_L_1+8573
	.quad	_A__NE_var_u64_u64
	.quad	_L_1+8590
	.quad	_A__NE_param_u64_L
	.quad	_L_1+8605
	.quad	_A__NE_var_u64_L
	.quad	_L_1+8620
	.quad	_A__NE_param_u64_i8
	.quad	_L_1+8633
	.quad	_A__NE_var_u64_i8
	.quad	_L_1+8649
	.quad	_A__NE_param_u64_u32
	.quad	_L_1+8663
	.quad	_A__NE_var_u64_u32
	.quad	_L_1+8680
	.quad	_A__NE_param_u64_C
	.quad	_L_1+8695
	.quad	_A__NE_var_u64_C
	.quad	_L_1+8710
	.quad	_A__NE_param_u64_u8
	.quad	_L_1+8723
	.quad	_A__NE_var_u64_u8
	.quad	_L_1+8739
	.quad	_A__NE_param_u64_I
	.quad	_L_1+8753
	.quad	_A__NE_var_u64_I
	.quad	_L_1+8768
	.quad	_A__NE_param_u64_i64
	.quad	_L_1+8781
	.quad	_A__NE_var_u64_i64
	.quad	_L_1+8798
	.quad	_A__NE_param_u64_LC
	.quad	_L_1+8813
	.quad	_A__NE_var_u64_LC
	.quad	_L_1+8829
	.quad	_A__NE_param_u64_i16
	.quad	_L_1+8843
	.quad	_A__NE_var_u64_i16
	.quad	_L_1+8860
	.quad	_A__NE_param_L_i32
	.quad	_L_1+8875
	.quad	_A__NE_var_L_i32
	.quad	_L_1+8890
	.quad	_A__NE_param_L_u16
	.quad	_L_1+8903
	.quad	_A__NE_var_L_u16
	.quad	_L_1+8918
	.quad	_A__NE_param_L_u64
	.quad	_L_1+8931
	.quad	_A__NE_var_L_u64
	.quad	_L_1+8946
	.quad	_A__NE_param_L_L
	.quad	_L_1+8959
	.quad	_A__NE_var_L_L
	.quad	_L_1+8972
	.quad	_A__NE_param_L_i8
	.quad	_L_1+8983
	.quad	_A__NE_var_L_i8
	.quad	_L_1+8997
	.quad	_A__NE_param_L_u32
	.quad	_L_1+9009
	.quad	_A__NE_var_L_u32
	.quad	_L_1+9024
	.quad	_A__NE_param_L_C
	.quad	_L_1+9037
	.quad	_A__NE_var_L_C
	.quad	_L_1+9050
	.quad	_A__NE_param_L_u8
	.quad	_L_1+9061
	.quad	_A__NE_var_L_u8
	.quad	_L_1+9075
	.quad	_A__NE_param_L_I
	.quad	_L_1+9087
	.quad	_A__NE_var_L_I
	.quad	_L_1+9100
	.quad	_A__NE_param_L_i64
	.quad	_L_1+9111
	.quad	_A__NE_var_L_i64
	.quad	_L_1+9126
	.quad	_A__NE_param_L_LC
	.quad	_L_1+9139
	.quad	_A__NE_var_L_LC
	.quad	_L_1+9153
	.quad	_A__NE_param_L_i16
	.quad	_L_1+9165
	.quad	_A__NE_var_L_i16
	.quad	_L_1+9180
	.quad	_A__NE_param_i8_i32
	.quad	_L_1+9193
	.quad	_A__NE_var_i8_i32
	.quad	_L_1+9209
	.quad	_A__NE_param_i8_u16
	.quad	_L_1+9223
	.quad	_A__NE_var_i8_u16
	.quad	_L_1+9239
	.quad	_A__NE_param_i8_u64
	.quad	_L_1+9253
	.quad	_A__NE_var_i8_u64
	.quad	_L_1+9269
	.quad	_A__NE_param_i8_L
	.quad	_L_1+9283
	.quad	_A__NE_var_i8_L
	.quad	_L_1+9297
	.quad	_A__NE_param_i8_i8
	.quad	_L_1+9309
	.quad	_A__NE_var_i8_i8
	.quad	_L_1+9324
	.quad	_A__NE_param_i8_u32
	.quad	_L_1+9337
	.quad	_A__NE_var_i8_u32
	.quad	_L_1+9353
	.quad	_A__NE_param_i8_C
	.quad	_L_1+9367
	.quad	_A__NE_var_i8_C
	.quad	_L_1+9381
	.quad	_A__NE_param_i8_u8
	.quad	_L_1+9393
	.quad	_A__NE_var_i8_u8
	.quad	_L_1+9408
	.quad	_A__NE_param_i8_I
	.quad	_L_1+9421
	.quad	_A__NE_var_i8_I
	.quad	_L_1+9435
	.quad	_A__NE_param_i8_i64
	.quad	_L_1+9447
	.quad	_A__NE_var_i8_i64
	.quad	_L_1+9463
	.quad	_A__NE_param_i8_LC
	.quad	_L_1+9477
	.quad	_A__NE_var_i8_LC
	.quad	_L_1+9492
	.quad	_A__NE_param_i8_i16
	.quad	_L_1+9505
	.quad	_A__NE_var_i8_i16
	.quad	_L_1+9521
	.quad	_A__NE_param_u32_i32
	.quad	_L_1+9535
	.quad	_A__NE_var_u32_i32
	.quad	_L_1+9552
	.quad	_A__NE_param_u32_u16
	.quad	_L_1+9567
	.quad	_A__NE_var_u32_u16
	.quad	_L_1+9584
	.quad	_A__NE_param_u32_u64
	.quad	_L_1+9599
	.quad	_A__NE_var_u32_u64
	.quad	_L_1+9616
	.quad	_A__NE_param_u32_L
	.quad	_L_1+9631
	.quad	_A__NE_var_u32_L
	.quad	_L_1+9646
	.quad	_A__NE_param_u32_i8
	.quad	_L_1+9659
	.quad	_A__NE_var_u32_i8
	.quad	_L_1+9675
	.quad	_A__NE_param_u32_u32
	.quad	_L_1+9689
	.quad	_A__NE_var_u32_u32
	.quad	_L_1+9706
	.quad	_A__NE_param_u32_C
	.quad	_L_1+9721
	.quad	_A__NE_var_u32_C
	.quad	_L_1+9736
	.quad	_A__NE_param_u32_u8
	.quad	_L_1+9749
	.quad	_A__NE_var_u32_u8
	.quad	_L_1+9765
	.quad	_A__NE_param_u32_I
	.quad	_L_1+9779
	.quad	_A__NE_var_u32_I
	.quad	_L_1+9794
	.quad	_A__NE_param_u32_i64
	.quad	_L_1+9807
	.quad	_A__NE_var_u32_i64
	.quad	_L_1+9824
	.quad	_A__NE_param_u32_LC
	.quad	_L_1+9839
	.quad	_A__NE_var_u32_LC
	.quad	_L_1+9855
	.quad	_A__NE_param_u32_i16
	.quad	_L_1+9869
	.quad	_A__NE_var_u32_i16
	.quad	_L_1+9886
	.quad	_A__NE_param_f32_f32
	.quad	_L_1+9901
	.quad	_A__NE_var_f32_f32
	.quad	_L_1+9918
	.quad	_A__NE_param_C_i32
	.quad	_L_1+9933
	.quad	_A__NE_var_C_i32
	.quad	_L_1+9948
	.quad	_A__NE_param_C_u16
	.quad	_L_1+9961
	.quad	_A__NE_var_C_u16
	.quad	_L_1+9976
	.quad	_A__NE_param_C_u64
	.quad	_L_1+9989
	.quad	_A__NE_var_C_u64
	.quad	_L_1+10004
	.quad	_A__NE_param_C_L
	.quad	_L_1+10017
	.quad	_A__NE_var_C_L
	.quad	_L_1+10030
	.quad	_A__NE_param_C_i8
	.quad	_L_1+10041
	.quad	_A__NE_var_C_i8
	.quad	_L_1+10055
	.quad	_A__NE_param_C_u32
	.quad	_L_1+10067
	.quad	_A__NE_var_C_u32
	.quad	_L_1+10082
	.quad	_A__NE_param_C_C
	.quad	_L_1+10095
	.quad	_A__NE_var_C_C
	.quad	_L_1+10108
	.quad	_A__NE_param_C_u8
	.quad	_L_1+10119
	.quad	_A__NE_var_C_u8
	.quad	_L_1+10133
	.quad	_A__NE_param_C_I
	.quad	_L_1+10145
	.quad	_A__NE_var_C_I
	.quad	_L_1+10158
	.quad	_A__NE_param_C_i64
	.quad	_L_1+10169
	.quad	_A__NE_var_C_i64
	.quad	_L_1+10184
	.quad	_A__NE_param_C_LC
	.quad	_L_1+10197
	.quad	_A__NE_var_C_LC
	.quad	_L_1+10211
	.quad	_A__NE_param_C_i16
	.quad	_L_1+10223
	.quad	_A__NE_var_C_i16
	.quad	_L_1+10238
	.quad	_A__NE_param_u8_i32
	.quad	_L_1+10251
	.quad	_A__NE_var_u8_i32
	.quad	_L_1+10267
	.quad	_A__NE_param_u8_u16
	.quad	_L_1+10281
	.quad	_A__NE_var_u8_u16
	.quad	_L_1+10297
	.quad	_A__NE_param_u8_u64
	.quad	_L_1+10311
	.quad	_A__NE_var_u8_u64
	.quad	_L_1+10327
	.quad	_A__NE_param_u8_L
	.quad	_L_1+10341
	.quad	_A__NE_var_u8_L
	.quad	_L_1+10355
	.quad	_A__NE_param_u8_i8
	.quad	_L_1+10367
	.quad	_A__NE_var_u8_i8
	.quad	_L_1+10382
	.quad	_A__NE_param_u8_u32
	.quad	_L_1+10395
	.quad	_A__NE_var_u8_u32
	.quad	_L_1+10411
	.quad	_A__NE_param_u8_C
	.quad	_L_1+10425
	.quad	_A__NE_var_u8_C
	.quad	_L_1+10439
	.quad	_A__NE_param_u8_u8
	.quad	_L_1+10451
	.quad	_A__NE_var_u8_u8
	.quad	_L_1+10466
	.quad	_A__NE_param_u8_I
	.quad	_L_1+10479
	.quad	_A__NE_var_u8_I
	.quad	_L_1+10493
	.quad	_A__NE_param_u8_i64
	.quad	_L_1+10505
	.quad	_A__NE_var_u8_i64
	.quad	_L_1+10521
	.quad	_A__NE_param_u8_LC
	.quad	_L_1+10535
	.quad	_A__NE_var_u8_LC
	.quad	_L_1+10550
	.quad	_A__NE_param_u8_i16
	.quad	_L_1+10563
	.quad	_A__NE_var_u8_i16
	.quad	_L_1+10579
	.quad	_A__NE_param_I_i32
	.quad	_L_1+10593
	.quad	_A__NE_var_I_i32
	.quad	_L_1+10608
	.quad	_A__NE_param_I_u16
	.quad	_L_1+10621
	.quad	_A__NE_var_I_u16
	.quad	_L_1+10636
	.quad	_A__NE_param_I_u64
	.quad	_L_1+10649
	.quad	_A__NE_var_I_u64
	.quad	_L_1+10664
	.quad	_A__NE_param_I_L
	.quad	_L_1+10677
	.quad	_A__NE_var_I_L
	.quad	_L_1+10690
	.quad	_A__NE_param_I_i8
	.quad	_L_1+10701
	.quad	_A__NE_var_I_i8
	.quad	_L_1+10715
	.quad	_A__NE_param_I_u32
	.quad	_L_1+10727
	.quad	_A__NE_var_I_u32
	.quad	_L_1+10742
	.quad	_A__NE_param_I_C
	.quad	_L_1+10755
	.quad	_A__NE_var_I_C
	.quad	_L_1+10768
	.quad	_A__NE_param_I_u8
	.quad	_L_1+10779
	.quad	_A__NE_var_I_u8
	.quad	_L_1+10793
	.quad	_A__NE_param_I_I
	.quad	_L_1+10805
	.quad	_A__NE_var_I_I
	.quad	_L_1+10818
	.quad	_A__NE_param_I_i64
	.quad	_L_1+10829
	.quad	_A__NE_var_I_i64
	.quad	_L_1+10844
	.quad	_A__NE_param_I_LC
	.quad	_L_1+10857
	.quad	_A__NE_var_I_LC
	.quad	_L_1+10871
	.quad	_A__NE_param_I_i16
	.quad	_L_1+10883
	.quad	_A__NE_var_I_i16
	.quad	_L_1+10898
	.quad	_A__NE_param_i64_i32
	.quad	_L_1+10911
	.quad	_A__NE_var_i64_i32
	.quad	_L_1+10928
	.quad	_A__NE_param_i64_u16
	.quad	_L_1+10943
	.quad	_A__NE_var_i64_u16
	.quad	_L_1+10960
	.quad	_A__NE_param_i64_u64
	.quad	_L_1+10975
	.quad	_A__NE_var_i64_u64
	.quad	_L_1+10992
	.quad	_A__NE_param_i64_L
	.quad	_L_1+11007
	.quad	_A__NE_var_i64_L
	.quad	_L_1+11022
	.quad	_A__NE_param_i64_i8
	.quad	_L_1+11035
	.quad	_A__NE_var_i64_i8
	.quad	_L_1+11051
	.quad	_A__NE_param_i64_u32
	.quad	_L_1+11065
	.quad	_A__NE_var_i64_u32
	.quad	_L_1+11082
	.quad	_A__NE_param_i64_C
	.quad	_L_1+11097
	.quad	_A__NE_var_i64_C
	.quad	_L_1+11112
	.quad	_A__NE_param_i64_u8
	.quad	_L_1+11125
	.quad	_A__NE_var_i64_u8
	.quad	_L_1+11141
	.quad	_A__NE_param_i64_I
	.quad	_L_1+11155
	.quad	_A__NE_var_i64_I
	.quad	_L_1+11170
	.quad	_A__NE_param_i64_i64
	.quad	_L_1+11183
	.quad	_A__NE_var_i64_i64
	.quad	_L_1+11200
	.quad	_A__NE_param_i64_LC
	.quad	_L_1+11215
	.quad	_A__NE_var_i64_LC
	.quad	_L_1+11231
	.quad	_A__NE_param_i64_i16
	.quad	_L_1+11245
	.quad	_A__NE_var_i64_i16
	.quad	_L_1+11262
	.quad	_A__NE_param_f64_f64
	.quad	_L_1+11277
	.quad	_A__NE_var_f64_f64
	.quad	_L_1+11294
	.quad	_A__NE_param_LC_i32
	.quad	_L_1+11309
	.quad	_A__NE_var_LC_i32
	.quad	_L_1+11325
	.quad	_A__NE_param_LC_u16
	.quad	_L_1+11339
	.quad	_A__NE_var_LC_u16
	.quad	_L_1+11355
	.quad	_A__NE_param_LC_u64
	.quad	_L_1+11369
	.quad	_A__NE_var_LC_u64
	.quad	_L_1+11385
	.quad	_A__NE_param_LC_L
	.quad	_L_1+11399
	.quad	_A__NE_var_LC_L
	.quad	_L_1+11413
	.quad	_A__NE_param_LC_i8
	.quad	_L_1+11425
	.quad	_A__NE_var_LC_i8
	.quad	_L_1+11440
	.quad	_A__NE_param_LC_u32
	.quad	_L_1+11453
	.quad	_A__NE_var_LC_u32
	.quad	_L_1+11469
	.quad	_A__NE_param_LC_C
	.quad	_L_1+11483
	.quad	_A__NE_var_LC_C
	.quad	_L_1+11497
	.quad	_A__NE_param_LC_u8
	.quad	_L_1+11509
	.quad	_A__NE_var_LC_u8
	.quad	_L_1+11524
	.quad	_A__NE_param_LC_I
	.quad	_L_1+11537
	.quad	_A__NE_var_LC_I
	.quad	_L_1+11551
	.quad	_A__NE_param_LC_i64
	.quad	_L_1+11563
	.quad	_A__NE_var_LC_i64
	.quad	_L_1+11579
	.quad	_A__NE_param_LC_LC
	.quad	_L_1+11593
	.quad	_A__NE_var_LC_LC
	.quad	_L_1+11608
	.quad	_A__NE_param_LC_i16
	.quad	_L_1+11621
	.quad	_A__NE_var_LC_i16
	.quad	_L_1+11637
	.quad	_A__NE_param_i16_i32
	.quad	_L_1+11651
	.quad	_A__NE_var_i16_i32
	.quad	_L_1+11668
	.quad	_A__NE_param_i16_u16
	.quad	_L_1+11683
	.quad	_A__NE_var_i16_u16
	.quad	_L_1+11700
	.quad	_A__NE_param_i16_u64
	.quad	_L_1+11715
	.quad	_A__NE_var_i16_u64
	.quad	_L_1+11732
	.quad	_A__NE_param_i16_L
	.quad	_L_1+11747
	.quad	_A__NE_var_i16_L
	.quad	_L_1+11762
	.quad	_A__NE_param_i16_i8
	.quad	_L_1+11775
	.quad	_A__NE_var_i16_i8
	.quad	_L_1+11791
	.quad	_A__NE_param_i16_u32
	.quad	_L_1+11805
	.quad	_A__NE_var_i16_u32
	.quad	_L_1+11822
	.quad	_A__NE_param_i16_C
	.quad	_L_1+11837
	.quad	_A__NE_var_i16_C
	.quad	_L_1+11852
	.quad	_A__NE_param_i16_u8
	.quad	_L_1+11865
	.quad	_A__NE_var_i16_u8
	.quad	_L_1+11881
	.quad	_A__NE_param_i16_I
	.quad	_L_1+11895
	.quad	_A__NE_var_i16_I
	.quad	_L_1+11910
	.quad	_A__NE_param_i16_i64
	.quad	_L_1+11923
	.quad	_A__NE_var_i16_i64
	.quad	_L_1+11940
	.quad	_A__NE_param_i16_LC
	.quad	_L_1+11955
	.quad	_A__NE_var_i16_LC
	.quad	_L_1+11971
	.quad	_A__NE_param_i16_i16
	.quad	_L_1+11985
	.quad	_A__NE_var_i16_i16
	.quad	_L_1+12002
	.quad	_A__EQ_param_i32_i32
	.quad	_L_1+12017
	.quad	_A__EQ_var_i32_i32
	.quad	_L_1+12034
	.quad	_A__EQ_param_i32_u16
	.quad	_L_1+12049
	.quad	_A__EQ_var_i32_u16
	.quad	_L_1+12066
	.quad	_A__EQ_param_i32_u64
	.quad	_L_1+12081
	.quad	_A__EQ_var_i32_u64
	.quad	_L_1+12098
	.quad	_A__EQ_param_i32_L
	.quad	_L_1+12113
	.quad	_A__EQ_var_i32_L
	.quad	_L_1+12128
	.quad	_A__EQ_param_i32_i8
	.quad	_L_1+12141
	.quad	_A__EQ_var_i32_i8
	.quad	_L_1+12157
	.quad	_A__EQ_param_i32_u32
	.quad	_L_1+12171
	.quad	_A__EQ_var_i32_u32
	.quad	_L_1+12188
	.quad	_A__EQ_param_i32_C
	.quad	_L_1+12203
	.quad	_A__EQ_var_i32_C
	.quad	_L_1+12218
	.quad	_A__EQ_param_i32_u8
	.quad	_L_1+12231
	.quad	_A__EQ_var_i32_u8
	.quad	_L_1+12247
	.quad	_A__EQ_param_i32_I
	.quad	_L_1+12261
	.quad	_A__EQ_var_i32_I
	.quad	_L_1+12276
	.quad	_A__EQ_param_i32_i64
	.quad	_L_1+12289
	.quad	_A__EQ_var_i32_i64
	.quad	_L_1+12306
	.quad	_A__EQ_param_i32_LC
	.quad	_L_1+12321
	.quad	_A__EQ_var_i32_LC
	.quad	_L_1+12337
	.quad	_A__EQ_param_i32_i16
	.quad	_L_1+12351
	.quad	_A__EQ_var_i32_i16
	.quad	_L_1+12368
	.quad	_A__EQ_param_u16_i32
	.quad	_L_1+12383
	.quad	_A__EQ_var_u16_i32
	.quad	_L_1+12400
	.quad	_A__EQ_param_u16_u16
	.quad	_L_1+12415
	.quad	_A__EQ_var_u16_u16
	.quad	_L_1+12432
	.quad	_A__EQ_param_u16_u64
	.quad	_L_1+12447
	.quad	_A__EQ_var_u16_u64
	.quad	_L_1+12464
	.quad	_A__EQ_param_u16_L
	.quad	_L_1+12479
	.quad	_A__EQ_var_u16_L
	.quad	_L_1+12494
	.quad	_A__EQ_param_u16_i8
	.quad	_L_1+12507
	.quad	_A__EQ_var_u16_i8
	.quad	_L_1+12523
	.quad	_A__EQ_param_u16_u32
	.quad	_L_1+12537
	.quad	_A__EQ_var_u16_u32
	.quad	_L_1+12554
	.quad	_A__EQ_param_u16_C
	.quad	_L_1+12569
	.quad	_A__EQ_var_u16_C
	.quad	_L_1+12584
	.quad	_A__EQ_param_u16_u8
	.quad	_L_1+12597
	.quad	_A__EQ_var_u16_u8
	.quad	_L_1+12613
	.quad	_A__EQ_param_u16_I
	.quad	_L_1+12627
	.quad	_A__EQ_var_u16_I
	.quad	_L_1+12642
	.quad	_A__EQ_param_u16_i64
	.quad	_L_1+12655
	.quad	_A__EQ_var_u16_i64
	.quad	_L_1+12672
	.quad	_A__EQ_param_u16_LC
	.quad	_L_1+12687
	.quad	_A__EQ_var_u16_LC
	.quad	_L_1+12703
	.quad	_A__EQ_param_u16_i16
	.quad	_L_1+12717
	.quad	_A__EQ_var_u16_i16
	.quad	_L_1+12734
	.quad	_A__EQ_param_u64_i32
	.quad	_L_1+12749
	.quad	_A__EQ_var_u64_i32
	.quad	_L_1+12766
	.quad	_A__EQ_param_u64_u16
	.quad	_L_1+12781
	.quad	_A__EQ_var_u64_u16
	.quad	_L_1+12798
	.quad	_A__EQ_param_u64_u64
	.quad	_L_1+12813
	.quad	_A__EQ_var_u64_u64
	.quad	_L_1+12830
	.quad	_A__EQ_param_u64_L
	.quad	_L_1+12845
	.quad	_A__EQ_var_u64_L
	.quad	_L_1+12860
	.quad	_A__EQ_param_u64_i8
	.quad	_L_1+12873
	.quad	_A__EQ_var_u64_i8
	.quad	_L_1+12889
	.quad	_A__EQ_param_u64_u32
	.quad	_L_1+12903
	.quad	_A__EQ_var_u64_u32
	.quad	_L_1+12920
	.quad	_A__EQ_param_u64_C
	.quad	_L_1+12935
	.quad	_A__EQ_var_u64_C
	.quad	_L_1+12950
	.quad	_A__EQ_param_u64_u8
	.quad	_L_1+12963
	.quad	_A__EQ_var_u64_u8
	.quad	_L_1+12979
	.quad	_A__EQ_param_u64_I
	.quad	_L_1+12993
	.quad	_A__EQ_var_u64_I
	.quad	_L_1+13008
	.quad	_A__EQ_param_u64_i64
	.quad	_L_1+13021
	.quad	_A__EQ_var_u64_i64
	.quad	_L_1+13038
	.quad	_A__EQ_param_u64_LC
	.quad	_L_1+13053
	.quad	_A__EQ_var_u64_LC
	.quad	_L_1+13069
	.quad	_A__EQ_param_u64_i16
	.quad	_L_1+13083
	.quad	_A__EQ_var_u64_i16
	.quad	_L_1+13100
	.quad	_A__EQ_param_L_i32
	.quad	_L_1+13115
	.quad	_A__EQ_var_L_i32
	.quad	_L_1+13130
	.quad	_A__EQ_param_L_u16
	.quad	_L_1+13143
	.quad	_A__EQ_var_L_u16
	.quad	_L_1+13158
	.quad	_A__EQ_param_L_u64
	.quad	_L_1+13171
	.quad	_A__EQ_var_L_u64
	.quad	_L_1+13186
	.quad	_A__EQ_param_L_L
	.quad	_L_1+13199
	.quad	_A__EQ_var_L_L
	.quad	_L_1+13212
	.quad	_A__EQ_param_L_i8
	.quad	_L_1+13223
	.quad	_A__EQ_var_L_i8
	.quad	_L_1+13237
	.quad	_A__EQ_param_L_u32
	.quad	_L_1+13249
	.quad	_A__EQ_var_L_u32
	.quad	_L_1+13264
	.quad	_A__EQ_param_L_C
	.quad	_L_1+13277
	.quad	_A__EQ_var_L_C
	.quad	_L_1+13290
	.quad	_A__EQ_param_L_u8
	.quad	_L_1+13301
	.quad	_A__EQ_var_L_u8
	.quad	_L_1+13315
	.quad	_A__EQ_param_L_I
	.quad	_L_1+13327
	.quad	_A__EQ_var_L_I
	.quad	_L_1+13340
	.quad	_A__EQ_param_L_i64
	.quad	_L_1+13351
	.quad	_A__EQ_var_L_i64
	.quad	_L_1+13366
	.quad	_A__EQ_param_L_LC
	.quad	_L_1+13379
	.quad	_A__EQ_var_L_LC
	.quad	_L_1+13393
	.quad	_A__EQ_param_L_i16
	.quad	_L_1+13405
	.quad	_A__EQ_var_L_i16
	.quad	_L_1+13420
	.quad	_A__EQ_param_i8_i32
	.quad	_L_1+13433
	.quad	_A__EQ_var_i8_i32
	.quad	_L_1+13449
	.quad	_A__EQ_param_i8_u16
	.quad	_L_1+13463
	.quad	_A__EQ_var_i8_u16
	.quad	_L_1+13479
	.quad	_A__EQ_param_i8_u64
	.quad	_L_1+13493
	.quad	_A__EQ_var_i8_u64
	.quad	_L_1+13509
	.quad	_A__EQ_param_i8_L
	.quad	_L_1+13523
	.quad	_A__EQ_var_i8_L
	.quad	_L_1+13537
	.quad	_A__EQ_param_i8_i8
	.quad	_L_1+13549
	.quad	_A__EQ_var_i8_i8
	.quad	_L_1+13564
	.quad	_A__EQ_param_i8_u32
	.quad	_L_1+13577
	.quad	_A__EQ_var_i8_u32
	.quad	_L_1+13593
	.quad	_A__EQ_param_i8_C
	.quad	_L_1+13607
	.quad	_A__EQ_var_i8_C
	.quad	_L_1+13621
	.quad	_A__EQ_param_i8_u8
	.quad	_L_1+13633
	.quad	_A__EQ_var_i8_u8
	.quad	_L_1+13648
	.quad	_A__EQ_param_i8_I
	.quad	_L_1+13661
	.quad	_A__EQ_var_i8_I
	.quad	_L_1+13675
	.quad	_A__EQ_param_i8_i64
	.quad	_L_1+13687
	.quad	_A__EQ_var_i8_i64
	.quad	_L_1+13703
	.quad	_A__EQ_param_i8_LC
	.quad	_L_1+13717
	.quad	_A__EQ_var_i8_LC
	.quad	_L_1+13732
	.quad	_A__EQ_param_i8_i16
	.quad	_L_1+13745
	.quad	_A__EQ_var_i8_i16
	.quad	_L_1+13761
	.quad	_A__EQ_param_u32_i32
	.quad	_L_1+13775
	.quad	_A__EQ_var_u32_i32
	.quad	_L_1+13792
	.quad	_A__EQ_param_u32_u16
	.quad	_L_1+13807
	.quad	_A__EQ_var_u32_u16
	.quad	_L_1+13824
	.quad	_A__EQ_param_u32_u64
	.quad	_L_1+13839
	.quad	_A__EQ_var_u32_u64
	.quad	_L_1+13856
	.quad	_A__EQ_param_u32_L
	.quad	_L_1+13871
	.quad	_A__EQ_var_u32_L
	.quad	_L_1+13886
	.quad	_A__EQ_param_u32_i8
	.quad	_L_1+13899
	.quad	_A__EQ_var_u32_i8
	.quad	_L_1+13915
	.quad	_A__EQ_param_u32_u32
	.quad	_L_1+13929
	.quad	_A__EQ_var_u32_u32
	.quad	_L_1+13946
	.quad	_A__EQ_param_u32_C
	.quad	_L_1+13961
	.quad	_A__EQ_var_u32_C
	.quad	_L_1+13976
	.quad	_A__EQ_param_u32_u8
	.quad	_L_1+13989
	.quad	_A__EQ_var_u32_u8
	.quad	_L_1+14005
	.quad	_A__EQ_param_u32_I
	.quad	_L_1+14019
	.quad	_A__EQ_var_u32_I
	.quad	_L_1+14034
	.quad	_A__EQ_param_u32_i64
	.quad	_L_1+14047
	.quad	_A__EQ_var_u32_i64
	.quad	_L_1+14064
	.quad	_A__EQ_param_u32_LC
	.quad	_L_1+14079
	.quad	_A__EQ_var_u32_LC
	.quad	_L_1+14095
	.quad	_A__EQ_param_u32_i16
	.quad	_L_1+14109
	.quad	_A__EQ_var_u32_i16
	.quad	_L_1+14126
	.quad	_A__EQ_param_f32_f32
	.quad	_L_1+14141
	.quad	_A__EQ_var_f32_f32
	.quad	_L_1+14158
	.quad	_A__EQ_param_C_i32
	.quad	_L_1+14173
	.quad	_A__EQ_var_C_i32
	.quad	_L_1+14188
	.quad	_A__EQ_param_C_u16
	.quad	_L_1+14201
	.quad	_A__EQ_var_C_u16
	.quad	_L_1+14216
	.quad	_A__EQ_param_C_u64
	.quad	_L_1+14229
	.quad	_A__EQ_var_C_u64
	.quad	_L_1+14244
	.quad	_A__EQ_param_C_L
	.quad	_L_1+14257
	.quad	_A__EQ_var_C_L
	.quad	_L_1+14270
	.quad	_A__EQ_param_C_i8
	.quad	_L_1+14281
	.quad	_A__EQ_var_C_i8
	.quad	_L_1+14295
	.quad	_A__EQ_param_C_u32
	.quad	_L_1+14307
	.quad	_A__EQ_var_C_u32
	.quad	_L_1+14322
	.quad	_A__EQ_param_C_C
	.quad	_L_1+14335
	.quad	_A__EQ_var_C_C
	.quad	_L_1+14348
	.quad	_A__EQ_param_C_u8
	.quad	_L_1+14359
	.quad	_A__EQ_var_C_u8
	.quad	_L_1+14373
	.quad	_A__EQ_param_C_I
	.quad	_L_1+14385
	.quad	_A__EQ_var_C_I
	.quad	_L_1+14398
	.quad	_A__EQ_param_C_i64
	.quad	_L_1+14409
	.quad	_A__EQ_var_C_i64
	.quad	_L_1+14424
	.quad	_A__EQ_param_C_LC
	.quad	_L_1+14437
	.quad	_A__EQ_var_C_LC
	.quad	_L_1+14451
	.quad	_A__EQ_param_C_i16
	.quad	_L_1+14463
	.quad	_A__EQ_var_C_i16
	.quad	_L_1+14478
	.quad	_A__EQ_param_u8_i32
	.quad	_L_1+14491
	.quad	_A__EQ_var_u8_i32
	.quad	_L_1+14507
	.quad	_A__EQ_param_u8_u16
	.quad	_L_1+14521
	.quad	_A__EQ_var_u8_u16
	.quad	_L_1+14537
	.quad	_A__EQ_param_u8_u64
	.quad	_L_1+14551
	.quad	_A__EQ_var_u8_u64
	.quad	_L_1+14567
	.quad	_A__EQ_param_u8_L
	.quad	_L_1+14581
	.quad	_A__EQ_var_u8_L
	.quad	_L_1+14595
	.quad	_A__EQ_param_u8_i8
	.quad	_L_1+14607
	.quad	_A__EQ_var_u8_i8
	.quad	_L_1+14622
	.quad	_A__EQ_param_u8_u32
	.quad	_L_1+14635
	.quad	_A__EQ_var_u8_u32
	.quad	_L_1+14651
	.quad	_A__EQ_param_u8_C
	.quad	_L_1+14665
	.quad	_A__EQ_var_u8_C
	.quad	_L_1+14679
	.quad	_A__EQ_param_u8_u8
	.quad	_L_1+14691
	.quad	_A__EQ_var_u8_u8
	.quad	_L_1+14706
	.quad	_A__EQ_param_u8_I
	.quad	_L_1+14719
	.quad	_A__EQ_var_u8_I
	.quad	_L_1+14733
	.quad	_A__EQ_param_u8_i64
	.quad	_L_1+14745
	.quad	_A__EQ_var_u8_i64
	.quad	_L_1+14761
	.quad	_A__EQ_param_u8_LC
	.quad	_L_1+14775
	.quad	_A__EQ_var_u8_LC
	.quad	_L_1+14790
	.quad	_A__EQ_param_u8_i16
	.quad	_L_1+14803
	.quad	_A__EQ_var_u8_i16
	.quad	_L_1+14819
	.quad	_A__EQ_param_I_i32
	.quad	_L_1+14833
	.quad	_A__EQ_var_I_i32
	.quad	_L_1+14848
	.quad	_A__EQ_param_I_u16
	.quad	_L_1+14861
	.quad	_A__EQ_var_I_u16
	.quad	_L_1+14876
	.quad	_A__EQ_param_I_u64
	.quad	_L_1+14889
	.quad	_A__EQ_var_I_u64
	.quad	_L_1+14904
	.quad	_A__EQ_param_I_L
	.quad	_L_1+14917
	.quad	_A__EQ_var_I_L
	.quad	_L_1+14930
	.quad	_A__EQ_param_I_i8
	.quad	_L_1+14941
	.quad	_A__EQ_var_I_i8
	.quad	_L_1+14955
	.quad	_A__EQ_param_I_u32
	.quad	_L_1+14967
	.quad	_A__EQ_var_I_u32
	.quad	_L_1+14982
	.quad	_A__EQ_param_I_C
	.quad	_L_1+14995
	.quad	_A__EQ_var_I_C
	.quad	_L_1+15008
	.quad	_A__EQ_param_I_u8
	.quad	_L_1+15019
	.quad	_A__EQ_var_I_u8
	.quad	_L_1+15033
	.quad	_A__EQ_param_I_I
	.quad	_L_1+15045
	.quad	_A__EQ_var_I_I
	.quad	_L_1+15058
	.quad	_A__EQ_param_I_i64
	.quad	_L_1+15069
	.quad	_A__EQ_var_I_i64
	.quad	_L_1+15084
	.quad	_A__EQ_param_I_LC
	.quad	_L_1+15097
	.quad	_A__EQ_var_I_LC
	.quad	_L_1+15111
	.quad	_A__EQ_param_I_i16
	.quad	_L_1+15123
	.quad	_A__EQ_var_I_i16
	.quad	_L_1+15138
	.quad	_A__EQ_param_i64_i32
	.quad	_L_1+15151
	.quad	_A__EQ_var_i64_i32
	.quad	_L_1+15168
	.quad	_A__EQ_param_i64_u16
	.quad	_L_1+15183
	.quad	_A__EQ_var_i64_u16
	.quad	_L_1+15200
	.quad	_A__EQ_param_i64_u64
	.quad	_L_1+15215
	.quad	_A__EQ_var_i64_u64
	.quad	_L_1+15232
	.quad	_A__EQ_param_i64_L
	.quad	_L_1+15247
	.quad	_A__EQ_var_i64_L
	.quad	_L_1+15262
	.quad	_A__EQ_param_i64_i8
	.quad	_L_1+15275
	.quad	_A__EQ_var_i64_i8
	.quad	_L_1+15291
	.quad	_A__EQ_param_i64_u32
	.quad	_L_1+15305
	.quad	_A__EQ_var_i64_u32
	.quad	_L_1+15322
	.quad	_A__EQ_param_i64_C
	.quad	_L_1+15337
	.quad	_A__EQ_var_i64_C
	.quad	_L_1+15352
	.quad	_A__EQ_param_i64_u8
	.quad	_L_1+15365
	.quad	_A__EQ_var_i64_u8
	.quad	_L_1+15381
	.quad	_A__EQ_param_i64_I
	.quad	_L_1+15395
	.quad	_A__EQ_var_i64_I
	.quad	_L_1+15410
	.quad	_A__EQ_param_i64_i64
	.quad	_L_1+15423
	.quad	_A__EQ_var_i64_i64
	.quad	_L_1+15440
	.quad	_A__EQ_param_i64_LC
	.quad	_L_1+15455
	.quad	_A__EQ_var_i64_LC
	.quad	_L_1+15471
	.quad	_A__EQ_param_i64_i16
	.quad	_L_1+15485
	.quad	_A__EQ_var_i64_i16
	.quad	_L_1+15502
	.quad	_A__EQ_param_f64_f64
	.quad	_L_1+15517
	.quad	_A__EQ_var_f64_f64
	.quad	_L_1+15534
	.quad	_A__EQ_param_LC_i32
	.quad	_L_1+15549
	.quad	_A__EQ_var_LC_i32
	.quad	_L_1+15565
	.quad	_A__EQ_param_LC_u16
	.quad	_L_1+15579
	.quad	_A__EQ_var_LC_u16
	.quad	_L_1+15595
	.quad	_A__EQ_param_LC_u64
	.quad	_L_1+15609
	.quad	_A__EQ_var_LC_u64
	.quad	_L_1+15625
	.quad	_A__EQ_param_LC_L
	.quad	_L_1+15639
	.quad	_A__EQ_var_LC_L
	.quad	_L_1+15653
	.quad	_A__EQ_param_LC_i8
	.quad	_L_1+15665
	.quad	_A__EQ_var_LC_i8
	.quad	_L_1+15680
	.quad	_A__EQ_param_LC_u32
	.quad	_L_1+15693
	.quad	_A__EQ_var_LC_u32
	.quad	_L_1+15709
	.quad	_A__EQ_param_LC_C
	.quad	_L_1+15723
	.quad	_A__EQ_var_LC_C
	.quad	_L_1+15737
	.quad	_A__EQ_param_LC_u8
	.quad	_L_1+15749
	.quad	_A__EQ_var_LC_u8
	.quad	_L_1+15764
	.quad	_A__EQ_param_LC_I
	.quad	_L_1+15777
	.quad	_A__EQ_var_LC_I
	.quad	_L_1+15791
	.quad	_A__EQ_param_LC_i64
	.quad	_L_1+15803
	.quad	_A__EQ_var_LC_i64
	.quad	_L_1+15819
	.quad	_A__EQ_param_LC_LC
	.quad	_L_1+15833
	.quad	_A__EQ_var_LC_LC
	.quad	_L_1+15848
	.quad	_A__EQ_param_LC_i16
	.quad	_L_1+15861
	.quad	_A__EQ_var_LC_i16
	.quad	_L_1+15877
	.quad	_A__EQ_param_i16_i32
	.quad	_L_1+15891
	.quad	_A__EQ_var_i16_i32
	.quad	_L_1+15908
	.quad	_A__EQ_param_i16_u16
	.quad	_L_1+15923
	.quad	_A__EQ_var_i16_u16
	.quad	_L_1+15940
	.quad	_A__EQ_param_i16_u64
	.quad	_L_1+15955
	.quad	_A__EQ_var_i16_u64
	.quad	_L_1+15972
	.quad	_A__EQ_param_i16_L
	.quad	_L_1+15987
	.quad	_A__EQ_var_i16_L
	.quad	_L_1+16002
	.quad	_A__EQ_param_i16_i8
	.quad	_L_1+16015
	.quad	_A__EQ_var_i16_i8
	.quad	_L_1+16031
	.quad	_A__EQ_param_i16_u32
	.quad	_L_1+16045
	.quad	_A__EQ_var_i16_u32
	.quad	_L_1+16062
	.quad	_A__EQ_param_i16_C
	.quad	_L_1+16077
	.quad	_A__EQ_var_i16_C
	.quad	_L_1+16092
	.quad	_A__EQ_param_i16_u8
	.quad	_L_1+16105
	.quad	_A__EQ_var_i16_u8
	.quad	_L_1+16121
	.quad	_A__EQ_param_i16_I
	.quad	_L_1+16135
	.quad	_A__EQ_var_i16_I
	.quad	_L_1+16150
	.quad	_A__EQ_param_i16_i64
	.quad	_L_1+16163
	.quad	_A__EQ_var_i16_i64
	.quad	_L_1+16180
	.quad	_A__EQ_param_i16_LC
	.quad	_L_1+16195
	.quad	_A__EQ_var_i16_LC
	.quad	_L_1+16211
	.quad	_A__EQ_param_i16_i16
	.quad	_L_1+16225
	.quad	_A__EQ_var_i16_i16
	.quad	_L_1+16242
	.quad	_A__uXor_param_i32_i32
	.quad	_L_1+16257
	.quad	_A__uXor_var_i32_i32
	.quad	_L_1+16276
	.quad	_A__uXor_param_i32_u16
	.quad	_L_1+16293
	.quad	_A__uXor_var_i32_u16
	.quad	_L_1+16312
	.quad	_A__uXor_param_i32_u64
	.quad	_L_1+16329
	.quad	_A__uXor_var_i32_u64
	.quad	_L_1+16348
	.quad	_A__uXor_param_i32_L
	.quad	_L_1+16365
	.quad	_A__uXor_var_i32_L
	.quad	_L_1+16382
	.quad	_A__uXor_param_i32_i8
	.quad	_L_1+16397
	.quad	_A__uXor_var_i32_i8
	.quad	_L_1+16415
	.quad	_A__uXor_param_i32_u32
	.quad	_L_1+16431
	.quad	_A__uXor_var_i32_u32
	.quad	_L_1+16450
	.quad	_A__uXor_param_i32_C
	.quad	_L_1+16467
	.quad	_A__uXor_var_i32_C
	.quad	_L_1+16484
	.quad	_A__uXor_param_i32_u8
	.quad	_L_1+16499
	.quad	_A__uXor_var_i32_u8
	.quad	_L_1+16517
	.quad	_A__uXor_param_i32_I
	.quad	_L_1+16533
	.quad	_A__uXor_var_i32_I
	.quad	_L_1+16550
	.quad	_A__uXor_param_i32_i64
	.quad	_L_1+16565
	.quad	_A__uXor_var_i32_i64
	.quad	_L_1+16584
	.quad	_A__uXor_param_i32_LC
	.quad	_L_1+16601
	.quad	_A__uXor_var_i32_LC
	.quad	_L_1+16619
	.quad	_A__uXor_param_i32_i16
	.quad	_L_1+16635
	.quad	_A__uXor_var_i32_i16
	.quad	_L_1+16654
	.quad	_A__uXor_param_u16_i32
	.quad	_L_1+16671
	.quad	_A__uXor_var_u16_i32
	.quad	_L_1+16690
	.quad	_A__uXor_param_u16_u16
	.quad	_L_1+16707
	.quad	_A__uXor_var_u16_u16
	.quad	_L_1+16726
	.quad	_A__uXor_param_u16_u64
	.quad	_L_1+16743
	.quad	_A__uXor_var_u16_u64
	.quad	_L_1+16762
	.quad	_A__uXor_param_u16_L
	.quad	_L_1+16779
	.quad	_A__uXor_var_u16_L
	.quad	_L_1+16796
	.quad	_A__uXor_param_u16_i8
	.quad	_L_1+16811
	.quad	_A__uXor_var_u16_i8
	.quad	_L_1+16829
	.quad	_A__uXor_param_u16_u32
	.quad	_L_1+16845
	.quad	_A__uXor_var_u16_u32
	.quad	_L_1+16864
	.quad	_A__uXor_param_u16_C
	.quad	_L_1+16881
	.quad	_A__uXor_var_u16_C
	.quad	_L_1+16898
	.quad	_A__uXor_param_u16_u8
	.quad	_L_1+16913
	.quad	_A__uXor_var_u16_u8
	.quad	_L_1+16931
	.quad	_A__uXor_param_u16_I
	.quad	_L_1+16947
	.quad	_A__uXor_var_u16_I
	.quad	_L_1+16964
	.quad	_A__uXor_param_u16_i64
	.quad	_L_1+16979
	.quad	_A__uXor_var_u16_i64
	.quad	_L_1+16998
	.quad	_A__uXor_param_u16_LC
	.quad	_L_1+17015
	.quad	_A__uXor_var_u16_LC
	.quad	_L_1+17033
	.quad	_A__uXor_param_u16_i16
	.quad	_L_1+17049
	.quad	_A__uXor_var_u16_i16
	.quad	_L_1+17068
	.quad	_A__uXor_param_u64_i32
	.quad	_L_1+17085
	.quad	_A__uXor_var_u64_i32
	.quad	_L_1+17104
	.quad	_A__uXor_param_u64_u16
	.quad	_L_1+17121
	.quad	_A__uXor_var_u64_u16
	.quad	_L_1+17140
	.quad	_A__uXor_param_u64_u64
	.quad	_L_1+17157
	.quad	_A__uXor_var_u64_u64
	.quad	_L_1+17176
	.quad	_A__uXor_param_u64_L
	.quad	_L_1+17193
	.quad	_A__uXor_var_u64_L
	.quad	_L_1+17210
	.quad	_A__uXor_param_u64_i8
	.quad	_L_1+17225
	.quad	_A__uXor_var_u64_i8
	.quad	_L_1+17243
	.quad	_A__uXor_param_u64_u32
	.quad	_L_1+17259
	.quad	_A__uXor_var_u64_u32
	.quad	_L_1+17278
	.quad	_A__uXor_param_u64_C
	.quad	_L_1+17295
	.quad	_A__uXor_var_u64_C
	.quad	_L_1+17312
	.quad	_A__uXor_param_u64_u8
	.quad	_L_1+17327
	.quad	_A__uXor_var_u64_u8
	.quad	_L_1+17345
	.quad	_A__uXor_param_u64_I
	.quad	_L_1+17361
	.quad	_A__uXor_var_u64_I
	.quad	_L_1+17378
	.quad	_A__uXor_param_u64_i64
	.quad	_L_1+17393
	.quad	_A__uXor_var_u64_i64
	.quad	_L_1+17412
	.quad	_A__uXor_param_u64_LC
	.quad	_L_1+17429
	.quad	_A__uXor_var_u64_LC
	.quad	_L_1+17447
	.quad	_A__uXor_param_u64_i16
	.quad	_L_1+17463
	.quad	_A__uXor_var_u64_i16
	.quad	_L_1+17482
	.quad	_A__uXor_param_L_i32
	.quad	_L_1+17499
	.quad	_A__uXor_var_L_i32
	.quad	_L_1+17516
	.quad	_A__uXor_param_L_u16
	.quad	_L_1+17531
	.quad	_A__uXor_var_L_u16
	.quad	_L_1+17548
	.quad	_A__uXor_param_L_u64
	.quad	_L_1+17563
	.quad	_A__uXor_var_L_u64
	.quad	_L_1+17580
	.quad	_A__uXor_param_L_L
	.quad	_L_1+17595
	.quad	_A__uXor_var_L_L
	.quad	_L_1+17610
	.quad	_A__uXor_param_L_i8
	.quad	_L_1+17623
	.quad	_A__uXor_var_L_i8
	.quad	_L_1+17639
	.quad	_A__uXor_param_L_u32
	.quad	_L_1+17653
	.quad	_A__uXor_var_L_u32
	.quad	_L_1+17670
	.quad	_A__uXor_param_L_C
	.quad	_L_1+17685
	.quad	_A__uXor_var_L_C
	.quad	_L_1+17700
	.quad	_A__uXor_param_L_u8
	.quad	_L_1+17713
	.quad	_A__uXor_var_L_u8
	.quad	_L_1+17729
	.quad	_A__uXor_param_L_I
	.quad	_L_1+17743
	.quad	_A__uXor_var_L_I
	.quad	_L_1+17758
	.quad	_A__uXor_param_L_i64
	.quad	_L_1+17771
	.quad	_A__uXor_var_L_i64
	.quad	_L_1+17788
	.quad	_A__uXor_param_L_LC
	.quad	_L_1+17803
	.quad	_A__uXor_var_L_LC
	.quad	_L_1+17819
	.quad	_A__uXor_param_L_i16
	.quad	_L_1+17833
	.quad	_A__uXor_var_L_i16
	.quad	_L_1+17850
	.quad	_A__uXor_param_i8_i32
	.quad	_L_1+17865
	.quad	_A__uXor_var_i8_i32
	.quad	_L_1+17883
	.quad	_A__uXor_param_i8_u16
	.quad	_L_1+17899
	.quad	_A__uXor_var_i8_u16
	.quad	_L_1+17917
	.quad	_A__uXor_param_i8_u64
	.quad	_L_1+17933
	.quad	_A__uXor_var_i8_u64
	.quad	_L_1+17951
	.quad	_A__uXor_param_i8_L
	.quad	_L_1+17967
	.quad	_A__uXor_var_i8_L
	.quad	_L_1+17983
	.quad	_A__uXor_param_i8_i8
	.quad	_L_1+17997
	.quad	_A__uXor_var_i8_i8
	.quad	_L_1+18014
	.quad	_A__uXor_param_i8_u32
	.quad	_L_1+18029
	.quad	_A__uXor_var_i8_u32
	.quad	_L_1+18047
	.quad	_A__uXor_param_i8_C
	.quad	_L_1+18063
	.quad	_A__uXor_var_i8_C
	.quad	_L_1+18079
	.quad	_A__uXor_param_i8_u8
	.quad	_L_1+18093
	.quad	_A__uXor_var_i8_u8
	.quad	_L_1+18110
	.quad	_A__uXor_param_i8_I
	.quad	_L_1+18125
	.quad	_A__uXor_var_i8_I
	.quad	_L_1+18141
	.quad	_A__uXor_param_i8_i64
	.quad	_L_1+18155
	.quad	_A__uXor_var_i8_i64
	.quad	_L_1+18173
	.quad	_A__uXor_param_i8_LC
	.quad	_L_1+18189
	.quad	_A__uXor_var_i8_LC
	.quad	_L_1+18206
	.quad	_A__uXor_param_i8_i16
	.quad	_L_1+18221
	.quad	_A__uXor_var_i8_i16
	.quad	_L_1+18239
	.quad	_A__uXor_param_u32_i32
	.quad	_L_1+18255
	.quad	_A__uXor_var_u32_i32
	.quad	_L_1+18274
	.quad	_A__uXor_param_u32_u16
	.quad	_L_1+18291
	.quad	_A__uXor_var_u32_u16
	.quad	_L_1+18310
	.quad	_A__uXor_param_u32_u64
	.quad	_L_1+18327
	.quad	_A__uXor_var_u32_u64
	.quad	_L_1+18346
	.quad	_A__uXor_param_u32_L
	.quad	_L_1+18363
	.quad	_A__uXor_var_u32_L
	.quad	_L_1+18380
	.quad	_A__uXor_param_u32_i8
	.quad	_L_1+18395
	.quad	_A__uXor_var_u32_i8
	.quad	_L_1+18413
	.quad	_A__uXor_param_u32_u32
	.quad	_L_1+18429
	.quad	_A__uXor_var_u32_u32
	.quad	_L_1+18448
	.quad	_A__uXor_param_u32_C
	.quad	_L_1+18465
	.quad	_A__uXor_var_u32_C
	.quad	_L_1+18482
	.quad	_A__uXor_param_u32_u8
	.quad	_L_1+18497
	.quad	_A__uXor_var_u32_u8
	.quad	_L_1+18515
	.quad	_A__uXor_param_u32_I
	.quad	_L_1+18531
	.quad	_A__uXor_var_u32_I
	.quad	_L_1+18548
	.quad	_A__uXor_param_u32_i64
	.quad	_L_1+18563
	.quad	_A__uXor_var_u32_i64
	.quad	_L_1+18582
	.quad	_A__uXor_param_u32_LC
	.quad	_L_1+18599
	.quad	_A__uXor_var_u32_LC
	.quad	_L_1+18617
	.quad	_A__uXor_param_u32_i16
	.quad	_L_1+18633
	.quad	_A__uXor_var_u32_i16
	.quad	_L_1+18652
	.quad	_A__uXor_param_C_i32
	.quad	_L_1+18669
	.quad	_A__uXor_var_C_i32
	.quad	_L_1+18686
	.quad	_A__uXor_param_C_u16
	.quad	_L_1+18701
	.quad	_A__uXor_var_C_u16
	.quad	_L_1+18718
	.quad	_A__uXor_param_C_u64
	.quad	_L_1+18733
	.quad	_A__uXor_var_C_u64
	.quad	_L_1+18750
	.quad	_A__uXor_param_C_L
	.quad	_L_1+18765
	.quad	_A__uXor_var_C_L
	.quad	_L_1+18780
	.quad	_A__uXor_param_C_i8
	.quad	_L_1+18793
	.quad	_A__uXor_var_C_i8
	.quad	_L_1+18809
	.quad	_A__uXor_param_C_u32
	.quad	_L_1+18823
	.quad	_A__uXor_var_C_u32
	.quad	_L_1+18840
	.quad	_A__uXor_param_C_C
	.quad	_L_1+18855
	.quad	_A__uXor_var_C_C
	.quad	_L_1+18870
	.quad	_A__uXor_param_C_u8
	.quad	_L_1+18883
	.quad	_A__uXor_var_C_u8
	.quad	_L_1+18899
	.quad	_A__uXor_param_C_I
	.quad	_L_1+18913
	.quad	_A__uXor_var_C_I
	.quad	_L_1+18928
	.quad	_A__uXor_param_C_i64
	.quad	_L_1+18941
	.quad	_A__uXor_var_C_i64
	.quad	_L_1+18958
	.quad	_A__uXor_param_C_LC
	.quad	_L_1+18973
	.quad	_A__uXor_var_C_LC
	.quad	_L_1+18989
	.quad	_A__uXor_param_C_i16
	.quad	_L_1+19003
	.quad	_A__uXor_var_C_i16
	.quad	_L_1+19020
	.quad	_A__uXor_param_u8_i32
	.quad	_L_1+19035
	.quad	_A__uXor_var_u8_i32
	.quad	_L_1+19053
	.quad	_A__uXor_param_u8_u16
	.quad	_L_1+19069
	.quad	_A__uXor_var_u8_u16
	.quad	_L_1+19087
	.quad	_A__uXor_param_u8_u64
	.quad	_L_1+19103
	.quad	_A__uXor_var_u8_u64
	.quad	_L_1+19121
	.quad	_A__uXor_param_u8_L
	.quad	_L_1+19137
	.quad	_A__uXor_var_u8_L
	.quad	_L_1+19153
	.quad	_A__uXor_param_u8_i8
	.quad	_L_1+19167
	.quad	_A__uXor_var_u8_i8
	.quad	_L_1+19184
	.quad	_A__uXor_param_u8_u32
	.quad	_L_1+19199
	.quad	_A__uXor_var_u8_u32
	.quad	_L_1+19217
	.quad	_A__uXor_param_u8_C
	.quad	_L_1+19233
	.quad	_A__uXor_var_u8_C
	.quad	_L_1+19249
	.quad	_A__uXor_param_u8_u8
	.quad	_L_1+19263
	.quad	_A__uXor_var_u8_u8
	.quad	_L_1+19280
	.quad	_A__uXor_param_u8_I
	.quad	_L_1+19295
	.quad	_A__uXor_var_u8_I
	.quad	_L_1+19311
	.quad	_A__uXor_param_u8_i64
	.quad	_L_1+19325
	.quad	_A__uXor_var_u8_i64
	.quad	_L_1+19343
	.quad	_A__uXor_param_u8_LC
	.quad	_L_1+19359
	.quad	_A__uXor_var_u8_LC
	.quad	_L_1+19376
	.quad	_A__uXor_param_u8_i16
	.quad	_L_1+19391
	.quad	_A__uXor_var_u8_i16
	.quad	_L_1+19409
	.quad	_A__uXor_param_I_i32
	.quad	_L_1+19425
	.quad	_A__uXor_var_I_i32
	.quad	_L_1+19442
	.quad	_A__uXor_param_I_u16
	.quad	_L_1+19457
	.quad	_A__uXor_var_I_u16
	.quad	_L_1+19474
	.quad	_A__uXor_param_I_u64
	.quad	_L_1+19489
	.quad	_A__uXor_var_I_u64
	.quad	_L_1+19506
	.quad	_A__uXor_param_I_L
	.quad	_L_1+19521
	.quad	_A__uXor_var_I_L
	.quad	_L_1+19536
	.quad	_A__uXor_param_I_i8
	.quad	_L_1+19549
	.quad	_A__uXor_var_I_i8
	.quad	_L_1+19565
	.quad	_A__uXor_param_I_u32
	.quad	_L_1+19579
	.quad	_A__uXor_var_I_u32
	.quad	_L_1+19596
	.quad	_A__uXor_param_I_C
	.quad	_L_1+19611
	.quad	_A__uXor_var_I_C
	.quad	_L_1+19626
	.quad	_A__uXor_param_I_u8
	.quad	_L_1+19639
	.quad	_A__uXor_var_I_u8
	.quad	_L_1+19655
	.quad	_A__uXor_param_I_I
	.quad	_L_1+19669
	.quad	_A__uXor_var_I_I
	.quad	_L_1+19684
	.quad	_A__uXor_param_I_i64
	.quad	_L_1+19697
	.quad	_A__uXor_var_I_i64
	.quad	_L_1+19714
	.quad	_A__uXor_param_I_LC
	.quad	_L_1+19729
	.quad	_A__uXor_var_I_LC
	.quad	_L_1+19745
	.quad	_A__uXor_param_I_i16
	.quad	_L_1+19759
	.quad	_A__uXor_var_I_i16
	.quad	_L_1+19776
	.quad	_A__uXor_param_i64_i32
	.quad	_L_1+19791
	.quad	_A__uXor_var_i64_i32
	.quad	_L_1+19810
	.quad	_A__uXor_param_i64_u16
	.quad	_L_1+19827
	.quad	_A__uXor_var_i64_u16
	.quad	_L_1+19846
	.quad	_A__uXor_param_i64_u64
	.quad	_L_1+19863
	.quad	_A__uXor_var_i64_u64
	.quad	_L_1+19882
	.quad	_A__uXor_param_i64_L
	.quad	_L_1+19899
	.quad	_A__uXor_var_i64_L
	.quad	_L_1+19916
	.quad	_A__uXor_param_i64_i8
	.quad	_L_1+19931
	.quad	_A__uXor_var_i64_i8
	.quad	_L_1+19949
	.quad	_A__uXor_param_i64_u32
	.quad	_L_1+19965
	.quad	_A__uXor_var_i64_u32
	.quad	_L_1+19984
	.quad	_A__uXor_param_i64_C
	.quad	_L_1+20001
	.quad	_A__uXor_var_i64_C
	.quad	_L_1+20018
	.quad	_A__uXor_param_i64_u8
	.quad	_L_1+20033
	.quad	_A__uXor_var_i64_u8
	.quad	_L_1+20051
	.quad	_A__uXor_param_i64_I
	.quad	_L_1+20067
	.quad	_A__uXor_var_i64_I
	.quad	_L_1+20084
	.quad	_A__uXor_param_i64_i64
	.quad	_L_1+20099
	.quad	_A__uXor_var_i64_i64
	.quad	_L_1+20118
	.quad	_A__uXor_param_i64_LC
	.quad	_L_1+20135
	.quad	_A__uXor_var_i64_LC
	.quad	_L_1+20153
	.quad	_A__uXor_param_i64_i16
	.quad	_L_1+20169
	.quad	_A__uXor_var_i64_i16
	.quad	_L_1+20188
	.quad	_A__uXor_param_LC_i32
	.quad	_L_1+20205
	.quad	_A__uXor_var_LC_i32
	.quad	_L_1+20223
	.quad	_A__uXor_param_LC_u16
	.quad	_L_1+20239
	.quad	_A__uXor_var_LC_u16
	.quad	_L_1+20257
	.quad	_A__uXor_param_LC_u64
	.quad	_L_1+20273
	.quad	_A__uXor_var_LC_u64
	.quad	_L_1+20291
	.quad	_A__uXor_param_LC_L
	.quad	_L_1+20307
	.quad	_A__uXor_var_LC_L
	.quad	_L_1+20323
	.quad	_A__uXor_param_LC_i8
	.quad	_L_1+20337
	.quad	_A__uXor_var_LC_i8
	.quad	_L_1+20354
	.quad	_A__uXor_param_LC_u32
	.quad	_L_1+20369
	.quad	_A__uXor_var_LC_u32
	.quad	_L_1+20387
	.quad	_A__uXor_param_LC_C
	.quad	_L_1+20403
	.quad	_A__uXor_var_LC_C
	.quad	_L_1+20419
	.quad	_A__uXor_param_LC_u8
	.quad	_L_1+20433
	.quad	_A__uXor_var_LC_u8
	.quad	_L_1+20450
	.quad	_A__uXor_param_LC_I
	.quad	_L_1+20465
	.quad	_A__uXor_var_LC_I
	.quad	_L_1+20481
	.quad	_A__uXor_param_LC_i64
	.quad	_L_1+20495
	.quad	_A__uXor_var_LC_i64
	.quad	_L_1+20513
	.quad	_A__uXor_param_LC_LC
	.quad	_L_1+20529
	.quad	_A__uXor_var_LC_LC
	.quad	_L_1+20546
	.quad	_A__uXor_param_LC_i16
	.quad	_L_1+20561
	.quad	_A__uXor_var_LC_i16
	.quad	_L_1+20579
	.quad	_A__uXor_param_i16_i32
	.quad	_L_1+20595
	.quad	_A__uXor_var_i16_i32
	.quad	_L_1+20614
	.quad	_A__uXor_param_i16_u16
	.quad	_L_1+20631
	.quad	_A__uXor_var_i16_u16
	.quad	_L_1+20650
	.quad	_A__uXor_param_i16_u64
	.quad	_L_1+20667
	.quad	_A__uXor_var_i16_u64
	.quad	_L_1+20686
	.quad	_A__uXor_param_i16_L
	.quad	_L_1+20703
	.quad	_A__uXor_var_i16_L
	.quad	_L_1+20720
	.quad	_A__uXor_param_i16_i8
	.quad	_L_1+20735
	.quad	_A__uXor_var_i16_i8
	.quad	_L_1+20753
	.quad	_A__uXor_param_i16_u32
	.quad	_L_1+20769
	.quad	_A__uXor_var_i16_u32
	.quad	_L_1+20788
	.quad	_A__uXor_param_i16_C
	.quad	_L_1+20805
	.quad	_A__uXor_var_i16_C
	.quad	_L_1+20822
	.quad	_A__uXor_param_i16_u8
	.quad	_L_1+20837
	.quad	_A__uXor_var_i16_u8
	.quad	_L_1+20855
	.quad	_A__uXor_param_i16_I
	.quad	_L_1+20871
	.quad	_A__uXor_var_i16_I
	.quad	_L_1+20888
	.quad	_A__uXor_param_i16_i64
	.quad	_L_1+20903
	.quad	_A__uXor_var_i16_i64
	.quad	_L_1+20922
	.quad	_A__uXor_param_i16_LC
	.quad	_L_1+20939
	.quad	_A__uXor_var_i16_LC
	.quad	_L_1+20957
	.quad	_A__uXor_param_i16_i16
	.quad	_L_1+20973
	.quad	_A__uXor_var_i16_i16
	.quad	_L_1+20992
	.quad	_A__uOr_param_i32_i32
	.quad	_L_1+21009
	.quad	_A__uOr_var_i32_i32
	.quad	_L_1+21027
	.quad	_A__uOr_param_i32_u16
	.quad	_L_1+21043
	.quad	_A__uOr_var_i32_u16
	.quad	_L_1+21061
	.quad	_A__uOr_param_i32_u64
	.quad	_L_1+21077
	.quad	_A__uOr_var_i32_u64
	.quad	_L_1+21095
	.quad	_A__uOr_param_i32_L
	.quad	_L_1+21111
	.quad	_A__uOr_var_i32_L
	.quad	_L_1+21127
	.quad	_A__uOr_param_i32_i8
	.quad	_L_1+21141
	.quad	_A__uOr_var_i32_i8
	.quad	_L_1+21158
	.quad	_A__uOr_param_i32_u32
	.quad	_L_1+21173
	.quad	_A__uOr_var_i32_u32
	.quad	_L_1+21191
	.quad	_A__uOr_param_i32_C
	.quad	_L_1+21207
	.quad	_A__uOr_var_i32_C
	.quad	_L_1+21223
	.quad	_A__uOr_param_i32_u8
	.quad	_L_1+21237
	.quad	_A__uOr_var_i32_u8
	.quad	_L_1+21254
	.quad	_A__uOr_param_i32_I
	.quad	_L_1+21269
	.quad	_A__uOr_var_i32_I
	.quad	_L_1+21285
	.quad	_A__uOr_param_i32_i64
	.quad	_L_1+21299
	.quad	_A__uOr_var_i32_i64
	.quad	_L_1+21317
	.quad	_A__uOr_param_i32_LC
	.quad	_L_1+21333
	.quad	_A__uOr_var_i32_LC
	.quad	_L_1+21350
	.quad	_A__uOr_param_i32_i16
	.quad	_L_1+21365
	.quad	_A__uOr_var_i32_i16
	.quad	_L_1+21383
	.quad	_A__uOr_param_u16_i32
	.quad	_L_1+21399
	.quad	_A__uOr_var_u16_i32
	.quad	_L_1+21417
	.quad	_A__uOr_param_u16_u16
	.quad	_L_1+21433
	.quad	_A__uOr_var_u16_u16
	.quad	_L_1+21451
	.quad	_A__uOr_param_u16_u64
	.quad	_L_1+21467
	.quad	_A__uOr_var_u16_u64
	.quad	_L_1+21485
	.quad	_A__uOr_param_u16_L
	.quad	_L_1+21501
	.quad	_A__uOr_var_u16_L
	.quad	_L_1+21517
	.quad	_A__uOr_param_u16_i8
	.quad	_L_1+21531
	.quad	_A__uOr_var_u16_i8
	.quad	_L_1+21548
	.quad	_A__uOr_param_u16_u32
	.quad	_L_1+21563
	.quad	_A__uOr_var_u16_u32
	.quad	_L_1+21581
	.quad	_A__uOr_param_u16_C
	.quad	_L_1+21597
	.quad	_A__uOr_var_u16_C
	.quad	_L_1+21613
	.quad	_A__uOr_param_u16_u8
	.quad	_L_1+21627
	.quad	_A__uOr_var_u16_u8
	.quad	_L_1+21644
	.quad	_A__uOr_param_u16_I
	.quad	_L_1+21659
	.quad	_A__uOr_var_u16_I
	.quad	_L_1+21675
	.quad	_A__uOr_param_u16_i64
	.quad	_L_1+21689
	.quad	_A__uOr_var_u16_i64
	.quad	_L_1+21707
	.quad	_A__uOr_param_u16_LC
	.quad	_L_1+21723
	.quad	_A__uOr_var_u16_LC
	.quad	_L_1+21740
	.quad	_A__uOr_param_u16_i16
	.quad	_L_1+21755
	.quad	_A__uOr_var_u16_i16
	.quad	_L_1+21773
	.quad	_A__uOr_param_u64_i32
	.quad	_L_1+21789
	.quad	_A__uOr_var_u64_i32
	.quad	_L_1+21807
	.quad	_A__uOr_param_u64_u16
	.quad	_L_1+21823
	.quad	_A__uOr_var_u64_u16
	.quad	_L_1+21841
	.quad	_A__uOr_param_u64_u64
	.quad	_L_1+21857
	.quad	_A__uOr_var_u64_u64
	.quad	_L_1+21875
	.quad	_A__uOr_param_u64_L
	.quad	_L_1+21891
	.quad	_A__uOr_var_u64_L
	.quad	_L_1+21907
	.quad	_A__uOr_param_u64_i8
	.quad	_L_1+21921
	.quad	_A__uOr_var_u64_i8
	.quad	_L_1+21938
	.quad	_A__uOr_param_u64_u32
	.quad	_L_1+21953
	.quad	_A__uOr_var_u64_u32
	.quad	_L_1+21971
	.quad	_A__uOr_param_u64_C
	.quad	_L_1+21987
	.quad	_A__uOr_var_u64_C
	.quad	_L_1+22003
	.quad	_A__uOr_param_u64_u8
	.quad	_L_1+22017
	.quad	_A__uOr_var_u64_u8
	.quad	_L_1+22034
	.quad	_A__uOr_param_u64_I
	.quad	_L_1+22049
	.quad	_A__uOr_var_u64_I
	.quad	_L_1+22065
	.quad	_A__uOr_param_u64_i64
	.quad	_L_1+22079
	.quad	_A__uOr_var_u64_i64
	.quad	_L_1+22097
	.quad	_A__uOr_param_u64_LC
	.quad	_L_1+22113
	.quad	_A__uOr_var_u64_LC
	.quad	_L_1+22130
	.quad	_A__uOr_param_u64_i16
	.quad	_L_1+22145
	.quad	_A__uOr_var_u64_i16
	.quad	_L_1+22163
	.quad	_A__uOr_param_L_i32
	.quad	_L_1+22179
	.quad	_A__uOr_var_L_i32
	.quad	_L_1+22195
	.quad	_A__uOr_param_L_u16
	.quad	_L_1+22209
	.quad	_A__uOr_var_L_u16
	.quad	_L_1+22225
	.quad	_A__uOr_param_L_u64
	.quad	_L_1+22239
	.quad	_A__uOr_var_L_u64
	.quad	_L_1+22255
	.quad	_A__uOr_param_L_L
	.quad	_L_1+22269
	.quad	_A__uOr_var_L_L
	.quad	_L_1+22283
	.quad	_A__uOr_param_L_i8
	.quad	_L_1+22295
	.quad	_A__uOr_var_L_i8
	.quad	_L_1+22310
	.quad	_A__uOr_param_L_u32
	.quad	_L_1+22323
	.quad	_A__uOr_var_L_u32
	.quad	_L_1+22339
	.quad	_A__uOr_param_L_C
	.quad	_L_1+22353
	.quad	_A__uOr_var_L_C
	.quad	_L_1+22367
	.quad	_A__uOr_param_L_u8
	.quad	_L_1+22379
	.quad	_A__uOr_var_L_u8
	.quad	_L_1+22394
	.quad	_A__uOr_param_L_I
	.quad	_L_1+22407
	.quad	_A__uOr_var_L_I
	.quad	_L_1+22421
	.quad	_A__uOr_param_L_i64
	.quad	_L_1+22433
	.quad	_A__uOr_var_L_i64
	.quad	_L_1+22449
	.quad	_A__uOr_param_L_LC
	.quad	_L_1+22463
	.quad	_A__uOr_var_L_LC
	.quad	_L_1+22478
	.quad	_A__uOr_param_L_i16
	.quad	_L_1+22491
	.quad	_A__uOr_var_L_i16
	.quad	_L_1+22507
	.quad	_A__uOr_param_i8_i32
	.quad	_L_1+22521
	.quad	_A__uOr_var_i8_i32
	.quad	_L_1+22538
	.quad	_A__uOr_param_i8_u16
	.quad	_L_1+22553
	.quad	_A__uOr_var_i8_u16
	.quad	_L_1+22570
	.quad	_A__uOr_param_i8_u64
	.quad	_L_1+22585
	.quad	_A__uOr_var_i8_u64
	.quad	_L_1+22602
	.quad	_A__uOr_param_i8_L
	.quad	_L_1+22617
	.quad	_A__uOr_var_i8_L
	.quad	_L_1+22632
	.quad	_A__uOr_param_i8_i8
	.quad	_L_1+22645
	.quad	_A__uOr_var_i8_i8
	.quad	_L_1+22661
	.quad	_A__uOr_param_i8_u32
	.quad	_L_1+22675
	.quad	_A__uOr_var_i8_u32
	.quad	_L_1+22692
	.quad	_A__uOr_param_i8_C
	.quad	_L_1+22707
	.quad	_A__uOr_var_i8_C
	.quad	_L_1+22722
	.quad	_A__uOr_param_i8_u8
	.quad	_L_1+22735
	.quad	_A__uOr_var_i8_u8
	.quad	_L_1+22751
	.quad	_A__uOr_param_i8_I
	.quad	_L_1+22765
	.quad	_A__uOr_var_i8_I
	.quad	_L_1+22780
	.quad	_A__uOr_param_i8_i64
	.quad	_L_1+22793
	.quad	_A__uOr_var_i8_i64
	.quad	_L_1+22810
	.quad	_A__uOr_param_i8_LC
	.quad	_L_1+22825
	.quad	_A__uOr_var_i8_LC
	.quad	_L_1+22841
	.quad	_A__uOr_param_i8_i16
	.quad	_L_1+22855
	.quad	_A__uOr_var_i8_i16
	.quad	_L_1+22872
	.quad	_A__uOr_param_u32_i32
	.quad	_L_1+22887
	.quad	_A__uOr_var_u32_i32
	.quad	_L_1+22905
	.quad	_A__uOr_param_u32_u16
	.quad	_L_1+22921
	.quad	_A__uOr_var_u32_u16
	.quad	_L_1+22939
	.quad	_A__uOr_param_u32_u64
	.quad	_L_1+22955
	.quad	_A__uOr_var_u32_u64
	.quad	_L_1+22973
	.quad	_A__uOr_param_u32_L
	.quad	_L_1+22989
	.quad	_A__uOr_var_u32_L
	.quad	_L_1+23005
	.quad	_A__uOr_param_u32_i8
	.quad	_L_1+23019
	.quad	_A__uOr_var_u32_i8
	.quad	_L_1+23036
	.quad	_A__uOr_param_u32_u32
	.quad	_L_1+23051
	.quad	_A__uOr_var_u32_u32
	.quad	_L_1+23069
	.quad	_A__uOr_param_u32_C
	.quad	_L_1+23085
	.quad	_A__uOr_var_u32_C
	.quad	_L_1+23101
	.quad	_A__uOr_param_u32_u8
	.quad	_L_1+23115
	.quad	_A__uOr_var_u32_u8
	.quad	_L_1+23132
	.quad	_A__uOr_param_u32_I
	.quad	_L_1+23147
	.quad	_A__uOr_var_u32_I
	.quad	_L_1+23163
	.quad	_A__uOr_param_u32_i64
	.quad	_L_1+23177
	.quad	_A__uOr_var_u32_i64
	.quad	_L_1+23195
	.quad	_A__uOr_param_u32_LC
	.quad	_L_1+23211
	.quad	_A__uOr_var_u32_LC
	.quad	_L_1+23228
	.quad	_A__uOr_param_u32_i16
	.quad	_L_1+23243
	.quad	_A__uOr_var_u32_i16
	.quad	_L_1+23261
	.quad	_A__uOr_param_C_i32
	.quad	_L_1+23277
	.quad	_A__uOr_var_C_i32
	.quad	_L_1+23293
	.quad	_A__uOr_param_C_u16
	.quad	_L_1+23307
	.quad	_A__uOr_var_C_u16
	.quad	_L_1+23323
	.quad	_A__uOr_param_C_u64
	.quad	_L_1+23337
	.quad	_A__uOr_var_C_u64
	.quad	_L_1+23353
	.quad	_A__uOr_param_C_L
	.quad	_L_1+23367
	.quad	_A__uOr_var_C_L
	.quad	_L_1+23381
	.quad	_A__uOr_param_C_i8
	.quad	_L_1+23393
	.quad	_A__uOr_var_C_i8
	.quad	_L_1+23408
	.quad	_A__uOr_param_C_u32
	.quad	_L_1+23421
	.quad	_A__uOr_var_C_u32
	.quad	_L_1+23437
	.quad	_A__uOr_param_C_C
	.quad	_L_1+23451
	.quad	_A__uOr_var_C_C
	.quad	_L_1+23465
	.quad	_A__uOr_param_C_u8
	.quad	_L_1+23477
	.quad	_A__uOr_var_C_u8
	.quad	_L_1+23492
	.quad	_A__uOr_param_C_I
	.quad	_L_1+23505
	.quad	_A__uOr_var_C_I
	.quad	_L_1+23519
	.quad	_A__uOr_param_C_i64
	.quad	_L_1+23531
	.quad	_A__uOr_var_C_i64
	.quad	_L_1+23547
	.quad	_A__uOr_param_C_LC
	.quad	_L_1+23561
	.quad	_A__uOr_var_C_LC
	.quad	_L_1+23576
	.quad	_A__uOr_param_C_i16
	.quad	_L_1+23589
	.quad	_A__uOr_var_C_i16
	.quad	_L_1+23605
	.quad	_A__uOr_param_u8_i32
	.quad	_L_1+23619
	.quad	_A__uOr_var_u8_i32
	.quad	_L_1+23636
	.quad	_A__uOr_param_u8_u16
	.quad	_L_1+23651
	.quad	_A__uOr_var_u8_u16
	.quad	_L_1+23668
	.quad	_A__uOr_param_u8_u64
	.quad	_L_1+23683
	.quad	_A__uOr_var_u8_u64
	.quad	_L_1+23700
	.quad	_A__uOr_param_u8_L
	.quad	_L_1+23715
	.quad	_A__uOr_var_u8_L
	.quad	_L_1+23730
	.quad	_A__uOr_param_u8_i8
	.quad	_L_1+23743
	.quad	_A__uOr_var_u8_i8
	.quad	_L_1+23759
	.quad	_A__uOr_param_u8_u32
	.quad	_L_1+23773
	.quad	_A__uOr_var_u8_u32
	.quad	_L_1+23790
	.quad	_A__uOr_param_u8_C
	.quad	_L_1+23805
	.quad	_A__uOr_var_u8_C
	.quad	_L_1+23820
	.quad	_A__uOr_param_u8_u8
	.quad	_L_1+23833
	.quad	_A__uOr_var_u8_u8
	.quad	_L_1+23849
	.quad	_A__uOr_param_u8_I
	.quad	_L_1+23863
	.quad	_A__uOr_var_u8_I
	.quad	_L_1+23878
	.quad	_A__uOr_param_u8_i64
	.quad	_L_1+23891
	.quad	_A__uOr_var_u8_i64
	.quad	_L_1+23908
	.quad	_A__uOr_param_u8_LC
	.quad	_L_1+23923
	.quad	_A__uOr_var_u8_LC
	.quad	_L_1+23939
	.quad	_A__uOr_param_u8_i16
	.quad	_L_1+23953
	.quad	_A__uOr_var_u8_i16
	.quad	_L_1+23970
	.quad	_A__uOr_param_I_i32
	.quad	_L_1+23985
	.quad	_A__uOr_var_I_i32
	.quad	_L_1+24001
	.quad	_A__uOr_param_I_u16
	.quad	_L_1+24015
	.quad	_A__uOr_var_I_u16
	.quad	_L_1+24031
	.quad	_A__uOr_param_I_u64
	.quad	_L_1+24045
	.quad	_A__uOr_var_I_u64
	.quad	_L_1+24061
	.quad	_A__uOr_param_I_L
	.quad	_L_1+24075
	.quad	_A__uOr_var_I_L
	.quad	_L_1+24089
	.quad	_A__uOr_param_I_i8
	.quad	_L_1+24101
	.quad	_A__uOr_var_I_i8
	.quad	_L_1+24116
	.quad	_A__uOr_param_I_u32
	.quad	_L_1+24129
	.quad	_A__uOr_var_I_u32
	.quad	_L_1+24145
	.quad	_A__uOr_param_I_C
	.quad	_L_1+24159
	.quad	_A__uOr_var_I_C
	.quad	_L_1+24173
	.quad	_A__uOr_param_I_u8
	.quad	_L_1+24185
	.quad	_A__uOr_var_I_u8
	.quad	_L_1+24200
	.quad	_A__uOr_param_I_I
	.quad	_L_1+24213
	.quad	_A__uOr_var_I_I
	.quad	_L_1+24227
	.quad	_A__uOr_param_I_i64
	.quad	_L_1+24239
	.quad	_A__uOr_var_I_i64
	.quad	_L_1+24255
	.quad	_A__uOr_param_I_LC
	.quad	_L_1+24269
	.quad	_A__uOr_var_I_LC
	.quad	_L_1+24284
	.quad	_A__uOr_param_I_i16
	.quad	_L_1+24297
	.quad	_A__uOr_var_I_i16
	.quad	_L_1+24313
	.quad	_A__uOr_param_i64_i32
	.quad	_L_1+24327
	.quad	_A__uOr_var_i64_i32
	.quad	_L_1+24345
	.quad	_A__uOr_param_i64_u16
	.quad	_L_1+24361
	.quad	_A__uOr_var_i64_u16
	.quad	_L_1+24379
	.quad	_A__uOr_param_i64_u64
	.quad	_L_1+24395
	.quad	_A__uOr_var_i64_u64
	.quad	_L_1+24413
	.quad	_A__uOr_param_i64_L
	.quad	_L_1+24429
	.quad	_A__uOr_var_i64_L
	.quad	_L_1+24445
	.quad	_A__uOr_param_i64_i8
	.quad	_L_1+24459
	.quad	_A__uOr_var_i64_i8
	.quad	_L_1+24476
	.quad	_A__uOr_param_i64_u32
	.quad	_L_1+24491
	.quad	_A__uOr_var_i64_u32
	.quad	_L_1+24509
	.quad	_A__uOr_param_i64_C
	.quad	_L_1+24525
	.quad	_A__uOr_var_i64_C
	.quad	_L_1+24541
	.quad	_A__uOr_param_i64_u8
	.quad	_L_1+24555
	.quad	_A__uOr_var_i64_u8
	.quad	_L_1+24572
	.quad	_A__uOr_param_i64_I
	.quad	_L_1+24587
	.quad	_A__uOr_var_i64_I
	.quad	_L_1+24603
	.quad	_A__uOr_param_i64_i64
	.quad	_L_1+24617
	.quad	_A__uOr_var_i64_i64
	.quad	_L_1+24635
	.quad	_A__uOr_param_i64_LC
	.quad	_L_1+24651
	.quad	_A__uOr_var_i64_LC
	.quad	_L_1+24668
	.quad	_A__uOr_param_i64_i16
	.quad	_L_1+24683
	.quad	_A__uOr_var_i64_i16
	.quad	_L_1+24701
	.quad	_A__uOr_param_LC_i32
	.quad	_L_1+24717
	.quad	_A__uOr_var_LC_i32
	.quad	_L_1+24734
	.quad	_A__uOr_param_LC_u16
	.quad	_L_1+24749
	.quad	_A__uOr_var_LC_u16
	.quad	_L_1+24766
	.quad	_A__uOr_param_LC_u64
	.quad	_L_1+24781
	.quad	_A__uOr_var_LC_u64
	.quad	_L_1+24798
	.quad	_A__uOr_param_LC_L
	.quad	_L_1+24813
	.quad	_A__uOr_var_LC_L
	.quad	_L_1+24828
	.quad	_A__uOr_param_LC_i8
	.quad	_L_1+24841
	.quad	_A__uOr_var_LC_i8
	.quad	_L_1+24857
	.quad	_A__uOr_param_LC_u32
	.quad	_L_1+24871
	.quad	_A__uOr_var_LC_u32
	.quad	_L_1+24888
	.quad	_A__uOr_param_LC_C
	.quad	_L_1+24903
	.quad	_A__uOr_var_LC_C
	.quad	_L_1+24918
	.quad	_A__uOr_param_LC_u8
	.quad	_L_1+24931
	.quad	_A__uOr_var_LC_u8
	.quad	_L_1+24947
	.quad	_A__uOr_param_LC_I
	.quad	_L_1+24961
	.quad	_A__uOr_var_LC_I
	.quad	_L_1+24976
	.quad	_A__uOr_param_LC_i64
	.quad	_L_1+24989
	.quad	_A__uOr_var_LC_i64
	.quad	_L_1+25006
	.quad	_A__uOr_param_LC_LC
	.quad	_L_1+25021
	.quad	_A__uOr_var_LC_LC
	.quad	_L_1+25037
	.quad	_A__uOr_param_LC_i16
	.quad	_L_1+25051
	.quad	_A__uOr_var_LC_i16
	.quad	_L_1+25068
	.quad	_A__uOr_param_i16_i32
	.quad	_L_1+25083
	.quad	_A__uOr_var_i16_i32
	.quad	_L_1+25101
	.quad	_A__uOr_param_i16_u16
	.quad	_L_1+25117
	.quad	_A__uOr_var_i16_u16
	.quad	_L_1+25135
	.quad	_A__uOr_param_i16_u64
	.quad	_L_1+25151
	.quad	_A__uOr_var_i16_u64
	.quad	_L_1+25169
	.quad	_A__uOr_param_i16_L
	.quad	_L_1+25185
	.quad	_A__uOr_var_i16_L
	.quad	_L_1+25201
	.quad	_A__uOr_param_i16_i8
	.quad	_L_1+25215
	.quad	_A__uOr_var_i16_i8
	.quad	_L_1+25232
	.quad	_A__uOr_param_i16_u32
	.quad	_L_1+25247
	.quad	_A__uOr_var_i16_u32
	.quad	_L_1+25265
	.quad	_A__uOr_param_i16_C
	.quad	_L_1+25281
	.quad	_A__uOr_var_i16_C
	.quad	_L_1+25297
	.quad	_A__uOr_param_i16_u8
	.quad	_L_1+25311
	.quad	_A__uOr_var_i16_u8
	.quad	_L_1+25328
	.quad	_A__uOr_param_i16_I
	.quad	_L_1+25343
	.quad	_A__uOr_var_i16_I
	.quad	_L_1+25359
	.quad	_A__uOr_param_i16_i64
	.quad	_L_1+25373
	.quad	_A__uOr_var_i16_i64
	.quad	_L_1+25391
	.quad	_A__uOr_param_i16_LC
	.quad	_L_1+25407
	.quad	_A__uOr_var_i16_LC
	.quad	_L_1+25424
	.quad	_A__uOr_param_i16_i16
	.quad	_L_1+25439
	.quad	_A__uOr_var_i16_i16
	.quad	_L_1+25457
	.quad	_A__uAnd_param_i32_i32
	.quad	_L_1+25473
	.quad	_A__uAnd_var_i32_i32
	.quad	_L_1+25492
	.quad	_A__uAnd_param_i32_u16
	.quad	_L_1+25509
	.quad	_A__uAnd_var_i32_u16
	.quad	_L_1+25528
	.quad	_A__uAnd_param_i32_u64
	.quad	_L_1+25545
	.quad	_A__uAnd_var_i32_u64
	.quad	_L_1+25564
	.quad	_A__uAnd_param_i32_L
	.quad	_L_1+25581
	.quad	_A__uAnd_var_i32_L
	.quad	_L_1+25598
	.quad	_A__uAnd_param_i32_i8
	.quad	_L_1+25613
	.quad	_A__uAnd_var_i32_i8
	.quad	_L_1+25631
	.quad	_A__uAnd_param_i32_u32
	.quad	_L_1+25647
	.quad	_A__uAnd_var_i32_u32
	.quad	_L_1+25666
	.quad	_A__uAnd_param_i32_C
	.quad	_L_1+25683
	.quad	_A__uAnd_var_i32_C
	.quad	_L_1+25700
	.quad	_A__uAnd_param_i32_u8
	.quad	_L_1+25715
	.quad	_A__uAnd_var_i32_u8
	.quad	_L_1+25733
	.quad	_A__uAnd_param_i32_I
	.quad	_L_1+25749
	.quad	_A__uAnd_var_i32_I
	.quad	_L_1+25766
	.quad	_A__uAnd_param_i32_i64
	.quad	_L_1+25781
	.quad	_A__uAnd_var_i32_i64
	.quad	_L_1+25800
	.quad	_A__uAnd_param_i32_LC
	.quad	_L_1+25817
	.quad	_A__uAnd_var_i32_LC
	.quad	_L_1+25835
	.quad	_A__uAnd_param_i32_i16
	.quad	_L_1+25851
	.quad	_A__uAnd_var_i32_i16
	.quad	_L_1+25870
	.quad	_A__uAnd_param_u16_i32
	.quad	_L_1+25887
	.quad	_A__uAnd_var_u16_i32
	.quad	_L_1+25906
	.quad	_A__uAnd_param_u16_u16
	.quad	_L_1+25923
	.quad	_A__uAnd_var_u16_u16
	.quad	_L_1+25942
	.quad	_A__uAnd_param_u16_u64
	.quad	_L_1+25959
	.quad	_A__uAnd_var_u16_u64
	.quad	_L_1+25978
	.quad	_A__uAnd_param_u16_L
	.quad	_L_1+25995
	.quad	_A__uAnd_var_u16_L
	.quad	_L_1+26012
	.quad	_A__uAnd_param_u16_i8
	.quad	_L_1+26027
	.quad	_A__uAnd_var_u16_i8
	.quad	_L_1+26045
	.quad	_A__uAnd_param_u16_u32
	.quad	_L_1+26061
	.quad	_A__uAnd_var_u16_u32
	.quad	_L_1+26080
	.quad	_A__uAnd_param_u16_C
	.quad	_L_1+26097
	.quad	_A__uAnd_var_u16_C
	.quad	_L_1+26114
	.quad	_A__uAnd_param_u16_u8
	.quad	_L_1+26129
	.quad	_A__uAnd_var_u16_u8
	.quad	_L_1+26147
	.quad	_A__uAnd_param_u16_I
	.quad	_L_1+26163
	.quad	_A__uAnd_var_u16_I
	.quad	_L_1+26180
	.quad	_A__uAnd_param_u16_i64
	.quad	_L_1+26195
	.quad	_A__uAnd_var_u16_i64
	.quad	_L_1+26214
	.quad	_A__uAnd_param_u16_LC
	.quad	_L_1+26231
	.quad	_A__uAnd_var_u16_LC
	.quad	_L_1+26249
	.quad	_A__uAnd_param_u16_i16
	.quad	_L_1+26265
	.quad	_A__uAnd_var_u16_i16
	.quad	_L_1+26284
	.quad	_A__uAnd_param_u64_i32
	.quad	_L_1+26301
	.quad	_A__uAnd_var_u64_i32
	.quad	_L_1+26320
	.quad	_A__uAnd_param_u64_u16
	.quad	_L_1+26337
	.quad	_A__uAnd_var_u64_u16
	.quad	_L_1+26356
	.quad	_A__uAnd_param_u64_u64
	.quad	_L_1+26373
	.quad	_A__uAnd_var_u64_u64
	.quad	_L_1+26392
	.quad	_A__uAnd_param_u64_L
	.quad	_L_1+26409
	.quad	_A__uAnd_var_u64_L
	.quad	_L_1+26426
	.quad	_A__uAnd_param_u64_i8
	.quad	_L_1+26441
	.quad	_A__uAnd_var_u64_i8
	.quad	_L_1+26459
	.quad	_A__uAnd_param_u64_u32
	.quad	_L_1+26475
	.quad	_A__uAnd_var_u64_u32
	.quad	_L_1+26494
	.quad	_A__uAnd_param_u64_C
	.quad	_L_1+26511
	.quad	_A__uAnd_var_u64_C
	.quad	_L_1+26528
	.quad	_A__uAnd_param_u64_u8
	.quad	_L_1+26543
	.quad	_A__uAnd_var_u64_u8
	.quad	_L_1+26561
	.quad	_A__uAnd_param_u64_I
	.quad	_L_1+26577
	.quad	_A__uAnd_var_u64_I
	.quad	_L_1+26594
	.quad	_A__uAnd_param_u64_i64
	.quad	_L_1+26609
	.quad	_A__uAnd_var_u64_i64
	.quad	_L_1+26628
	.quad	_A__uAnd_param_u64_LC
	.quad	_L_1+26645
	.quad	_A__uAnd_var_u64_LC
	.quad	_L_1+26663
	.quad	_A__uAnd_param_u64_i16
	.quad	_L_1+26679
	.quad	_A__uAnd_var_u64_i16
	.quad	_L_1+26698
	.quad	_A__uAnd_param_L_i32
	.quad	_L_1+26715
	.quad	_A__uAnd_var_L_i32
	.quad	_L_1+26732
	.quad	_A__uAnd_param_L_u16
	.quad	_L_1+26747
	.quad	_A__uAnd_var_L_u16
	.quad	_L_1+26764
	.quad	_A__uAnd_param_L_u64
	.quad	_L_1+26779
	.quad	_A__uAnd_var_L_u64
	.quad	_L_1+26796
	.quad	_A__uAnd_param_L_L
	.quad	_L_1+26811
	.quad	_A__uAnd_var_L_L
	.quad	_L_1+26826
	.quad	_A__uAnd_param_L_i8
	.quad	_L_1+26839
	.quad	_A__uAnd_var_L_i8
	.quad	_L_1+26855
	.quad	_A__uAnd_param_L_u32
	.quad	_L_1+26869
	.quad	_A__uAnd_var_L_u32
	.quad	_L_1+26886
	.quad	_A__uAnd_param_L_C
	.quad	_L_1+26901
	.quad	_A__uAnd_var_L_C
	.quad	_L_1+26916
	.quad	_A__uAnd_param_L_u8
	.quad	_L_1+26929
	.quad	_A__uAnd_var_L_u8
	.quad	_L_1+26945
	.quad	_A__uAnd_param_L_I
	.quad	_L_1+26959
	.quad	_A__uAnd_var_L_I
	.quad	_L_1+26974
	.quad	_A__uAnd_param_L_i64
	.quad	_L_1+26987
	.quad	_A__uAnd_var_L_i64
	.quad	_L_1+27004
	.quad	_A__uAnd_param_L_LC
	.quad	_L_1+27019
	.quad	_A__uAnd_var_L_LC
	.quad	_L_1+27035
	.quad	_A__uAnd_param_L_i16
	.quad	_L_1+27049
	.quad	_A__uAnd_var_L_i16
	.quad	_L_1+27066
	.quad	_A__uAnd_param_i8_i32
	.quad	_L_1+27081
	.quad	_A__uAnd_var_i8_i32
	.quad	_L_1+27099
	.quad	_A__uAnd_param_i8_u16
	.quad	_L_1+27115
	.quad	_A__uAnd_var_i8_u16
	.quad	_L_1+27133
	.quad	_A__uAnd_param_i8_u64
	.quad	_L_1+27149
	.quad	_A__uAnd_var_i8_u64
	.quad	_L_1+27167
	.quad	_A__uAnd_param_i8_L
	.quad	_L_1+27183
	.quad	_A__uAnd_var_i8_L
	.quad	_L_1+27199
	.quad	_A__uAnd_param_i8_i8
	.quad	_L_1+27213
	.quad	_A__uAnd_var_i8_i8
	.quad	_L_1+27230
	.quad	_A__uAnd_param_i8_u32
	.quad	_L_1+27245
	.quad	_A__uAnd_var_i8_u32
	.quad	_L_1+27263
	.quad	_A__uAnd_param_i8_C
	.quad	_L_1+27279
	.quad	_A__uAnd_var_i8_C
	.quad	_L_1+27295
	.quad	_A__uAnd_param_i8_u8
	.quad	_L_1+27309
	.quad	_A__uAnd_var_i8_u8
	.quad	_L_1+27326
	.quad	_A__uAnd_param_i8_I
	.quad	_L_1+27341
	.quad	_A__uAnd_var_i8_I
	.quad	_L_1+27357
	.quad	_A__uAnd_param_i8_i64
	.quad	_L_1+27371
	.quad	_A__uAnd_var_i8_i64
	.quad	_L_1+27389
	.quad	_A__uAnd_param_i8_LC
	.quad	_L_1+27405
	.quad	_A__uAnd_var_i8_LC
	.quad	_L_1+27422
	.quad	_A__uAnd_param_i8_i16
	.quad	_L_1+27437
	.quad	_A__uAnd_var_i8_i16
	.quad	_L_1+27455
	.quad	_A__uAnd_param_u32_i32
	.quad	_L_1+27471
	.quad	_A__uAnd_var_u32_i32
	.quad	_L_1+27490
	.quad	_A__uAnd_param_u32_u16
	.quad	_L_1+27507
	.quad	_A__uAnd_var_u32_u16
	.quad	_L_1+27526
	.quad	_A__uAnd_param_u32_u64
	.quad	_L_1+27543
	.quad	_A__uAnd_var_u32_u64
	.quad	_L_1+27562
	.quad	_A__uAnd_param_u32_L
	.quad	_L_1+27579
	.quad	_A__uAnd_var_u32_L
	.quad	_L_1+27596
	.quad	_A__uAnd_param_u32_i8
	.quad	_L_1+27611
	.quad	_A__uAnd_var_u32_i8
	.quad	_L_1+27629
	.quad	_A__uAnd_param_u32_u32
	.quad	_L_1+27645
	.quad	_A__uAnd_var_u32_u32
	.quad	_L_1+27664
	.quad	_A__uAnd_param_u32_C
	.quad	_L_1+27681
	.quad	_A__uAnd_var_u32_C
	.quad	_L_1+27698
	.quad	_A__uAnd_param_u32_u8
	.quad	_L_1+27713
	.quad	_A__uAnd_var_u32_u8
	.quad	_L_1+27731
	.quad	_A__uAnd_param_u32_I
	.quad	_L_1+27747
	.quad	_A__uAnd_var_u32_I
	.quad	_L_1+27764
	.quad	_A__uAnd_param_u32_i64
	.quad	_L_1+27779
	.quad	_A__uAnd_var_u32_i64
	.quad	_L_1+27798
	.quad	_A__uAnd_param_u32_LC
	.quad	_L_1+27815
	.quad	_A__uAnd_var_u32_LC
	.quad	_L_1+27833
	.quad	_A__uAnd_param_u32_i16
	.quad	_L_1+27849
	.quad	_A__uAnd_var_u32_i16
	.quad	_L_1+27868
	.quad	_A__uAnd_param_C_i32
	.quad	_L_1+27885
	.quad	_A__uAnd_var_C_i32
	.quad	_L_1+27902
	.quad	_A__uAnd_param_C_u16
	.quad	_L_1+27917
	.quad	_A__uAnd_var_C_u16
	.quad	_L_1+27934
	.quad	_A__uAnd_param_C_u64
	.quad	_L_1+27949
	.quad	_A__uAnd_var_C_u64
	.quad	_L_1+27966
	.quad	_A__uAnd_param_C_L
	.quad	_L_1+27981
	.quad	_A__uAnd_var_C_L
	.quad	_L_1+27996
	.quad	_A__uAnd_param_C_i8
	.quad	_L_1+28009
	.quad	_A__uAnd_var_C_i8
	.quad	_L_1+28025
	.quad	_A__uAnd_param_C_u32
	.quad	_L_1+28039
	.quad	_A__uAnd_var_C_u32
	.quad	_L_1+28056
	.quad	_A__uAnd_param_C_C
	.quad	_L_1+28071
	.quad	_A__uAnd_var_C_C
	.quad	_L_1+28086
	.quad	_A__uAnd_param_C_u8
	.quad	_L_1+28099
	.quad	_A__uAnd_var_C_u8
	.quad	_L_1+28115
	.quad	_A__uAnd_param_C_I
	.quad	_L_1+28129
	.quad	_A__uAnd_var_C_I
	.quad	_L_1+28144
	.quad	_A__uAnd_param_C_i64
	.quad	_L_1+28157
	.quad	_A__uAnd_var_C_i64
	.quad	_L_1+28174
	.quad	_A__uAnd_param_C_LC
	.quad	_L_1+28189
	.quad	_A__uAnd_var_C_LC
	.quad	_L_1+28205
	.quad	_A__uAnd_param_C_i16
	.quad	_L_1+28219
	.quad	_A__uAnd_var_C_i16
	.quad	_L_1+28236
	.quad	_A__uAnd_param_u8_i32
	.quad	_L_1+28251
	.quad	_A__uAnd_var_u8_i32
	.quad	_L_1+28269
	.quad	_A__uAnd_param_u8_u16
	.quad	_L_1+28285
	.quad	_A__uAnd_var_u8_u16
	.quad	_L_1+28303
	.quad	_A__uAnd_param_u8_u64
	.quad	_L_1+28319
	.quad	_A__uAnd_var_u8_u64
	.quad	_L_1+28337
	.quad	_A__uAnd_param_u8_L
	.quad	_L_1+28353
	.quad	_A__uAnd_var_u8_L
	.quad	_L_1+28369
	.quad	_A__uAnd_param_u8_i8
	.quad	_L_1+28383
	.quad	_A__uAnd_var_u8_i8
	.quad	_L_1+28400
	.quad	_A__uAnd_param_u8_u32
	.quad	_L_1+28415
	.quad	_A__uAnd_var_u8_u32
	.quad	_L_1+28433
	.quad	_A__uAnd_param_u8_C
	.quad	_L_1+28449
	.quad	_A__uAnd_var_u8_C
	.quad	_L_1+28465
	.quad	_A__uAnd_param_u8_u8
	.quad	_L_1+28479
	.quad	_A__uAnd_var_u8_u8
	.quad	_L_1+28496
	.quad	_A__uAnd_param_u8_I
	.quad	_L_1+28511
	.quad	_A__uAnd_var_u8_I
	.quad	_L_1+28527
	.quad	_A__uAnd_param_u8_i64
	.quad	_L_1+28541
	.quad	_A__uAnd_var_u8_i64
	.quad	_L_1+28559
	.quad	_A__uAnd_param_u8_LC
	.quad	_L_1+28575
	.quad	_A__uAnd_var_u8_LC
	.quad	_L_1+28592
	.quad	_A__uAnd_param_u8_i16
	.quad	_L_1+28607
	.quad	_A__uAnd_var_u8_i16
	.quad	_L_1+28625
	.quad	_A__uAnd_param_I_i32
	.quad	_L_1+28641
	.quad	_A__uAnd_var_I_i32
	.quad	_L_1+28658
	.quad	_A__uAnd_param_I_u16
	.quad	_L_1+28673
	.quad	_A__uAnd_var_I_u16
	.quad	_L_1+28690
	.quad	_A__uAnd_param_I_u64
	.quad	_L_1+28705
	.quad	_A__uAnd_var_I_u64
	.quad	_L_1+28722
	.quad	_A__uAnd_param_I_L
	.quad	_L_1+28737
	.quad	_A__uAnd_var_I_L
	.quad	_L_1+28752
	.quad	_A__uAnd_param_I_i8
	.quad	_L_1+28765
	.quad	_A__uAnd_var_I_i8
	.quad	_L_1+28781
	.quad	_A__uAnd_param_I_u32
	.quad	_L_1+28795
	.quad	_A__uAnd_var_I_u32
	.quad	_L_1+28812
	.quad	_A__uAnd_param_I_C
	.quad	_L_1+28827
	.quad	_A__uAnd_var_I_C
	.quad	_L_1+28842
	.quad	_A__uAnd_param_I_u8
	.quad	_L_1+28855
	.quad	_A__uAnd_var_I_u8
	.quad	_L_1+28871
	.quad	_A__uAnd_param_I_I
	.quad	_L_1+28885
	.quad	_A__uAnd_var_I_I
	.quad	_L_1+28900
	.quad	_A__uAnd_param_I_i64
	.quad	_L_1+28913
	.quad	_A__uAnd_var_I_i64
	.quad	_L_1+28930
	.quad	_A__uAnd_param_I_LC
	.quad	_L_1+28945
	.quad	_A__uAnd_var_I_LC
	.quad	_L_1+28961
	.quad	_A__uAnd_param_I_i16
	.quad	_L_1+28975
	.quad	_A__uAnd_var_I_i16
	.quad	_L_1+28992
	.quad	_A__uAnd_param_i64_i32
	.quad	_L_1+29007
	.quad	_A__uAnd_var_i64_i32
	.quad	_L_1+29026
	.quad	_A__uAnd_param_i64_u16
	.quad	_L_1+29043
	.quad	_A__uAnd_var_i64_u16
	.quad	_L_1+29062
	.quad	_A__uAnd_param_i64_u64
	.quad	_L_1+29079
	.quad	_A__uAnd_var_i64_u64
	.quad	_L_1+29098
	.quad	_A__uAnd_param_i64_L
	.quad	_L_1+29115
	.quad	_A__uAnd_var_i64_L
	.quad	_L_1+29132
	.quad	_A__uAnd_param_i64_i8
	.quad	_L_1+29147
	.quad	_A__uAnd_var_i64_i8
	.quad	_L_1+29165
	.quad	_A__uAnd_param_i64_u32
	.quad	_L_1+29181
	.quad	_A__uAnd_var_i64_u32
	.quad	_L_1+29200
	.quad	_A__uAnd_param_i64_C
	.quad	_L_1+29217
	.quad	_A__uAnd_var_i64_C
	.quad	_L_1+29234
	.quad	_A__uAnd_param_i64_u8
	.quad	_L_1+29249
	.quad	_A__uAnd_var_i64_u8
	.quad	_L_1+29267
	.quad	_A__uAnd_param_i64_I
	.quad	_L_1+29283
	.quad	_A__uAnd_var_i64_I
	.quad	_L_1+29300
	.quad	_A__uAnd_param_i64_i64
	.quad	_L_1+29315
	.quad	_A__uAnd_var_i64_i64
	.quad	_L_1+29334
	.quad	_A__uAnd_param_i64_LC
	.quad	_L_1+29351
	.quad	_A__uAnd_var_i64_LC
	.quad	_L_1+29369
	.quad	_A__uAnd_param_i64_i16
	.quad	_L_1+29385
	.quad	_A__uAnd_var_i64_i16
	.quad	_L_1+29404
	.quad	_A__uAnd_param_LC_i32
	.quad	_L_1+29421
	.quad	_A__uAnd_var_LC_i32
	.quad	_L_1+29439
	.quad	_A__uAnd_param_LC_u16
	.quad	_L_1+29455
	.quad	_A__uAnd_var_LC_u16
	.quad	_L_1+29473
	.quad	_A__uAnd_param_LC_u64
	.quad	_L_1+29489
	.quad	_A__uAnd_var_LC_u64
	.quad	_L_1+29507
	.quad	_A__uAnd_param_LC_L
	.quad	_L_1+29523
	.quad	_A__uAnd_var_LC_L
	.quad	_L_1+29539
	.quad	_A__uAnd_param_LC_i8
	.quad	_L_1+29553
	.quad	_A__uAnd_var_LC_i8
	.quad	_L_1+29570
	.quad	_A__uAnd_param_LC_u32
	.quad	_L_1+29585
	.quad	_A__uAnd_var_LC_u32
	.quad	_L_1+29603
	.quad	_A__uAnd_param_LC_C
	.quad	_L_1+29619
	.quad	_A__uAnd_var_LC_C
	.quad	_L_1+29635
	.quad	_A__uAnd_param_LC_u8
	.quad	_L_1+29649
	.quad	_A__uAnd_var_LC_u8
	.quad	_L_1+29666
	.quad	_A__uAnd_param_LC_I
	.quad	_L_1+29681
	.quad	_A__uAnd_var_LC_I
	.quad	_L_1+29697
	.quad	_A__uAnd_param_LC_i64
	.quad	_L_1+29711
	.quad	_A__uAnd_var_LC_i64
	.quad	_L_1+29729
	.quad	_A__uAnd_param_LC_LC
	.quad	_L_1+29745
	.quad	_A__uAnd_var_LC_LC
	.quad	_L_1+29762
	.quad	_A__uAnd_param_LC_i16
	.quad	_L_1+29777
	.quad	_A__uAnd_var_LC_i16
	.quad	_L_1+29795
	.quad	_A__uAnd_param_i16_i32
	.quad	_L_1+29811
	.quad	_A__uAnd_var_i16_i32
	.quad	_L_1+29830
	.quad	_A__uAnd_param_i16_u16
	.quad	_L_1+29847
	.quad	_A__uAnd_var_i16_u16
	.quad	_L_1+29866
	.quad	_A__uAnd_param_i16_u64
	.quad	_L_1+29883
	.quad	_A__uAnd_var_i16_u64
	.quad	_L_1+29902
	.quad	_A__uAnd_param_i16_L
	.quad	_L_1+29919
	.quad	_A__uAnd_var_i16_L
	.quad	_L_1+29936
	.quad	_A__uAnd_param_i16_i8
	.quad	_L_1+29951
	.quad	_A__uAnd_var_i16_i8
	.quad	_L_1+29969
	.quad	_A__uAnd_param_i16_u32
	.quad	_L_1+29985
	.quad	_A__uAnd_var_i16_u32
	.quad	_L_1+30004
	.quad	_A__uAnd_param_i16_C
	.quad	_L_1+30021
	.quad	_A__uAnd_var_i16_C
	.quad	_L_1+30038
	.quad	_A__uAnd_param_i16_u8
	.quad	_L_1+30053
	.quad	_A__uAnd_var_i16_u8
	.quad	_L_1+30071
	.quad	_A__uAnd_param_i16_I
	.quad	_L_1+30087
	.quad	_A__uAnd_var_i16_I
	.quad	_L_1+30104
	.quad	_A__uAnd_param_i16_i64
	.quad	_L_1+30119
	.quad	_A__uAnd_var_i16_i64
	.quad	_L_1+30138
	.quad	_A__uAnd_param_i16_LC
	.quad	_L_1+30155
	.quad	_A__uAnd_var_i16_LC
	.quad	_L_1+30173
	.quad	_A__uAnd_param_i16_i16
	.quad	_L_1+30189
	.quad	_A__uAnd_var_i16_i16
	.quad	_L_1+30208
	.quad	_A__GE_param_i32_i32
	.quad	_L_1+30225
	.quad	_A__uGE_param_i32_i32
	.quad	_L_1+30242
	.quad	_A__GE_var_i32_i32
	.quad	_L_1+30260
	.quad	_A__uGE_var_i32_i32
	.quad	_L_1+30275
	.quad	_A__GE_param_i32_u16
	.quad	_L_1+30291
	.quad	_A__uGE_param_i32_u16
	.quad	_L_1+30308
	.quad	_A__GE_var_i32_u16
	.quad	_L_1+30326
	.quad	_A__uGE_var_i32_u16
	.quad	_L_1+30341
	.quad	_A__GE_param_i32_u64
	.quad	_L_1+30357
	.quad	_A__uGE_param_i32_u64
	.quad	_L_1+30374
	.quad	_A__GE_var_i32_u64
	.quad	_L_1+30392
	.quad	_A__uGE_var_i32_u64
	.quad	_L_1+30407
	.quad	_A__GE_param_i32_L
	.quad	_L_1+30423
	.quad	_A__uGE_param_i32_L
	.quad	_L_1+30438
	.quad	_A__GE_var_i32_L
	.quad	_L_1+30454
	.quad	_A__uGE_var_i32_L
	.quad	_L_1+30467
	.quad	_A__GE_param_i32_i8
	.quad	_L_1+30481
	.quad	_A__uGE_param_i32_i8
	.quad	_L_1+30497
	.quad	_A__GE_var_i32_i8
	.quad	_L_1+30514
	.quad	_A__uGE_var_i32_i8
	.quad	_L_1+30528
	.quad	_A__GE_param_i32_u32
	.quad	_L_1+30543
	.quad	_A__uGE_param_i32_u32
	.quad	_L_1+30560
	.quad	_A__GE_var_i32_u32
	.quad	_L_1+30578
	.quad	_A__uGE_var_i32_u32
	.quad	_L_1+30593
	.quad	_A__GE_param_i32_C
	.quad	_L_1+30609
	.quad	_A__uGE_param_i32_C
	.quad	_L_1+30624
	.quad	_A__GE_var_i32_C
	.quad	_L_1+30640
	.quad	_A__uGE_var_i32_C
	.quad	_L_1+30653
	.quad	_A__GE_param_i32_u8
	.quad	_L_1+30667
	.quad	_A__uGE_param_i32_u8
	.quad	_L_1+30683
	.quad	_A__GE_var_i32_u8
	.quad	_L_1+30700
	.quad	_A__uGE_var_i32_u8
	.quad	_L_1+30714
	.quad	_A__GE_param_i32_I
	.quad	_L_1+30729
	.quad	_A__uGE_param_i32_I
	.quad	_L_1+30744
	.quad	_A__GE_var_i32_I
	.quad	_L_1+30760
	.quad	_A__uGE_var_i32_I
	.quad	_L_1+30773
	.quad	_A__GE_param_i32_i64
	.quad	_L_1+30787
	.quad	_A__uGE_param_i32_i64
	.quad	_L_1+30804
	.quad	_A__GE_var_i32_i64
	.quad	_L_1+30822
	.quad	_A__uGE_var_i32_i64
	.quad	_L_1+30837
	.quad	_A__GE_param_i32_LC
	.quad	_L_1+30853
	.quad	_A__uGE_param_i32_LC
	.quad	_L_1+30869
	.quad	_A__GE_var_i32_LC
	.quad	_L_1+30886
	.quad	_A__uGE_var_i32_LC
	.quad	_L_1+30900
	.quad	_A__GE_param_i32_i16
	.quad	_L_1+30915
	.quad	_A__uGE_param_i32_i16
	.quad	_L_1+30932
	.quad	_A__GE_var_i32_i16
	.quad	_L_1+30950
	.quad	_A__uGE_var_i32_i16
	.quad	_L_1+30965
	.quad	_A__GE_param_u16_i32
	.quad	_L_1+30981
	.quad	_A__uGE_param_u16_i32
	.quad	_L_1+30998
	.quad	_A__GE_var_u16_i32
	.quad	_L_1+31016
	.quad	_A__uGE_var_u16_i32
	.quad	_L_1+31031
	.quad	_A__GE_param_u16_u16
	.quad	_L_1+31047
	.quad	_A__uGE_param_u16_u16
	.quad	_L_1+31064
	.quad	_A__GE_var_u16_u16
	.quad	_L_1+31082
	.quad	_A__uGE_var_u16_u16
	.quad	_L_1+31097
	.quad	_A__GE_param_u16_u64
	.quad	_L_1+31113
	.quad	_A__uGE_param_u16_u64
	.quad	_L_1+31130
	.quad	_A__GE_var_u16_u64
	.quad	_L_1+31148
	.quad	_A__uGE_var_u16_u64
	.quad	_L_1+31163
	.quad	_A__GE_param_u16_L
	.quad	_L_1+31179
	.quad	_A__uGE_param_u16_L
	.quad	_L_1+31194
	.quad	_A__GE_var_u16_L
	.quad	_L_1+31210
	.quad	_A__uGE_var_u16_L
	.quad	_L_1+31223
	.quad	_A__GE_param_u16_i8
	.quad	_L_1+31237
	.quad	_A__uGE_param_u16_i8
	.quad	_L_1+31253
	.quad	_A__GE_var_u16_i8
	.quad	_L_1+31270
	.quad	_A__uGE_var_u16_i8
	.quad	_L_1+31284
	.quad	_A__GE_param_u16_u32
	.quad	_L_1+31299
	.quad	_A__uGE_param_u16_u32
	.quad	_L_1+31316
	.quad	_A__GE_var_u16_u32
	.quad	_L_1+31334
	.quad	_A__uGE_var_u16_u32
	.quad	_L_1+31349
	.quad	_A__GE_param_u16_C
	.quad	_L_1+31365
	.quad	_A__uGE_param_u16_C
	.quad	_L_1+31380
	.quad	_A__GE_var_u16_C
	.quad	_L_1+31396
	.quad	_A__uGE_var_u16_C
	.quad	_L_1+31409
	.quad	_A__GE_param_u16_u8
	.quad	_L_1+31423
	.quad	_A__uGE_param_u16_u8
	.quad	_L_1+31439
	.quad	_A__GE_var_u16_u8
	.quad	_L_1+31456
	.quad	_A__uGE_var_u16_u8
	.quad	_L_1+31470
	.quad	_A__GE_param_u16_I
	.quad	_L_1+31485
	.quad	_A__uGE_param_u16_I
	.quad	_L_1+31500
	.quad	_A__GE_var_u16_I
	.quad	_L_1+31516
	.quad	_A__uGE_var_u16_I
	.quad	_L_1+31529
	.quad	_A__GE_param_u16_i64
	.quad	_L_1+31543
	.quad	_A__uGE_param_u16_i64
	.quad	_L_1+31560
	.quad	_A__GE_var_u16_i64
	.quad	_L_1+31578
	.quad	_A__uGE_var_u16_i64
	.quad	_L_1+31593
	.quad	_A__GE_param_u16_LC
	.quad	_L_1+31609
	.quad	_A__uGE_param_u16_LC
	.quad	_L_1+31625
	.quad	_A__GE_var_u16_LC
	.quad	_L_1+31642
	.quad	_A__uGE_var_u16_LC
	.quad	_L_1+31656
	.quad	_A__GE_param_u16_i16
	.quad	_L_1+31671
	.quad	_A__uGE_param_u16_i16
	.quad	_L_1+31688
	.quad	_A__GE_var_u16_i16
	.quad	_L_1+31706
	.quad	_A__uGE_var_u16_i16
	.quad	_L_1+31721
	.quad	_A__GE_param_u64_i32
	.quad	_L_1+31737
	.quad	_A__uGE_param_u64_i32
	.quad	_L_1+31754
	.quad	_A__GE_var_u64_i32
	.quad	_L_1+31772
	.quad	_A__uGE_var_u64_i32
	.quad	_L_1+31787
	.quad	_A__GE_param_u64_u16
	.quad	_L_1+31803
	.quad	_A__uGE_param_u64_u16
	.quad	_L_1+31820
	.quad	_A__GE_var_u64_u16
	.quad	_L_1+31838
	.quad	_A__uGE_var_u64_u16
	.quad	_L_1+31853
	.quad	_A__GE_param_u64_u64
	.quad	_L_1+31869
	.quad	_A__uGE_param_u64_u64
	.quad	_L_1+31886
	.quad	_A__GE_var_u64_u64
	.quad	_L_1+31904
	.quad	_A__uGE_var_u64_u64
	.quad	_L_1+31919
	.quad	_A__GE_param_u64_L
	.quad	_L_1+31935
	.quad	_A__uGE_param_u64_L
	.quad	_L_1+31950
	.quad	_A__GE_var_u64_L
	.quad	_L_1+31966
	.quad	_A__uGE_var_u64_L
	.quad	_L_1+31979
	.quad	_A__GE_param_u64_i8
	.quad	_L_1+31993
	.quad	_A__uGE_param_u64_i8
	.quad	_L_1+32009
	.quad	_A__GE_var_u64_i8
	.quad	_L_1+32026
	.quad	_A__uGE_var_u64_i8
	.quad	_L_1+32040
	.quad	_A__GE_param_u64_u32
	.quad	_L_1+32055
	.quad	_A__uGE_param_u64_u32
	.quad	_L_1+32072
	.quad	_A__GE_var_u64_u32
	.quad	_L_1+32090
	.quad	_A__uGE_var_u64_u32
	.quad	_L_1+32105
	.quad	_A__GE_param_u64_C
	.quad	_L_1+32121
	.quad	_A__uGE_param_u64_C
	.quad	_L_1+32136
	.quad	_A__GE_var_u64_C
	.quad	_L_1+32152
	.quad	_A__uGE_var_u64_C
	.quad	_L_1+32165
	.quad	_A__GE_param_u64_u8
	.quad	_L_1+32179
	.quad	_A__uGE_param_u64_u8
	.quad	_L_1+32195
	.quad	_A__GE_var_u64_u8
	.quad	_L_1+32212
	.quad	_A__uGE_var_u64_u8
	.quad	_L_1+32226
	.quad	_A__GE_param_u64_I
	.quad	_L_1+32241
	.quad	_A__uGE_param_u64_I
	.quad	_L_1+32256
	.quad	_A__GE_var_u64_I
	.quad	_L_1+32272
	.quad	_A__uGE_var_u64_I
	.quad	_L_1+32285
	.quad	_A__GE_param_u64_i64
	.quad	_L_1+32299
	.quad	_A__uGE_param_u64_i64
	.quad	_L_1+32316
	.quad	_A__GE_var_u64_i64
	.quad	_L_1+32334
	.quad	_A__uGE_var_u64_i64
	.quad	_L_1+32349
	.quad	_A__GE_param_u64_LC
	.quad	_L_1+32365
	.quad	_A__uGE_param_u64_LC
	.quad	_L_1+32381
	.quad	_A__GE_var_u64_LC
	.quad	_L_1+32398
	.quad	_A__uGE_var_u64_LC
	.quad	_L_1+32412
	.quad	_A__GE_param_u64_i16
	.quad	_L_1+32427
	.quad	_A__uGE_param_u64_i16
	.quad	_L_1+32444
	.quad	_A__GE_var_u64_i16
	.quad	_L_1+32462
	.quad	_A__uGE_var_u64_i16
	.quad	_L_1+32477
	.quad	_A__GE_param_L_i32
	.quad	_L_1+32493
	.quad	_A__uGE_param_L_i32
	.quad	_L_1+32508
	.quad	_A__GE_var_L_i32
	.quad	_L_1+32524
	.quad	_A__uGE_var_L_i32
	.quad	_L_1+32537
	.quad	_A__GE_param_L_u16
	.quad	_L_1+32551
	.quad	_A__uGE_param_L_u16
	.quad	_L_1+32566
	.quad	_A__GE_var_L_u16
	.quad	_L_1+32582
	.quad	_A__uGE_var_L_u16
	.quad	_L_1+32595
	.quad	_A__GE_param_L_u64
	.quad	_L_1+32609
	.quad	_A__uGE_param_L_u64
	.quad	_L_1+32624
	.quad	_A__GE_var_L_u64
	.quad	_L_1+32640
	.quad	_A__uGE_var_L_u64
	.quad	_L_1+32653
	.quad	_A__GE_param_L_L
	.quad	_L_1+32667
	.quad	_A__uGE_param_L_L
	.quad	_L_1+32680
	.quad	_A__GE_var_L_L
	.quad	_L_1+32694
	.quad	_A__uGE_var_L_L
	.quad	_L_1+32705
	.quad	_A__GE_param_L_i8
	.quad	_L_1+32717
	.quad	_A__uGE_param_L_i8
	.quad	_L_1+32731
	.quad	_A__GE_var_L_i8
	.quad	_L_1+32746
	.quad	_A__uGE_var_L_i8
	.quad	_L_1+32758
	.quad	_A__GE_param_L_u32
	.quad	_L_1+32771
	.quad	_A__uGE_param_L_u32
	.quad	_L_1+32786
	.quad	_A__GE_var_L_u32
	.quad	_L_1+32802
	.quad	_A__uGE_var_L_u32
	.quad	_L_1+32815
	.quad	_A__GE_param_L_C
	.quad	_L_1+32829
	.quad	_A__uGE_param_L_C
	.quad	_L_1+32842
	.quad	_A__GE_var_L_C
	.quad	_L_1+32856
	.quad	_A__uGE_var_L_C
	.quad	_L_1+32867
	.quad	_A__GE_param_L_u8
	.quad	_L_1+32879
	.quad	_A__uGE_param_L_u8
	.quad	_L_1+32893
	.quad	_A__GE_var_L_u8
	.quad	_L_1+32908
	.quad	_A__uGE_var_L_u8
	.quad	_L_1+32920
	.quad	_A__GE_param_L_I
	.quad	_L_1+32933
	.quad	_A__uGE_param_L_I
	.quad	_L_1+32946
	.quad	_A__GE_var_L_I
	.quad	_L_1+32960
	.quad	_A__uGE_var_L_I
	.quad	_L_1+32971
	.quad	_A__GE_param_L_i64
	.quad	_L_1+32983
	.quad	_A__uGE_param_L_i64
	.quad	_L_1+32998
	.quad	_A__GE_var_L_i64
	.quad	_L_1+33014
	.quad	_A__uGE_var_L_i64
	.quad	_L_1+33027
	.quad	_A__GE_param_L_LC
	.quad	_L_1+33041
	.quad	_A__uGE_param_L_LC
	.quad	_L_1+33055
	.quad	_A__GE_var_L_LC
	.quad	_L_1+33070
	.quad	_A__uGE_var_L_LC
	.quad	_L_1+33082
	.quad	_A__GE_param_L_i16
	.quad	_L_1+33095
	.quad	_A__uGE_param_L_i16
	.quad	_L_1+33110
	.quad	_A__GE_var_L_i16
	.quad	_L_1+33126
	.quad	_A__uGE_var_L_i16
	.quad	_L_1+33139
	.quad	_A__GE_param_i8_i32
	.quad	_L_1+33153
	.quad	_A__uGE_param_i8_i32
	.quad	_L_1+33169
	.quad	_A__GE_var_i8_i32
	.quad	_L_1+33186
	.quad	_A__uGE_var_i8_i32
	.quad	_L_1+33200
	.quad	_A__GE_param_i8_u16
	.quad	_L_1+33215
	.quad	_A__uGE_param_i8_u16
	.quad	_L_1+33231
	.quad	_A__GE_var_i8_u16
	.quad	_L_1+33248
	.quad	_A__uGE_var_i8_u16
	.quad	_L_1+33262
	.quad	_A__GE_param_i8_u64
	.quad	_L_1+33277
	.quad	_A__uGE_param_i8_u64
	.quad	_L_1+33293
	.quad	_A__GE_var_i8_u64
	.quad	_L_1+33310
	.quad	_A__uGE_var_i8_u64
	.quad	_L_1+33324
	.quad	_A__GE_param_i8_L
	.quad	_L_1+33339
	.quad	_A__uGE_param_i8_L
	.quad	_L_1+33353
	.quad	_A__GE_var_i8_L
	.quad	_L_1+33368
	.quad	_A__uGE_var_i8_L
	.quad	_L_1+33380
	.quad	_A__GE_param_i8_i8
	.quad	_L_1+33393
	.quad	_A__uGE_param_i8_i8
	.quad	_L_1+33408
	.quad	_A__GE_var_i8_i8
	.quad	_L_1+33424
	.quad	_A__uGE_var_i8_i8
	.quad	_L_1+33437
	.quad	_A__GE_param_i8_u32
	.quad	_L_1+33451
	.quad	_A__uGE_param_i8_u32
	.quad	_L_1+33467
	.quad	_A__GE_var_i8_u32
	.quad	_L_1+33484
	.quad	_A__uGE_var_i8_u32
	.quad	_L_1+33498
	.quad	_A__GE_param_i8_C
	.quad	_L_1+33513
	.quad	_A__uGE_param_i8_C
	.quad	_L_1+33527
	.quad	_A__GE_var_i8_C
	.quad	_L_1+33542
	.quad	_A__uGE_var_i8_C
	.quad	_L_1+33554
	.quad	_A__GE_param_i8_u8
	.quad	_L_1+33567
	.quad	_A__uGE_param_i8_u8
	.quad	_L_1+33582
	.quad	_A__GE_var_i8_u8
	.quad	_L_1+33598
	.quad	_A__uGE_var_i8_u8
	.quad	_L_1+33611
	.quad	_A__GE_param_i8_I
	.quad	_L_1+33625
	.quad	_A__uGE_param_i8_I
	.quad	_L_1+33639
	.quad	_A__GE_var_i8_I
	.quad	_L_1+33654
	.quad	_A__uGE_var_i8_I
	.quad	_L_1+33666
	.quad	_A__GE_param_i8_i64
	.quad	_L_1+33679
	.quad	_A__uGE_param_i8_i64
	.quad	_L_1+33695
	.quad	_A__GE_var_i8_i64
	.quad	_L_1+33712
	.quad	_A__uGE_var_i8_i64
	.quad	_L_1+33726
	.quad	_A__GE_param_i8_LC
	.quad	_L_1+33741
	.quad	_A__uGE_param_i8_LC
	.quad	_L_1+33756
	.quad	_A__GE_var_i8_LC
	.quad	_L_1+33772
	.quad	_A__uGE_var_i8_LC
	.quad	_L_1+33785
	.quad	_A__GE_param_i8_i16
	.quad	_L_1+33799
	.quad	_A__uGE_param_i8_i16
	.quad	_L_1+33815
	.quad	_A__GE_var_i8_i16
	.quad	_L_1+33832
	.quad	_A__uGE_var_i8_i16
	.quad	_L_1+33846
	.quad	_A__GE_param_u32_i32
	.quad	_L_1+33861
	.quad	_A__uGE_param_u32_i32
	.quad	_L_1+33878
	.quad	_A__GE_var_u32_i32
	.quad	_L_1+33896
	.quad	_A__uGE_var_u32_i32
	.quad	_L_1+33911
	.quad	_A__GE_param_u32_u16
	.quad	_L_1+33927
	.quad	_A__uGE_param_u32_u16
	.quad	_L_1+33944
	.quad	_A__GE_var_u32_u16
	.quad	_L_1+33962
	.quad	_A__uGE_var_u32_u16
	.quad	_L_1+33977
	.quad	_A__GE_param_u32_u64
	.quad	_L_1+33993
	.quad	_A__uGE_param_u32_u64
	.quad	_L_1+34010
	.quad	_A__GE_var_u32_u64
	.quad	_L_1+34028
	.quad	_A__uGE_var_u32_u64
	.quad	_L_1+34043
	.quad	_A__GE_param_u32_L
	.quad	_L_1+34059
	.quad	_A__uGE_param_u32_L
	.quad	_L_1+34074
	.quad	_A__GE_var_u32_L
	.quad	_L_1+34090
	.quad	_A__uGE_var_u32_L
	.quad	_L_1+34103
	.quad	_A__GE_param_u32_i8
	.quad	_L_1+34117
	.quad	_A__uGE_param_u32_i8
	.quad	_L_1+34133
	.quad	_A__GE_var_u32_i8
	.quad	_L_1+34150
	.quad	_A__uGE_var_u32_i8
	.quad	_L_1+34164
	.quad	_A__GE_param_u32_u32
	.quad	_L_1+34179
	.quad	_A__uGE_param_u32_u32
	.quad	_L_1+34196
	.quad	_A__GE_var_u32_u32
	.quad	_L_1+34214
	.quad	_A__uGE_var_u32_u32
	.quad	_L_1+34229
	.quad	_A__GE_param_u32_C
	.quad	_L_1+34245
	.quad	_A__uGE_param_u32_C
	.quad	_L_1+34260
	.quad	_A__GE_var_u32_C
	.quad	_L_1+34276
	.quad	_A__uGE_var_u32_C
	.quad	_L_1+34289
	.quad	_A__GE_param_u32_u8
	.quad	_L_1+34303
	.quad	_A__uGE_param_u32_u8
	.quad	_L_1+34319
	.quad	_A__GE_var_u32_u8
	.quad	_L_1+34336
	.quad	_A__uGE_var_u32_u8
	.quad	_L_1+34350
	.quad	_A__GE_param_u32_I
	.quad	_L_1+34365
	.quad	_A__uGE_param_u32_I
	.quad	_L_1+34380
	.quad	_A__GE_var_u32_I
	.quad	_L_1+34396
	.quad	_A__uGE_var_u32_I
	.quad	_L_1+34409
	.quad	_A__GE_param_u32_i64
	.quad	_L_1+34423
	.quad	_A__uGE_param_u32_i64
	.quad	_L_1+34440
	.quad	_A__GE_var_u32_i64
	.quad	_L_1+34458
	.quad	_A__uGE_var_u32_i64
	.quad	_L_1+34473
	.quad	_A__GE_param_u32_LC
	.quad	_L_1+34489
	.quad	_A__uGE_param_u32_LC
	.quad	_L_1+34505
	.quad	_A__GE_var_u32_LC
	.quad	_L_1+34522
	.quad	_A__uGE_var_u32_LC
	.quad	_L_1+34536
	.quad	_A__GE_param_u32_i16
	.quad	_L_1+34551
	.quad	_A__uGE_param_u32_i16
	.quad	_L_1+34568
	.quad	_A__GE_var_u32_i16
	.quad	_L_1+34586
	.quad	_A__uGE_var_u32_i16
	.quad	_L_1+34601
	.quad	_A__GE_param_f32_f32
	.quad	_L_1+34617
	.quad	_A__GE_var_f32_f32
	.quad	_L_1+34634
	.quad	_A__GE_param_C_i32
	.quad	_L_1+34649
	.quad	_A__uGE_param_C_i32
	.quad	_L_1+34664
	.quad	_A__GE_var_C_i32
	.quad	_L_1+34680
	.quad	_A__uGE_var_C_i32
	.quad	_L_1+34693
	.quad	_A__GE_param_C_u16
	.quad	_L_1+34707
	.quad	_A__uGE_param_C_u16
	.quad	_L_1+34722
	.quad	_A__GE_var_C_u16
	.quad	_L_1+34738
	.quad	_A__uGE_var_C_u16
	.quad	_L_1+34751
	.quad	_A__GE_param_C_u64
	.quad	_L_1+34765
	.quad	_A__uGE_param_C_u64
	.quad	_L_1+34780
	.quad	_A__GE_var_C_u64
	.quad	_L_1+34796
	.quad	_A__uGE_var_C_u64
	.quad	_L_1+34809
	.quad	_A__GE_param_C_L
	.quad	_L_1+34823
	.quad	_A__uGE_param_C_L
	.quad	_L_1+34836
	.quad	_A__GE_var_C_L
	.quad	_L_1+34850
	.quad	_A__uGE_var_C_L
	.quad	_L_1+34861
	.quad	_A__GE_param_C_i8
	.quad	_L_1+34873
	.quad	_A__uGE_param_C_i8
	.quad	_L_1+34887
	.quad	_A__GE_var_C_i8
	.quad	_L_1+34902
	.quad	_A__uGE_var_C_i8
	.quad	_L_1+34914
	.quad	_A__GE_param_C_u32
	.quad	_L_1+34927
	.quad	_A__uGE_param_C_u32
	.quad	_L_1+34942
	.quad	_A__GE_var_C_u32
	.quad	_L_1+34958
	.quad	_A__uGE_var_C_u32
	.quad	_L_1+34971
	.quad	_A__GE_param_C_C
	.quad	_L_1+34985
	.quad	_A__uGE_param_C_C
	.quad	_L_1+34998
	.quad	_A__GE_var_C_C
	.quad	_L_1+35012
	.quad	_A__uGE_var_C_C
	.quad	_L_1+35023
	.quad	_A__GE_param_C_u8
	.quad	_L_1+35035
	.quad	_A__uGE_param_C_u8
	.quad	_L_1+35049
	.quad	_A__GE_var_C_u8
	.quad	_L_1+35064
	.quad	_A__uGE_var_C_u8
	.quad	_L_1+35076
	.quad	_A__GE_param_C_I
	.quad	_L_1+35089
	.quad	_A__uGE_param_C_I
	.quad	_L_1+35102
	.quad	_A__GE_var_C_I
	.quad	_L_1+35116
	.quad	_A__uGE_var_C_I
	.quad	_L_1+35127
	.quad	_A__GE_param_C_i64
	.quad	_L_1+35139
	.quad	_A__uGE_param_C_i64
	.quad	_L_1+35154
	.quad	_A__GE_var_C_i64
	.quad	_L_1+35170
	.quad	_A__uGE_var_C_i64
	.quad	_L_1+35183
	.quad	_A__GE_param_C_LC
	.quad	_L_1+35197
	.quad	_A__uGE_param_C_LC
	.quad	_L_1+35211
	.quad	_A__GE_var_C_LC
	.quad	_L_1+35226
	.quad	_A__uGE_var_C_LC
	.quad	_L_1+35238
	.quad	_A__GE_param_C_i16
	.quad	_L_1+35251
	.quad	_A__uGE_param_C_i16
	.quad	_L_1+35266
	.quad	_A__GE_var_C_i16
	.quad	_L_1+35282
	.quad	_A__uGE_var_C_i16
	.quad	_L_1+35295
	.quad	_A__GE_param_u8_i32
	.quad	_L_1+35309
	.quad	_A__uGE_param_u8_i32
	.quad	_L_1+35325
	.quad	_A__GE_var_u8_i32
	.quad	_L_1+35342
	.quad	_A__uGE_var_u8_i32
	.quad	_L_1+35356
	.quad	_A__GE_param_u8_u16
	.quad	_L_1+35371
	.quad	_A__uGE_param_u8_u16
	.quad	_L_1+35387
	.quad	_A__GE_var_u8_u16
	.quad	_L_1+35404
	.quad	_A__uGE_var_u8_u16
	.quad	_L_1+35418
	.quad	_A__GE_param_u8_u64
	.quad	_L_1+35433
	.quad	_A__uGE_param_u8_u64
	.quad	_L_1+35449
	.quad	_A__GE_var_u8_u64
	.quad	_L_1+35466
	.quad	_A__uGE_var_u8_u64
	.quad	_L_1+35480
	.quad	_A__GE_param_u8_L
	.quad	_L_1+35495
	.quad	_A__uGE_param_u8_L
	.quad	_L_1+35509
	.quad	_A__GE_var_u8_L
	.quad	_L_1+35524
	.quad	_A__uGE_var_u8_L
	.quad	_L_1+35536
	.quad	_A__GE_param_u8_i8
	.quad	_L_1+35549
	.quad	_A__uGE_param_u8_i8
	.quad	_L_1+35564
	.quad	_A__GE_var_u8_i8
	.quad	_L_1+35580
	.quad	_A__uGE_var_u8_i8
	.quad	_L_1+35593
	.quad	_A__GE_param_u8_u32
	.quad	_L_1+35607
	.quad	_A__uGE_param_u8_u32
	.quad	_L_1+35623
	.quad	_A__GE_var_u8_u32
	.quad	_L_1+35640
	.quad	_A__uGE_var_u8_u32
	.quad	_L_1+35654
	.quad	_A__GE_param_u8_C
	.quad	_L_1+35669
	.quad	_A__uGE_param_u8_C
	.quad	_L_1+35683
	.quad	_A__GE_var_u8_C
	.quad	_L_1+35698
	.quad	_A__uGE_var_u8_C
	.quad	_L_1+35710
	.quad	_A__GE_param_u8_u8
	.quad	_L_1+35723
	.quad	_A__uGE_param_u8_u8
	.quad	_L_1+35738
	.quad	_A__GE_var_u8_u8
	.quad	_L_1+35754
	.quad	_A__uGE_var_u8_u8
	.quad	_L_1+35767
	.quad	_A__GE_param_u8_I
	.quad	_L_1+35781
	.quad	_A__uGE_param_u8_I
	.quad	_L_1+35795
	.quad	_A__GE_var_u8_I
	.quad	_L_1+35810
	.quad	_A__uGE_var_u8_I
	.quad	_L_1+35822
	.quad	_A__GE_param_u8_i64
	.quad	_L_1+35835
	.quad	_A__uGE_param_u8_i64
	.quad	_L_1+35851
	.quad	_A__GE_var_u8_i64
	.quad	_L_1+35868
	.quad	_A__uGE_var_u8_i64
	.quad	_L_1+35882
	.quad	_A__GE_param_u8_LC
	.quad	_L_1+35897
	.quad	_A__uGE_param_u8_LC
	.quad	_L_1+35912
	.quad	_A__GE_var_u8_LC
	.quad	_L_1+35928
	.quad	_A__uGE_var_u8_LC
	.quad	_L_1+35941
	.quad	_A__GE_param_u8_i16
	.quad	_L_1+35955
	.quad	_A__uGE_param_u8_i16
	.quad	_L_1+35971
	.quad	_A__GE_var_u8_i16
	.quad	_L_1+35988
	.quad	_A__uGE_var_u8_i16
	.quad	_L_1+36002
	.quad	_A__GE_param_I_i32
	.quad	_L_1+36017
	.quad	_A__uGE_param_I_i32
	.quad	_L_1+36032
	.quad	_A__GE_var_I_i32
	.quad	_L_1+36048
	.quad	_A__uGE_var_I_i32
	.quad	_L_1+36061
	.quad	_A__GE_param_I_u16
	.quad	_L_1+36075
	.quad	_A__uGE_param_I_u16
	.quad	_L_1+36090
	.quad	_A__GE_var_I_u16
	.quad	_L_1+36106
	.quad	_A__uGE_var_I_u16
	.quad	_L_1+36119
	.quad	_A__GE_param_I_u64
	.quad	_L_1+36133
	.quad	_A__uGE_param_I_u64
	.quad	_L_1+36148
	.quad	_A__GE_var_I_u64
	.quad	_L_1+36164
	.quad	_A__uGE_var_I_u64
	.quad	_L_1+36177
	.quad	_A__GE_param_I_L
	.quad	_L_1+36191
	.quad	_A__uGE_param_I_L
	.quad	_L_1+36204
	.quad	_A__GE_var_I_L
	.quad	_L_1+36218
	.quad	_A__uGE_var_I_L
	.quad	_L_1+36229
	.quad	_A__GE_param_I_i8
	.quad	_L_1+36241
	.quad	_A__uGE_param_I_i8
	.quad	_L_1+36255
	.quad	_A__GE_var_I_i8
	.quad	_L_1+36270
	.quad	_A__uGE_var_I_i8
	.quad	_L_1+36282
	.quad	_A__GE_param_I_u32
	.quad	_L_1+36295
	.quad	_A__uGE_param_I_u32
	.quad	_L_1+36310
	.quad	_A__GE_var_I_u32
	.quad	_L_1+36326
	.quad	_A__uGE_var_I_u32
	.quad	_L_1+36339
	.quad	_A__GE_param_I_C
	.quad	_L_1+36353
	.quad	_A__uGE_param_I_C
	.quad	_L_1+36366
	.quad	_A__GE_var_I_C
	.quad	_L_1+36380
	.quad	_A__uGE_var_I_C
	.quad	_L_1+36391
	.quad	_A__GE_param_I_u8
	.quad	_L_1+36403
	.quad	_A__uGE_param_I_u8
	.quad	_L_1+36417
	.quad	_A__GE_var_I_u8
	.quad	_L_1+36432
	.quad	_A__uGE_var_I_u8
	.quad	_L_1+36444
	.quad	_A__GE_param_I_I
	.quad	_L_1+36457
	.quad	_A__uGE_param_I_I
	.quad	_L_1+36470
	.quad	_A__GE_var_I_I
	.quad	_L_1+36484
	.quad	_A__uGE_var_I_I
	.quad	_L_1+36495
	.quad	_A__GE_param_I_i64
	.quad	_L_1+36507
	.quad	_A__uGE_param_I_i64
	.quad	_L_1+36522
	.quad	_A__GE_var_I_i64
	.quad	_L_1+36538
	.quad	_A__uGE_var_I_i64
	.quad	_L_1+36551
	.quad	_A__GE_param_I_LC
	.quad	_L_1+36565
	.quad	_A__uGE_param_I_LC
	.quad	_L_1+36579
	.quad	_A__GE_var_I_LC
	.quad	_L_1+36594
	.quad	_A__uGE_var_I_LC
	.quad	_L_1+36606
	.quad	_A__GE_param_I_i16
	.quad	_L_1+36619
	.quad	_A__uGE_param_I_i16
	.quad	_L_1+36634
	.quad	_A__GE_var_I_i16
	.quad	_L_1+36650
	.quad	_A__uGE_var_I_i16
	.quad	_L_1+36663
	.quad	_A__GE_param_i64_i32
	.quad	_L_1+36677
	.quad	_A__uGE_param_i64_i32
	.quad	_L_1+36694
	.quad	_A__GE_var_i64_i32
	.quad	_L_1+36712
	.quad	_A__uGE_var_i64_i32
	.quad	_L_1+36727
	.quad	_A__GE_param_i64_u16
	.quad	_L_1+36743
	.quad	_A__uGE_param_i64_u16
	.quad	_L_1+36760
	.quad	_A__GE_var_i64_u16
	.quad	_L_1+36778
	.quad	_A__uGE_var_i64_u16
	.quad	_L_1+36793
	.quad	_A__GE_param_i64_u64
	.quad	_L_1+36809
	.quad	_A__uGE_param_i64_u64
	.quad	_L_1+36826
	.quad	_A__GE_var_i64_u64
	.quad	_L_1+36844
	.quad	_A__uGE_var_i64_u64
	.quad	_L_1+36859
	.quad	_A__GE_param_i64_L
	.quad	_L_1+36875
	.quad	_A__uGE_param_i64_L
	.quad	_L_1+36890
	.quad	_A__GE_var_i64_L
	.quad	_L_1+36906
	.quad	_A__uGE_var_i64_L
	.quad	_L_1+36919
	.quad	_A__GE_param_i64_i8
	.quad	_L_1+36933
	.quad	_A__uGE_param_i64_i8
	.quad	_L_1+36949
	.quad	_A__GE_var_i64_i8
	.quad	_L_1+36966
	.quad	_A__uGE_var_i64_i8
	.quad	_L_1+36980
	.quad	_A__GE_param_i64_u32
	.quad	_L_1+36995
	.quad	_A__uGE_param_i64_u32
	.quad	_L_1+37012
	.quad	_A__GE_var_i64_u32
	.quad	_L_1+37030
	.quad	_A__uGE_var_i64_u32
	.quad	_L_1+37045
	.quad	_A__GE_param_i64_C
	.quad	_L_1+37061
	.quad	_A__uGE_param_i64_C
	.quad	_L_1+37076
	.quad	_A__GE_var_i64_C
	.quad	_L_1+37092
	.quad	_A__uGE_var_i64_C
	.quad	_L_1+37105
	.quad	_A__GE_param_i64_u8
	.quad	_L_1+37119
	.quad	_A__uGE_param_i64_u8
	.quad	_L_1+37135
	.quad	_A__GE_var_i64_u8
	.quad	_L_1+37152
	.quad	_A__uGE_var_i64_u8
	.quad	_L_1+37166
	.quad	_A__GE_param_i64_I
	.quad	_L_1+37181
	.quad	_A__uGE_param_i64_I
	.quad	_L_1+37196
	.quad	_A__GE_var_i64_I
	.quad	_L_1+37212
	.quad	_A__uGE_var_i64_I
	.quad	_L_1+37225
	.quad	_A__GE_param_i64_i64
	.quad	_L_1+37239
	.quad	_A__uGE_param_i64_i64
	.quad	_L_1+37256
	.quad	_A__GE_var_i64_i64
	.quad	_L_1+37274
	.quad	_A__uGE_var_i64_i64
	.quad	_L_1+37289
	.quad	_A__GE_param_i64_LC
	.quad	_L_1+37305
	.quad	_A__uGE_param_i64_LC
	.quad	_L_1+37321
	.quad	_A__GE_var_i64_LC
	.quad	_L_1+37338
	.quad	_A__uGE_var_i64_LC
	.quad	_L_1+37352
	.quad	_A__GE_param_i64_i16
	.quad	_L_1+37367
	.quad	_A__uGE_param_i64_i16
	.quad	_L_1+37384
	.quad	_A__GE_var_i64_i16
	.quad	_L_1+37402
	.quad	_A__uGE_var_i64_i16
	.quad	_L_1+37417
	.quad	_A__GE_param_f64_f64
	.quad	_L_1+37433
	.quad	_A__GE_var_f64_f64
	.quad	_L_1+37450
	.quad	_A__GE_param_LC_i32
	.quad	_L_1+37465
	.quad	_A__uGE_param_LC_i32
	.quad	_L_1+37481
	.quad	_A__GE_var_LC_i32
	.quad	_L_1+37498
	.quad	_A__uGE_var_LC_i32
	.quad	_L_1+37512
	.quad	_A__GE_param_LC_u16
	.quad	_L_1+37527
	.quad	_A__uGE_param_LC_u16
	.quad	_L_1+37543
	.quad	_A__GE_var_LC_u16
	.quad	_L_1+37560
	.quad	_A__uGE_var_LC_u16
	.quad	_L_1+37574
	.quad	_A__GE_param_LC_u64
	.quad	_L_1+37589
	.quad	_A__uGE_param_LC_u64
	.quad	_L_1+37605
	.quad	_A__GE_var_LC_u64
	.quad	_L_1+37622
	.quad	_A__uGE_var_LC_u64
	.quad	_L_1+37636
	.quad	_A__GE_param_LC_L
	.quad	_L_1+37651
	.quad	_A__uGE_param_LC_L
	.quad	_L_1+37665
	.quad	_A__GE_var_LC_L
	.quad	_L_1+37680
	.quad	_A__uGE_var_LC_L
	.quad	_L_1+37692
	.quad	_A__GE_param_LC_i8
	.quad	_L_1+37705
	.quad	_A__uGE_param_LC_i8
	.quad	_L_1+37720
	.quad	_A__GE_var_LC_i8
	.quad	_L_1+37736
	.quad	_A__uGE_var_LC_i8
	.quad	_L_1+37749
	.quad	_A__GE_param_LC_u32
	.quad	_L_1+37763
	.quad	_A__uGE_param_LC_u32
	.quad	_L_1+37779
	.quad	_A__GE_var_LC_u32
	.quad	_L_1+37796
	.quad	_A__uGE_var_LC_u32
	.quad	_L_1+37810
	.quad	_A__GE_param_LC_C
	.quad	_L_1+37825
	.quad	_A__uGE_param_LC_C
	.quad	_L_1+37839
	.quad	_A__GE_var_LC_C
	.quad	_L_1+37854
	.quad	_A__uGE_var_LC_C
	.quad	_L_1+37866
	.quad	_A__GE_param_LC_u8
	.quad	_L_1+37879
	.quad	_A__uGE_param_LC_u8
	.quad	_L_1+37894
	.quad	_A__GE_var_LC_u8
	.quad	_L_1+37910
	.quad	_A__uGE_var_LC_u8
	.quad	_L_1+37923
	.quad	_A__GE_param_LC_I
	.quad	_L_1+37937
	.quad	_A__uGE_param_LC_I
	.quad	_L_1+37951
	.quad	_A__GE_var_LC_I
	.quad	_L_1+37966
	.quad	_A__uGE_var_LC_I
	.quad	_L_1+37978
	.quad	_A__GE_param_LC_i64
	.quad	_L_1+37991
	.quad	_A__uGE_param_LC_i64
	.quad	_L_1+38007
	.quad	_A__GE_var_LC_i64
	.quad	_L_1+38024
	.quad	_A__uGE_var_LC_i64
	.quad	_L_1+38038
	.quad	_A__GE_param_LC_LC
	.quad	_L_1+38053
	.quad	_A__uGE_param_LC_LC
	.quad	_L_1+38068
	.quad	_A__GE_var_LC_LC
	.quad	_L_1+38084
	.quad	_A__uGE_var_LC_LC
	.quad	_L_1+38097
	.quad	_A__GE_param_LC_i16
	.quad	_L_1+38111
	.quad	_A__uGE_param_LC_i16
	.quad	_L_1+38127
	.quad	_A__GE_var_LC_i16
	.quad	_L_1+38144
	.quad	_A__uGE_var_LC_i16
	.quad	_L_1+38158
	.quad	_A__GE_param_i16_i32
	.quad	_L_1+38173
	.quad	_A__uGE_param_i16_i32
	.quad	_L_1+38190
	.quad	_A__GE_var_i16_i32
	.quad	_L_1+38208
	.quad	_A__uGE_var_i16_i32
	.quad	_L_1+38223
	.quad	_A__GE_param_i16_u16
	.quad	_L_1+38239
	.quad	_A__uGE_param_i16_u16
	.quad	_L_1+38256
	.quad	_A__GE_var_i16_u16
	.quad	_L_1+38274
	.quad	_A__uGE_var_i16_u16
	.quad	_L_1+38289
	.quad	_A__GE_param_i16_u64
	.quad	_L_1+38305
	.quad	_A__uGE_param_i16_u64
	.quad	_L_1+38322
	.quad	_A__GE_var_i16_u64
	.quad	_L_1+38340
	.quad	_A__uGE_var_i16_u64
	.quad	_L_1+38355
	.quad	_A__GE_param_i16_L
	.quad	_L_1+38371
	.quad	_A__uGE_param_i16_L
	.quad	_L_1+38386
	.quad	_A__GE_var_i16_L
	.quad	_L_1+38402
	.quad	_A__uGE_var_i16_L
	.quad	_L_1+38415
	.quad	_A__GE_param_i16_i8
	.quad	_L_1+38429
	.quad	_A__uGE_param_i16_i8
	.quad	_L_1+38445
	.quad	_A__GE_var_i16_i8
	.quad	_L_1+38462
	.quad	_A__uGE_var_i16_i8
	.quad	_L_1+38476
	.quad	_A__GE_param_i16_u32
	.quad	_L_1+38491
	.quad	_A__uGE_param_i16_u32
	.quad	_L_1+38508
	.quad	_A__GE_var_i16_u32
	.quad	_L_1+38526
	.quad	_A__uGE_var_i16_u32
	.quad	_L_1+38541
	.quad	_A__GE_param_i16_C
	.quad	_L_1+38557
	.quad	_A__uGE_param_i16_C
	.quad	_L_1+38572
	.quad	_A__GE_var_i16_C
	.quad	_L_1+38588
	.quad	_A__uGE_var_i16_C
	.quad	_L_1+38601
	.quad	_A__GE_param_i16_u8
	.quad	_L_1+38615
	.quad	_A__uGE_param_i16_u8
	.quad	_L_1+38631
	.quad	_A__GE_var_i16_u8
	.quad	_L_1+38648
	.quad	_A__uGE_var_i16_u8
	.quad	_L_1+38662
	.quad	_A__GE_param_i16_I
	.quad	_L_1+38677
	.quad	_A__uGE_param_i16_I
	.quad	_L_1+38692
	.quad	_A__GE_var_i16_I
	.quad	_L_1+38708
	.quad	_A__uGE_var_i16_I
	.quad	_L_1+38721
	.quad	_A__GE_param_i16_i64
	.quad	_L_1+38735
	.quad	_A__uGE_param_i16_i64
	.quad	_L_1+38752
	.quad	_A__GE_var_i16_i64
	.quad	_L_1+38770
	.quad	_A__uGE_var_i16_i64
	.quad	_L_1+38785
	.quad	_A__GE_param_i16_LC
	.quad	_L_1+38801
	.quad	_A__uGE_param_i16_LC
	.quad	_L_1+38817
	.quad	_A__GE_var_i16_LC
	.quad	_L_1+38834
	.quad	_A__uGE_var_i16_LC
	.quad	_L_1+38848
	.quad	_A__GE_param_i16_i16
	.quad	_L_1+38863
	.quad	_A__uGE_param_i16_i16
	.quad	_L_1+38880
	.quad	_A__GE_var_i16_i16
	.quad	_L_1+38898
	.quad	_A__uGE_var_i16_i16
	.quad	_L_1+38913
	.quad	_A__GT_param_i32_i32
	.quad	_L_1+38929
	.quad	_A__uGT_param_i32_i32
	.quad	_L_1+38946
	.quad	_A__GT_var_i32_i32
	.quad	_L_1+38964
	.quad	_A__uGT_var_i32_i32
	.quad	_L_1+38979
	.quad	_A__GT_param_i32_u16
	.quad	_L_1+38995
	.quad	_A__uGT_param_i32_u16
	.quad	_L_1+39012
	.quad	_A__GT_var_i32_u16
	.quad	_L_1+39030
	.quad	_A__uGT_var_i32_u16
	.quad	_L_1+39045
	.quad	_A__GT_param_i32_u64
	.quad	_L_1+39061
	.quad	_A__uGT_param_i32_u64
	.quad	_L_1+39078
	.quad	_A__GT_var_i32_u64
	.quad	_L_1+39096
	.quad	_A__uGT_var_i32_u64
	.quad	_L_1+39111
	.quad	_A__GT_param_i32_L
	.quad	_L_1+39127
	.quad	_A__uGT_param_i32_L
	.quad	_L_1+39142
	.quad	_A__GT_var_i32_L
	.quad	_L_1+39158
	.quad	_A__uGT_var_i32_L
	.quad	_L_1+39171
	.quad	_A__GT_param_i32_i8
	.quad	_L_1+39185
	.quad	_A__uGT_param_i32_i8
	.quad	_L_1+39201
	.quad	_A__GT_var_i32_i8
	.quad	_L_1+39218
	.quad	_A__uGT_var_i32_i8
	.quad	_L_1+39232
	.quad	_A__GT_param_i32_u32
	.quad	_L_1+39247
	.quad	_A__uGT_param_i32_u32
	.quad	_L_1+39264
	.quad	_A__GT_var_i32_u32
	.quad	_L_1+39282
	.quad	_A__uGT_var_i32_u32
	.quad	_L_1+39297
	.quad	_A__GT_param_i32_C
	.quad	_L_1+39313
	.quad	_A__uGT_param_i32_C
	.quad	_L_1+39328
	.quad	_A__GT_var_i32_C
	.quad	_L_1+39344
	.quad	_A__uGT_var_i32_C
	.quad	_L_1+39357
	.quad	_A__GT_param_i32_u8
	.quad	_L_1+39371
	.quad	_A__uGT_param_i32_u8
	.quad	_L_1+39387
	.quad	_A__GT_var_i32_u8
	.quad	_L_1+39404
	.quad	_A__uGT_var_i32_u8
	.quad	_L_1+39418
	.quad	_A__GT_param_i32_I
	.quad	_L_1+39433
	.quad	_A__uGT_param_i32_I
	.quad	_L_1+39448
	.quad	_A__GT_var_i32_I
	.quad	_L_1+39464
	.quad	_A__uGT_var_i32_I
	.quad	_L_1+39477
	.quad	_A__GT_param_i32_i64
	.quad	_L_1+39491
	.quad	_A__uGT_param_i32_i64
	.quad	_L_1+39508
	.quad	_A__GT_var_i32_i64
	.quad	_L_1+39526
	.quad	_A__uGT_var_i32_i64
	.quad	_L_1+39541
	.quad	_A__GT_param_i32_LC
	.quad	_L_1+39557
	.quad	_A__uGT_param_i32_LC
	.quad	_L_1+39573
	.quad	_A__GT_var_i32_LC
	.quad	_L_1+39590
	.quad	_A__uGT_var_i32_LC
	.quad	_L_1+39604
	.quad	_A__GT_param_i32_i16
	.quad	_L_1+39619
	.quad	_A__uGT_param_i32_i16
	.quad	_L_1+39636
	.quad	_A__GT_var_i32_i16
	.quad	_L_1+39654
	.quad	_A__uGT_var_i32_i16
	.quad	_L_1+39669
	.quad	_A__GT_param_u16_i32
	.quad	_L_1+39685
	.quad	_A__uGT_param_u16_i32
	.quad	_L_1+39702
	.quad	_A__GT_var_u16_i32
	.quad	_L_1+39720
	.quad	_A__uGT_var_u16_i32
	.quad	_L_1+39735
	.quad	_A__GT_param_u16_u16
	.quad	_L_1+39751
	.quad	_A__uGT_param_u16_u16
	.quad	_L_1+39768
	.quad	_A__GT_var_u16_u16
	.quad	_L_1+39786
	.quad	_A__uGT_var_u16_u16
	.quad	_L_1+39801
	.quad	_A__GT_param_u16_u64
	.quad	_L_1+39817
	.quad	_A__uGT_param_u16_u64
	.quad	_L_1+39834
	.quad	_A__GT_var_u16_u64
	.quad	_L_1+39852
	.quad	_A__uGT_var_u16_u64
	.quad	_L_1+39867
	.quad	_A__GT_param_u16_L
	.quad	_L_1+39883
	.quad	_A__uGT_param_u16_L
	.quad	_L_1+39898
	.quad	_A__GT_var_u16_L
	.quad	_L_1+39914
	.quad	_A__uGT_var_u16_L
	.quad	_L_1+39927
	.quad	_A__GT_param_u16_i8
	.quad	_L_1+39941
	.quad	_A__uGT_param_u16_i8
	.quad	_L_1+39957
	.quad	_A__GT_var_u16_i8
	.quad	_L_1+39974
	.quad	_A__uGT_var_u16_i8
	.quad	_L_1+39988
	.quad	_A__GT_param_u16_u32
	.quad	_L_1+40003
	.quad	_A__uGT_param_u16_u32
	.quad	_L_1+40020
	.quad	_A__GT_var_u16_u32
	.quad	_L_1+40038
	.quad	_A__uGT_var_u16_u32
	.quad	_L_1+40053
	.quad	_A__GT_param_u16_C
	.quad	_L_1+40069
	.quad	_A__uGT_param_u16_C
	.quad	_L_1+40084
	.quad	_A__GT_var_u16_C
	.quad	_L_1+40100
	.quad	_A__uGT_var_u16_C
	.quad	_L_1+40113
	.quad	_A__GT_param_u16_u8
	.quad	_L_1+40127
	.quad	_A__uGT_param_u16_u8
	.quad	_L_1+40143
	.quad	_A__GT_var_u16_u8
	.quad	_L_1+40160
	.quad	_A__uGT_var_u16_u8
	.quad	_L_1+40174
	.quad	_A__GT_param_u16_I
	.quad	_L_1+40189
	.quad	_A__uGT_param_u16_I
	.quad	_L_1+40204
	.quad	_A__GT_var_u16_I
	.quad	_L_1+40220
	.quad	_A__uGT_var_u16_I
	.quad	_L_1+40233
	.quad	_A__GT_param_u16_i64
	.quad	_L_1+40247
	.quad	_A__uGT_param_u16_i64
	.quad	_L_1+40264
	.quad	_A__GT_var_u16_i64
	.quad	_L_1+40282
	.quad	_A__uGT_var_u16_i64
	.quad	_L_1+40297
	.quad	_A__GT_param_u16_LC
	.quad	_L_1+40313
	.quad	_A__uGT_param_u16_LC
	.quad	_L_1+40329
	.quad	_A__GT_var_u16_LC
	.quad	_L_1+40346
	.quad	_A__uGT_var_u16_LC
	.quad	_L_1+40360
	.quad	_A__GT_param_u16_i16
	.quad	_L_1+40375
	.quad	_A__uGT_param_u16_i16
	.quad	_L_1+40392
	.quad	_A__GT_var_u16_i16
	.quad	_L_1+40410
	.quad	_A__uGT_var_u16_i16
	.quad	_L_1+40425
	.quad	_A__GT_param_u64_i32
	.quad	_L_1+40441
	.quad	_A__uGT_param_u64_i32
	.quad	_L_1+40458
	.quad	_A__GT_var_u64_i32
	.quad	_L_1+40476
	.quad	_A__uGT_var_u64_i32
	.quad	_L_1+40491
	.quad	_A__GT_param_u64_u16
	.quad	_L_1+40507
	.quad	_A__uGT_param_u64_u16
	.quad	_L_1+40524
	.quad	_A__GT_var_u64_u16
	.quad	_L_1+40542
	.quad	_A__uGT_var_u64_u16
	.quad	_L_1+40557
	.quad	_A__GT_param_u64_u64
	.quad	_L_1+40573
	.quad	_A__uGT_param_u64_u64
	.quad	_L_1+40590
	.quad	_A__GT_var_u64_u64
	.quad	_L_1+40608
	.quad	_A__uGT_var_u64_u64
	.quad	_L_1+40623
	.quad	_A__GT_param_u64_L
	.quad	_L_1+40639
	.quad	_A__uGT_param_u64_L
	.quad	_L_1+40654
	.quad	_A__GT_var_u64_L
	.quad	_L_1+40670
	.quad	_A__uGT_var_u64_L
	.quad	_L_1+40683
	.quad	_A__GT_param_u64_i8
	.quad	_L_1+40697
	.quad	_A__uGT_param_u64_i8
	.quad	_L_1+40713
	.quad	_A__GT_var_u64_i8
	.quad	_L_1+40730
	.quad	_A__uGT_var_u64_i8
	.quad	_L_1+40744
	.quad	_A__GT_param_u64_u32
	.quad	_L_1+40759
	.quad	_A__uGT_param_u64_u32
	.quad	_L_1+40776
	.quad	_A__GT_var_u64_u32
	.quad	_L_1+40794
	.quad	_A__uGT_var_u64_u32
	.quad	_L_1+40809
	.quad	_A__GT_param_u64_C
	.quad	_L_1+40825
	.quad	_A__uGT_param_u64_C
	.quad	_L_1+40840
	.quad	_A__GT_var_u64_C
	.quad	_L_1+40856
	.quad	_A__uGT_var_u64_C
	.quad	_L_1+40869
	.quad	_A__GT_param_u64_u8
	.quad	_L_1+40883
	.quad	_A__uGT_param_u64_u8
	.quad	_L_1+40899
	.quad	_A__GT_var_u64_u8
	.quad	_L_1+40916
	.quad	_A__uGT_var_u64_u8
	.quad	_L_1+40930
	.quad	_A__GT_param_u64_I
	.quad	_L_1+40945
	.quad	_A__uGT_param_u64_I
	.quad	_L_1+40960
	.quad	_A__GT_var_u64_I
	.quad	_L_1+40976
	.quad	_A__uGT_var_u64_I
	.quad	_L_1+40989
	.quad	_A__GT_param_u64_i64
	.quad	_L_1+41003
	.quad	_A__uGT_param_u64_i64
	.quad	_L_1+41020
	.quad	_A__GT_var_u64_i64
	.quad	_L_1+41038
	.quad	_A__uGT_var_u64_i64
	.quad	_L_1+41053
	.quad	_A__GT_param_u64_LC
	.quad	_L_1+41069
	.quad	_A__uGT_param_u64_LC
	.quad	_L_1+41085
	.quad	_A__GT_var_u64_LC
	.quad	_L_1+41102
	.quad	_A__uGT_var_u64_LC
	.quad	_L_1+41116
	.quad	_A__GT_param_u64_i16
	.quad	_L_1+41131
	.quad	_A__uGT_param_u64_i16
	.quad	_L_1+41148
	.quad	_A__GT_var_u64_i16
	.quad	_L_1+41166
	.quad	_A__uGT_var_u64_i16
	.quad	_L_1+41181
	.quad	_A__GT_param_L_i32
	.quad	_L_1+41197
	.quad	_A__uGT_param_L_i32
	.quad	_L_1+41212
	.quad	_A__GT_var_L_i32
	.quad	_L_1+41228
	.quad	_A__uGT_var_L_i32
	.quad	_L_1+41241
	.quad	_A__GT_param_L_u16
	.quad	_L_1+41255
	.quad	_A__uGT_param_L_u16
	.quad	_L_1+41270
	.quad	_A__GT_var_L_u16
	.quad	_L_1+41286
	.quad	_A__uGT_var_L_u16
	.quad	_L_1+41299
	.quad	_A__GT_param_L_u64
	.quad	_L_1+41313
	.quad	_A__uGT_param_L_u64
	.quad	_L_1+41328
	.quad	_A__GT_var_L_u64
	.quad	_L_1+41344
	.quad	_A__uGT_var_L_u64
	.quad	_L_1+41357
	.quad	_A__GT_param_L_L
	.quad	_L_1+41371
	.quad	_A__uGT_param_L_L
	.quad	_L_1+41384
	.quad	_A__GT_var_L_L
	.quad	_L_1+41398
	.quad	_A__uGT_var_L_L
	.quad	_L_1+41409
	.quad	_A__GT_param_L_i8
	.quad	_L_1+41421
	.quad	_A__uGT_param_L_i8
	.quad	_L_1+41435
	.quad	_A__GT_var_L_i8
	.quad	_L_1+41450
	.quad	_A__uGT_var_L_i8
	.quad	_L_1+41462
	.quad	_A__GT_param_L_u32
	.quad	_L_1+41475
	.quad	_A__uGT_param_L_u32
	.quad	_L_1+41490
	.quad	_A__GT_var_L_u32
	.quad	_L_1+41506
	.quad	_A__uGT_var_L_u32
	.quad	_L_1+41519
	.quad	_A__GT_param_L_C
	.quad	_L_1+41533
	.quad	_A__uGT_param_L_C
	.quad	_L_1+41546
	.quad	_A__GT_var_L_C
	.quad	_L_1+41560
	.quad	_A__uGT_var_L_C
	.quad	_L_1+41571
	.quad	_A__GT_param_L_u8
	.quad	_L_1+41583
	.quad	_A__uGT_param_L_u8
	.quad	_L_1+41597
	.quad	_A__GT_var_L_u8
	.quad	_L_1+41612
	.quad	_A__uGT_var_L_u8
	.quad	_L_1+41624
	.quad	_A__GT_param_L_I
	.quad	_L_1+41637
	.quad	_A__uGT_param_L_I
	.quad	_L_1+41650
	.quad	_A__GT_var_L_I
	.quad	_L_1+41664
	.quad	_A__uGT_var_L_I
	.quad	_L_1+41675
	.quad	_A__GT_param_L_i64
	.quad	_L_1+41687
	.quad	_A__uGT_param_L_i64
	.quad	_L_1+41702
	.quad	_A__GT_var_L_i64
	.quad	_L_1+41718
	.quad	_A__uGT_var_L_i64
	.quad	_L_1+41731
	.quad	_A__GT_param_L_LC
	.quad	_L_1+41745
	.quad	_A__uGT_param_L_LC
	.quad	_L_1+41759
	.quad	_A__GT_var_L_LC
	.quad	_L_1+41774
	.quad	_A__uGT_var_L_LC
	.quad	_L_1+41786
	.quad	_A__GT_param_L_i16
	.quad	_L_1+41799
	.quad	_A__uGT_param_L_i16
	.quad	_L_1+41814
	.quad	_A__GT_var_L_i16
	.quad	_L_1+41830
	.quad	_A__uGT_var_L_i16
	.quad	_L_1+41843
	.quad	_A__GT_param_i8_i32
	.quad	_L_1+41857
	.quad	_A__uGT_param_i8_i32
	.quad	_L_1+41873
	.quad	_A__GT_var_i8_i32
	.quad	_L_1+41890
	.quad	_A__uGT_var_i8_i32
	.quad	_L_1+41904
	.quad	_A__GT_param_i8_u16
	.quad	_L_1+41919
	.quad	_A__uGT_param_i8_u16
	.quad	_L_1+41935
	.quad	_A__GT_var_i8_u16
	.quad	_L_1+41952
	.quad	_A__uGT_var_i8_u16
	.quad	_L_1+41966
	.quad	_A__GT_param_i8_u64
	.quad	_L_1+41981
	.quad	_A__uGT_param_i8_u64
	.quad	_L_1+41997
	.quad	_A__GT_var_i8_u64
	.quad	_L_1+42014
	.quad	_A__uGT_var_i8_u64
	.quad	_L_1+42028
	.quad	_A__GT_param_i8_L
	.quad	_L_1+42043
	.quad	_A__uGT_param_i8_L
	.quad	_L_1+42057
	.quad	_A__GT_var_i8_L
	.quad	_L_1+42072
	.quad	_A__uGT_var_i8_L
	.quad	_L_1+42084
	.quad	_A__GT_param_i8_i8
	.quad	_L_1+42097
	.quad	_A__uGT_param_i8_i8
	.quad	_L_1+42112
	.quad	_A__GT_var_i8_i8
	.quad	_L_1+42128
	.quad	_A__uGT_var_i8_i8
	.quad	_L_1+42141
	.quad	_A__GT_param_i8_u32
	.quad	_L_1+42155
	.quad	_A__uGT_param_i8_u32
	.quad	_L_1+42171
	.quad	_A__GT_var_i8_u32
	.quad	_L_1+42188
	.quad	_A__uGT_var_i8_u32
	.quad	_L_1+42202
	.quad	_A__GT_param_i8_C
	.quad	_L_1+42217
	.quad	_A__uGT_param_i8_C
	.quad	_L_1+42231
	.quad	_A__GT_var_i8_C
	.quad	_L_1+42246
	.quad	_A__uGT_var_i8_C
	.quad	_L_1+42258
	.quad	_A__GT_param_i8_u8
	.quad	_L_1+42271
	.quad	_A__uGT_param_i8_u8
	.quad	_L_1+42286
	.quad	_A__GT_var_i8_u8
	.quad	_L_1+42302
	.quad	_A__uGT_var_i8_u8
	.quad	_L_1+42315
	.quad	_A__GT_param_i8_I
	.quad	_L_1+42329
	.quad	_A__uGT_param_i8_I
	.quad	_L_1+42343
	.quad	_A__GT_var_i8_I
	.quad	_L_1+42358
	.quad	_A__uGT_var_i8_I
	.quad	_L_1+42370
	.quad	_A__GT_param_i8_i64
	.quad	_L_1+42383
	.quad	_A__uGT_param_i8_i64
	.quad	_L_1+42399
	.quad	_A__GT_var_i8_i64
	.quad	_L_1+42416
	.quad	_A__uGT_var_i8_i64
	.quad	_L_1+42430
	.quad	_A__GT_param_i8_LC
	.quad	_L_1+42445
	.quad	_A__uGT_param_i8_LC
	.quad	_L_1+42460
	.quad	_A__GT_var_i8_LC
	.quad	_L_1+42476
	.quad	_A__uGT_var_i8_LC
	.quad	_L_1+42489
	.quad	_A__GT_param_i8_i16
	.quad	_L_1+42503
	.quad	_A__uGT_param_i8_i16
	.quad	_L_1+42519
	.quad	_A__GT_var_i8_i16
	.quad	_L_1+42536
	.quad	_A__uGT_var_i8_i16
	.quad	_L_1+42550
	.quad	_A__GT_param_u32_i32
	.quad	_L_1+42565
	.quad	_A__uGT_param_u32_i32
	.quad	_L_1+42582
	.quad	_A__GT_var_u32_i32
	.quad	_L_1+42600
	.quad	_A__uGT_var_u32_i32
	.quad	_L_1+42615
	.quad	_A__GT_param_u32_u16
	.quad	_L_1+42631
	.quad	_A__uGT_param_u32_u16
	.quad	_L_1+42648
	.quad	_A__GT_var_u32_u16
	.quad	_L_1+42666
	.quad	_A__uGT_var_u32_u16
	.quad	_L_1+42681
	.quad	_A__GT_param_u32_u64
	.quad	_L_1+42697
	.quad	_A__uGT_param_u32_u64
	.quad	_L_1+42714
	.quad	_A__GT_var_u32_u64
	.quad	_L_1+42732
	.quad	_A__uGT_var_u32_u64
	.quad	_L_1+42747
	.quad	_A__GT_param_u32_L
	.quad	_L_1+42763
	.quad	_A__uGT_param_u32_L
	.quad	_L_1+42778
	.quad	_A__GT_var_u32_L
	.quad	_L_1+42794
	.quad	_A__uGT_var_u32_L
	.quad	_L_1+42807
	.quad	_A__GT_param_u32_i8
	.quad	_L_1+42821
	.quad	_A__uGT_param_u32_i8
	.quad	_L_1+42837
	.quad	_A__GT_var_u32_i8
	.quad	_L_1+42854
	.quad	_A__uGT_var_u32_i8
	.quad	_L_1+42868
	.quad	_A__GT_param_u32_u32
	.quad	_L_1+42883
	.quad	_A__uGT_param_u32_u32
	.quad	_L_1+42900
	.quad	_A__GT_var_u32_u32
	.quad	_L_1+42918
	.quad	_A__uGT_var_u32_u32
	.quad	_L_1+42933
	.quad	_A__GT_param_u32_C
	.quad	_L_1+42949
	.quad	_A__uGT_param_u32_C
	.quad	_L_1+42964
	.quad	_A__GT_var_u32_C
	.quad	_L_1+42980
	.quad	_A__uGT_var_u32_C
	.quad	_L_1+42993
	.quad	_A__GT_param_u32_u8
	.quad	_L_1+43007
	.quad	_A__uGT_param_u32_u8
	.quad	_L_1+43023
	.quad	_A__GT_var_u32_u8
	.quad	_L_1+43040
	.quad	_A__uGT_var_u32_u8
	.quad	_L_1+43054
	.quad	_A__GT_param_u32_I
	.quad	_L_1+43069
	.quad	_A__uGT_param_u32_I
	.quad	_L_1+43084
	.quad	_A__GT_var_u32_I
	.quad	_L_1+43100
	.quad	_A__uGT_var_u32_I
	.quad	_L_1+43113
	.quad	_A__GT_param_u32_i64
	.quad	_L_1+43127
	.quad	_A__uGT_param_u32_i64
	.quad	_L_1+43144
	.quad	_A__GT_var_u32_i64
	.quad	_L_1+43162
	.quad	_A__uGT_var_u32_i64
	.quad	_L_1+43177
	.quad	_A__GT_param_u32_LC
	.quad	_L_1+43193
	.quad	_A__uGT_param_u32_LC
	.quad	_L_1+43209
	.quad	_A__GT_var_u32_LC
	.quad	_L_1+43226
	.quad	_A__uGT_var_u32_LC
	.quad	_L_1+43240
	.quad	_A__GT_param_u32_i16
	.quad	_L_1+43255
	.quad	_A__uGT_param_u32_i16
	.quad	_L_1+43272
	.quad	_A__GT_var_u32_i16
	.quad	_L_1+43290
	.quad	_A__uGT_var_u32_i16
	.quad	_L_1+43305
	.quad	_A__GT_param_f32_f32
	.quad	_L_1+43321
	.quad	_A__GT_var_f32_f32
	.quad	_L_1+43338
	.quad	_A__GT_param_C_i32
	.quad	_L_1+43353
	.quad	_A__uGT_param_C_i32
	.quad	_L_1+43368
	.quad	_A__GT_var_C_i32
	.quad	_L_1+43384
	.quad	_A__uGT_var_C_i32
	.quad	_L_1+43397
	.quad	_A__GT_param_C_u16
	.quad	_L_1+43411
	.quad	_A__uGT_param_C_u16
	.quad	_L_1+43426
	.quad	_A__GT_var_C_u16
	.quad	_L_1+43442
	.quad	_A__uGT_var_C_u16
	.quad	_L_1+43455
	.quad	_A__GT_param_C_u64
	.quad	_L_1+43469
	.quad	_A__uGT_param_C_u64
	.quad	_L_1+43484
	.quad	_A__GT_var_C_u64
	.quad	_L_1+43500
	.quad	_A__uGT_var_C_u64
	.quad	_L_1+43513
	.quad	_A__GT_param_C_L
	.quad	_L_1+43527
	.quad	_A__uGT_param_C_L
	.quad	_L_1+43540
	.quad	_A__GT_var_C_L
	.quad	_L_1+43554
	.quad	_A__uGT_var_C_L
	.quad	_L_1+43565
	.quad	_A__GT_param_C_i8
	.quad	_L_1+43577
	.quad	_A__uGT_param_C_i8
	.quad	_L_1+43591
	.quad	_A__GT_var_C_i8
	.quad	_L_1+43606
	.quad	_A__uGT_var_C_i8
	.quad	_L_1+43618
	.quad	_A__GT_param_C_u32
	.quad	_L_1+43631
	.quad	_A__uGT_param_C_u32
	.quad	_L_1+43646
	.quad	_A__GT_var_C_u32
	.quad	_L_1+43662
	.quad	_A__uGT_var_C_u32
	.quad	_L_1+43675
	.quad	_A__GT_param_C_C
	.quad	_L_1+43689
	.quad	_A__uGT_param_C_C
	.quad	_L_1+43702
	.quad	_A__GT_var_C_C
	.quad	_L_1+43716
	.quad	_A__uGT_var_C_C
	.quad	_L_1+43727
	.quad	_A__GT_param_C_u8
	.quad	_L_1+43739
	.quad	_A__uGT_param_C_u8
	.quad	_L_1+43753
	.quad	_A__GT_var_C_u8
	.quad	_L_1+43768
	.quad	_A__uGT_var_C_u8
	.quad	_L_1+43780
	.quad	_A__GT_param_C_I
	.quad	_L_1+43793
	.quad	_A__uGT_param_C_I
	.quad	_L_1+43806
	.quad	_A__GT_var_C_I
	.quad	_L_1+43820
	.quad	_A__uGT_var_C_I
	.quad	_L_1+43831
	.quad	_A__GT_param_C_i64
	.quad	_L_1+43843
	.quad	_A__uGT_param_C_i64
	.quad	_L_1+43858
	.quad	_A__GT_var_C_i64
	.quad	_L_1+43874
	.quad	_A__uGT_var_C_i64
	.quad	_L_1+43887
	.quad	_A__GT_param_C_LC
	.quad	_L_1+43901
	.quad	_A__uGT_param_C_LC
	.quad	_L_1+43915
	.quad	_A__GT_var_C_LC
	.quad	_L_1+43930
	.quad	_A__uGT_var_C_LC
	.quad	_L_1+43942
	.quad	_A__GT_param_C_i16
	.quad	_L_1+43955
	.quad	_A__uGT_param_C_i16
	.quad	_L_1+43970
	.quad	_A__GT_var_C_i16
	.quad	_L_1+43986
	.quad	_A__uGT_var_C_i16
	.quad	_L_1+43999
	.quad	_A__GT_param_u8_i32
	.quad	_L_1+44013
	.quad	_A__uGT_param_u8_i32
	.quad	_L_1+44029
	.quad	_A__GT_var_u8_i32
	.quad	_L_1+44046
	.quad	_A__uGT_var_u8_i32
	.quad	_L_1+44060
	.quad	_A__GT_param_u8_u16
	.quad	_L_1+44075
	.quad	_A__uGT_param_u8_u16
	.quad	_L_1+44091
	.quad	_A__GT_var_u8_u16
	.quad	_L_1+44108
	.quad	_A__uGT_var_u8_u16
	.quad	_L_1+44122
	.quad	_A__GT_param_u8_u64
	.quad	_L_1+44137
	.quad	_A__uGT_param_u8_u64
	.quad	_L_1+44153
	.quad	_A__GT_var_u8_u64
	.quad	_L_1+44170
	.quad	_A__uGT_var_u8_u64
	.quad	_L_1+44184
	.quad	_A__GT_param_u8_L
	.quad	_L_1+44199
	.quad	_A__uGT_param_u8_L
	.quad	_L_1+44213
	.quad	_A__GT_var_u8_L
	.quad	_L_1+44228
	.quad	_A__uGT_var_u8_L
	.quad	_L_1+44240
	.quad	_A__GT_param_u8_i8
	.quad	_L_1+44253
	.quad	_A__uGT_param_u8_i8
	.quad	_L_1+44268
	.quad	_A__GT_var_u8_i8
	.quad	_L_1+44284
	.quad	_A__uGT_var_u8_i8
	.quad	_L_1+44297
	.quad	_A__GT_param_u8_u32
	.quad	_L_1+44311
	.quad	_A__uGT_param_u8_u32
	.quad	_L_1+44327
	.quad	_A__GT_var_u8_u32
	.quad	_L_1+44344
	.quad	_A__uGT_var_u8_u32
	.quad	_L_1+44358
	.quad	_A__GT_param_u8_C
	.quad	_L_1+44373
	.quad	_A__uGT_param_u8_C
	.quad	_L_1+44387
	.quad	_A__GT_var_u8_C
	.quad	_L_1+44402
	.quad	_A__uGT_var_u8_C
	.quad	_L_1+44414
	.quad	_A__GT_param_u8_u8
	.quad	_L_1+44427
	.quad	_A__uGT_param_u8_u8
	.quad	_L_1+44442
	.quad	_A__GT_var_u8_u8
	.quad	_L_1+44458
	.quad	_A__uGT_var_u8_u8
	.quad	_L_1+44471
	.quad	_A__GT_param_u8_I
	.quad	_L_1+44485
	.quad	_A__uGT_param_u8_I
	.quad	_L_1+44499
	.quad	_A__GT_var_u8_I
	.quad	_L_1+44514
	.quad	_A__uGT_var_u8_I
	.quad	_L_1+44526
	.quad	_A__GT_param_u8_i64
	.quad	_L_1+44539
	.quad	_A__uGT_param_u8_i64
	.quad	_L_1+44555
	.quad	_A__GT_var_u8_i64
	.quad	_L_1+44572
	.quad	_A__uGT_var_u8_i64
	.quad	_L_1+44586
	.quad	_A__GT_param_u8_LC
	.quad	_L_1+44601
	.quad	_A__uGT_param_u8_LC
	.quad	_L_1+44616
	.quad	_A__GT_var_u8_LC
	.quad	_L_1+44632
	.quad	_A__uGT_var_u8_LC
	.quad	_L_1+44645
	.quad	_A__GT_param_u8_i16
	.quad	_L_1+44659
	.quad	_A__uGT_param_u8_i16
	.quad	_L_1+44675
	.quad	_A__GT_var_u8_i16
	.quad	_L_1+44692
	.quad	_A__uGT_var_u8_i16
	.quad	_L_1+44706
	.quad	_A__GT_param_I_i32
	.quad	_L_1+44721
	.quad	_A__uGT_param_I_i32
	.quad	_L_1+44736
	.quad	_A__GT_var_I_i32
	.quad	_L_1+44752
	.quad	_A__uGT_var_I_i32
	.quad	_L_1+44765
	.quad	_A__GT_param_I_u16
	.quad	_L_1+44779
	.quad	_A__uGT_param_I_u16
	.quad	_L_1+44794
	.quad	_A__GT_var_I_u16
	.quad	_L_1+44810
	.quad	_A__uGT_var_I_u16
	.quad	_L_1+44823
	.quad	_A__GT_param_I_u64
	.quad	_L_1+44837
	.quad	_A__uGT_param_I_u64
	.quad	_L_1+44852
	.quad	_A__GT_var_I_u64
	.quad	_L_1+44868
	.quad	_A__uGT_var_I_u64
	.quad	_L_1+44881
	.quad	_A__GT_param_I_L
	.quad	_L_1+44895
	.quad	_A__uGT_param_I_L
	.quad	_L_1+44908
	.quad	_A__GT_var_I_L
	.quad	_L_1+44922
	.quad	_A__uGT_var_I_L
	.quad	_L_1+44933
	.quad	_A__GT_param_I_i8
	.quad	_L_1+44945
	.quad	_A__uGT_param_I_i8
	.quad	_L_1+44959
	.quad	_A__GT_var_I_i8
	.quad	_L_1+44974
	.quad	_A__uGT_var_I_i8
	.quad	_L_1+44986
	.quad	_A__GT_param_I_u32
	.quad	_L_1+44999
	.quad	_A__uGT_param_I_u32
	.quad	_L_1+45014
	.quad	_A__GT_var_I_u32
	.quad	_L_1+45030
	.quad	_A__uGT_var_I_u32
	.quad	_L_1+45043
	.quad	_A__GT_param_I_C
	.quad	_L_1+45057
	.quad	_A__uGT_param_I_C
	.quad	_L_1+45070
	.quad	_A__GT_var_I_C
	.quad	_L_1+45084
	.quad	_A__uGT_var_I_C
	.quad	_L_1+45095
	.quad	_A__GT_param_I_u8
	.quad	_L_1+45107
	.quad	_A__uGT_param_I_u8
	.quad	_L_1+45121
	.quad	_A__GT_var_I_u8
	.quad	_L_1+45136
	.quad	_A__uGT_var_I_u8
	.quad	_L_1+45148
	.quad	_A__GT_param_I_I
	.quad	_L_1+45161
	.quad	_A__uGT_param_I_I
	.quad	_L_1+45174
	.quad	_A__GT_var_I_I
	.quad	_L_1+45188
	.quad	_A__uGT_var_I_I
	.quad	_L_1+45199
	.quad	_A__GT_param_I_i64
	.quad	_L_1+45211
	.quad	_A__uGT_param_I_i64
	.quad	_L_1+45226
	.quad	_A__GT_var_I_i64
	.quad	_L_1+45242
	.quad	_A__uGT_var_I_i64
	.quad	_L_1+45255
	.quad	_A__GT_param_I_LC
	.quad	_L_1+45269
	.quad	_A__uGT_param_I_LC
	.quad	_L_1+45283
	.quad	_A__GT_var_I_LC
	.quad	_L_1+45298
	.quad	_A__uGT_var_I_LC
	.quad	_L_1+45310
	.quad	_A__GT_param_I_i16
	.quad	_L_1+45323
	.quad	_A__uGT_param_I_i16
	.quad	_L_1+45338
	.quad	_A__GT_var_I_i16
	.quad	_L_1+45354
	.quad	_A__uGT_var_I_i16
	.quad	_L_1+45367
	.quad	_A__GT_param_i64_i32
	.quad	_L_1+45381
	.quad	_A__uGT_param_i64_i32
	.quad	_L_1+45398
	.quad	_A__GT_var_i64_i32
	.quad	_L_1+45416
	.quad	_A__uGT_var_i64_i32
	.quad	_L_1+45431
	.quad	_A__GT_param_i64_u16
	.quad	_L_1+45447
	.quad	_A__uGT_param_i64_u16
	.quad	_L_1+45464
	.quad	_A__GT_var_i64_u16
	.quad	_L_1+45482
	.quad	_A__uGT_var_i64_u16
	.quad	_L_1+45497
	.quad	_A__GT_param_i64_u64
	.quad	_L_1+45513
	.quad	_A__uGT_param_i64_u64
	.quad	_L_1+45530
	.quad	_A__GT_var_i64_u64
	.quad	_L_1+45548
	.quad	_A__uGT_var_i64_u64
	.quad	_L_1+45563
	.quad	_A__GT_param_i64_L
	.quad	_L_1+45579
	.quad	_A__uGT_param_i64_L
	.quad	_L_1+45594
	.quad	_A__GT_var_i64_L
	.quad	_L_1+45610
	.quad	_A__uGT_var_i64_L
	.quad	_L_1+45623
	.quad	_A__GT_param_i64_i8
	.quad	_L_1+45637
	.quad	_A__uGT_param_i64_i8
	.quad	_L_1+45653
	.quad	_A__GT_var_i64_i8
	.quad	_L_1+45670
	.quad	_A__uGT_var_i64_i8
	.quad	_L_1+45684
	.quad	_A__GT_param_i64_u32
	.quad	_L_1+45699
	.quad	_A__uGT_param_i64_u32
	.quad	_L_1+45716
	.quad	_A__GT_var_i64_u32
	.quad	_L_1+45734
	.quad	_A__uGT_var_i64_u32
	.quad	_L_1+45749
	.quad	_A__GT_param_i64_C
	.quad	_L_1+45765
	.quad	_A__uGT_param_i64_C
	.quad	_L_1+45780
	.quad	_A__GT_var_i64_C
	.quad	_L_1+45796
	.quad	_A__uGT_var_i64_C
	.quad	_L_1+45809
	.quad	_A__GT_param_i64_u8
	.quad	_L_1+45823
	.quad	_A__uGT_param_i64_u8
	.quad	_L_1+45839
	.quad	_A__GT_var_i64_u8
	.quad	_L_1+45856
	.quad	_A__uGT_var_i64_u8
	.quad	_L_1+45870
	.quad	_A__GT_param_i64_I
	.quad	_L_1+45885
	.quad	_A__uGT_param_i64_I
	.quad	_L_1+45900
	.quad	_A__GT_var_i64_I
	.quad	_L_1+45916
	.quad	_A__uGT_var_i64_I
	.quad	_L_1+45929
	.quad	_A__GT_param_i64_i64
	.quad	_L_1+45943
	.quad	_A__uGT_param_i64_i64
	.quad	_L_1+45960
	.quad	_A__GT_var_i64_i64
	.quad	_L_1+45978
	.quad	_A__uGT_var_i64_i64
	.quad	_L_1+45993
	.quad	_A__GT_param_i64_LC
	.quad	_L_1+46009
	.quad	_A__uGT_param_i64_LC
	.quad	_L_1+46025
	.quad	_A__GT_var_i64_LC
	.quad	_L_1+46042
	.quad	_A__uGT_var_i64_LC
	.quad	_L_1+46056
	.quad	_A__GT_param_i64_i16
	.quad	_L_1+46071
	.quad	_A__uGT_param_i64_i16
	.quad	_L_1+46088
	.quad	_A__GT_var_i64_i16
	.quad	_L_1+46106
	.quad	_A__uGT_var_i64_i16
	.quad	_L_1+46121
	.quad	_A__GT_param_f64_f64
	.quad	_L_1+46137
	.quad	_A__GT_var_f64_f64
	.quad	_L_1+46154
	.quad	_A__GT_param_LC_i32
	.quad	_L_1+46169
	.quad	_A__uGT_param_LC_i32
	.quad	_L_1+46185
	.quad	_A__GT_var_LC_i32
	.quad	_L_1+46202
	.quad	_A__uGT_var_LC_i32
	.quad	_L_1+46216
	.quad	_A__GT_param_LC_u16
	.quad	_L_1+46231
	.quad	_A__uGT_param_LC_u16
	.quad	_L_1+46247
	.quad	_A__GT_var_LC_u16
	.quad	_L_1+46264
	.quad	_A__uGT_var_LC_u16
	.quad	_L_1+46278
	.quad	_A__GT_param_LC_u64
	.quad	_L_1+46293
	.quad	_A__uGT_param_LC_u64
	.quad	_L_1+46309
	.quad	_A__GT_var_LC_u64
	.quad	_L_1+46326
	.quad	_A__uGT_var_LC_u64
	.quad	_L_1+46340
	.quad	_A__GT_param_LC_L
	.quad	_L_1+46355
	.quad	_A__uGT_param_LC_L
	.quad	_L_1+46369
	.quad	_A__GT_var_LC_L
	.quad	_L_1+46384
	.quad	_A__uGT_var_LC_L
	.quad	_L_1+46396
	.quad	_A__GT_param_LC_i8
	.quad	_L_1+46409
	.quad	_A__uGT_param_LC_i8
	.quad	_L_1+46424
	.quad	_A__GT_var_LC_i8
	.quad	_L_1+46440
	.quad	_A__uGT_var_LC_i8
	.quad	_L_1+46453
	.quad	_A__GT_param_LC_u32
	.quad	_L_1+46467
	.quad	_A__uGT_param_LC_u32
	.quad	_L_1+46483
	.quad	_A__GT_var_LC_u32
	.quad	_L_1+46500
	.quad	_A__uGT_var_LC_u32
	.quad	_L_1+46514
	.quad	_A__GT_param_LC_C
	.quad	_L_1+46529
	.quad	_A__uGT_param_LC_C
	.quad	_L_1+46543
	.quad	_A__GT_var_LC_C
	.quad	_L_1+46558
	.quad	_A__uGT_var_LC_C
	.quad	_L_1+46570
	.quad	_A__GT_param_LC_u8
	.quad	_L_1+46583
	.quad	_A__uGT_param_LC_u8
	.quad	_L_1+46598
	.quad	_A__GT_var_LC_u8
	.quad	_L_1+46614
	.quad	_A__uGT_var_LC_u8
	.quad	_L_1+46627
	.quad	_A__GT_param_LC_I
	.quad	_L_1+46641
	.quad	_A__uGT_param_LC_I
	.quad	_L_1+46655
	.quad	_A__GT_var_LC_I
	.quad	_L_1+46670
	.quad	_A__uGT_var_LC_I
	.quad	_L_1+46682
	.quad	_A__GT_param_LC_i64
	.quad	_L_1+46695
	.quad	_A__uGT_param_LC_i64
	.quad	_L_1+46711
	.quad	_A__GT_var_LC_i64
	.quad	_L_1+46728
	.quad	_A__uGT_var_LC_i64
	.quad	_L_1+46742
	.quad	_A__GT_param_LC_LC
	.quad	_L_1+46757
	.quad	_A__uGT_param_LC_LC
	.quad	_L_1+46772
	.quad	_A__GT_var_LC_LC
	.quad	_L_1+46788
	.quad	_A__uGT_var_LC_LC
	.quad	_L_1+46801
	.quad	_A__GT_param_LC_i16
	.quad	_L_1+46815
	.quad	_A__uGT_param_LC_i16
	.quad	_L_1+46831
	.quad	_A__GT_var_LC_i16
	.quad	_L_1+46848
	.quad	_A__uGT_var_LC_i16
	.quad	_L_1+46862
	.quad	_A__GT_param_i16_i32
	.quad	_L_1+46877
	.quad	_A__uGT_param_i16_i32
	.quad	_L_1+46894
	.quad	_A__GT_var_i16_i32
	.quad	_L_1+46912
	.quad	_A__uGT_var_i16_i32
	.quad	_L_1+46927
	.quad	_A__GT_param_i16_u16
	.quad	_L_1+46943
	.quad	_A__uGT_param_i16_u16
	.quad	_L_1+46960
	.quad	_A__GT_var_i16_u16
	.quad	_L_1+46978
	.quad	_A__uGT_var_i16_u16
	.quad	_L_1+46993
	.quad	_A__GT_param_i16_u64
	.quad	_L_1+47009
	.quad	_A__uGT_param_i16_u64
	.quad	_L_1+47026
	.quad	_A__GT_var_i16_u64
	.quad	_L_1+47044
	.quad	_A__uGT_var_i16_u64
	.quad	_L_1+47059
	.quad	_A__GT_param_i16_L
	.quad	_L_1+47075
	.quad	_A__uGT_param_i16_L
	.quad	_L_1+47090
	.quad	_A__GT_var_i16_L
	.quad	_L_1+47106
	.quad	_A__uGT_var_i16_L
	.quad	_L_1+47119
	.quad	_A__GT_param_i16_i8
	.quad	_L_1+47133
	.quad	_A__uGT_param_i16_i8
	.quad	_L_1+47149
	.quad	_A__GT_var_i16_i8
	.quad	_L_1+47166
	.quad	_A__uGT_var_i16_i8
	.quad	_L_1+47180
	.quad	_A__GT_param_i16_u32
	.quad	_L_1+47195
	.quad	_A__uGT_param_i16_u32
	.quad	_L_1+47212
	.quad	_A__GT_var_i16_u32
	.quad	_L_1+47230
	.quad	_A__uGT_var_i16_u32
	.quad	_L_1+47245
	.quad	_A__GT_param_i16_C
	.quad	_L_1+47261
	.quad	_A__uGT_param_i16_C
	.quad	_L_1+47276
	.quad	_A__GT_var_i16_C
	.quad	_L_1+47292
	.quad	_A__uGT_var_i16_C
	.quad	_L_1+47305
	.quad	_A__GT_param_i16_u8
	.quad	_L_1+47319
	.quad	_A__uGT_param_i16_u8
	.quad	_L_1+47335
	.quad	_A__GT_var_i16_u8
	.quad	_L_1+47352
	.quad	_A__uGT_var_i16_u8
	.quad	_L_1+47366
	.quad	_A__GT_param_i16_I
	.quad	_L_1+47381
	.quad	_A__uGT_param_i16_I
	.quad	_L_1+47396
	.quad	_A__GT_var_i16_I
	.quad	_L_1+47412
	.quad	_A__uGT_var_i16_I
	.quad	_L_1+47425
	.quad	_A__GT_param_i16_i64
	.quad	_L_1+47439
	.quad	_A__uGT_param_i16_i64
	.quad	_L_1+47456
	.quad	_A__GT_var_i16_i64
	.quad	_L_1+47474
	.quad	_A__uGT_var_i16_i64
	.quad	_L_1+47489
	.quad	_A__GT_param_i16_LC
	.quad	_L_1+47505
	.quad	_A__uGT_param_i16_LC
	.quad	_L_1+47521
	.quad	_A__GT_var_i16_LC
	.quad	_L_1+47538
	.quad	_A__uGT_var_i16_LC
	.quad	_L_1+47552
	.quad	_A__GT_param_i16_i16
	.quad	_L_1+47567
	.quad	_A__uGT_param_i16_i16
	.quad	_L_1+47584
	.quad	_A__GT_var_i16_i16
	.quad	_L_1+47602
	.quad	_A__uGT_var_i16_i16
	.quad	_L_1+47617
	.quad	_A__LE_param_i32_i32
	.quad	_L_1+47633
	.quad	_A__uLE_param_i32_i32
	.quad	_L_1+47650
	.quad	_A__LE_var_i32_i32
	.quad	_L_1+47668
	.quad	_A__uLE_var_i32_i32
	.quad	_L_1+47683
	.quad	_A__LE_param_i32_u16
	.quad	_L_1+47699
	.quad	_A__uLE_param_i32_u16
	.quad	_L_1+47716
	.quad	_A__LE_var_i32_u16
	.quad	_L_1+47734
	.quad	_A__uLE_var_i32_u16
	.quad	_L_1+47749
	.quad	_A__LE_param_i32_u64
	.quad	_L_1+47765
	.quad	_A__uLE_param_i32_u64
	.quad	_L_1+47782
	.quad	_A__LE_var_i32_u64
	.quad	_L_1+47800
	.quad	_A__uLE_var_i32_u64
	.quad	_L_1+47815
	.quad	_A__LE_param_i32_L
	.quad	_L_1+47831
	.quad	_A__uLE_param_i32_L
	.quad	_L_1+47846
	.quad	_A__LE_var_i32_L
	.quad	_L_1+47862
	.quad	_A__uLE_var_i32_L
	.quad	_L_1+47875
	.quad	_A__LE_param_i32_i8
	.quad	_L_1+47889
	.quad	_A__uLE_param_i32_i8
	.quad	_L_1+47905
	.quad	_A__LE_var_i32_i8
	.quad	_L_1+47922
	.quad	_A__uLE_var_i32_i8
	.quad	_L_1+47936
	.quad	_A__LE_param_i32_u32
	.quad	_L_1+47951
	.quad	_A__uLE_param_i32_u32
	.quad	_L_1+47968
	.quad	_A__LE_var_i32_u32
	.quad	_L_1+47986
	.quad	_A__uLE_var_i32_u32
	.quad	_L_1+48001
	.quad	_A__LE_param_i32_C
	.quad	_L_1+48017
	.quad	_A__uLE_param_i32_C
	.quad	_L_1+48032
	.quad	_A__LE_var_i32_C
	.quad	_L_1+48048
	.quad	_A__uLE_var_i32_C
	.quad	_L_1+48061
	.quad	_A__LE_param_i32_u8
	.quad	_L_1+48075
	.quad	_A__uLE_param_i32_u8
	.quad	_L_1+48091
	.quad	_A__LE_var_i32_u8
	.quad	_L_1+48108
	.quad	_A__uLE_var_i32_u8
	.quad	_L_1+48122
	.quad	_A__LE_param_i32_I
	.quad	_L_1+48137
	.quad	_A__uLE_param_i32_I
	.quad	_L_1+48152
	.quad	_A__LE_var_i32_I
	.quad	_L_1+48168
	.quad	_A__uLE_var_i32_I
	.quad	_L_1+48181
	.quad	_A__LE_param_i32_i64
	.quad	_L_1+48195
	.quad	_A__uLE_param_i32_i64
	.quad	_L_1+48212
	.quad	_A__LE_var_i32_i64
	.quad	_L_1+48230
	.quad	_A__uLE_var_i32_i64
	.quad	_L_1+48245
	.quad	_A__LE_param_i32_LC
	.quad	_L_1+48261
	.quad	_A__uLE_param_i32_LC
	.quad	_L_1+48277
	.quad	_A__LE_var_i32_LC
	.quad	_L_1+48294
	.quad	_A__uLE_var_i32_LC
	.quad	_L_1+48308
	.quad	_A__LE_param_i32_i16
	.quad	_L_1+48323
	.quad	_A__uLE_param_i32_i16
	.quad	_L_1+48340
	.quad	_A__LE_var_i32_i16
	.quad	_L_1+48358
	.quad	_A__uLE_var_i32_i16
	.quad	_L_1+48373
	.quad	_A__LE_param_u16_i32
	.quad	_L_1+48389
	.quad	_A__uLE_param_u16_i32
	.quad	_L_1+48406
	.quad	_A__LE_var_u16_i32
	.quad	_L_1+48424
	.quad	_A__uLE_var_u16_i32
	.quad	_L_1+48439
	.quad	_A__LE_param_u16_u16
	.quad	_L_1+48455
	.quad	_A__uLE_param_u16_u16
	.quad	_L_1+48472
	.quad	_A__LE_var_u16_u16
	.quad	_L_1+48490
	.quad	_A__uLE_var_u16_u16
	.quad	_L_1+48505
	.quad	_A__LE_param_u16_u64
	.quad	_L_1+48521
	.quad	_A__uLE_param_u16_u64
	.quad	_L_1+48538
	.quad	_A__LE_var_u16_u64
	.quad	_L_1+48556
	.quad	_A__uLE_var_u16_u64
	.quad	_L_1+48571
	.quad	_A__LE_param_u16_L
	.quad	_L_1+48587
	.quad	_A__uLE_param_u16_L
	.quad	_L_1+48602
	.quad	_A__LE_var_u16_L
	.quad	_L_1+48618
	.quad	_A__uLE_var_u16_L
	.quad	_L_1+48631
	.quad	_A__LE_param_u16_i8
	.quad	_L_1+48645
	.quad	_A__uLE_param_u16_i8
	.quad	_L_1+48661
	.quad	_A__LE_var_u16_i8
	.quad	_L_1+48678
	.quad	_A__uLE_var_u16_i8
	.quad	_L_1+48692
	.quad	_A__LE_param_u16_u32
	.quad	_L_1+48707
	.quad	_A__uLE_param_u16_u32
	.quad	_L_1+48724
	.quad	_A__LE_var_u16_u32
	.quad	_L_1+48742
	.quad	_A__uLE_var_u16_u32
	.quad	_L_1+48757
	.quad	_A__LE_param_u16_C
	.quad	_L_1+48773
	.quad	_A__uLE_param_u16_C
	.quad	_L_1+48788
	.quad	_A__LE_var_u16_C
	.quad	_L_1+48804
	.quad	_A__uLE_var_u16_C
	.quad	_L_1+48817
	.quad	_A__LE_param_u16_u8
	.quad	_L_1+48831
	.quad	_A__uLE_param_u16_u8
	.quad	_L_1+48847
	.quad	_A__LE_var_u16_u8
	.quad	_L_1+48864
	.quad	_A__uLE_var_u16_u8
	.quad	_L_1+48878
	.quad	_A__LE_param_u16_I
	.quad	_L_1+48893
	.quad	_A__uLE_param_u16_I
	.quad	_L_1+48908
	.quad	_A__LE_var_u16_I
	.quad	_L_1+48924
	.quad	_A__uLE_var_u16_I
	.quad	_L_1+48937
	.quad	_A__LE_param_u16_i64
	.quad	_L_1+48951
	.quad	_A__uLE_param_u16_i64
	.quad	_L_1+48968
	.quad	_A__LE_var_u16_i64
	.quad	_L_1+48986
	.quad	_A__uLE_var_u16_i64
	.quad	_L_1+49001
	.quad	_A__LE_param_u16_LC
	.quad	_L_1+49017
	.quad	_A__uLE_param_u16_LC
	.quad	_L_1+49033
	.quad	_A__LE_var_u16_LC
	.quad	_L_1+49050
	.quad	_A__uLE_var_u16_LC
	.quad	_L_1+49064
	.quad	_A__LE_param_u16_i16
	.quad	_L_1+49079
	.quad	_A__uLE_param_u16_i16
	.quad	_L_1+49096
	.quad	_A__LE_var_u16_i16
	.quad	_L_1+49114
	.quad	_A__uLE_var_u16_i16
	.quad	_L_1+49129
	.quad	_A__LE_param_u64_i32
	.quad	_L_1+49145
	.quad	_A__uLE_param_u64_i32
	.quad	_L_1+49162
	.quad	_A__LE_var_u64_i32
	.quad	_L_1+49180
	.quad	_A__uLE_var_u64_i32
	.quad	_L_1+49195
	.quad	_A__LE_param_u64_u16
	.quad	_L_1+49211
	.quad	_A__uLE_param_u64_u16
	.quad	_L_1+49228
	.quad	_A__LE_var_u64_u16
	.quad	_L_1+49246
	.quad	_A__uLE_var_u64_u16
	.quad	_L_1+49261
	.quad	_A__LE_param_u64_u64
	.quad	_L_1+49277
	.quad	_A__uLE_param_u64_u64
	.quad	_L_1+49294
	.quad	_A__LE_var_u64_u64
	.quad	_L_1+49312
	.quad	_A__uLE_var_u64_u64
	.quad	_L_1+49327
	.quad	_A__LE_param_u64_L
	.quad	_L_1+49343
	.quad	_A__uLE_param_u64_L
	.quad	_L_1+49358
	.quad	_A__LE_var_u64_L
	.quad	_L_1+49374
	.quad	_A__uLE_var_u64_L
	.quad	_L_1+49387
	.quad	_A__LE_param_u64_i8
	.quad	_L_1+49401
	.quad	_A__uLE_param_u64_i8
	.quad	_L_1+49417
	.quad	_A__LE_var_u64_i8
	.quad	_L_1+49434
	.quad	_A__uLE_var_u64_i8
	.quad	_L_1+49448
	.quad	_A__LE_param_u64_u32
	.quad	_L_1+49463
	.quad	_A__uLE_param_u64_u32
	.quad	_L_1+49480
	.quad	_A__LE_var_u64_u32
	.quad	_L_1+49498
	.quad	_A__uLE_var_u64_u32
	.quad	_L_1+49513
	.quad	_A__LE_param_u64_C
	.quad	_L_1+49529
	.quad	_A__uLE_param_u64_C
	.quad	_L_1+49544
	.quad	_A__LE_var_u64_C
	.quad	_L_1+49560
	.quad	_A__uLE_var_u64_C
	.quad	_L_1+49573
	.quad	_A__LE_param_u64_u8
	.quad	_L_1+49587
	.quad	_A__uLE_param_u64_u8
	.quad	_L_1+49603
	.quad	_A__LE_var_u64_u8
	.quad	_L_1+49620
	.quad	_A__uLE_var_u64_u8
	.quad	_L_1+49634
	.quad	_A__LE_param_u64_I
	.quad	_L_1+49649
	.quad	_A__uLE_param_u64_I
	.quad	_L_1+49664
	.quad	_A__LE_var_u64_I
	.quad	_L_1+49680
	.quad	_A__uLE_var_u64_I
	.quad	_L_1+49693
	.quad	_A__LE_param_u64_i64
	.quad	_L_1+49707
	.quad	_A__uLE_param_u64_i64
	.quad	_L_1+49724
	.quad	_A__LE_var_u64_i64
	.quad	_L_1+49742
	.quad	_A__uLE_var_u64_i64
	.quad	_L_1+49757
	.quad	_A__LE_param_u64_LC
	.quad	_L_1+49773
	.quad	_A__uLE_param_u64_LC
	.quad	_L_1+49789
	.quad	_A__LE_var_u64_LC
	.quad	_L_1+49806
	.quad	_A__uLE_var_u64_LC
	.quad	_L_1+49820
	.quad	_A__LE_param_u64_i16
	.quad	_L_1+49835
	.quad	_A__uLE_param_u64_i16
	.quad	_L_1+49852
	.quad	_A__LE_var_u64_i16
	.quad	_L_1+49870
	.quad	_A__uLE_var_u64_i16
	.quad	_L_1+49885
	.quad	_A__LE_param_L_i32
	.quad	_L_1+49901
	.quad	_A__uLE_param_L_i32
	.quad	_L_1+49916
	.quad	_A__LE_var_L_i32
	.quad	_L_1+49932
	.quad	_A__uLE_var_L_i32
	.quad	_L_1+49945
	.quad	_A__LE_param_L_u16
	.quad	_L_1+49959
	.quad	_A__uLE_param_L_u16
	.quad	_L_1+49974
	.quad	_A__LE_var_L_u16
	.quad	_L_1+49990
	.quad	_A__uLE_var_L_u16
	.quad	_L_1+50003
	.quad	_A__LE_param_L_u64
	.quad	_L_1+50017
	.quad	_A__uLE_param_L_u64
	.quad	_L_1+50032
	.quad	_A__LE_var_L_u64
	.quad	_L_1+50048
	.quad	_A__uLE_var_L_u64
	.quad	_L_1+50061
	.quad	_A__LE_param_L_L
	.quad	_L_1+50075
	.quad	_A__uLE_param_L_L
	.quad	_L_1+50088
	.quad	_A__LE_var_L_L
	.quad	_L_1+50102
	.quad	_A__uLE_var_L_L
	.quad	_L_1+50113
	.quad	_A__LE_param_L_i8
	.quad	_L_1+50125
	.quad	_A__uLE_param_L_i8
	.quad	_L_1+50139
	.quad	_A__LE_var_L_i8
	.quad	_L_1+50154
	.quad	_A__uLE_var_L_i8
	.quad	_L_1+50166
	.quad	_A__LE_param_L_u32
	.quad	_L_1+50179
	.quad	_A__uLE_param_L_u32
	.quad	_L_1+50194
	.quad	_A__LE_var_L_u32
	.quad	_L_1+50210
	.quad	_A__uLE_var_L_u32
	.quad	_L_1+50223
	.quad	_A__LE_param_L_C
	.quad	_L_1+50237
	.quad	_A__uLE_param_L_C
	.quad	_L_1+50250
	.quad	_A__LE_var_L_C
	.quad	_L_1+50264
	.quad	_A__uLE_var_L_C
	.quad	_L_1+50275
	.quad	_A__LE_param_L_u8
	.quad	_L_1+50287
	.quad	_A__uLE_param_L_u8
	.quad	_L_1+50301
	.quad	_A__LE_var_L_u8
	.quad	_L_1+50316
	.quad	_A__uLE_var_L_u8
	.quad	_L_1+50328
	.quad	_A__LE_param_L_I
	.quad	_L_1+50341
	.quad	_A__uLE_param_L_I
	.quad	_L_1+50354
	.quad	_A__LE_var_L_I
	.quad	_L_1+50368
	.quad	_A__uLE_var_L_I
	.quad	_L_1+50379
	.quad	_A__LE_param_L_i64
	.quad	_L_1+50391
	.quad	_A__uLE_param_L_i64
	.quad	_L_1+50406
	.quad	_A__LE_var_L_i64
	.quad	_L_1+50422
	.quad	_A__uLE_var_L_i64
	.quad	_L_1+50435
	.quad	_A__LE_param_L_LC
	.quad	_L_1+50449
	.quad	_A__uLE_param_L_LC
	.quad	_L_1+50463
	.quad	_A__LE_var_L_LC
	.quad	_L_1+50478
	.quad	_A__uLE_var_L_LC
	.quad	_L_1+50490
	.quad	_A__LE_param_L_i16
	.quad	_L_1+50503
	.quad	_A__uLE_param_L_i16
	.quad	_L_1+50518
	.quad	_A__LE_var_L_i16
	.quad	_L_1+50534
	.quad	_A__uLE_var_L_i16
	.quad	_L_1+50547
	.quad	_A__LE_param_i8_i32
	.quad	_L_1+50561
	.quad	_A__uLE_param_i8_i32
	.quad	_L_1+50577
	.quad	_A__LE_var_i8_i32
	.quad	_L_1+50594
	.quad	_A__uLE_var_i8_i32
	.quad	_L_1+50608
	.quad	_A__LE_param_i8_u16
	.quad	_L_1+50623
	.quad	_A__uLE_param_i8_u16
	.quad	_L_1+50639
	.quad	_A__LE_var_i8_u16
	.quad	_L_1+50656
	.quad	_A__uLE_var_i8_u16
	.quad	_L_1+50670
	.quad	_A__LE_param_i8_u64
	.quad	_L_1+50685
	.quad	_A__uLE_param_i8_u64
	.quad	_L_1+50701
	.quad	_A__LE_var_i8_u64
	.quad	_L_1+50718
	.quad	_A__uLE_var_i8_u64
	.quad	_L_1+50732
	.quad	_A__LE_param_i8_L
	.quad	_L_1+50747
	.quad	_A__uLE_param_i8_L
	.quad	_L_1+50761
	.quad	_A__LE_var_i8_L
	.quad	_L_1+50776
	.quad	_A__uLE_var_i8_L
	.quad	_L_1+50788
	.quad	_A__LE_param_i8_i8
	.quad	_L_1+50801
	.quad	_A__uLE_param_i8_i8
	.quad	_L_1+50816
	.quad	_A__LE_var_i8_i8
	.quad	_L_1+50832
	.quad	_A__uLE_var_i8_i8
	.quad	_L_1+50845
	.quad	_A__LE_param_i8_u32
	.quad	_L_1+50859
	.quad	_A__uLE_param_i8_u32
	.quad	_L_1+50875
	.quad	_A__LE_var_i8_u32
	.quad	_L_1+50892
	.quad	_A__uLE_var_i8_u32
	.quad	_L_1+50906
	.quad	_A__LE_param_i8_C
	.quad	_L_1+50921
	.quad	_A__uLE_param_i8_C
	.quad	_L_1+50935
	.quad	_A__LE_var_i8_C
	.quad	_L_1+50950
	.quad	_A__uLE_var_i8_C
	.quad	_L_1+50962
	.quad	_A__LE_param_i8_u8
	.quad	_L_1+50975
	.quad	_A__uLE_param_i8_u8
	.quad	_L_1+50990
	.quad	_A__LE_var_i8_u8
	.quad	_L_1+51006
	.quad	_A__uLE_var_i8_u8
	.quad	_L_1+51019
	.quad	_A__LE_param_i8_I
	.quad	_L_1+51033
	.quad	_A__uLE_param_i8_I
	.quad	_L_1+51047
	.quad	_A__LE_var_i8_I
	.quad	_L_1+51062
	.quad	_A__uLE_var_i8_I
	.quad	_L_1+51074
	.quad	_A__LE_param_i8_i64
	.quad	_L_1+51087
	.quad	_A__uLE_param_i8_i64
	.quad	_L_1+51103
	.quad	_A__LE_var_i8_i64
	.quad	_L_1+51120
	.quad	_A__uLE_var_i8_i64
	.quad	_L_1+51134
	.quad	_A__LE_param_i8_LC
	.quad	_L_1+51149
	.quad	_A__uLE_param_i8_LC
	.quad	_L_1+51164
	.quad	_A__LE_var_i8_LC
	.quad	_L_1+51180
	.quad	_A__uLE_var_i8_LC
	.quad	_L_1+51193
	.quad	_A__LE_param_i8_i16
	.quad	_L_1+51207
	.quad	_A__uLE_param_i8_i16
	.quad	_L_1+51223
	.quad	_A__LE_var_i8_i16
	.quad	_L_1+51240
	.quad	_A__uLE_var_i8_i16
	.quad	_L_1+51254
	.quad	_A__LE_param_u32_i32
	.quad	_L_1+51269
	.quad	_A__uLE_param_u32_i32
	.quad	_L_1+51286
	.quad	_A__LE_var_u32_i32
	.quad	_L_1+51304
	.quad	_A__uLE_var_u32_i32
	.quad	_L_1+51319
	.quad	_A__LE_param_u32_u16
	.quad	_L_1+51335
	.quad	_A__uLE_param_u32_u16
	.quad	_L_1+51352
	.quad	_A__LE_var_u32_u16
	.quad	_L_1+51370
	.quad	_A__uLE_var_u32_u16
	.quad	_L_1+51385
	.quad	_A__LE_param_u32_u64
	.quad	_L_1+51401
	.quad	_A__uLE_param_u32_u64
	.quad	_L_1+51418
	.quad	_A__LE_var_u32_u64
	.quad	_L_1+51436
	.quad	_A__uLE_var_u32_u64
	.quad	_L_1+51451
	.quad	_A__LE_param_u32_L
	.quad	_L_1+51467
	.quad	_A__uLE_param_u32_L
	.quad	_L_1+51482
	.quad	_A__LE_var_u32_L
	.quad	_L_1+51498
	.quad	_A__uLE_var_u32_L
	.quad	_L_1+51511
	.quad	_A__LE_param_u32_i8
	.quad	_L_1+51525
	.quad	_A__uLE_param_u32_i8
	.quad	_L_1+51541
	.quad	_A__LE_var_u32_i8
	.quad	_L_1+51558
	.quad	_A__uLE_var_u32_i8
	.quad	_L_1+51572
	.quad	_A__LE_param_u32_u32
	.quad	_L_1+51587
	.quad	_A__uLE_param_u32_u32
	.quad	_L_1+51604
	.quad	_A__LE_var_u32_u32
	.quad	_L_1+51622
	.quad	_A__uLE_var_u32_u32
	.quad	_L_1+51637
	.quad	_A__LE_param_u32_C
	.quad	_L_1+51653
	.quad	_A__uLE_param_u32_C
	.quad	_L_1+51668
	.quad	_A__LE_var_u32_C
	.quad	_L_1+51684
	.quad	_A__uLE_var_u32_C
	.quad	_L_1+51697
	.quad	_A__LE_param_u32_u8
	.quad	_L_1+51711
	.quad	_A__uLE_param_u32_u8
	.quad	_L_1+51727
	.quad	_A__LE_var_u32_u8
	.quad	_L_1+51744
	.quad	_A__uLE_var_u32_u8
	.quad	_L_1+51758
	.quad	_A__LE_param_u32_I
	.quad	_L_1+51773
	.quad	_A__uLE_param_u32_I
	.quad	_L_1+51788
	.quad	_A__LE_var_u32_I
	.quad	_L_1+51804
	.quad	_A__uLE_var_u32_I
	.quad	_L_1+51817
	.quad	_A__LE_param_u32_i64
	.quad	_L_1+51831
	.quad	_A__uLE_param_u32_i64
	.quad	_L_1+51848
	.quad	_A__LE_var_u32_i64
	.quad	_L_1+51866
	.quad	_A__uLE_var_u32_i64
	.quad	_L_1+51881
	.quad	_A__LE_param_u32_LC
	.quad	_L_1+51897
	.quad	_A__uLE_param_u32_LC
	.quad	_L_1+51913
	.quad	_A__LE_var_u32_LC
	.quad	_L_1+51930
	.quad	_A__uLE_var_u32_LC
	.quad	_L_1+51944
	.quad	_A__LE_param_u32_i16
	.quad	_L_1+51959
	.quad	_A__uLE_param_u32_i16
	.quad	_L_1+51976
	.quad	_A__LE_var_u32_i16
	.quad	_L_1+51994
	.quad	_A__uLE_var_u32_i16
	.quad	_L_1+52009
	.quad	_A__LE_param_f32_f32
	.quad	_L_1+52025
	.quad	_A__LE_var_f32_f32
	.quad	_L_1+52042
	.quad	_A__LE_param_C_i32
	.quad	_L_1+52057
	.quad	_A__uLE_param_C_i32
	.quad	_L_1+52072
	.quad	_A__LE_var_C_i32
	.quad	_L_1+52088
	.quad	_A__uLE_var_C_i32
	.quad	_L_1+52101
	.quad	_A__LE_param_C_u16
	.quad	_L_1+52115
	.quad	_A__uLE_param_C_u16
	.quad	_L_1+52130
	.quad	_A__LE_var_C_u16
	.quad	_L_1+52146
	.quad	_A__uLE_var_C_u16
	.quad	_L_1+52159
	.quad	_A__LE_param_C_u64
	.quad	_L_1+52173
	.quad	_A__uLE_param_C_u64
	.quad	_L_1+52188
	.quad	_A__LE_var_C_u64
	.quad	_L_1+52204
	.quad	_A__uLE_var_C_u64
	.quad	_L_1+52217
	.quad	_A__LE_param_C_L
	.quad	_L_1+52231
	.quad	_A__uLE_param_C_L
	.quad	_L_1+52244
	.quad	_A__LE_var_C_L
	.quad	_L_1+52258
	.quad	_A__uLE_var_C_L
	.quad	_L_1+52269
	.quad	_A__LE_param_C_i8
	.quad	_L_1+52281
	.quad	_A__uLE_param_C_i8
	.quad	_L_1+52295
	.quad	_A__LE_var_C_i8
	.quad	_L_1+52310
	.quad	_A__uLE_var_C_i8
	.quad	_L_1+52322
	.quad	_A__LE_param_C_u32
	.quad	_L_1+52335
	.quad	_A__uLE_param_C_u32
	.quad	_L_1+52350
	.quad	_A__LE_var_C_u32
	.quad	_L_1+52366
	.quad	_A__uLE_var_C_u32
	.quad	_L_1+52379
	.quad	_A__LE_param_C_C
	.quad	_L_1+52393
	.quad	_A__uLE_param_C_C
	.quad	_L_1+52406
	.quad	_A__LE_var_C_C
	.quad	_L_1+52420
	.quad	_A__uLE_var_C_C
	.quad	_L_1+52431
	.quad	_A__LE_param_C_u8
	.quad	_L_1+52443
	.quad	_A__uLE_param_C_u8
	.quad	_L_1+52457
	.quad	_A__LE_var_C_u8
	.quad	_L_1+52472
	.quad	_A__uLE_var_C_u8
	.quad	_L_1+52484
	.quad	_A__LE_param_C_I
	.quad	_L_1+52497
	.quad	_A__uLE_param_C_I
	.quad	_L_1+52510
	.quad	_A__LE_var_C_I
	.quad	_L_1+52524
	.quad	_A__uLE_var_C_I
	.quad	_L_1+52535
	.quad	_A__LE_param_C_i64
	.quad	_L_1+52547
	.quad	_A__uLE_param_C_i64
	.quad	_L_1+52562
	.quad	_A__LE_var_C_i64
	.quad	_L_1+52578
	.quad	_A__uLE_var_C_i64
	.quad	_L_1+52591
	.quad	_A__LE_param_C_LC
	.quad	_L_1+52605
	.quad	_A__uLE_param_C_LC
	.quad	_L_1+52619
	.quad	_A__LE_var_C_LC
	.quad	_L_1+52634
	.quad	_A__uLE_var_C_LC
	.quad	_L_1+52646
	.quad	_A__LE_param_C_i16
	.quad	_L_1+52659
	.quad	_A__uLE_param_C_i16
	.quad	_L_1+52674
	.quad	_A__LE_var_C_i16
	.quad	_L_1+52690
	.quad	_A__uLE_var_C_i16
	.quad	_L_1+52703
	.quad	_A__LE_param_u8_i32
	.quad	_L_1+52717
	.quad	_A__uLE_param_u8_i32
	.quad	_L_1+52733
	.quad	_A__LE_var_u8_i32
	.quad	_L_1+52750
	.quad	_A__uLE_var_u8_i32
	.quad	_L_1+52764
	.quad	_A__LE_param_u8_u16
	.quad	_L_1+52779
	.quad	_A__uLE_param_u8_u16
	.quad	_L_1+52795
	.quad	_A__LE_var_u8_u16
	.quad	_L_1+52812
	.quad	_A__uLE_var_u8_u16
	.quad	_L_1+52826
	.quad	_A__LE_param_u8_u64
	.quad	_L_1+52841
	.quad	_A__uLE_param_u8_u64
	.quad	_L_1+52857
	.quad	_A__LE_var_u8_u64
	.quad	_L_1+52874
	.quad	_A__uLE_var_u8_u64
	.quad	_L_1+52888
	.quad	_A__LE_param_u8_L
	.quad	_L_1+52903
	.quad	_A__uLE_param_u8_L
	.quad	_L_1+52917
	.quad	_A__LE_var_u8_L
	.quad	_L_1+52932
	.quad	_A__uLE_var_u8_L
	.quad	_L_1+52944
	.quad	_A__LE_param_u8_i8
	.quad	_L_1+52957
	.quad	_A__uLE_param_u8_i8
	.quad	_L_1+52972
	.quad	_A__LE_var_u8_i8
	.quad	_L_1+52988
	.quad	_A__uLE_var_u8_i8
	.quad	_L_1+53001
	.quad	_A__LE_param_u8_u32
	.quad	_L_1+53015
	.quad	_A__uLE_param_u8_u32
	.quad	_L_1+53031
	.quad	_A__LE_var_u8_u32
	.quad	_L_1+53048
	.quad	_A__uLE_var_u8_u32
	.quad	_L_1+53062
	.quad	_A__LE_param_u8_C
	.quad	_L_1+53077
	.quad	_A__uLE_param_u8_C
	.quad	_L_1+53091
	.quad	_A__LE_var_u8_C
	.quad	_L_1+53106
	.quad	_A__uLE_var_u8_C
	.quad	_L_1+53118
	.quad	_A__LE_param_u8_u8
	.quad	_L_1+53131
	.quad	_A__uLE_param_u8_u8
	.quad	_L_1+53146
	.quad	_A__LE_var_u8_u8
	.quad	_L_1+53162
	.quad	_A__uLE_var_u8_u8
	.quad	_L_1+53175
	.quad	_A__LE_param_u8_I
	.quad	_L_1+53189
	.quad	_A__uLE_param_u8_I
	.quad	_L_1+53203
	.quad	_A__LE_var_u8_I
	.quad	_L_1+53218
	.quad	_A__uLE_var_u8_I
	.quad	_L_1+53230
	.quad	_A__LE_param_u8_i64
	.quad	_L_1+53243
	.quad	_A__uLE_param_u8_i64
	.quad	_L_1+53259
	.quad	_A__LE_var_u8_i64
	.quad	_L_1+53276
	.quad	_A__uLE_var_u8_i64
	.quad	_L_1+53290
	.quad	_A__LE_param_u8_LC
	.quad	_L_1+53305
	.quad	_A__uLE_param_u8_LC
	.quad	_L_1+53320
	.quad	_A__LE_var_u8_LC
	.quad	_L_1+53336
	.quad	_A__uLE_var_u8_LC
	.quad	_L_1+53349
	.quad	_A__LE_param_u8_i16
	.quad	_L_1+53363
	.quad	_A__uLE_param_u8_i16
	.quad	_L_1+53379
	.quad	_A__LE_var_u8_i16
	.quad	_L_1+53396
	.quad	_A__uLE_var_u8_i16
	.quad	_L_1+53410
	.quad	_A__LE_param_I_i32
	.quad	_L_1+53425
	.quad	_A__uLE_param_I_i32
	.quad	_L_1+53440
	.quad	_A__LE_var_I_i32
	.quad	_L_1+53456
	.quad	_A__uLE_var_I_i32
	.quad	_L_1+53469
	.quad	_A__LE_param_I_u16
	.quad	_L_1+53483
	.quad	_A__uLE_param_I_u16
	.quad	_L_1+53498
	.quad	_A__LE_var_I_u16
	.quad	_L_1+53514
	.quad	_A__uLE_var_I_u16
	.quad	_L_1+53527
	.quad	_A__LE_param_I_u64
	.quad	_L_1+53541
	.quad	_A__uLE_param_I_u64
	.quad	_L_1+53556
	.quad	_A__LE_var_I_u64
	.quad	_L_1+53572
	.quad	_A__uLE_var_I_u64
	.quad	_L_1+53585
	.quad	_A__LE_param_I_L
	.quad	_L_1+53599
	.quad	_A__uLE_param_I_L
	.quad	_L_1+53612
	.quad	_A__LE_var_I_L
	.quad	_L_1+53626
	.quad	_A__uLE_var_I_L
	.quad	_L_1+53637
	.quad	_A__LE_param_I_i8
	.quad	_L_1+53649
	.quad	_A__uLE_param_I_i8
	.quad	_L_1+53663
	.quad	_A__LE_var_I_i8
	.quad	_L_1+53678
	.quad	_A__uLE_var_I_i8
	.quad	_L_1+53690
	.quad	_A__LE_param_I_u32
	.quad	_L_1+53703
	.quad	_A__uLE_param_I_u32
	.quad	_L_1+53718
	.quad	_A__LE_var_I_u32
	.quad	_L_1+53734
	.quad	_A__uLE_var_I_u32
	.quad	_L_1+53747
	.quad	_A__LE_param_I_C
	.quad	_L_1+53761
	.quad	_A__uLE_param_I_C
	.quad	_L_1+53774
	.quad	_A__LE_var_I_C
	.quad	_L_1+53788
	.quad	_A__uLE_var_I_C
	.quad	_L_1+53799
	.quad	_A__LE_param_I_u8
	.quad	_L_1+53811
	.quad	_A__uLE_param_I_u8
	.quad	_L_1+53825
	.quad	_A__LE_var_I_u8
	.quad	_L_1+53840
	.quad	_A__uLE_var_I_u8
	.quad	_L_1+53852
	.quad	_A__LE_param_I_I
	.quad	_L_1+53865
	.quad	_A__uLE_param_I_I
	.quad	_L_1+53878
	.quad	_A__LE_var_I_I
	.quad	_L_1+53892
	.quad	_A__uLE_var_I_I
	.quad	_L_1+53903
	.quad	_A__LE_param_I_i64
	.quad	_L_1+53915
	.quad	_A__uLE_param_I_i64
	.quad	_L_1+53930
	.quad	_A__LE_var_I_i64
	.quad	_L_1+53946
	.quad	_A__uLE_var_I_i64
	.quad	_L_1+53959
	.quad	_A__LE_param_I_LC
	.quad	_L_1+53973
	.quad	_A__uLE_param_I_LC
	.quad	_L_1+53987
	.quad	_A__LE_var_I_LC
	.quad	_L_1+54002
	.quad	_A__uLE_var_I_LC
	.quad	_L_1+54014
	.quad	_A__LE_param_I_i16
	.quad	_L_1+54027
	.quad	_A__uLE_param_I_i16
	.quad	_L_1+54042
	.quad	_A__LE_var_I_i16
	.quad	_L_1+54058
	.quad	_A__uLE_var_I_i16
	.quad	_L_1+54071
	.quad	_A__LE_param_i64_i32
	.quad	_L_1+54085
	.quad	_A__uLE_param_i64_i32
	.quad	_L_1+54102
	.quad	_A__LE_var_i64_i32
	.quad	_L_1+54120
	.quad	_A__uLE_var_i64_i32
	.quad	_L_1+54135
	.quad	_A__LE_param_i64_u16
	.quad	_L_1+54151
	.quad	_A__uLE_param_i64_u16
	.quad	_L_1+54168
	.quad	_A__LE_var_i64_u16
	.quad	_L_1+54186
	.quad	_A__uLE_var_i64_u16
	.quad	_L_1+54201
	.quad	_A__LE_param_i64_u64
	.quad	_L_1+54217
	.quad	_A__uLE_param_i64_u64
	.quad	_L_1+54234
	.quad	_A__LE_var_i64_u64
	.quad	_L_1+54252
	.quad	_A__uLE_var_i64_u64
	.quad	_L_1+54267
	.quad	_A__LE_param_i64_L
	.quad	_L_1+54283
	.quad	_A__uLE_param_i64_L
	.quad	_L_1+54298
	.quad	_A__LE_var_i64_L
	.quad	_L_1+54314
	.quad	_A__uLE_var_i64_L
	.quad	_L_1+54327
	.quad	_A__LE_param_i64_i8
	.quad	_L_1+54341
	.quad	_A__uLE_param_i64_i8
	.quad	_L_1+54357
	.quad	_A__LE_var_i64_i8
	.quad	_L_1+54374
	.quad	_A__uLE_var_i64_i8
	.quad	_L_1+54388
	.quad	_A__LE_param_i64_u32
	.quad	_L_1+54403
	.quad	_A__uLE_param_i64_u32
	.quad	_L_1+54420
	.quad	_A__LE_var_i64_u32
	.quad	_L_1+54438
	.quad	_A__uLE_var_i64_u32
	.quad	_L_1+54453
	.quad	_A__LE_param_i64_C
	.quad	_L_1+54469
	.quad	_A__uLE_param_i64_C
	.quad	_L_1+54484
	.quad	_A__LE_var_i64_C
	.quad	_L_1+54500
	.quad	_A__uLE_var_i64_C
	.quad	_L_1+54513
	.quad	_A__LE_param_i64_u8
	.quad	_L_1+54527
	.quad	_A__uLE_param_i64_u8
	.quad	_L_1+54543
	.quad	_A__LE_var_i64_u8
	.quad	_L_1+54560
	.quad	_A__uLE_var_i64_u8
	.quad	_L_1+54574
	.quad	_A__LE_param_i64_I
	.quad	_L_1+54589
	.quad	_A__uLE_param_i64_I
	.quad	_L_1+54604
	.quad	_A__LE_var_i64_I
	.quad	_L_1+54620
	.quad	_A__uLE_var_i64_I
	.quad	_L_1+54633
	.quad	_A__LE_param_i64_i64
	.quad	_L_1+54647
	.quad	_A__uLE_param_i64_i64
	.quad	_L_1+54664
	.quad	_A__LE_var_i64_i64
	.quad	_L_1+54682
	.quad	_A__uLE_var_i64_i64
	.quad	_L_1+54697
	.quad	_A__LE_param_i64_LC
	.quad	_L_1+54713
	.quad	_A__uLE_param_i64_LC
	.quad	_L_1+54729
	.quad	_A__LE_var_i64_LC
	.quad	_L_1+54746
	.quad	_A__uLE_var_i64_LC
	.quad	_L_1+54760
	.quad	_A__LE_param_i64_i16
	.quad	_L_1+54775
	.quad	_A__uLE_param_i64_i16
	.quad	_L_1+54792
	.quad	_A__LE_var_i64_i16
	.quad	_L_1+54810
	.quad	_A__uLE_var_i64_i16
	.quad	_L_1+54825
	.quad	_A__LE_param_f64_f64
	.quad	_L_1+54841
	.quad	_A__LE_var_f64_f64
	.quad	_L_1+54858
	.quad	_A__LE_param_LC_i32
	.quad	_L_1+54873
	.quad	_A__uLE_param_LC_i32
	.quad	_L_1+54889
	.quad	_A__LE_var_LC_i32
	.quad	_L_1+54906
	.quad	_A__uLE_var_LC_i32
	.quad	_L_1+54920
	.quad	_A__LE_param_LC_u16
	.quad	_L_1+54935
	.quad	_A__uLE_param_LC_u16
	.quad	_L_1+54951
	.quad	_A__LE_var_LC_u16
	.quad	_L_1+54968
	.quad	_A__uLE_var_LC_u16
	.quad	_L_1+54982
	.quad	_A__LE_param_LC_u64
	.quad	_L_1+54997
	.quad	_A__uLE_param_LC_u64
	.quad	_L_1+55013
	.quad	_A__LE_var_LC_u64
	.quad	_L_1+55030
	.quad	_A__uLE_var_LC_u64
	.quad	_L_1+55044
	.quad	_A__LE_param_LC_L
	.quad	_L_1+55059
	.quad	_A__uLE_param_LC_L
	.quad	_L_1+55073
	.quad	_A__LE_var_LC_L
	.quad	_L_1+55088
	.quad	_A__uLE_var_LC_L
	.quad	_L_1+55100
	.quad	_A__LE_param_LC_i8
	.quad	_L_1+55113
	.quad	_A__uLE_param_LC_i8
	.quad	_L_1+55128
	.quad	_A__LE_var_LC_i8
	.quad	_L_1+55144
	.quad	_A__uLE_var_LC_i8
	.quad	_L_1+55157
	.quad	_A__LE_param_LC_u32
	.quad	_L_1+55171
	.quad	_A__uLE_param_LC_u32
	.quad	_L_1+55187
	.quad	_A__LE_var_LC_u32
	.quad	_L_1+55204
	.quad	_A__uLE_var_LC_u32
	.quad	_L_1+55218
	.quad	_A__LE_param_LC_C
	.quad	_L_1+55233
	.quad	_A__uLE_param_LC_C
	.quad	_L_1+55247
	.quad	_A__LE_var_LC_C
	.quad	_L_1+55262
	.quad	_A__uLE_var_LC_C
	.quad	_L_1+55274
	.quad	_A__LE_param_LC_u8
	.quad	_L_1+55287
	.quad	_A__uLE_param_LC_u8
	.quad	_L_1+55302
	.quad	_A__LE_var_LC_u8
	.quad	_L_1+55318
	.quad	_A__uLE_var_LC_u8
	.quad	_L_1+55331
	.quad	_A__LE_param_LC_I
	.quad	_L_1+55345
	.quad	_A__uLE_param_LC_I
	.quad	_L_1+55359
	.quad	_A__LE_var_LC_I
	.quad	_L_1+55374
	.quad	_A__uLE_var_LC_I
	.quad	_L_1+55386
	.quad	_A__LE_param_LC_i64
	.quad	_L_1+55399
	.quad	_A__uLE_param_LC_i64
	.quad	_L_1+55415
	.quad	_A__LE_var_LC_i64
	.quad	_L_1+55432
	.quad	_A__uLE_var_LC_i64
	.quad	_L_1+55446
	.quad	_A__LE_param_LC_LC
	.quad	_L_1+55461
	.quad	_A__uLE_param_LC_LC
	.quad	_L_1+55476
	.quad	_A__LE_var_LC_LC
	.quad	_L_1+55492
	.quad	_A__uLE_var_LC_LC
	.quad	_L_1+55505
	.quad	_A__LE_param_LC_i16
	.quad	_L_1+55519
	.quad	_A__uLE_param_LC_i16
	.quad	_L_1+55535
	.quad	_A__LE_var_LC_i16
	.quad	_L_1+55552
	.quad	_A__uLE_var_LC_i16
	.quad	_L_1+55566
	.quad	_A__LE_param_i16_i32
	.quad	_L_1+55581
	.quad	_A__uLE_param_i16_i32
	.quad	_L_1+55598
	.quad	_A__LE_var_i16_i32
	.quad	_L_1+55616
	.quad	_A__uLE_var_i16_i32
	.quad	_L_1+55631
	.quad	_A__LE_param_i16_u16
	.quad	_L_1+55647
	.quad	_A__uLE_param_i16_u16
	.quad	_L_1+55664
	.quad	_A__LE_var_i16_u16
	.quad	_L_1+55682
	.quad	_A__uLE_var_i16_u16
	.quad	_L_1+55697
	.quad	_A__LE_param_i16_u64
	.quad	_L_1+55713
	.quad	_A__uLE_param_i16_u64
	.quad	_L_1+55730
	.quad	_A__LE_var_i16_u64
	.quad	_L_1+55748
	.quad	_A__uLE_var_i16_u64
	.quad	_L_1+55763
	.quad	_A__LE_param_i16_L
	.quad	_L_1+55779
	.quad	_A__uLE_param_i16_L
	.quad	_L_1+55794
	.quad	_A__LE_var_i16_L
	.quad	_L_1+55810
	.quad	_A__uLE_var_i16_L
	.quad	_L_1+55823
	.quad	_A__LE_param_i16_i8
	.quad	_L_1+55837
	.quad	_A__uLE_param_i16_i8
	.quad	_L_1+55853
	.quad	_A__LE_var_i16_i8
	.quad	_L_1+55870
	.quad	_A__uLE_var_i16_i8
	.quad	_L_1+55884
	.quad	_A__LE_param_i16_u32
	.quad	_L_1+55899
	.quad	_A__uLE_param_i16_u32
	.quad	_L_1+55916
	.quad	_A__LE_var_i16_u32
	.quad	_L_1+55934
	.quad	_A__uLE_var_i16_u32
	.quad	_L_1+55949
	.quad	_A__LE_param_i16_C
	.quad	_L_1+55965
	.quad	_A__uLE_param_i16_C
	.quad	_L_1+55980
	.quad	_A__LE_var_i16_C
	.quad	_L_1+55996
	.quad	_A__uLE_var_i16_C
	.quad	_L_1+56009
	.quad	_A__LE_param_i16_u8
	.quad	_L_1+56023
	.quad	_A__uLE_param_i16_u8
	.quad	_L_1+56039
	.quad	_A__LE_var_i16_u8
	.quad	_L_1+56056
	.quad	_A__uLE_var_i16_u8
	.quad	_L_1+56070
	.quad	_A__LE_param_i16_I
	.quad	_L_1+56085
	.quad	_A__uLE_param_i16_I
	.quad	_L_1+56100
	.quad	_A__LE_var_i16_I
	.quad	_L_1+56116
	.quad	_A__uLE_var_i16_I
	.quad	_L_1+56129
	.quad	_A__LE_param_i16_i64
	.quad	_L_1+56143
	.quad	_A__uLE_param_i16_i64
	.quad	_L_1+56160
	.quad	_A__LE_var_i16_i64
	.quad	_L_1+56178
	.quad	_A__uLE_var_i16_i64
	.quad	_L_1+56193
	.quad	_A__LE_param_i16_LC
	.quad	_L_1+56209
	.quad	_A__uLE_param_i16_LC
	.quad	_L_1+56225
	.quad	_A__LE_var_i16_LC
	.quad	_L_1+56242
	.quad	_A__uLE_var_i16_LC
	.quad	_L_1+56256
	.quad	_A__LE_param_i16_i16
	.quad	_L_1+56271
	.quad	_A__uLE_param_i16_i16
	.quad	_L_1+56288
	.quad	_A__LE_var_i16_i16
	.quad	_L_1+56306
	.quad	_A__uLE_var_i16_i16
	.quad	_L_1+56321
	.quad	_A__LT_param_i32_i32
	.quad	_L_1+56337
	.quad	_A__uLT_param_i32_i32
	.quad	_L_1+56354
	.quad	_A__LT_var_i32_i32
	.quad	_L_1+56372
	.quad	_A__uLT_var_i32_i32
	.quad	_L_1+56387
	.quad	_A__LT_param_i32_u16
	.quad	_L_1+56403
	.quad	_A__uLT_param_i32_u16
	.quad	_L_1+56420
	.quad	_A__LT_var_i32_u16
	.quad	_L_1+56438
	.quad	_A__uLT_var_i32_u16
	.quad	_L_1+56453
	.quad	_A__LT_param_i32_u64
	.quad	_L_1+56469
	.quad	_A__uLT_param_i32_u64
	.quad	_L_1+56486
	.quad	_A__LT_var_i32_u64
	.quad	_L_1+56504
	.quad	_A__uLT_var_i32_u64
	.quad	_L_1+56519
	.quad	_A__LT_param_i32_L
	.quad	_L_1+56535
	.quad	_A__uLT_param_i32_L
	.quad	_L_1+56550
	.quad	_A__LT_var_i32_L
	.quad	_L_1+56566
	.quad	_A__uLT_var_i32_L
	.quad	_L_1+56579
	.quad	_A__LT_param_i32_i8
	.quad	_L_1+56593
	.quad	_A__uLT_param_i32_i8
	.quad	_L_1+56609
	.quad	_A__LT_var_i32_i8
	.quad	_L_1+56626
	.quad	_A__uLT_var_i32_i8
	.quad	_L_1+56640
	.quad	_A__LT_param_i32_u32
	.quad	_L_1+56655
	.quad	_A__uLT_param_i32_u32
	.quad	_L_1+56672
	.quad	_A__LT_var_i32_u32
	.quad	_L_1+56690
	.quad	_A__uLT_var_i32_u32
	.quad	_L_1+56705
	.quad	_A__LT_param_i32_C
	.quad	_L_1+56721
	.quad	_A__uLT_param_i32_C
	.quad	_L_1+56736
	.quad	_A__LT_var_i32_C
	.quad	_L_1+56752
	.quad	_A__uLT_var_i32_C
	.quad	_L_1+56765
	.quad	_A__LT_param_i32_u8
	.quad	_L_1+56779
	.quad	_A__uLT_param_i32_u8
	.quad	_L_1+56795
	.quad	_A__LT_var_i32_u8
	.quad	_L_1+56812
	.quad	_A__uLT_var_i32_u8
	.quad	_L_1+56826
	.quad	_A__LT_param_i32_I
	.quad	_L_1+56841
	.quad	_A__uLT_param_i32_I
	.quad	_L_1+56856
	.quad	_A__LT_var_i32_I
	.quad	_L_1+56872
	.quad	_A__uLT_var_i32_I
	.quad	_L_1+56885
	.quad	_A__LT_param_i32_i64
	.quad	_L_1+56899
	.quad	_A__uLT_param_i32_i64
	.quad	_L_1+56916
	.quad	_A__LT_var_i32_i64
	.quad	_L_1+56934
	.quad	_A__uLT_var_i32_i64
	.quad	_L_1+56949
	.quad	_A__LT_param_i32_LC
	.quad	_L_1+56965
	.quad	_A__uLT_param_i32_LC
	.quad	_L_1+56981
	.quad	_A__LT_var_i32_LC
	.quad	_L_1+56998
	.quad	_A__uLT_var_i32_LC
	.quad	_L_1+57012
	.quad	_A__LT_param_i32_i16
	.quad	_L_1+57027
	.quad	_A__uLT_param_i32_i16
	.quad	_L_1+57044
	.quad	_A__LT_var_i32_i16
	.quad	_L_1+57062
	.quad	_A__uLT_var_i32_i16
	.quad	_L_1+57077
	.quad	_A__LT_param_u16_i32
	.quad	_L_1+57093
	.quad	_A__uLT_param_u16_i32
	.quad	_L_1+57110
	.quad	_A__LT_var_u16_i32
	.quad	_L_1+57128
	.quad	_A__uLT_var_u16_i32
	.quad	_L_1+57143
	.quad	_A__LT_param_u16_u16
	.quad	_L_1+57159
	.quad	_A__uLT_param_u16_u16
	.quad	_L_1+57176
	.quad	_A__LT_var_u16_u16
	.quad	_L_1+57194
	.quad	_A__uLT_var_u16_u16
	.quad	_L_1+57209
	.quad	_A__LT_param_u16_u64
	.quad	_L_1+57225
	.quad	_A__uLT_param_u16_u64
	.quad	_L_1+57242
	.quad	_A__LT_var_u16_u64
	.quad	_L_1+57260
	.quad	_A__uLT_var_u16_u64
	.quad	_L_1+57275
	.quad	_A__LT_param_u16_L
	.quad	_L_1+57291
	.quad	_A__uLT_param_u16_L
	.quad	_L_1+57306
	.quad	_A__LT_var_u16_L
	.quad	_L_1+57322
	.quad	_A__uLT_var_u16_L
	.quad	_L_1+57335
	.quad	_A__LT_param_u16_i8
	.quad	_L_1+57349
	.quad	_A__uLT_param_u16_i8
	.quad	_L_1+57365
	.quad	_A__LT_var_u16_i8
	.quad	_L_1+57382
	.quad	_A__uLT_var_u16_i8
	.quad	_L_1+57396
	.quad	_A__LT_param_u16_u32
	.quad	_L_1+57411
	.quad	_A__uLT_param_u16_u32
	.quad	_L_1+57428
	.quad	_A__LT_var_u16_u32
	.quad	_L_1+57446
	.quad	_A__uLT_var_u16_u32
	.quad	_L_1+57461
	.quad	_A__LT_param_u16_C
	.quad	_L_1+57477
	.quad	_A__uLT_param_u16_C
	.quad	_L_1+57492
	.quad	_A__LT_var_u16_C
	.quad	_L_1+57508
	.quad	_A__uLT_var_u16_C
	.quad	_L_1+57521
	.quad	_A__LT_param_u16_u8
	.quad	_L_1+57535
	.quad	_A__uLT_param_u16_u8
	.quad	_L_1+57551
	.quad	_A__LT_var_u16_u8
	.quad	_L_1+57568
	.quad	_A__uLT_var_u16_u8
	.quad	_L_1+57582
	.quad	_A__LT_param_u16_I
	.quad	_L_1+57597
	.quad	_A__uLT_param_u16_I
	.quad	_L_1+57612
	.quad	_A__LT_var_u16_I
	.quad	_L_1+57628
	.quad	_A__uLT_var_u16_I
	.quad	_L_1+57641
	.quad	_A__LT_param_u16_i64
	.quad	_L_1+57655
	.quad	_A__uLT_param_u16_i64
	.quad	_L_1+57672
	.quad	_A__LT_var_u16_i64
	.quad	_L_1+57690
	.quad	_A__uLT_var_u16_i64
	.quad	_L_1+57705
	.quad	_A__LT_param_u16_LC
	.quad	_L_1+57721
	.quad	_A__uLT_param_u16_LC
	.quad	_L_1+57737
	.quad	_A__LT_var_u16_LC
	.quad	_L_1+57754
	.quad	_A__uLT_var_u16_LC
	.quad	_L_1+57768
	.quad	_A__LT_param_u16_i16
	.quad	_L_1+57783
	.quad	_A__uLT_param_u16_i16
	.quad	_L_1+57800
	.quad	_A__LT_var_u16_i16
	.quad	_L_1+57818
	.quad	_A__uLT_var_u16_i16
	.quad	_L_1+57833
	.quad	_A__LT_param_u64_i32
	.quad	_L_1+57849
	.quad	_A__uLT_param_u64_i32
	.quad	_L_1+57866
	.quad	_A__LT_var_u64_i32
	.quad	_L_1+57884
	.quad	_A__uLT_var_u64_i32
	.quad	_L_1+57899
	.quad	_A__LT_param_u64_u16
	.quad	_L_1+57915
	.quad	_A__uLT_param_u64_u16
	.quad	_L_1+57932
	.quad	_A__LT_var_u64_u16
	.quad	_L_1+57950
	.quad	_A__uLT_var_u64_u16
	.quad	_L_1+57965
	.quad	_A__LT_param_u64_u64
	.quad	_L_1+57981
	.quad	_A__uLT_param_u64_u64
	.quad	_L_1+57998
	.quad	_A__LT_var_u64_u64
	.quad	_L_1+58016
	.quad	_A__uLT_var_u64_u64
	.quad	_L_1+58031
	.quad	_A__LT_param_u64_L
	.quad	_L_1+58047
	.quad	_A__uLT_param_u64_L
	.quad	_L_1+58062
	.quad	_A__LT_var_u64_L
	.quad	_L_1+58078
	.quad	_A__uLT_var_u64_L
	.quad	_L_1+58091
	.quad	_A__LT_param_u64_i8
	.quad	_L_1+58105
	.quad	_A__uLT_param_u64_i8
	.quad	_L_1+58121
	.quad	_A__LT_var_u64_i8
	.quad	_L_1+58138
	.quad	_A__uLT_var_u64_i8
	.quad	_L_1+58152
	.quad	_A__LT_param_u64_u32
	.quad	_L_1+58167
	.quad	_A__uLT_param_u64_u32
	.quad	_L_1+58184
	.quad	_A__LT_var_u64_u32
	.quad	_L_1+58202
	.quad	_A__uLT_var_u64_u32
	.quad	_L_1+58217
	.quad	_A__LT_param_u64_C
	.quad	_L_1+58233
	.quad	_A__uLT_param_u64_C
	.quad	_L_1+58248
	.quad	_A__LT_var_u64_C
	.quad	_L_1+58264
	.quad	_A__uLT_var_u64_C
	.quad	_L_1+58277
	.quad	_A__LT_param_u64_u8
	.quad	_L_1+58291
	.quad	_A__uLT_param_u64_u8
	.quad	_L_1+58307
	.quad	_A__LT_var_u64_u8
	.quad	_L_1+58324
	.quad	_A__uLT_var_u64_u8
	.quad	_L_1+58338
	.quad	_A__LT_param_u64_I
	.quad	_L_1+58353
	.quad	_A__uLT_param_u64_I
	.quad	_L_1+58368
	.quad	_A__LT_var_u64_I
	.quad	_L_1+58384
	.quad	_A__uLT_var_u64_I
	.quad	_L_1+58397
	.quad	_A__LT_param_u64_i64
	.quad	_L_1+58411
	.quad	_A__uLT_param_u64_i64
	.quad	_L_1+58428
	.quad	_A__LT_var_u64_i64
	.quad	_L_1+58446
	.quad	_A__uLT_var_u64_i64
	.quad	_L_1+58461
	.quad	_A__LT_param_u64_LC
	.quad	_L_1+58477
	.quad	_A__uLT_param_u64_LC
	.quad	_L_1+58493
	.quad	_A__LT_var_u64_LC
	.quad	_L_1+58510
	.quad	_A__uLT_var_u64_LC
	.quad	_L_1+58524
	.quad	_A__LT_param_u64_i16
	.quad	_L_1+58539
	.quad	_A__uLT_param_u64_i16
	.quad	_L_1+58556
	.quad	_A__LT_var_u64_i16
	.quad	_L_1+58574
	.quad	_A__uLT_var_u64_i16
	.quad	_L_1+58589
	.quad	_A__LT_param_L_i32
	.quad	_L_1+58605
	.quad	_A__uLT_param_L_i32
	.quad	_L_1+58620
	.quad	_A__LT_var_L_i32
	.quad	_L_1+58636
	.quad	_A__uLT_var_L_i32
	.quad	_L_1+58649
	.quad	_A__LT_param_L_u16
	.quad	_L_1+58663
	.quad	_A__uLT_param_L_u16
	.quad	_L_1+58678
	.quad	_A__LT_var_L_u16
	.quad	_L_1+58694
	.quad	_A__uLT_var_L_u16
	.quad	_L_1+58707
	.quad	_A__LT_param_L_u64
	.quad	_L_1+58721
	.quad	_A__uLT_param_L_u64
	.quad	_L_1+58736
	.quad	_A__LT_var_L_u64
	.quad	_L_1+58752
	.quad	_A__uLT_var_L_u64
	.quad	_L_1+58765
	.quad	_A__LT_param_L_L
	.quad	_L_1+58779
	.quad	_A__uLT_param_L_L
	.quad	_L_1+58792
	.quad	_A__LT_var_L_L
	.quad	_L_1+58806
	.quad	_A__uLT_var_L_L
	.quad	_L_1+58817
	.quad	_A__LT_param_L_i8
	.quad	_L_1+58829
	.quad	_A__uLT_param_L_i8
	.quad	_L_1+58843
	.quad	_A__LT_var_L_i8
	.quad	_L_1+58858
	.quad	_A__uLT_var_L_i8
	.quad	_L_1+58870
	.quad	_A__LT_param_L_u32
	.quad	_L_1+58883
	.quad	_A__uLT_param_L_u32
	.quad	_L_1+58898
	.quad	_A__LT_var_L_u32
	.quad	_L_1+58914
	.quad	_A__uLT_var_L_u32
	.quad	_L_1+58927
	.quad	_A__LT_param_L_C
	.quad	_L_1+58941
	.quad	_A__uLT_param_L_C
	.quad	_L_1+58954
	.quad	_A__LT_var_L_C
	.quad	_L_1+58968
	.quad	_A__uLT_var_L_C
	.quad	_L_1+58979
	.quad	_A__LT_param_L_u8
	.quad	_L_1+58991
	.quad	_A__uLT_param_L_u8
	.quad	_L_1+59005
	.quad	_A__LT_var_L_u8
	.quad	_L_1+59020
	.quad	_A__uLT_var_L_u8
	.quad	_L_1+59032
	.quad	_A__LT_param_L_I
	.quad	_L_1+59045
	.quad	_A__uLT_param_L_I
	.quad	_L_1+59058
	.quad	_A__LT_var_L_I
	.quad	_L_1+59072
	.quad	_A__uLT_var_L_I
	.quad	_L_1+59083
	.quad	_A__LT_param_L_i64
	.quad	_L_1+59095
	.quad	_A__uLT_param_L_i64
	.quad	_L_1+59110
	.quad	_A__LT_var_L_i64
	.quad	_L_1+59126
	.quad	_A__uLT_var_L_i64
	.quad	_L_1+59139
	.quad	_A__LT_param_L_LC
	.quad	_L_1+59153
	.quad	_A__uLT_param_L_LC
	.quad	_L_1+59167
	.quad	_A__LT_var_L_LC
	.quad	_L_1+59182
	.quad	_A__uLT_var_L_LC
	.quad	_L_1+59194
	.quad	_A__LT_param_L_i16
	.quad	_L_1+59207
	.quad	_A__uLT_param_L_i16
	.quad	_L_1+59222
	.quad	_A__LT_var_L_i16
	.quad	_L_1+59238
	.quad	_A__uLT_var_L_i16
	.quad	_L_1+59251
	.quad	_A__LT_param_i8_i32
	.quad	_L_1+59265
	.quad	_A__uLT_param_i8_i32
	.quad	_L_1+59281
	.quad	_A__LT_var_i8_i32
	.quad	_L_1+59298
	.quad	_A__uLT_var_i8_i32
	.quad	_L_1+59312
	.quad	_A__LT_param_i8_u16
	.quad	_L_1+59327
	.quad	_A__uLT_param_i8_u16
	.quad	_L_1+59343
	.quad	_A__LT_var_i8_u16
	.quad	_L_1+59360
	.quad	_A__uLT_var_i8_u16
	.quad	_L_1+59374
	.quad	_A__LT_param_i8_u64
	.quad	_L_1+59389
	.quad	_A__uLT_param_i8_u64
	.quad	_L_1+59405
	.quad	_A__LT_var_i8_u64
	.quad	_L_1+59422
	.quad	_A__uLT_var_i8_u64
	.quad	_L_1+59436
	.quad	_A__LT_param_i8_L
	.quad	_L_1+59451
	.quad	_A__uLT_param_i8_L
	.quad	_L_1+59465
	.quad	_A__LT_var_i8_L
	.quad	_L_1+59480
	.quad	_A__uLT_var_i8_L
	.quad	_L_1+59492
	.quad	_A__LT_param_i8_i8
	.quad	_L_1+59505
	.quad	_A__uLT_param_i8_i8
	.quad	_L_1+59520
	.quad	_A__LT_var_i8_i8
	.quad	_L_1+59536
	.quad	_A__uLT_var_i8_i8
	.quad	_L_1+59549
	.quad	_A__LT_param_i8_u32
	.quad	_L_1+59563
	.quad	_A__uLT_param_i8_u32
	.quad	_L_1+59579
	.quad	_A__LT_var_i8_u32
	.quad	_L_1+59596
	.quad	_A__uLT_var_i8_u32
	.quad	_L_1+59610
	.quad	_A__LT_param_i8_C
	.quad	_L_1+59625
	.quad	_A__uLT_param_i8_C
	.quad	_L_1+59639
	.quad	_A__LT_var_i8_C
	.quad	_L_1+59654
	.quad	_A__uLT_var_i8_C
	.quad	_L_1+59666
	.quad	_A__LT_param_i8_u8
	.quad	_L_1+59679
	.quad	_A__uLT_param_i8_u8
	.quad	_L_1+59694
	.quad	_A__LT_var_i8_u8
	.quad	_L_1+59710
	.quad	_A__uLT_var_i8_u8
	.quad	_L_1+59723
	.quad	_A__LT_param_i8_I
	.quad	_L_1+59737
	.quad	_A__uLT_param_i8_I
	.quad	_L_1+59751
	.quad	_A__LT_var_i8_I
	.quad	_L_1+59766
	.quad	_A__uLT_var_i8_I
	.quad	_L_1+59778
	.quad	_A__LT_param_i8_i64
	.quad	_L_1+59791
	.quad	_A__uLT_param_i8_i64
	.quad	_L_1+59807
	.quad	_A__LT_var_i8_i64
	.quad	_L_1+59824
	.quad	_A__uLT_var_i8_i64
	.quad	_L_1+59838
	.quad	_A__LT_param_i8_LC
	.quad	_L_1+59853
	.quad	_A__uLT_param_i8_LC
	.quad	_L_1+59868
	.quad	_A__LT_var_i8_LC
	.quad	_L_1+59884
	.quad	_A__uLT_var_i8_LC
	.quad	_L_1+59897
	.quad	_A__LT_param_i8_i16
	.quad	_L_1+59911
	.quad	_A__uLT_param_i8_i16
	.quad	_L_1+59927
	.quad	_A__LT_var_i8_i16
	.quad	_L_1+59944
	.quad	_A__uLT_var_i8_i16
	.quad	_L_1+59958
	.quad	_A__LT_param_u32_i32
	.quad	_L_1+59973
	.quad	_A__uLT_param_u32_i32
	.quad	_L_1+59990
	.quad	_A__LT_var_u32_i32
	.quad	_L_1+60008
	.quad	_A__uLT_var_u32_i32
	.quad	_L_1+60023
	.quad	_A__LT_param_u32_u16
	.quad	_L_1+60039
	.quad	_A__uLT_param_u32_u16
	.quad	_L_1+60056
	.quad	_A__LT_var_u32_u16
	.quad	_L_1+60074
	.quad	_A__uLT_var_u32_u16
	.quad	_L_1+60089
	.quad	_A__LT_param_u32_u64
	.quad	_L_1+60105
	.quad	_A__uLT_param_u32_u64
	.quad	_L_1+60122
	.quad	_A__LT_var_u32_u64
	.quad	_L_1+60140
	.quad	_A__uLT_var_u32_u64
	.quad	_L_1+60155
	.quad	_A__LT_param_u32_L
	.quad	_L_1+60171
	.quad	_A__uLT_param_u32_L
	.quad	_L_1+60186
	.quad	_A__LT_var_u32_L
	.quad	_L_1+60202
	.quad	_A__uLT_var_u32_L
	.quad	_L_1+60215
	.quad	_A__LT_param_u32_i8
	.quad	_L_1+60229
	.quad	_A__uLT_param_u32_i8
	.quad	_L_1+60245
	.quad	_A__LT_var_u32_i8
	.quad	_L_1+60262
	.quad	_A__uLT_var_u32_i8
	.quad	_L_1+60276
	.quad	_A__LT_param_u32_u32
	.quad	_L_1+60291
	.quad	_A__uLT_param_u32_u32
	.quad	_L_1+60308
	.quad	_A__LT_var_u32_u32
	.quad	_L_1+60326
	.quad	_A__uLT_var_u32_u32
	.quad	_L_1+60341
	.quad	_A__LT_param_u32_C
	.quad	_L_1+60357
	.quad	_A__uLT_param_u32_C
	.quad	_L_1+60372
	.quad	_A__LT_var_u32_C
	.quad	_L_1+60388
	.quad	_A__uLT_var_u32_C
	.quad	_L_1+60401
	.quad	_A__LT_param_u32_u8
	.quad	_L_1+60415
	.quad	_A__uLT_param_u32_u8
	.quad	_L_1+60431
	.quad	_A__LT_var_u32_u8
	.quad	_L_1+60448
	.quad	_A__uLT_var_u32_u8
	.quad	_L_1+60462
	.quad	_A__LT_param_u32_I
	.quad	_L_1+60477
	.quad	_A__uLT_param_u32_I
	.quad	_L_1+60492
	.quad	_A__LT_var_u32_I
	.quad	_L_1+60508
	.quad	_A__uLT_var_u32_I
	.quad	_L_1+60521
	.quad	_A__LT_param_u32_i64
	.quad	_L_1+60535
	.quad	_A__uLT_param_u32_i64
	.quad	_L_1+60552
	.quad	_A__LT_var_u32_i64
	.quad	_L_1+60570
	.quad	_A__uLT_var_u32_i64
	.quad	_L_1+60585
	.quad	_A__LT_param_u32_LC
	.quad	_L_1+60601
	.quad	_A__uLT_param_u32_LC
	.quad	_L_1+60617
	.quad	_A__LT_var_u32_LC
	.quad	_L_1+60634
	.quad	_A__uLT_var_u32_LC
	.quad	_L_1+60648
	.quad	_A__LT_param_u32_i16
	.quad	_L_1+60663
	.quad	_A__uLT_param_u32_i16
	.quad	_L_1+60680
	.quad	_A__LT_var_u32_i16
	.quad	_L_1+60698
	.quad	_A__uLT_var_u32_i16
	.quad	_L_1+60713
	.quad	_A__LT_param_f32_f32
	.quad	_L_1+60729
	.quad	_A__LT_var_f32_f32
	.quad	_L_1+60746
	.quad	_A__LT_param_C_i32
	.quad	_L_1+60761
	.quad	_A__uLT_param_C_i32
	.quad	_L_1+60776
	.quad	_A__LT_var_C_i32
	.quad	_L_1+60792
	.quad	_A__uLT_var_C_i32
	.quad	_L_1+60805
	.quad	_A__LT_param_C_u16
	.quad	_L_1+60819
	.quad	_A__uLT_param_C_u16
	.quad	_L_1+60834
	.quad	_A__LT_var_C_u16
	.quad	_L_1+60850
	.quad	_A__uLT_var_C_u16
	.quad	_L_1+60863
	.quad	_A__LT_param_C_u64
	.quad	_L_1+60877
	.quad	_A__uLT_param_C_u64
	.quad	_L_1+60892
	.quad	_A__LT_var_C_u64
	.quad	_L_1+60908
	.quad	_A__uLT_var_C_u64
	.quad	_L_1+60921
	.quad	_A__LT_param_C_L
	.quad	_L_1+60935
	.quad	_A__uLT_param_C_L
	.quad	_L_1+60948
	.quad	_A__LT_var_C_L
	.quad	_L_1+60962
	.quad	_A__uLT_var_C_L
	.quad	_L_1+60973
	.quad	_A__LT_param_C_i8
	.quad	_L_1+60985
	.quad	_A__uLT_param_C_i8
	.quad	_L_1+60999
	.quad	_A__LT_var_C_i8
	.quad	_L_1+61014
	.quad	_A__uLT_var_C_i8
	.quad	_L_1+61026
	.quad	_A__LT_param_C_u32
	.quad	_L_1+61039
	.quad	_A__uLT_param_C_u32
	.quad	_L_1+61054
	.quad	_A__LT_var_C_u32
	.quad	_L_1+61070
	.quad	_A__uLT_var_C_u32
	.quad	_L_1+61083
	.quad	_A__LT_param_C_C
	.quad	_L_1+61097
	.quad	_A__uLT_param_C_C
	.quad	_L_1+61110
	.quad	_A__LT_var_C_C
	.quad	_L_1+61124
	.quad	_A__uLT_var_C_C
	.quad	_L_1+61135
	.quad	_A__LT_param_C_u8
	.quad	_L_1+61147
	.quad	_A__uLT_param_C_u8
	.quad	_L_1+61161
	.quad	_A__LT_var_C_u8
	.quad	_L_1+61176
	.quad	_A__uLT_var_C_u8
	.quad	_L_1+61188
	.quad	_A__LT_param_C_I
	.quad	_L_1+61201
	.quad	_A__uLT_param_C_I
	.quad	_L_1+61214
	.quad	_A__LT_var_C_I
	.quad	_L_1+61228
	.quad	_A__uLT_var_C_I
	.quad	_L_1+61239
	.quad	_A__LT_param_C_i64
	.quad	_L_1+61251
	.quad	_A__uLT_param_C_i64
	.quad	_L_1+61266
	.quad	_A__LT_var_C_i64
	.quad	_L_1+61282
	.quad	_A__uLT_var_C_i64
	.quad	_L_1+61295
	.quad	_A__LT_param_C_LC
	.quad	_L_1+61309
	.quad	_A__uLT_param_C_LC
	.quad	_L_1+61323
	.quad	_A__LT_var_C_LC
	.quad	_L_1+61338
	.quad	_A__uLT_var_C_LC
	.quad	_L_1+61350
	.quad	_A__LT_param_C_i16
	.quad	_L_1+61363
	.quad	_A__uLT_param_C_i16
	.quad	_L_1+61378
	.quad	_A__LT_var_C_i16
	.quad	_L_1+61394
	.quad	_A__uLT_var_C_i16
	.quad	_L_1+61407
	.quad	_A__LT_param_u8_i32
	.quad	_L_1+61421
	.quad	_A__uLT_param_u8_i32
	.quad	_L_1+61437
	.quad	_A__LT_var_u8_i32
	.quad	_L_1+61454
	.quad	_A__uLT_var_u8_i32
	.quad	_L_1+61468
	.quad	_A__LT_param_u8_u16
	.quad	_L_1+61483
	.quad	_A__uLT_param_u8_u16
	.quad	_L_1+61499
	.quad	_A__LT_var_u8_u16
	.quad	_L_1+61516
	.quad	_A__uLT_var_u8_u16
	.quad	_L_1+61530
	.quad	_A__LT_param_u8_u64
	.quad	_L_1+61545
	.quad	_A__uLT_param_u8_u64
	.quad	_L_1+61561
	.quad	_A__LT_var_u8_u64
	.quad	_L_1+61578
	.quad	_A__uLT_var_u8_u64
	.quad	_L_1+61592
	.quad	_A__LT_param_u8_L
	.quad	_L_1+61607
	.quad	_A__uLT_param_u8_L
	.quad	_L_1+61621
	.quad	_A__LT_var_u8_L
	.quad	_L_1+61636
	.quad	_A__uLT_var_u8_L
	.quad	_L_1+61648
	.quad	_A__LT_param_u8_i8
	.quad	_L_1+61661
	.quad	_A__uLT_param_u8_i8
	.quad	_L_1+61676
	.quad	_A__LT_var_u8_i8
	.quad	_L_1+61692
	.quad	_A__uLT_var_u8_i8
	.quad	_L_1+61705
	.quad	_A__LT_param_u8_u32
	.quad	_L_1+61719
	.quad	_A__uLT_param_u8_u32
	.quad	_L_1+61735
	.quad	_A__LT_var_u8_u32
	.quad	_L_1+61752
	.quad	_A__uLT_var_u8_u32
	.quad	_L_1+61766
	.quad	_A__LT_param_u8_C
	.quad	_L_1+61781
	.quad	_A__uLT_param_u8_C
	.quad	_L_1+61795
	.quad	_A__LT_var_u8_C
	.quad	_L_1+61810
	.quad	_A__uLT_var_u8_C
	.quad	_L_1+61822
	.quad	_A__LT_param_u8_u8
	.quad	_L_1+61835
	.quad	_A__uLT_param_u8_u8
	.quad	_L_1+61850
	.quad	_A__LT_var_u8_u8
	.quad	_L_1+61866
	.quad	_A__uLT_var_u8_u8
	.quad	_L_1+61879
	.quad	_A__LT_param_u8_I
	.quad	_L_1+61893
	.quad	_A__uLT_param_u8_I
	.quad	_L_1+61907
	.quad	_A__LT_var_u8_I
	.quad	_L_1+61922
	.quad	_A__uLT_var_u8_I
	.quad	_L_1+61934
	.quad	_A__LT_param_u8_i64
	.quad	_L_1+61947
	.quad	_A__uLT_param_u8_i64
	.quad	_L_1+61963
	.quad	_A__LT_var_u8_i64
	.quad	_L_1+61980
	.quad	_A__uLT_var_u8_i64
	.quad	_L_1+61994
	.quad	_A__LT_param_u8_LC
	.quad	_L_1+62009
	.quad	_A__uLT_param_u8_LC
	.quad	_L_1+62024
	.quad	_A__LT_var_u8_LC
	.quad	_L_1+62040
	.quad	_A__uLT_var_u8_LC
	.quad	_L_1+62053
	.quad	_A__LT_param_u8_i16
	.quad	_L_1+62067
	.quad	_A__uLT_param_u8_i16
	.quad	_L_1+62083
	.quad	_A__LT_var_u8_i16
	.quad	_L_1+62100
	.quad	_A__uLT_var_u8_i16
	.quad	_L_1+62114
	.quad	_A__LT_param_I_i32
	.quad	_L_1+62129
	.quad	_A__uLT_param_I_i32
	.quad	_L_1+62144
	.quad	_A__LT_var_I_i32
	.quad	_L_1+62160
	.quad	_A__uLT_var_I_i32
	.quad	_L_1+62173
	.quad	_A__LT_param_I_u16
	.quad	_L_1+62187
	.quad	_A__uLT_param_I_u16
	.quad	_L_1+62202
	.quad	_A__LT_var_I_u16
	.quad	_L_1+62218
	.quad	_A__uLT_var_I_u16
	.quad	_L_1+62231
	.quad	_A__LT_param_I_u64
	.quad	_L_1+62245
	.quad	_A__uLT_param_I_u64
	.quad	_L_1+62260
	.quad	_A__LT_var_I_u64
	.quad	_L_1+62276
	.quad	_A__uLT_var_I_u64
	.quad	_L_1+62289
	.quad	_A__LT_param_I_L
	.quad	_L_1+62303
	.quad	_A__uLT_param_I_L
	.quad	_L_1+62316
	.quad	_A__LT_var_I_L
	.quad	_L_1+62330
	.quad	_A__uLT_var_I_L
	.quad	_L_1+62341
	.quad	_A__LT_param_I_i8
	.quad	_L_1+62353
	.quad	_A__uLT_param_I_i8
	.quad	_L_1+62367
	.quad	_A__LT_var_I_i8
	.quad	_L_1+62382
	.quad	_A__uLT_var_I_i8
	.quad	_L_1+62394
	.quad	_A__LT_param_I_u32
	.quad	_L_1+62407
	.quad	_A__uLT_param_I_u32
	.quad	_L_1+62422
	.quad	_A__LT_var_I_u32
	.quad	_L_1+62438
	.quad	_A__uLT_var_I_u32
	.quad	_L_1+62451
	.quad	_A__LT_param_I_C
	.quad	_L_1+62465
	.quad	_A__uLT_param_I_C
	.quad	_L_1+62478
	.quad	_A__LT_var_I_C
	.quad	_L_1+62492
	.quad	_A__uLT_var_I_C
	.quad	_L_1+62503
	.quad	_A__LT_param_I_u8
	.quad	_L_1+62515
	.quad	_A__uLT_param_I_u8
	.quad	_L_1+62529
	.quad	_A__LT_var_I_u8
	.quad	_L_1+62544
	.quad	_A__uLT_var_I_u8
	.quad	_L_1+62556
	.quad	_A__LT_param_I_I
	.quad	_L_1+62569
	.quad	_A__uLT_param_I_I
	.quad	_L_1+62582
	.quad	_A__LT_var_I_I
	.quad	_L_1+62596
	.quad	_A__uLT_var_I_I
	.quad	_L_1+62607
	.quad	_A__LT_param_I_i64
	.quad	_L_1+62619
	.quad	_A__uLT_param_I_i64
	.quad	_L_1+62634
	.quad	_A__LT_var_I_i64
	.quad	_L_1+62650
	.quad	_A__uLT_var_I_i64
	.quad	_L_1+62663
	.quad	_A__LT_param_I_LC
	.quad	_L_1+62677
	.quad	_A__uLT_param_I_LC
	.quad	_L_1+62691
	.quad	_A__LT_var_I_LC
	.quad	_L_1+62706
	.quad	_A__uLT_var_I_LC
	.quad	_L_1+62718
	.quad	_A__LT_param_I_i16
	.quad	_L_1+62731
	.quad	_A__uLT_param_I_i16
	.quad	_L_1+62746
	.quad	_A__LT_var_I_i16
	.quad	_L_1+62762
	.quad	_A__uLT_var_I_i16
	.quad	_L_1+62775
	.quad	_A__LT_param_i64_i32
	.quad	_L_1+62789
	.quad	_A__uLT_param_i64_i32
	.quad	_L_1+62806
	.quad	_A__LT_var_i64_i32
	.quad	_L_1+62824
	.quad	_A__uLT_var_i64_i32
	.quad	_L_1+62839
	.quad	_A__LT_param_i64_u16
	.quad	_L_1+62855
	.quad	_A__uLT_param_i64_u16
	.quad	_L_1+62872
	.quad	_A__LT_var_i64_u16
	.quad	_L_1+62890
	.quad	_A__uLT_var_i64_u16
	.quad	_L_1+62905
	.quad	_A__LT_param_i64_u64
	.quad	_L_1+62921
	.quad	_A__uLT_param_i64_u64
	.quad	_L_1+62938
	.quad	_A__LT_var_i64_u64
	.quad	_L_1+62956
	.quad	_A__uLT_var_i64_u64
	.quad	_L_1+62971
	.quad	_A__LT_param_i64_L
	.quad	_L_1+62987
	.quad	_A__uLT_param_i64_L
	.quad	_L_1+63002
	.quad	_A__LT_var_i64_L
	.quad	_L_1+63018
	.quad	_A__uLT_var_i64_L
	.quad	_L_1+63031
	.quad	_A__LT_param_i64_i8
	.quad	_L_1+63045
	.quad	_A__uLT_param_i64_i8
	.quad	_L_1+63061
	.quad	_A__LT_var_i64_i8
	.quad	_L_1+63078
	.quad	_A__uLT_var_i64_i8
	.quad	_L_1+63092
	.quad	_A__LT_param_i64_u32
	.quad	_L_1+63107
	.quad	_A__uLT_param_i64_u32
	.quad	_L_1+63124
	.quad	_A__LT_var_i64_u32
	.quad	_L_1+63142
	.quad	_A__uLT_var_i64_u32
	.quad	_L_1+63157
	.quad	_A__LT_param_i64_C
	.quad	_L_1+63173
	.quad	_A__uLT_param_i64_C
	.quad	_L_1+63188
	.quad	_A__LT_var_i64_C
	.quad	_L_1+63204
	.quad	_A__uLT_var_i64_C
	.quad	_L_1+63217
	.quad	_A__LT_param_i64_u8
	.quad	_L_1+63231
	.quad	_A__uLT_param_i64_u8
	.quad	_L_1+63247
	.quad	_A__LT_var_i64_u8
	.quad	_L_1+63264
	.quad	_A__uLT_var_i64_u8
	.quad	_L_1+63278
	.quad	_A__LT_param_i64_I
	.quad	_L_1+63293
	.quad	_A__uLT_param_i64_I
	.quad	_L_1+63308
	.quad	_A__LT_var_i64_I
	.quad	_L_1+63324
	.quad	_A__uLT_var_i64_I
	.quad	_L_1+63337
	.quad	_A__LT_param_i64_i64
	.quad	_L_1+63351
	.quad	_A__uLT_param_i64_i64
	.quad	_L_1+63368
	.quad	_A__LT_var_i64_i64
	.quad	_L_1+63386
	.quad	_A__uLT_var_i64_i64
	.quad	_L_1+63401
	.quad	_A__LT_param_i64_LC
	.quad	_L_1+63417
	.quad	_A__uLT_param_i64_LC
	.quad	_L_1+63433
	.quad	_A__LT_var_i64_LC
	.quad	_L_1+63450
	.quad	_A__uLT_var_i64_LC
	.quad	_L_1+63464
	.quad	_A__LT_param_i64_i16
	.quad	_L_1+63479
	.quad	_A__uLT_param_i64_i16
	.quad	_L_1+63496
	.quad	_A__LT_var_i64_i16
	.quad	_L_1+63514
	.quad	_A__uLT_var_i64_i16
	.quad	_L_1+63529
	.quad	_A__LT_param_f64_f64
	.quad	_L_1+63545
	.quad	_A__LT_var_f64_f64
	.quad	_L_1+63562
	.quad	_A__LT_param_LC_i32
	.quad	_L_1+63577
	.quad	_A__uLT_param_LC_i32
	.quad	_L_1+63593
	.quad	_A__LT_var_LC_i32
	.quad	_L_1+63610
	.quad	_A__uLT_var_LC_i32
	.quad	_L_1+63624
	.quad	_A__LT_param_LC_u16
	.quad	_L_1+63639
	.quad	_A__uLT_param_LC_u16
	.quad	_L_1+63655
	.quad	_A__LT_var_LC_u16
	.quad	_L_1+63672
	.quad	_A__uLT_var_LC_u16
	.quad	_L_1+63686
	.quad	_A__LT_param_LC_u64
	.quad	_L_1+63701
	.quad	_A__uLT_param_LC_u64
	.quad	_L_1+63717
	.quad	_A__LT_var_LC_u64
	.quad	_L_1+63734
	.quad	_A__uLT_var_LC_u64
	.quad	_L_1+63748
	.quad	_A__LT_param_LC_L
	.quad	_L_1+63763
	.quad	_A__uLT_param_LC_L
	.quad	_L_1+63777
	.quad	_A__LT_var_LC_L
	.quad	_L_1+63792
	.quad	_A__uLT_var_LC_L
	.quad	_L_1+63804
	.quad	_A__LT_param_LC_i8
	.quad	_L_1+63817
	.quad	_A__uLT_param_LC_i8
	.quad	_L_1+63832
	.quad	_A__LT_var_LC_i8
	.quad	_L_1+63848
	.quad	_A__uLT_var_LC_i8
	.quad	_L_1+63861
	.quad	_A__LT_param_LC_u32
	.quad	_L_1+63875
	.quad	_A__uLT_param_LC_u32
	.quad	_L_1+63891
	.quad	_A__LT_var_LC_u32
	.quad	_L_1+63908
	.quad	_A__uLT_var_LC_u32
	.quad	_L_1+63922
	.quad	_A__LT_param_LC_C
	.quad	_L_1+63937
	.quad	_A__uLT_param_LC_C
	.quad	_L_1+63951
	.quad	_A__LT_var_LC_C
	.quad	_L_1+63966
	.quad	_A__uLT_var_LC_C
	.quad	_L_1+63978
	.quad	_A__LT_param_LC_u8
	.quad	_L_1+63991
	.quad	_A__uLT_param_LC_u8
	.quad	_L_1+64006
	.quad	_A__LT_var_LC_u8
	.quad	_L_1+64022
	.quad	_A__uLT_var_LC_u8
	.quad	_L_1+64035
	.quad	_A__LT_param_LC_I
	.quad	_L_1+64049
	.quad	_A__uLT_param_LC_I
	.quad	_L_1+64063
	.quad	_A__LT_var_LC_I
	.quad	_L_1+64078
	.quad	_A__uLT_var_LC_I
	.quad	_L_1+64090
	.quad	_A__LT_param_LC_i64
	.quad	_L_1+64103
	.quad	_A__uLT_param_LC_i64
	.quad	_L_1+64119
	.quad	_A__LT_var_LC_i64
	.quad	_L_1+64136
	.quad	_A__uLT_var_LC_i64
	.quad	_L_1+64150
	.quad	_A__LT_param_LC_LC
	.quad	_L_1+64165
	.quad	_A__uLT_param_LC_LC
	.quad	_L_1+64180
	.quad	_A__LT_var_LC_LC
	.quad	_L_1+64196
	.quad	_A__uLT_var_LC_LC
	.quad	_L_1+64209
	.quad	_A__LT_param_LC_i16
	.quad	_L_1+64223
	.quad	_A__uLT_param_LC_i16
	.quad	_L_1+64239
	.quad	_A__LT_var_LC_i16
	.quad	_L_1+64256
	.quad	_A__uLT_var_LC_i16
	.quad	_L_1+64270
	.quad	_A__LT_param_i16_i32
	.quad	_L_1+64285
	.quad	_A__uLT_param_i16_i32
	.quad	_L_1+64302
	.quad	_A__LT_var_i16_i32
	.quad	_L_1+64320
	.quad	_A__uLT_var_i16_i32
	.quad	_L_1+64335
	.quad	_A__LT_param_i16_u16
	.quad	_L_1+64351
	.quad	_A__uLT_param_i16_u16
	.quad	_L_1+64368
	.quad	_A__LT_var_i16_u16
	.quad	_L_1+64386
	.quad	_A__uLT_var_i16_u16
	.quad	_L_1+64401
	.quad	_A__LT_param_i16_u64
	.quad	_L_1+64417
	.quad	_A__uLT_param_i16_u64
	.quad	_L_1+64434
	.quad	_A__LT_var_i16_u64
	.quad	_L_1+64452
	.quad	_A__uLT_var_i16_u64
	.quad	_L_1+64467
	.quad	_A__LT_param_i16_L
	.quad	_L_1+64483
	.quad	_A__uLT_param_i16_L
	.quad	_L_1+64498
	.quad	_A__LT_var_i16_L
	.quad	_L_1+64514
	.quad	_A__uLT_var_i16_L
	.quad	_L_1+64527
	.quad	_A__LT_param_i16_i8
	.quad	_L_1+64541
	.quad	_A__uLT_param_i16_i8
	.quad	_L_1+64557
	.quad	_A__LT_var_i16_i8
	.quad	_L_1+64574
	.quad	_A__uLT_var_i16_i8
	.quad	_L_1+64588
	.quad	_A__LT_param_i16_u32
	.quad	_L_1+64603
	.quad	_A__uLT_param_i16_u32
	.quad	_L_1+64620
	.quad	_A__LT_var_i16_u32
	.quad	_L_1+64638
	.quad	_A__uLT_var_i16_u32
	.quad	_L_1+64653
	.quad	_A__LT_param_i16_C
	.quad	_L_1+64669
	.quad	_A__uLT_param_i16_C
	.quad	_L_1+64684
	.quad	_A__LT_var_i16_C
	.quad	_L_1+64700
	.quad	_A__uLT_var_i16_C
	.quad	_L_1+64713
	.quad	_A__LT_param_i16_u8
	.quad	_L_1+64727
	.quad	_A__uLT_param_i16_u8
	.quad	_L_1+64743
	.quad	_A__LT_var_i16_u8
	.quad	_L_1+64760
	.quad	_A__uLT_var_i16_u8
	.quad	_L_1+64774
	.quad	_A__LT_param_i16_I
	.quad	_L_1+64789
	.quad	_A__uLT_param_i16_I
	.quad	_L_1+64804
	.quad	_A__LT_var_i16_I
	.quad	_L_1+64820
	.quad	_A__uLT_var_i16_I
	.quad	_L_1+64833
	.quad	_A__LT_param_i16_i64
	.quad	_L_1+64847
	.quad	_A__uLT_param_i16_i64
	.quad	_L_1+64864
	.quad	_A__LT_var_i16_i64
	.quad	_L_1+64882
	.quad	_A__uLT_var_i16_i64
	.quad	_L_1+64897
	.quad	_A__LT_param_i16_LC
	.quad	_L_1+64913
	.quad	_A__uLT_param_i16_LC
	.quad	_L_1+64929
	.quad	_A__LT_var_i16_LC
	.quad	_L_1+64946
	.quad	_A__uLT_var_i16_LC
	.quad	_L_1+64960
	.quad	_A__LT_param_i16_i16
	.quad	_L_1+64975
	.quad	_A__uLT_param_i16_i16
	.quad	_L_1+64992
	.quad	_A__LT_var_i16_i16
	.quad	_L_1+65010
	.quad	_A__uLT_var_i16_i16
	.quad	_L_1+65025
	.quad	_A__Mod_param_i32_i32
	.quad	_L_1+65041
	.quad	_A__uMod_param_i32_i32
	.quad	_L_1+65059
	.quad	_A__Mod_var_i32_i32
	.quad	_L_1+65078
	.quad	_A__uMod_var_i32_i32
	.quad	_L_1+65094
	.quad	_A__Mod_param_i32_u16
	.quad	_L_1+65111
	.quad	_A__uMod_param_i32_u16
	.quad	_L_1+65129
	.quad	_A__Mod_var_i32_u16
	.quad	_L_1+65148
	.quad	_A__uMod_var_i32_u16
	.quad	_L_1+65164
	.quad	_A__Mod_param_i32_u64
	.quad	_L_1+65181
	.quad	_A__uMod_param_i32_u64
	.quad	_L_1+65199
	.quad	_A__Mod_var_i32_u64
	.quad	_L_1+65218
	.quad	_A__uMod_var_i32_u64
	.quad	_L_1+65234
	.quad	_A__Mod_param_i32_L
	.quad	_L_1+65251
	.quad	_A__uMod_param_i32_L
	.quad	_L_1+65267
	.quad	_A__Mod_var_i32_L
	.quad	_L_1+65284
	.quad	_A__uMod_var_i32_L
	.quad	_L_1+65298
	.quad	_A__Mod_param_i32_i8
	.quad	_L_1+65313
	.quad	_A__uMod_param_i32_i8
	.quad	_L_1+65330
	.quad	_A__Mod_var_i32_i8
	.quad	_L_1+65348
	.quad	_A__uMod_var_i32_i8
	.quad	_L_1+65363
	.quad	_A__Mod_param_i32_u32
	.quad	_L_1+65379
	.quad	_A__uMod_param_i32_u32
	.quad	_L_1+65397
	.quad	_A__Mod_var_i32_u32
	.quad	_L_1+65416
	.quad	_A__uMod_var_i32_u32
	.quad	_L_1+65432
	.quad	_A__Mod_param_i32_C
	.quad	_L_1+65449
	.quad	_A__uMod_param_i32_C
	.quad	_L_1+65465
	.quad	_A__Mod_var_i32_C
	.quad	_L_1+65482
	.quad	_A__uMod_var_i32_C
	.quad	_L_1+65496
	.quad	_A__Mod_param_i32_u8
	.quad	_L_1+65511
	.quad	_A__uMod_param_i32_u8
	.quad	_L_1+65528
	.quad	_A__Mod_var_i32_u8
	.quad	_L_1+65546
	.quad	_A__uMod_var_i32_u8
	.quad	_L_1+65561
	.quad	_A__Mod_param_i32_I
	.quad	_L_1+65577
	.quad	_A__uMod_param_i32_I
	.quad	_L_1+65593
	.quad	_A__Mod_var_i32_I
	.quad	_L_1+65610
	.quad	_A__uMod_var_i32_I
	.quad	_L_1+65624
	.quad	_A__Mod_param_i32_i64
	.quad	_L_1+65639
	.quad	_A__uMod_param_i32_i64
	.quad	_L_1+65657
	.quad	_A__Mod_var_i32_i64
	.quad	_L_1+65676
	.quad	_A__uMod_var_i32_i64
	.quad	_L_1+65692
	.quad	_A__Mod_param_i32_LC
	.quad	_L_1+65709
	.quad	_A__uMod_param_i32_LC
	.quad	_L_1+65726
	.quad	_A__Mod_var_i32_LC
	.quad	_L_1+65744
	.quad	_A__uMod_var_i32_LC
	.quad	_L_1+65759
	.quad	_A__Mod_param_i32_i16
	.quad	_L_1+65775
	.quad	_A__uMod_param_i32_i16
	.quad	_L_1+65793
	.quad	_A__Mod_var_i32_i16
	.quad	_L_1+65812
	.quad	_A__uMod_var_i32_i16
	.quad	_L_1+65828
	.quad	_A__Mod_param_u16_i32
	.quad	_L_1+65845
	.quad	_A__uMod_param_u16_i32
	.quad	_L_1+65863
	.quad	_A__Mod_var_u16_i32
	.quad	_L_1+65882
	.quad	_A__uMod_var_u16_i32
	.quad	_L_1+65898
	.quad	_A__Mod_param_u16_u16
	.quad	_L_1+65915
	.quad	_A__uMod_param_u16_u16
	.quad	_L_1+65933
	.quad	_A__Mod_var_u16_u16
	.quad	_L_1+65952
	.quad	_A__uMod_var_u16_u16
	.quad	_L_1+65968
	.quad	_A__Mod_param_u16_u64
	.quad	_L_1+65985
	.quad	_A__uMod_param_u16_u64
	.quad	_L_1+66003
	.quad	_A__Mod_var_u16_u64
	.quad	_L_1+66022
	.quad	_A__uMod_var_u16_u64
	.quad	_L_1+66038
	.quad	_A__Mod_param_u16_L
	.quad	_L_1+66055
	.quad	_A__uMod_param_u16_L
	.quad	_L_1+66071
	.quad	_A__Mod_var_u16_L
	.quad	_L_1+66088
	.quad	_A__uMod_var_u16_L
	.quad	_L_1+66102
	.quad	_A__Mod_param_u16_i8
	.quad	_L_1+66117
	.quad	_A__uMod_param_u16_i8
	.quad	_L_1+66134
	.quad	_A__Mod_var_u16_i8
	.quad	_L_1+66152
	.quad	_A__uMod_var_u16_i8
	.quad	_L_1+66167
	.quad	_A__Mod_param_u16_u32
	.quad	_L_1+66183
	.quad	_A__uMod_param_u16_u32
	.quad	_L_1+66201
	.quad	_A__Mod_var_u16_u32
	.quad	_L_1+66220
	.quad	_A__uMod_var_u16_u32
	.quad	_L_1+66236
	.quad	_A__Mod_param_u16_C
	.quad	_L_1+66253
	.quad	_A__uMod_param_u16_C
	.quad	_L_1+66269
	.quad	_A__Mod_var_u16_C
	.quad	_L_1+66286
	.quad	_A__uMod_var_u16_C
	.quad	_L_1+66300
	.quad	_A__Mod_param_u16_u8
	.quad	_L_1+66315
	.quad	_A__uMod_param_u16_u8
	.quad	_L_1+66332
	.quad	_A__Mod_var_u16_u8
	.quad	_L_1+66350
	.quad	_A__uMod_var_u16_u8
	.quad	_L_1+66365
	.quad	_A__Mod_param_u16_I
	.quad	_L_1+66381
	.quad	_A__uMod_param_u16_I
	.quad	_L_1+66397
	.quad	_A__Mod_var_u16_I
	.quad	_L_1+66414
	.quad	_A__uMod_var_u16_I
	.quad	_L_1+66428
	.quad	_A__Mod_param_u16_i64
	.quad	_L_1+66443
	.quad	_A__uMod_param_u16_i64
	.quad	_L_1+66461
	.quad	_A__Mod_var_u16_i64
	.quad	_L_1+66480
	.quad	_A__uMod_var_u16_i64
	.quad	_L_1+66496
	.quad	_A__Mod_param_u16_LC
	.quad	_L_1+66513
	.quad	_A__uMod_param_u16_LC
	.quad	_L_1+66530
	.quad	_A__Mod_var_u16_LC
	.quad	_L_1+66548
	.quad	_A__uMod_var_u16_LC
	.quad	_L_1+66563
	.quad	_A__Mod_param_u16_i16
	.quad	_L_1+66579
	.quad	_A__uMod_param_u16_i16
	.quad	_L_1+66597
	.quad	_A__Mod_var_u16_i16
	.quad	_L_1+66616
	.quad	_A__uMod_var_u16_i16
	.quad	_L_1+66632
	.quad	_A__Mod_param_u64_i32
	.quad	_L_1+66649
	.quad	_A__uMod_param_u64_i32
	.quad	_L_1+66667
	.quad	_A__Mod_var_u64_i32
	.quad	_L_1+66686
	.quad	_A__uMod_var_u64_i32
	.quad	_L_1+66702
	.quad	_A__Mod_param_u64_u16
	.quad	_L_1+66719
	.quad	_A__uMod_param_u64_u16
	.quad	_L_1+66737
	.quad	_A__Mod_var_u64_u16
	.quad	_L_1+66756
	.quad	_A__uMod_var_u64_u16
	.quad	_L_1+66772
	.quad	_A__Mod_param_u64_u64
	.quad	_L_1+66789
	.quad	_A__uMod_param_u64_u64
	.quad	_L_1+66807
	.quad	_A__Mod_var_u64_u64
	.quad	_L_1+66826
	.quad	_A__uMod_var_u64_u64
	.quad	_L_1+66842
	.quad	_A__Mod_param_u64_L
	.quad	_L_1+66859
	.quad	_A__uMod_param_u64_L
	.quad	_L_1+66875
	.quad	_A__Mod_var_u64_L
	.quad	_L_1+66892
	.quad	_A__uMod_var_u64_L
	.quad	_L_1+66906
	.quad	_A__Mod_param_u64_i8
	.quad	_L_1+66921
	.quad	_A__uMod_param_u64_i8
	.quad	_L_1+66938
	.quad	_A__Mod_var_u64_i8
	.quad	_L_1+66956
	.quad	_A__uMod_var_u64_i8
	.quad	_L_1+66971
	.quad	_A__Mod_param_u64_u32
	.quad	_L_1+66987
	.quad	_A__uMod_param_u64_u32
	.quad	_L_1+67005
	.quad	_A__Mod_var_u64_u32
	.quad	_L_1+67024
	.quad	_A__uMod_var_u64_u32
	.quad	_L_1+67040
	.quad	_A__Mod_param_u64_C
	.quad	_L_1+67057
	.quad	_A__uMod_param_u64_C
	.quad	_L_1+67073
	.quad	_A__Mod_var_u64_C
	.quad	_L_1+67090
	.quad	_A__uMod_var_u64_C
	.quad	_L_1+67104
	.quad	_A__Mod_param_u64_u8
	.quad	_L_1+67119
	.quad	_A__uMod_param_u64_u8
	.quad	_L_1+67136
	.quad	_A__Mod_var_u64_u8
	.quad	_L_1+67154
	.quad	_A__uMod_var_u64_u8
	.quad	_L_1+67169
	.quad	_A__Mod_param_u64_I
	.quad	_L_1+67185
	.quad	_A__uMod_param_u64_I
	.quad	_L_1+67201
	.quad	_A__Mod_var_u64_I
	.quad	_L_1+67218
	.quad	_A__uMod_var_u64_I
	.quad	_L_1+67232
	.quad	_A__Mod_param_u64_i64
	.quad	_L_1+67247
	.quad	_A__uMod_param_u64_i64
	.quad	_L_1+67265
	.quad	_A__Mod_var_u64_i64
	.quad	_L_1+67284
	.quad	_A__uMod_var_u64_i64
	.quad	_L_1+67300
	.quad	_A__Mod_param_u64_LC
	.quad	_L_1+67317
	.quad	_A__uMod_param_u64_LC
	.quad	_L_1+67334
	.quad	_A__Mod_var_u64_LC
	.quad	_L_1+67352
	.quad	_A__uMod_var_u64_LC
	.quad	_L_1+67367
	.quad	_A__Mod_param_u64_i16
	.quad	_L_1+67383
	.quad	_A__uMod_param_u64_i16
	.quad	_L_1+67401
	.quad	_A__Mod_var_u64_i16
	.quad	_L_1+67420
	.quad	_A__uMod_var_u64_i16
	.quad	_L_1+67436
	.quad	_A__Mod_param_L_i32
	.quad	_L_1+67453
	.quad	_A__uMod_param_L_i32
	.quad	_L_1+67469
	.quad	_A__Mod_var_L_i32
	.quad	_L_1+67486
	.quad	_A__uMod_var_L_i32
	.quad	_L_1+67500
	.quad	_A__Mod_param_L_u16
	.quad	_L_1+67515
	.quad	_A__uMod_param_L_u16
	.quad	_L_1+67531
	.quad	_A__Mod_var_L_u16
	.quad	_L_1+67548
	.quad	_A__uMod_var_L_u16
	.quad	_L_1+67562
	.quad	_A__Mod_param_L_u64
	.quad	_L_1+67577
	.quad	_A__uMod_param_L_u64
	.quad	_L_1+67593
	.quad	_A__Mod_var_L_u64
	.quad	_L_1+67610
	.quad	_A__uMod_var_L_u64
	.quad	_L_1+67624
	.quad	_A__Mod_param_L_L
	.quad	_L_1+67639
	.quad	_A__uMod_param_L_L
	.quad	_L_1+67653
	.quad	_A__Mod_var_L_L
	.quad	_L_1+67668
	.quad	_A__uMod_var_L_L
	.quad	_L_1+67680
	.quad	_A__Mod_param_L_i8
	.quad	_L_1+67693
	.quad	_A__uMod_param_L_i8
	.quad	_L_1+67708
	.quad	_A__Mod_var_L_i8
	.quad	_L_1+67724
	.quad	_A__uMod_var_L_i8
	.quad	_L_1+67737
	.quad	_A__Mod_param_L_u32
	.quad	_L_1+67751
	.quad	_A__uMod_param_L_u32
	.quad	_L_1+67767
	.quad	_A__Mod_var_L_u32
	.quad	_L_1+67784
	.quad	_A__uMod_var_L_u32
	.quad	_L_1+67798
	.quad	_A__Mod_param_L_C
	.quad	_L_1+67813
	.quad	_A__uMod_param_L_C
	.quad	_L_1+67827
	.quad	_A__Mod_var_L_C
	.quad	_L_1+67842
	.quad	_A__uMod_var_L_C
	.quad	_L_1+67854
	.quad	_A__Mod_param_L_u8
	.quad	_L_1+67867
	.quad	_A__uMod_param_L_u8
	.quad	_L_1+67882
	.quad	_A__Mod_var_L_u8
	.quad	_L_1+67898
	.quad	_A__uMod_var_L_u8
	.quad	_L_1+67911
	.quad	_A__Mod_param_L_I
	.quad	_L_1+67925
	.quad	_A__uMod_param_L_I
	.quad	_L_1+67939
	.quad	_A__Mod_var_L_I
	.quad	_L_1+67954
	.quad	_A__uMod_var_L_I
	.quad	_L_1+67966
	.quad	_A__Mod_param_L_i64
	.quad	_L_1+67979
	.quad	_A__uMod_param_L_i64
	.quad	_L_1+67995
	.quad	_A__Mod_var_L_i64
	.quad	_L_1+68012
	.quad	_A__uMod_var_L_i64
	.quad	_L_1+68026
	.quad	_A__Mod_param_L_LC
	.quad	_L_1+68041
	.quad	_A__uMod_param_L_LC
	.quad	_L_1+68056
	.quad	_A__Mod_var_L_LC
	.quad	_L_1+68072
	.quad	_A__uMod_var_L_LC
	.quad	_L_1+68085
	.quad	_A__Mod_param_L_i16
	.quad	_L_1+68099
	.quad	_A__uMod_param_L_i16
	.quad	_L_1+68115
	.quad	_A__Mod_var_L_i16
	.quad	_L_1+68132
	.quad	_A__uMod_var_L_i16
	.quad	_L_1+68146
	.quad	_A__Mod_param_i8_i32
	.quad	_L_1+68161
	.quad	_A__uMod_param_i8_i32
	.quad	_L_1+68178
	.quad	_A__Mod_var_i8_i32
	.quad	_L_1+68196
	.quad	_A__uMod_var_i8_i32
	.quad	_L_1+68211
	.quad	_A__Mod_param_i8_u16
	.quad	_L_1+68227
	.quad	_A__uMod_param_i8_u16
	.quad	_L_1+68244
	.quad	_A__Mod_var_i8_u16
	.quad	_L_1+68262
	.quad	_A__uMod_var_i8_u16
	.quad	_L_1+68277
	.quad	_A__Mod_param_i8_u64
	.quad	_L_1+68293
	.quad	_A__uMod_param_i8_u64
	.quad	_L_1+68310
	.quad	_A__Mod_var_i8_u64
	.quad	_L_1+68328
	.quad	_A__uMod_var_i8_u64
	.quad	_L_1+68343
	.quad	_A__Mod_param_i8_L
	.quad	_L_1+68359
	.quad	_A__uMod_param_i8_L
	.quad	_L_1+68374
	.quad	_A__Mod_var_i8_L
	.quad	_L_1+68390
	.quad	_A__uMod_var_i8_L
	.quad	_L_1+68403
	.quad	_A__Mod_param_i8_i8
	.quad	_L_1+68417
	.quad	_A__uMod_param_i8_i8
	.quad	_L_1+68433
	.quad	_A__Mod_var_i8_i8
	.quad	_L_1+68450
	.quad	_A__uMod_var_i8_i8
	.quad	_L_1+68464
	.quad	_A__Mod_param_i8_u32
	.quad	_L_1+68479
	.quad	_A__uMod_param_i8_u32
	.quad	_L_1+68496
	.quad	_A__Mod_var_i8_u32
	.quad	_L_1+68514
	.quad	_A__uMod_var_i8_u32
	.quad	_L_1+68529
	.quad	_A__Mod_param_i8_C
	.quad	_L_1+68545
	.quad	_A__uMod_param_i8_C
	.quad	_L_1+68560
	.quad	_A__Mod_var_i8_C
	.quad	_L_1+68576
	.quad	_A__uMod_var_i8_C
	.quad	_L_1+68589
	.quad	_A__Mod_param_i8_u8
	.quad	_L_1+68603
	.quad	_A__uMod_param_i8_u8
	.quad	_L_1+68619
	.quad	_A__Mod_var_i8_u8
	.quad	_L_1+68636
	.quad	_A__uMod_var_i8_u8
	.quad	_L_1+68650
	.quad	_A__Mod_param_i8_I
	.quad	_L_1+68665
	.quad	_A__uMod_param_i8_I
	.quad	_L_1+68680
	.quad	_A__Mod_var_i8_I
	.quad	_L_1+68696
	.quad	_A__uMod_var_i8_I
	.quad	_L_1+68709
	.quad	_A__Mod_param_i8_i64
	.quad	_L_1+68723
	.quad	_A__uMod_param_i8_i64
	.quad	_L_1+68740
	.quad	_A__Mod_var_i8_i64
	.quad	_L_1+68758
	.quad	_A__uMod_var_i8_i64
	.quad	_L_1+68773
	.quad	_A__Mod_param_i8_LC
	.quad	_L_1+68789
	.quad	_A__uMod_param_i8_LC
	.quad	_L_1+68805
	.quad	_A__Mod_var_i8_LC
	.quad	_L_1+68822
	.quad	_A__uMod_var_i8_LC
	.quad	_L_1+68836
	.quad	_A__Mod_param_i8_i16
	.quad	_L_1+68851
	.quad	_A__uMod_param_i8_i16
	.quad	_L_1+68868
	.quad	_A__Mod_var_i8_i16
	.quad	_L_1+68886
	.quad	_A__uMod_var_i8_i16
	.quad	_L_1+68901
	.quad	_A__Mod_param_u32_i32
	.quad	_L_1+68917
	.quad	_A__uMod_param_u32_i32
	.quad	_L_1+68935
	.quad	_A__Mod_var_u32_i32
	.quad	_L_1+68954
	.quad	_A__uMod_var_u32_i32
	.quad	_L_1+68970
	.quad	_A__Mod_param_u32_u16
	.quad	_L_1+68987
	.quad	_A__uMod_param_u32_u16
	.quad	_L_1+69005
	.quad	_A__Mod_var_u32_u16
	.quad	_L_1+69024
	.quad	_A__uMod_var_u32_u16
	.quad	_L_1+69040
	.quad	_A__Mod_param_u32_u64
	.quad	_L_1+69057
	.quad	_A__uMod_param_u32_u64
	.quad	_L_1+69075
	.quad	_A__Mod_var_u32_u64
	.quad	_L_1+69094
	.quad	_A__uMod_var_u32_u64
	.quad	_L_1+69110
	.quad	_A__Mod_param_u32_L
	.quad	_L_1+69127
	.quad	_A__uMod_param_u32_L
	.quad	_L_1+69143
	.quad	_A__Mod_var_u32_L
	.quad	_L_1+69160
	.quad	_A__uMod_var_u32_L
	.quad	_L_1+69174
	.quad	_A__Mod_param_u32_i8
	.quad	_L_1+69189
	.quad	_A__uMod_param_u32_i8
	.quad	_L_1+69206
	.quad	_A__Mod_var_u32_i8
	.quad	_L_1+69224
	.quad	_A__uMod_var_u32_i8
	.quad	_L_1+69239
	.quad	_A__Mod_param_u32_u32
	.quad	_L_1+69255
	.quad	_A__uMod_param_u32_u32
	.quad	_L_1+69273
	.quad	_A__Mod_var_u32_u32
	.quad	_L_1+69292
	.quad	_A__uMod_var_u32_u32
	.quad	_L_1+69308
	.quad	_A__Mod_param_u32_C
	.quad	_L_1+69325
	.quad	_A__uMod_param_u32_C
	.quad	_L_1+69341
	.quad	_A__Mod_var_u32_C
	.quad	_L_1+69358
	.quad	_A__uMod_var_u32_C
	.quad	_L_1+69372
	.quad	_A__Mod_param_u32_u8
	.quad	_L_1+69387
	.quad	_A__uMod_param_u32_u8
	.quad	_L_1+69404
	.quad	_A__Mod_var_u32_u8
	.quad	_L_1+69422
	.quad	_A__uMod_var_u32_u8
	.quad	_L_1+69437
	.quad	_A__Mod_param_u32_I
	.quad	_L_1+69453
	.quad	_A__uMod_param_u32_I
	.quad	_L_1+69469
	.quad	_A__Mod_var_u32_I
	.quad	_L_1+69486
	.quad	_A__uMod_var_u32_I
	.quad	_L_1+69500
	.quad	_A__Mod_param_u32_i64
	.quad	_L_1+69515
	.quad	_A__uMod_param_u32_i64
	.quad	_L_1+69533
	.quad	_A__Mod_var_u32_i64
	.quad	_L_1+69552
	.quad	_A__uMod_var_u32_i64
	.quad	_L_1+69568
	.quad	_A__Mod_param_u32_LC
	.quad	_L_1+69585
	.quad	_A__uMod_param_u32_LC
	.quad	_L_1+69602
	.quad	_A__Mod_var_u32_LC
	.quad	_L_1+69620
	.quad	_A__uMod_var_u32_LC
	.quad	_L_1+69635
	.quad	_A__Mod_param_u32_i16
	.quad	_L_1+69651
	.quad	_A__uMod_param_u32_i16
	.quad	_L_1+69669
	.quad	_A__Mod_var_u32_i16
	.quad	_L_1+69688
	.quad	_A__uMod_var_u32_i16
	.quad	_L_1+69704
	.quad	_A__Mod_param_f32_f32
	.quad	_L_1+69721
	.quad	_A__Mod_var_f32_f32
	.quad	_L_1+69739
	.quad	_A__Mod_param_C_i32
	.quad	_L_1+69755
	.quad	_A__uMod_param_C_i32
	.quad	_L_1+69771
	.quad	_A__Mod_var_C_i32
	.quad	_L_1+69788
	.quad	_A__uMod_var_C_i32
	.quad	_L_1+69802
	.quad	_A__Mod_param_C_u16
	.quad	_L_1+69817
	.quad	_A__uMod_param_C_u16
	.quad	_L_1+69833
	.quad	_A__Mod_var_C_u16
	.quad	_L_1+69850
	.quad	_A__uMod_var_C_u16
	.quad	_L_1+69864
	.quad	_A__Mod_param_C_u64
	.quad	_L_1+69879
	.quad	_A__uMod_param_C_u64
	.quad	_L_1+69895
	.quad	_A__Mod_var_C_u64
	.quad	_L_1+69912
	.quad	_A__uMod_var_C_u64
	.quad	_L_1+69926
	.quad	_A__Mod_param_C_L
	.quad	_L_1+69941
	.quad	_A__uMod_param_C_L
	.quad	_L_1+69955
	.quad	_A__Mod_var_C_L
	.quad	_L_1+69970
	.quad	_A__uMod_var_C_L
	.quad	_L_1+69982
	.quad	_A__Mod_param_C_i8
	.quad	_L_1+69995
	.quad	_A__uMod_param_C_i8
	.quad	_L_1+70010
	.quad	_A__Mod_var_C_i8
	.quad	_L_1+70026
	.quad	_A__uMod_var_C_i8
	.quad	_L_1+70039
	.quad	_A__Mod_param_C_u32
	.quad	_L_1+70053
	.quad	_A__uMod_param_C_u32
	.quad	_L_1+70069
	.quad	_A__Mod_var_C_u32
	.quad	_L_1+70086
	.quad	_A__uMod_var_C_u32
	.quad	_L_1+70100
	.quad	_A__Mod_param_C_C
	.quad	_L_1+70115
	.quad	_A__uMod_param_C_C
	.quad	_L_1+70129
	.quad	_A__Mod_var_C_C
	.quad	_L_1+70144
	.quad	_A__uMod_var_C_C
	.quad	_L_1+70156
	.quad	_A__Mod_param_C_u8
	.quad	_L_1+70169
	.quad	_A__uMod_param_C_u8
	.quad	_L_1+70184
	.quad	_A__Mod_var_C_u8
	.quad	_L_1+70200
	.quad	_A__uMod_var_C_u8
	.quad	_L_1+70213
	.quad	_A__Mod_param_C_I
	.quad	_L_1+70227
	.quad	_A__uMod_param_C_I
	.quad	_L_1+70241
	.quad	_A__Mod_var_C_I
	.quad	_L_1+70256
	.quad	_A__uMod_var_C_I
	.quad	_L_1+70268
	.quad	_A__Mod_param_C_i64
	.quad	_L_1+70281
	.quad	_A__uMod_param_C_i64
	.quad	_L_1+70297
	.quad	_A__Mod_var_C_i64
	.quad	_L_1+70314
	.quad	_A__uMod_var_C_i64
	.quad	_L_1+70328
	.quad	_A__Mod_param_C_LC
	.quad	_L_1+70343
	.quad	_A__uMod_param_C_LC
	.quad	_L_1+70358
	.quad	_A__Mod_var_C_LC
	.quad	_L_1+70374
	.quad	_A__uMod_var_C_LC
	.quad	_L_1+70387
	.quad	_A__Mod_param_C_i16
	.quad	_L_1+70401
	.quad	_A__uMod_param_C_i16
	.quad	_L_1+70417
	.quad	_A__Mod_var_C_i16
	.quad	_L_1+70434
	.quad	_A__uMod_var_C_i16
	.quad	_L_1+70448
	.quad	_A__Mod_param_u8_i32
	.quad	_L_1+70463
	.quad	_A__uMod_param_u8_i32
	.quad	_L_1+70480
	.quad	_A__Mod_var_u8_i32
	.quad	_L_1+70498
	.quad	_A__uMod_var_u8_i32
	.quad	_L_1+70513
	.quad	_A__Mod_param_u8_u16
	.quad	_L_1+70529
	.quad	_A__uMod_param_u8_u16
	.quad	_L_1+70546
	.quad	_A__Mod_var_u8_u16
	.quad	_L_1+70564
	.quad	_A__uMod_var_u8_u16
	.quad	_L_1+70579
	.quad	_A__Mod_param_u8_u64
	.quad	_L_1+70595
	.quad	_A__uMod_param_u8_u64
	.quad	_L_1+70612
	.quad	_A__Mod_var_u8_u64
	.quad	_L_1+70630
	.quad	_A__uMod_var_u8_u64
	.quad	_L_1+70645
	.quad	_A__Mod_param_u8_L
	.quad	_L_1+70661
	.quad	_A__uMod_param_u8_L
	.quad	_L_1+70676
	.quad	_A__Mod_var_u8_L
	.quad	_L_1+70692
	.quad	_A__uMod_var_u8_L
	.quad	_L_1+70705
	.quad	_A__Mod_param_u8_i8
	.quad	_L_1+70719
	.quad	_A__uMod_param_u8_i8
	.quad	_L_1+70735
	.quad	_A__Mod_var_u8_i8
	.quad	_L_1+70752
	.quad	_A__uMod_var_u8_i8
	.quad	_L_1+70766
	.quad	_A__Mod_param_u8_u32
	.quad	_L_1+70781
	.quad	_A__uMod_param_u8_u32
	.quad	_L_1+70798
	.quad	_A__Mod_var_u8_u32
	.quad	_L_1+70816
	.quad	_A__uMod_var_u8_u32
	.quad	_L_1+70831
	.quad	_A__Mod_param_u8_C
	.quad	_L_1+70847
	.quad	_A__uMod_param_u8_C
	.quad	_L_1+70862
	.quad	_A__Mod_var_u8_C
	.quad	_L_1+70878
	.quad	_A__uMod_var_u8_C
	.quad	_L_1+70891
	.quad	_A__Mod_param_u8_u8
	.quad	_L_1+70905
	.quad	_A__uMod_param_u8_u8
	.quad	_L_1+70921
	.quad	_A__Mod_var_u8_u8
	.quad	_L_1+70938
	.quad	_A__uMod_var_u8_u8
	.quad	_L_1+70952
	.quad	_A__Mod_param_u8_I
	.quad	_L_1+70967
	.quad	_A__uMod_param_u8_I
	.quad	_L_1+70982
	.quad	_A__Mod_var_u8_I
	.quad	_L_1+70998
	.quad	_A__uMod_var_u8_I
	.quad	_L_1+71011
	.quad	_A__Mod_param_u8_i64
	.quad	_L_1+71025
	.quad	_A__uMod_param_u8_i64
	.quad	_L_1+71042
	.quad	_A__Mod_var_u8_i64
	.quad	_L_1+71060
	.quad	_A__uMod_var_u8_i64
	.quad	_L_1+71075
	.quad	_A__Mod_param_u8_LC
	.quad	_L_1+71091
	.quad	_A__uMod_param_u8_LC
	.quad	_L_1+71107
	.quad	_A__Mod_var_u8_LC
	.quad	_L_1+71124
	.quad	_A__uMod_var_u8_LC
	.quad	_L_1+71138
	.quad	_A__Mod_param_u8_i16
	.quad	_L_1+71153
	.quad	_A__uMod_param_u8_i16
	.quad	_L_1+71170
	.quad	_A__Mod_var_u8_i16
	.quad	_L_1+71188
	.quad	_A__uMod_var_u8_i16
	.quad	_L_1+71203
	.quad	_A__Mod_param_I_i32
	.quad	_L_1+71219
	.quad	_A__uMod_param_I_i32
	.quad	_L_1+71235
	.quad	_A__Mod_var_I_i32
	.quad	_L_1+71252
	.quad	_A__uMod_var_I_i32
	.quad	_L_1+71266
	.quad	_A__Mod_param_I_u16
	.quad	_L_1+71281
	.quad	_A__uMod_param_I_u16
	.quad	_L_1+71297
	.quad	_A__Mod_var_I_u16
	.quad	_L_1+71314
	.quad	_A__uMod_var_I_u16
	.quad	_L_1+71328
	.quad	_A__Mod_param_I_u64
	.quad	_L_1+71343
	.quad	_A__uMod_param_I_u64
	.quad	_L_1+71359
	.quad	_A__Mod_var_I_u64
	.quad	_L_1+71376
	.quad	_A__uMod_var_I_u64
	.quad	_L_1+71390
	.quad	_A__Mod_param_I_L
	.quad	_L_1+71405
	.quad	_A__uMod_param_I_L
	.quad	_L_1+71419
	.quad	_A__Mod_var_I_L
	.quad	_L_1+71434
	.quad	_A__uMod_var_I_L
	.quad	_L_1+71446
	.quad	_A__Mod_param_I_i8
	.quad	_L_1+71459
	.quad	_A__uMod_param_I_i8
	.quad	_L_1+71474
	.quad	_A__Mod_var_I_i8
	.quad	_L_1+71490
	.quad	_A__uMod_var_I_i8
	.quad	_L_1+71503
	.quad	_A__Mod_param_I_u32
	.quad	_L_1+71517
	.quad	_A__uMod_param_I_u32
	.quad	_L_1+71533
	.quad	_A__Mod_var_I_u32
	.quad	_L_1+71550
	.quad	_A__uMod_var_I_u32
	.quad	_L_1+71564
	.quad	_A__Mod_param_I_C
	.quad	_L_1+71579
	.quad	_A__uMod_param_I_C
	.quad	_L_1+71593
	.quad	_A__Mod_var_I_C
	.quad	_L_1+71608
	.quad	_A__uMod_var_I_C
	.quad	_L_1+71620
	.quad	_A__Mod_param_I_u8
	.quad	_L_1+71633
	.quad	_A__uMod_param_I_u8
	.quad	_L_1+71648
	.quad	_A__Mod_var_I_u8
	.quad	_L_1+71664
	.quad	_A__uMod_var_I_u8
	.quad	_L_1+71677
	.quad	_A__Mod_param_I_I
	.quad	_L_1+71691
	.quad	_A__uMod_param_I_I
	.quad	_L_1+71705
	.quad	_A__Mod_var_I_I
	.quad	_L_1+71720
	.quad	_A__uMod_var_I_I
	.quad	_L_1+71732
	.quad	_A__Mod_param_I_i64
	.quad	_L_1+71745
	.quad	_A__uMod_param_I_i64
	.quad	_L_1+71761
	.quad	_A__Mod_var_I_i64
	.quad	_L_1+71778
	.quad	_A__uMod_var_I_i64
	.quad	_L_1+71792
	.quad	_A__Mod_param_I_LC
	.quad	_L_1+71807
	.quad	_A__uMod_param_I_LC
	.quad	_L_1+71822
	.quad	_A__Mod_var_I_LC
	.quad	_L_1+71838
	.quad	_A__uMod_var_I_LC
	.quad	_L_1+71851
	.quad	_A__Mod_param_I_i16
	.quad	_L_1+71865
	.quad	_A__uMod_param_I_i16
	.quad	_L_1+71881
	.quad	_A__Mod_var_I_i16
	.quad	_L_1+71898
	.quad	_A__uMod_var_I_i16
	.quad	_L_1+71912
	.quad	_A__Mod_param_i64_i32
	.quad	_L_1+71927
	.quad	_A__uMod_param_i64_i32
	.quad	_L_1+71945
	.quad	_A__Mod_var_i64_i32
	.quad	_L_1+71964
	.quad	_A__uMod_var_i64_i32
	.quad	_L_1+71980
	.quad	_A__Mod_param_i64_u16
	.quad	_L_1+71997
	.quad	_A__uMod_param_i64_u16
	.quad	_L_1+72015
	.quad	_A__Mod_var_i64_u16
	.quad	_L_1+72034
	.quad	_A__uMod_var_i64_u16
	.quad	_L_1+72050
	.quad	_A__Mod_param_i64_u64
	.quad	_L_1+72067
	.quad	_A__uMod_param_i64_u64
	.quad	_L_1+72085
	.quad	_A__Mod_var_i64_u64
	.quad	_L_1+72104
	.quad	_A__uMod_var_i64_u64
	.quad	_L_1+72120
	.quad	_A__Mod_param_i64_L
	.quad	_L_1+72137
	.quad	_A__uMod_param_i64_L
	.quad	_L_1+72153
	.quad	_A__Mod_var_i64_L
	.quad	_L_1+72170
	.quad	_A__uMod_var_i64_L
	.quad	_L_1+72184
	.quad	_A__Mod_param_i64_i8
	.quad	_L_1+72199
	.quad	_A__uMod_param_i64_i8
	.quad	_L_1+72216
	.quad	_A__Mod_var_i64_i8
	.quad	_L_1+72234
	.quad	_A__uMod_var_i64_i8
	.quad	_L_1+72249
	.quad	_A__Mod_param_i64_u32
	.quad	_L_1+72265
	.quad	_A__uMod_param_i64_u32
	.quad	_L_1+72283
	.quad	_A__Mod_var_i64_u32
	.quad	_L_1+72302
	.quad	_A__uMod_var_i64_u32
	.quad	_L_1+72318
	.quad	_A__Mod_param_i64_C
	.quad	_L_1+72335
	.quad	_A__uMod_param_i64_C
	.quad	_L_1+72351
	.quad	_A__Mod_var_i64_C
	.quad	_L_1+72368
	.quad	_A__uMod_var_i64_C
	.quad	_L_1+72382
	.quad	_A__Mod_param_i64_u8
	.quad	_L_1+72397
	.quad	_A__uMod_param_i64_u8
	.quad	_L_1+72414
	.quad	_A__Mod_var_i64_u8
	.quad	_L_1+72432
	.quad	_A__uMod_var_i64_u8
	.quad	_L_1+72447
	.quad	_A__Mod_param_i64_I
	.quad	_L_1+72463
	.quad	_A__uMod_param_i64_I
	.quad	_L_1+72479
	.quad	_A__Mod_var_i64_I
	.quad	_L_1+72496
	.quad	_A__uMod_var_i64_I
	.quad	_L_1+72510
	.quad	_A__Mod_param_i64_i64
	.quad	_L_1+72525
	.quad	_A__uMod_param_i64_i64
	.quad	_L_1+72543
	.quad	_A__Mod_var_i64_i64
	.quad	_L_1+72562
	.quad	_A__uMod_var_i64_i64
	.quad	_L_1+72578
	.quad	_A__Mod_param_i64_LC
	.quad	_L_1+72595
	.quad	_A__uMod_param_i64_LC
	.quad	_L_1+72612
	.quad	_A__Mod_var_i64_LC
	.quad	_L_1+72630
	.quad	_A__uMod_var_i64_LC
	.quad	_L_1+72645
	.quad	_A__Mod_param_i64_i16
	.quad	_L_1+72661
	.quad	_A__uMod_param_i64_i16
	.quad	_L_1+72679
	.quad	_A__Mod_var_i64_i16
	.quad	_L_1+72698
	.quad	_A__uMod_var_i64_i16
	.quad	_L_1+72714
	.quad	_A__Mod_param_f64_f64
	.quad	_L_1+72731
	.quad	_A__Mod_var_f64_f64
	.quad	_L_1+72749
	.quad	_A__Mod_param_LC_i32
	.quad	_L_1+72765
	.quad	_A__uMod_param_LC_i32
	.quad	_L_1+72782
	.quad	_A__Mod_var_LC_i32
	.quad	_L_1+72800
	.quad	_A__uMod_var_LC_i32
	.quad	_L_1+72815
	.quad	_A__Mod_param_LC_u16
	.quad	_L_1+72831
	.quad	_A__uMod_param_LC_u16
	.quad	_L_1+72848
	.quad	_A__Mod_var_LC_u16
	.quad	_L_1+72866
	.quad	_A__uMod_var_LC_u16
	.quad	_L_1+72881
	.quad	_A__Mod_param_LC_u64
	.quad	_L_1+72897
	.quad	_A__uMod_param_LC_u64
	.quad	_L_1+72914
	.quad	_A__Mod_var_LC_u64
	.quad	_L_1+72932
	.quad	_A__uMod_var_LC_u64
	.quad	_L_1+72947
	.quad	_A__Mod_param_LC_L
	.quad	_L_1+72963
	.quad	_A__uMod_param_LC_L
	.quad	_L_1+72978
	.quad	_A__Mod_var_LC_L
	.quad	_L_1+72994
	.quad	_A__uMod_var_LC_L
	.quad	_L_1+73007
	.quad	_A__Mod_param_LC_i8
	.quad	_L_1+73021
	.quad	_A__uMod_param_LC_i8
	.quad	_L_1+73037
	.quad	_A__Mod_var_LC_i8
	.quad	_L_1+73054
	.quad	_A__uMod_var_LC_i8
	.quad	_L_1+73068
	.quad	_A__Mod_param_LC_u32
	.quad	_L_1+73083
	.quad	_A__uMod_param_LC_u32
	.quad	_L_1+73100
	.quad	_A__Mod_var_LC_u32
	.quad	_L_1+73118
	.quad	_A__uMod_var_LC_u32
	.quad	_L_1+73133
	.quad	_A__Mod_param_LC_C
	.quad	_L_1+73149
	.quad	_A__uMod_param_LC_C
	.quad	_L_1+73164
	.quad	_A__Mod_var_LC_C
	.quad	_L_1+73180
	.quad	_A__uMod_var_LC_C
	.quad	_L_1+73193
	.quad	_A__Mod_param_LC_u8
	.quad	_L_1+73207
	.quad	_A__uMod_param_LC_u8
	.quad	_L_1+73223
	.quad	_A__Mod_var_LC_u8
	.quad	_L_1+73240
	.quad	_A__uMod_var_LC_u8
	.quad	_L_1+73254
	.quad	_A__Mod_param_LC_I
	.quad	_L_1+73269
	.quad	_A__uMod_param_LC_I
	.quad	_L_1+73284
	.quad	_A__Mod_var_LC_I
	.quad	_L_1+73300
	.quad	_A__uMod_var_LC_I
	.quad	_L_1+73313
	.quad	_A__Mod_param_LC_i64
	.quad	_L_1+73327
	.quad	_A__uMod_param_LC_i64
	.quad	_L_1+73344
	.quad	_A__Mod_var_LC_i64
	.quad	_L_1+73362
	.quad	_A__uMod_var_LC_i64
	.quad	_L_1+73377
	.quad	_A__Mod_param_LC_LC
	.quad	_L_1+73393
	.quad	_A__uMod_param_LC_LC
	.quad	_L_1+73409
	.quad	_A__Mod_var_LC_LC
	.quad	_L_1+73426
	.quad	_A__uMod_var_LC_LC
	.quad	_L_1+73440
	.quad	_A__Mod_param_LC_i16
	.quad	_L_1+73455
	.quad	_A__uMod_param_LC_i16
	.quad	_L_1+73472
	.quad	_A__Mod_var_LC_i16
	.quad	_L_1+73490
	.quad	_A__uMod_var_LC_i16
	.quad	_L_1+73505
	.quad	_A__Mod_param_i16_i32
	.quad	_L_1+73521
	.quad	_A__uMod_param_i16_i32
	.quad	_L_1+73539
	.quad	_A__Mod_var_i16_i32
	.quad	_L_1+73558
	.quad	_A__uMod_var_i16_i32
	.quad	_L_1+73574
	.quad	_A__Mod_param_i16_u16
	.quad	_L_1+73591
	.quad	_A__uMod_param_i16_u16
	.quad	_L_1+73609
	.quad	_A__Mod_var_i16_u16
	.quad	_L_1+73628
	.quad	_A__uMod_var_i16_u16
	.quad	_L_1+73644
	.quad	_A__Mod_param_i16_u64
	.quad	_L_1+73661
	.quad	_A__uMod_param_i16_u64
	.quad	_L_1+73679
	.quad	_A__Mod_var_i16_u64
	.quad	_L_1+73698
	.quad	_A__uMod_var_i16_u64
	.quad	_L_1+73714
	.quad	_A__Mod_param_i16_L
	.quad	_L_1+73731
	.quad	_A__uMod_param_i16_L
	.quad	_L_1+73747
	.quad	_A__Mod_var_i16_L
	.quad	_L_1+73764
	.quad	_A__uMod_var_i16_L
	.quad	_L_1+73778
	.quad	_A__Mod_param_i16_i8
	.quad	_L_1+73793
	.quad	_A__uMod_param_i16_i8
	.quad	_L_1+73810
	.quad	_A__Mod_var_i16_i8
	.quad	_L_1+73828
	.quad	_A__uMod_var_i16_i8
	.quad	_L_1+73843
	.quad	_A__Mod_param_i16_u32
	.quad	_L_1+73859
	.quad	_A__uMod_param_i16_u32
	.quad	_L_1+73877
	.quad	_A__Mod_var_i16_u32
	.quad	_L_1+73896
	.quad	_A__uMod_var_i16_u32
	.quad	_L_1+73912
	.quad	_A__Mod_param_i16_C
	.quad	_L_1+73929
	.quad	_A__uMod_param_i16_C
	.quad	_L_1+73945
	.quad	_A__Mod_var_i16_C
	.quad	_L_1+73962
	.quad	_A__uMod_var_i16_C
	.quad	_L_1+73976
	.quad	_A__Mod_param_i16_u8
	.quad	_L_1+73991
	.quad	_A__uMod_param_i16_u8
	.quad	_L_1+74008
	.quad	_A__Mod_var_i16_u8
	.quad	_L_1+74026
	.quad	_A__uMod_var_i16_u8
	.quad	_L_1+74041
	.quad	_A__Mod_param_i16_I
	.quad	_L_1+74057
	.quad	_A__uMod_param_i16_I
	.quad	_L_1+74073
	.quad	_A__Mod_var_i16_I
	.quad	_L_1+74090
	.quad	_A__uMod_var_i16_I
	.quad	_L_1+74104
	.quad	_A__Mod_param_i16_i64
	.quad	_L_1+74119
	.quad	_A__uMod_param_i16_i64
	.quad	_L_1+74137
	.quad	_A__Mod_var_i16_i64
	.quad	_L_1+74156
	.quad	_A__uMod_var_i16_i64
	.quad	_L_1+74172
	.quad	_A__Mod_param_i16_LC
	.quad	_L_1+74189
	.quad	_A__uMod_param_i16_LC
	.quad	_L_1+74206
	.quad	_A__Mod_var_i16_LC
	.quad	_L_1+74224
	.quad	_A__uMod_var_i16_LC
	.quad	_L_1+74239
	.quad	_A__Mod_param_i16_i16
	.quad	_L_1+74255
	.quad	_A__uMod_param_i16_i16
	.quad	_L_1+74273
	.quad	_A__Mod_var_i16_i16
	.quad	_L_1+74292
	.quad	_A__uMod_var_i16_i16
	.quad	_L_1+74308
	.quad	_A__Divide_param_i32_i32
	.quad	_L_1+74325
	.quad	_A__uDivide_param_i32_i32
	.quad	_L_1+74346
	.quad	_A__Divide_var_i32_i32
	.quad	_L_1+74368
	.quad	_A__uDivide_var_i32_i32
	.quad	_L_1+74387
	.quad	_A__Divide_param_i32_u16
	.quad	_L_1+74407
	.quad	_A__uDivide_param_i32_u16
	.quad	_L_1+74428
	.quad	_A__Divide_var_i32_u16
	.quad	_L_1+74450
	.quad	_A__uDivide_var_i32_u16
	.quad	_L_1+74469
	.quad	_A__Divide_param_i32_u64
	.quad	_L_1+74489
	.quad	_A__uDivide_param_i32_u64
	.quad	_L_1+74510
	.quad	_A__Divide_var_i32_u64
	.quad	_L_1+74532
	.quad	_A__uDivide_var_i32_u64
	.quad	_L_1+74551
	.quad	_A__Divide_param_i32_L
	.quad	_L_1+74571
	.quad	_A__uDivide_param_i32_L
	.quad	_L_1+74590
	.quad	_A__Divide_var_i32_L
	.quad	_L_1+74610
	.quad	_A__uDivide_var_i32_L
	.quad	_L_1+74627
	.quad	_A__Divide_param_i32_i8
	.quad	_L_1+74645
	.quad	_A__uDivide_param_i32_i8
	.quad	_L_1+74665
	.quad	_A__Divide_var_i32_i8
	.quad	_L_1+74686
	.quad	_A__uDivide_var_i32_i8
	.quad	_L_1+74704
	.quad	_A__Divide_param_i32_u32
	.quad	_L_1+74723
	.quad	_A__uDivide_param_i32_u32
	.quad	_L_1+74744
	.quad	_A__Divide_var_i32_u32
	.quad	_L_1+74766
	.quad	_A__uDivide_var_i32_u32
	.quad	_L_1+74785
	.quad	_A__Divide_param_i32_C
	.quad	_L_1+74805
	.quad	_A__uDivide_param_i32_C
	.quad	_L_1+74824
	.quad	_A__Divide_var_i32_C
	.quad	_L_1+74844
	.quad	_A__uDivide_var_i32_C
	.quad	_L_1+74861
	.quad	_A__Divide_param_i32_u8
	.quad	_L_1+74879
	.quad	_A__uDivide_param_i32_u8
	.quad	_L_1+74899
	.quad	_A__Divide_var_i32_u8
	.quad	_L_1+74920
	.quad	_A__uDivide_var_i32_u8
	.quad	_L_1+74938
	.quad	_A__Divide_param_i32_I
	.quad	_L_1+74957
	.quad	_A__uDivide_param_i32_I
	.quad	_L_1+74976
	.quad	_A__Divide_var_i32_I
	.quad	_L_1+74996
	.quad	_A__uDivide_var_i32_I
	.quad	_L_1+75013
	.quad	_A__Divide_param_i32_i64
	.quad	_L_1+75031
	.quad	_A__uDivide_param_i32_i64
	.quad	_L_1+75052
	.quad	_A__Divide_var_i32_i64
	.quad	_L_1+75074
	.quad	_A__uDivide_var_i32_i64
	.quad	_L_1+75093
	.quad	_A__Divide_param_i32_LC
	.quad	_L_1+75113
	.quad	_A__uDivide_param_i32_LC
	.quad	_L_1+75133
	.quad	_A__Divide_var_i32_LC
	.quad	_L_1+75154
	.quad	_A__uDivide_var_i32_LC
	.quad	_L_1+75172
	.quad	_A__Divide_param_i32_i16
	.quad	_L_1+75191
	.quad	_A__uDivide_param_i32_i16
	.quad	_L_1+75212
	.quad	_A__Divide_var_i32_i16
	.quad	_L_1+75234
	.quad	_A__uDivide_var_i32_i16
	.quad	_L_1+75253
	.quad	_A__Divide_param_u16_i32
	.quad	_L_1+75273
	.quad	_A__uDivide_param_u16_i32
	.quad	_L_1+75294
	.quad	_A__Divide_var_u16_i32
	.quad	_L_1+75316
	.quad	_A__uDivide_var_u16_i32
	.quad	_L_1+75335
	.quad	_A__Divide_param_u16_u16
	.quad	_L_1+75355
	.quad	_A__uDivide_param_u16_u16
	.quad	_L_1+75376
	.quad	_A__Divide_var_u16_u16
	.quad	_L_1+75398
	.quad	_A__uDivide_var_u16_u16
	.quad	_L_1+75417
	.quad	_A__Divide_param_u16_u64
	.quad	_L_1+75437
	.quad	_A__uDivide_param_u16_u64
	.quad	_L_1+75458
	.quad	_A__Divide_var_u16_u64
	.quad	_L_1+75480
	.quad	_A__uDivide_var_u16_u64
	.quad	_L_1+75499
	.quad	_A__Divide_param_u16_L
	.quad	_L_1+75519
	.quad	_A__uDivide_param_u16_L
	.quad	_L_1+75538
	.quad	_A__Divide_var_u16_L
	.quad	_L_1+75558
	.quad	_A__uDivide_var_u16_L
	.quad	_L_1+75575
	.quad	_A__Divide_param_u16_i8
	.quad	_L_1+75593
	.quad	_A__uDivide_param_u16_i8
	.quad	_L_1+75613
	.quad	_A__Divide_var_u16_i8
	.quad	_L_1+75634
	.quad	_A__uDivide_var_u16_i8
	.quad	_L_1+75652
	.quad	_A__Divide_param_u16_u32
	.quad	_L_1+75671
	.quad	_A__uDivide_param_u16_u32
	.quad	_L_1+75692
	.quad	_A__Divide_var_u16_u32
	.quad	_L_1+75714
	.quad	_A__uDivide_var_u16_u32
	.quad	_L_1+75733
	.quad	_A__Divide_param_u16_C
	.quad	_L_1+75753
	.quad	_A__uDivide_param_u16_C
	.quad	_L_1+75772
	.quad	_A__Divide_var_u16_C
	.quad	_L_1+75792
	.quad	_A__uDivide_var_u16_C
	.quad	_L_1+75809
	.quad	_A__Divide_param_u16_u8
	.quad	_L_1+75827
	.quad	_A__uDivide_param_u16_u8
	.quad	_L_1+75847
	.quad	_A__Divide_var_u16_u8
	.quad	_L_1+75868
	.quad	_A__uDivide_var_u16_u8
	.quad	_L_1+75886
	.quad	_A__Divide_param_u16_I
	.quad	_L_1+75905
	.quad	_A__uDivide_param_u16_I
	.quad	_L_1+75924
	.quad	_A__Divide_var_u16_I
	.quad	_L_1+75944
	.quad	_A__uDivide_var_u16_I
	.quad	_L_1+75961
	.quad	_A__Divide_param_u16_i64
	.quad	_L_1+75979
	.quad	_A__uDivide_param_u16_i64
	.quad	_L_1+76000
	.quad	_A__Divide_var_u16_i64
	.quad	_L_1+76022
	.quad	_A__uDivide_var_u16_i64
	.quad	_L_1+76041
	.quad	_A__Divide_param_u16_LC
	.quad	_L_1+76061
	.quad	_A__uDivide_param_u16_LC
	.quad	_L_1+76081
	.quad	_A__Divide_var_u16_LC
	.quad	_L_1+76102
	.quad	_A__uDivide_var_u16_LC
	.quad	_L_1+76120
	.quad	_A__Divide_param_u16_i16
	.quad	_L_1+76139
	.quad	_A__uDivide_param_u16_i16
	.quad	_L_1+76160
	.quad	_A__Divide_var_u16_i16
	.quad	_L_1+76182
	.quad	_A__uDivide_var_u16_i16
	.quad	_L_1+76201
	.quad	_A__Divide_param_u64_i32
	.quad	_L_1+76221
	.quad	_A__uDivide_param_u64_i32
	.quad	_L_1+76242
	.quad	_A__Divide_var_u64_i32
	.quad	_L_1+76264
	.quad	_A__uDivide_var_u64_i32
	.quad	_L_1+76283
	.quad	_A__Divide_param_u64_u16
	.quad	_L_1+76303
	.quad	_A__uDivide_param_u64_u16
	.quad	_L_1+76324
	.quad	_A__Divide_var_u64_u16
	.quad	_L_1+76346
	.quad	_A__uDivide_var_u64_u16
	.quad	_L_1+76365
	.quad	_A__Divide_param_u64_u64
	.quad	_L_1+76385
	.quad	_A__uDivide_param_u64_u64
	.quad	_L_1+76406
	.quad	_A__Divide_var_u64_u64
	.quad	_L_1+76428
	.quad	_A__uDivide_var_u64_u64
	.quad	_L_1+76447
	.quad	_A__Divide_param_u64_L
	.quad	_L_1+76467
	.quad	_A__uDivide_param_u64_L
	.quad	_L_1+76486
	.quad	_A__Divide_var_u64_L
	.quad	_L_1+76506
	.quad	_A__uDivide_var_u64_L
	.quad	_L_1+76523
	.quad	_A__Divide_param_u64_i8
	.quad	_L_1+76541
	.quad	_A__uDivide_param_u64_i8
	.quad	_L_1+76561
	.quad	_A__Divide_var_u64_i8
	.quad	_L_1+76582
	.quad	_A__uDivide_var_u64_i8
	.quad	_L_1+76600
	.quad	_A__Divide_param_u64_u32
	.quad	_L_1+76619
	.quad	_A__uDivide_param_u64_u32
	.quad	_L_1+76640
	.quad	_A__Divide_var_u64_u32
	.quad	_L_1+76662
	.quad	_A__uDivide_var_u64_u32
	.quad	_L_1+76681
	.quad	_A__Divide_param_u64_C
	.quad	_L_1+76701
	.quad	_A__uDivide_param_u64_C
	.quad	_L_1+76720
	.quad	_A__Divide_var_u64_C
	.quad	_L_1+76740
	.quad	_A__uDivide_var_u64_C
	.quad	_L_1+76757
	.quad	_A__Divide_param_u64_u8
	.quad	_L_1+76775
	.quad	_A__uDivide_param_u64_u8
	.quad	_L_1+76795
	.quad	_A__Divide_var_u64_u8
	.quad	_L_1+76816
	.quad	_A__uDivide_var_u64_u8
	.quad	_L_1+76834
	.quad	_A__Divide_param_u64_I
	.quad	_L_1+76853
	.quad	_A__uDivide_param_u64_I
	.quad	_L_1+76872
	.quad	_A__Divide_var_u64_I
	.quad	_L_1+76892
	.quad	_A__uDivide_var_u64_I
	.quad	_L_1+76909
	.quad	_A__Divide_param_u64_i64
	.quad	_L_1+76927
	.quad	_A__uDivide_param_u64_i64
	.quad	_L_1+76948
	.quad	_A__Divide_var_u64_i64
	.quad	_L_1+76970
	.quad	_A__uDivide_var_u64_i64
	.quad	_L_1+76989
	.quad	_A__Divide_param_u64_LC
	.quad	_L_1+77009
	.quad	_A__uDivide_param_u64_LC
	.quad	_L_1+77029
	.quad	_A__Divide_var_u64_LC
	.quad	_L_1+77050
	.quad	_A__uDivide_var_u64_LC
	.quad	_L_1+77068
	.quad	_A__Divide_param_u64_i16
	.quad	_L_1+77087
	.quad	_A__uDivide_param_u64_i16
	.quad	_L_1+77108
	.quad	_A__Divide_var_u64_i16
	.quad	_L_1+77130
	.quad	_A__uDivide_var_u64_i16
	.quad	_L_1+77149
	.quad	_A__Divide_param_L_i32
	.quad	_L_1+77169
	.quad	_A__uDivide_param_L_i32
	.quad	_L_1+77188
	.quad	_A__Divide_var_L_i32
	.quad	_L_1+77208
	.quad	_A__uDivide_var_L_i32
	.quad	_L_1+77225
	.quad	_A__Divide_param_L_u16
	.quad	_L_1+77243
	.quad	_A__uDivide_param_L_u16
	.quad	_L_1+77262
	.quad	_A__Divide_var_L_u16
	.quad	_L_1+77282
	.quad	_A__uDivide_var_L_u16
	.quad	_L_1+77299
	.quad	_A__Divide_param_L_u64
	.quad	_L_1+77317
	.quad	_A__uDivide_param_L_u64
	.quad	_L_1+77336
	.quad	_A__Divide_var_L_u64
	.quad	_L_1+77356
	.quad	_A__uDivide_var_L_u64
	.quad	_L_1+77373
	.quad	_A__Divide_param_L_L
	.quad	_L_1+77391
	.quad	_A__uDivide_param_L_L
	.quad	_L_1+77408
	.quad	_A__Divide_var_L_L
	.quad	_L_1+77426
	.quad	_A__uDivide_var_L_L
	.quad	_L_1+77441
	.quad	_A__Divide_param_L_i8
	.quad	_L_1+77457
	.quad	_A__uDivide_param_L_i8
	.quad	_L_1+77475
	.quad	_A__Divide_var_L_i8
	.quad	_L_1+77494
	.quad	_A__uDivide_var_L_i8
	.quad	_L_1+77510
	.quad	_A__Divide_param_L_u32
	.quad	_L_1+77527
	.quad	_A__uDivide_param_L_u32
	.quad	_L_1+77546
	.quad	_A__Divide_var_L_u32
	.quad	_L_1+77566
	.quad	_A__uDivide_var_L_u32
	.quad	_L_1+77583
	.quad	_A__Divide_param_L_C
	.quad	_L_1+77601
	.quad	_A__uDivide_param_L_C
	.quad	_L_1+77618
	.quad	_A__Divide_var_L_C
	.quad	_L_1+77636
	.quad	_A__uDivide_var_L_C
	.quad	_L_1+77651
	.quad	_A__Divide_param_L_u8
	.quad	_L_1+77667
	.quad	_A__uDivide_param_L_u8
	.quad	_L_1+77685
	.quad	_A__Divide_var_L_u8
	.quad	_L_1+77704
	.quad	_A__uDivide_var_L_u8
	.quad	_L_1+77720
	.quad	_A__Divide_param_L_I
	.quad	_L_1+77737
	.quad	_A__uDivide_param_L_I
	.quad	_L_1+77754
	.quad	_A__Divide_var_L_I
	.quad	_L_1+77772
	.quad	_A__uDivide_var_L_I
	.quad	_L_1+77787
	.quad	_A__Divide_param_L_i64
	.quad	_L_1+77803
	.quad	_A__uDivide_param_L_i64
	.quad	_L_1+77822
	.quad	_A__Divide_var_L_i64
	.quad	_L_1+77842
	.quad	_A__uDivide_var_L_i64
	.quad	_L_1+77859
	.quad	_A__Divide_param_L_LC
	.quad	_L_1+77877
	.quad	_A__uDivide_param_L_LC
	.quad	_L_1+77895
	.quad	_A__Divide_var_L_LC
	.quad	_L_1+77914
	.quad	_A__uDivide_var_L_LC
	.quad	_L_1+77930
	.quad	_A__Divide_param_L_i16
	.quad	_L_1+77947
	.quad	_A__uDivide_param_L_i16
	.quad	_L_1+77966
	.quad	_A__Divide_var_L_i16
	.quad	_L_1+77986
	.quad	_A__uDivide_var_L_i16
	.quad	_L_1+78003
	.quad	_A__Divide_param_i8_i32
	.quad	_L_1+78021
	.quad	_A__uDivide_param_i8_i32
	.quad	_L_1+78041
	.quad	_A__Divide_var_i8_i32
	.quad	_L_1+78062
	.quad	_A__uDivide_var_i8_i32
	.quad	_L_1+78080
	.quad	_A__Divide_param_i8_u16
	.quad	_L_1+78099
	.quad	_A__uDivide_param_i8_u16
	.quad	_L_1+78119
	.quad	_A__Divide_var_i8_u16
	.quad	_L_1+78140
	.quad	_A__uDivide_var_i8_u16
	.quad	_L_1+78158
	.quad	_A__Divide_param_i8_u64
	.quad	_L_1+78177
	.quad	_A__uDivide_param_i8_u64
	.quad	_L_1+78197
	.quad	_A__Divide_var_i8_u64
	.quad	_L_1+78218
	.quad	_A__uDivide_var_i8_u64
	.quad	_L_1+78236
	.quad	_A__Divide_param_i8_L
	.quad	_L_1+78255
	.quad	_A__uDivide_param_i8_L
	.quad	_L_1+78273
	.quad	_A__Divide_var_i8_L
	.quad	_L_1+78292
	.quad	_A__uDivide_var_i8_L
	.quad	_L_1+78308
	.quad	_A__Divide_param_i8_i8
	.quad	_L_1+78325
	.quad	_A__uDivide_param_i8_i8
	.quad	_L_1+78344
	.quad	_A__Divide_var_i8_i8
	.quad	_L_1+78364
	.quad	_A__uDivide_var_i8_i8
	.quad	_L_1+78381
	.quad	_A__Divide_param_i8_u32
	.quad	_L_1+78399
	.quad	_A__uDivide_param_i8_u32
	.quad	_L_1+78419
	.quad	_A__Divide_var_i8_u32
	.quad	_L_1+78440
	.quad	_A__uDivide_var_i8_u32
	.quad	_L_1+78458
	.quad	_A__Divide_param_i8_C
	.quad	_L_1+78477
	.quad	_A__uDivide_param_i8_C
	.quad	_L_1+78495
	.quad	_A__Divide_var_i8_C
	.quad	_L_1+78514
	.quad	_A__uDivide_var_i8_C
	.quad	_L_1+78530
	.quad	_A__Divide_param_i8_u8
	.quad	_L_1+78547
	.quad	_A__uDivide_param_i8_u8
	.quad	_L_1+78566
	.quad	_A__Divide_var_i8_u8
	.quad	_L_1+78586
	.quad	_A__uDivide_var_i8_u8
	.quad	_L_1+78603
	.quad	_A__Divide_param_i8_I
	.quad	_L_1+78621
	.quad	_A__uDivide_param_i8_I
	.quad	_L_1+78639
	.quad	_A__Divide_var_i8_I
	.quad	_L_1+78658
	.quad	_A__uDivide_var_i8_I
	.quad	_L_1+78674
	.quad	_A__Divide_param_i8_i64
	.quad	_L_1+78691
	.quad	_A__uDivide_param_i8_i64
	.quad	_L_1+78711
	.quad	_A__Divide_var_i8_i64
	.quad	_L_1+78732
	.quad	_A__uDivide_var_i8_i64
	.quad	_L_1+78750
	.quad	_A__Divide_param_i8_LC
	.quad	_L_1+78769
	.quad	_A__uDivide_param_i8_LC
	.quad	_L_1+78788
	.quad	_A__Divide_var_i8_LC
	.quad	_L_1+78808
	.quad	_A__uDivide_var_i8_LC
	.quad	_L_1+78825
	.quad	_A__Divide_param_i8_i16
	.quad	_L_1+78843
	.quad	_A__uDivide_param_i8_i16
	.quad	_L_1+78863
	.quad	_A__Divide_var_i8_i16
	.quad	_L_1+78884
	.quad	_A__uDivide_var_i8_i16
	.quad	_L_1+78902
	.quad	_A__Divide_param_u32_i32
	.quad	_L_1+78921
	.quad	_A__uDivide_param_u32_i32
	.quad	_L_1+78942
	.quad	_A__Divide_var_u32_i32
	.quad	_L_1+78964
	.quad	_A__uDivide_var_u32_i32
	.quad	_L_1+78983
	.quad	_A__Divide_param_u32_u16
	.quad	_L_1+79003
	.quad	_A__uDivide_param_u32_u16
	.quad	_L_1+79024
	.quad	_A__Divide_var_u32_u16
	.quad	_L_1+79046
	.quad	_A__uDivide_var_u32_u16
	.quad	_L_1+79065
	.quad	_A__Divide_param_u32_u64
	.quad	_L_1+79085
	.quad	_A__uDivide_param_u32_u64
	.quad	_L_1+79106
	.quad	_A__Divide_var_u32_u64
	.quad	_L_1+79128
	.quad	_A__uDivide_var_u32_u64
	.quad	_L_1+79147
	.quad	_A__Divide_param_u32_L
	.quad	_L_1+79167
	.quad	_A__uDivide_param_u32_L
	.quad	_L_1+79186
	.quad	_A__Divide_var_u32_L
	.quad	_L_1+79206
	.quad	_A__uDivide_var_u32_L
	.quad	_L_1+79223
	.quad	_A__Divide_param_u32_i8
	.quad	_L_1+79241
	.quad	_A__uDivide_param_u32_i8
	.quad	_L_1+79261
	.quad	_A__Divide_var_u32_i8
	.quad	_L_1+79282
	.quad	_A__uDivide_var_u32_i8
	.quad	_L_1+79300
	.quad	_A__Divide_param_u32_u32
	.quad	_L_1+79319
	.quad	_A__uDivide_param_u32_u32
	.quad	_L_1+79340
	.quad	_A__Divide_var_u32_u32
	.quad	_L_1+79362
	.quad	_A__uDivide_var_u32_u32
	.quad	_L_1+79381
	.quad	_A__Divide_param_u32_C
	.quad	_L_1+79401
	.quad	_A__uDivide_param_u32_C
	.quad	_L_1+79420
	.quad	_A__Divide_var_u32_C
	.quad	_L_1+79440
	.quad	_A__uDivide_var_u32_C
	.quad	_L_1+79457
	.quad	_A__Divide_param_u32_u8
	.quad	_L_1+79475
	.quad	_A__uDivide_param_u32_u8
	.quad	_L_1+79495
	.quad	_A__Divide_var_u32_u8
	.quad	_L_1+79516
	.quad	_A__uDivide_var_u32_u8
	.quad	_L_1+79534
	.quad	_A__Divide_param_u32_I
	.quad	_L_1+79553
	.quad	_A__uDivide_param_u32_I
	.quad	_L_1+79572
	.quad	_A__Divide_var_u32_I
	.quad	_L_1+79592
	.quad	_A__uDivide_var_u32_I
	.quad	_L_1+79609
	.quad	_A__Divide_param_u32_i64
	.quad	_L_1+79627
	.quad	_A__uDivide_param_u32_i64
	.quad	_L_1+79648
	.quad	_A__Divide_var_u32_i64
	.quad	_L_1+79670
	.quad	_A__uDivide_var_u32_i64
	.quad	_L_1+79689
	.quad	_A__Divide_param_u32_LC
	.quad	_L_1+79709
	.quad	_A__uDivide_param_u32_LC
	.quad	_L_1+79729
	.quad	_A__Divide_var_u32_LC
	.quad	_L_1+79750
	.quad	_A__uDivide_var_u32_LC
	.quad	_L_1+79768
	.quad	_A__Divide_param_u32_i16
	.quad	_L_1+79787
	.quad	_A__uDivide_param_u32_i16
	.quad	_L_1+79808
	.quad	_A__Divide_var_u32_i16
	.quad	_L_1+79830
	.quad	_A__uDivide_var_u32_i16
	.quad	_L_1+79849
	.quad	_A__Divide_param_f32_f32
	.quad	_L_1+79869
	.quad	_A__Divide_var_f32_f32
	.quad	_L_1+79890
	.quad	_A__Divide_param_C_i32
	.quad	_L_1+79909
	.quad	_A__uDivide_param_C_i32
	.quad	_L_1+79928
	.quad	_A__Divide_var_C_i32
	.quad	_L_1+79948
	.quad	_A__uDivide_var_C_i32
	.quad	_L_1+79965
	.quad	_A__Divide_param_C_u16
	.quad	_L_1+79983
	.quad	_A__uDivide_param_C_u16
	.quad	_L_1+80002
	.quad	_A__Divide_var_C_u16
	.quad	_L_1+80022
	.quad	_A__uDivide_var_C_u16
	.quad	_L_1+80039
	.quad	_A__Divide_param_C_u64
	.quad	_L_1+80057
	.quad	_A__uDivide_param_C_u64
	.quad	_L_1+80076
	.quad	_A__Divide_var_C_u64
	.quad	_L_1+80096
	.quad	_A__uDivide_var_C_u64
	.quad	_L_1+80113
	.quad	_A__Divide_param_C_L
	.quad	_L_1+80131
	.quad	_A__uDivide_param_C_L
	.quad	_L_1+80148
	.quad	_A__Divide_var_C_L
	.quad	_L_1+80166
	.quad	_A__uDivide_var_C_L
	.quad	_L_1+80181
	.quad	_A__Divide_param_C_i8
	.quad	_L_1+80197
	.quad	_A__uDivide_param_C_i8
	.quad	_L_1+80215
	.quad	_A__Divide_var_C_i8
	.quad	_L_1+80234
	.quad	_A__uDivide_var_C_i8
	.quad	_L_1+80250
	.quad	_A__Divide_param_C_u32
	.quad	_L_1+80267
	.quad	_A__uDivide_param_C_u32
	.quad	_L_1+80286
	.quad	_A__Divide_var_C_u32
	.quad	_L_1+80306
	.quad	_A__uDivide_var_C_u32
	.quad	_L_1+80323
	.quad	_A__Divide_param_C_C
	.quad	_L_1+80341
	.quad	_A__uDivide_param_C_C
	.quad	_L_1+80358
	.quad	_A__Divide_var_C_C
	.quad	_L_1+80376
	.quad	_A__uDivide_var_C_C
	.quad	_L_1+80391
	.quad	_A__Divide_param_C_u8
	.quad	_L_1+80407
	.quad	_A__uDivide_param_C_u8
	.quad	_L_1+80425
	.quad	_A__Divide_var_C_u8
	.quad	_L_1+80444
	.quad	_A__uDivide_var_C_u8
	.quad	_L_1+80460
	.quad	_A__Divide_param_C_I
	.quad	_L_1+80477
	.quad	_A__uDivide_param_C_I
	.quad	_L_1+80494
	.quad	_A__Divide_var_C_I
	.quad	_L_1+80512
	.quad	_A__uDivide_var_C_I
	.quad	_L_1+80527
	.quad	_A__Divide_param_C_i64
	.quad	_L_1+80543
	.quad	_A__uDivide_param_C_i64
	.quad	_L_1+80562
	.quad	_A__Divide_var_C_i64
	.quad	_L_1+80582
	.quad	_A__uDivide_var_C_i64
	.quad	_L_1+80599
	.quad	_A__Divide_param_C_LC
	.quad	_L_1+80617
	.quad	_A__uDivide_param_C_LC
	.quad	_L_1+80635
	.quad	_A__Divide_var_C_LC
	.quad	_L_1+80654
	.quad	_A__uDivide_var_C_LC
	.quad	_L_1+80670
	.quad	_A__Divide_param_C_i16
	.quad	_L_1+80687
	.quad	_A__uDivide_param_C_i16
	.quad	_L_1+80706
	.quad	_A__Divide_var_C_i16
	.quad	_L_1+80726
	.quad	_A__uDivide_var_C_i16
	.quad	_L_1+80743
	.quad	_A__Divide_param_u8_i32
	.quad	_L_1+80761
	.quad	_A__uDivide_param_u8_i32
	.quad	_L_1+80781
	.quad	_A__Divide_var_u8_i32
	.quad	_L_1+80802
	.quad	_A__uDivide_var_u8_i32
	.quad	_L_1+80820
	.quad	_A__Divide_param_u8_u16
	.quad	_L_1+80839
	.quad	_A__uDivide_param_u8_u16
	.quad	_L_1+80859
	.quad	_A__Divide_var_u8_u16
	.quad	_L_1+80880
	.quad	_A__uDivide_var_u8_u16
	.quad	_L_1+80898
	.quad	_A__Divide_param_u8_u64
	.quad	_L_1+80917
	.quad	_A__uDivide_param_u8_u64
	.quad	_L_1+80937
	.quad	_A__Divide_var_u8_u64
	.quad	_L_1+80958
	.quad	_A__uDivide_var_u8_u64
	.quad	_L_1+80976
	.quad	_A__Divide_param_u8_L
	.quad	_L_1+80995
	.quad	_A__uDivide_param_u8_L
	.quad	_L_1+81013
	.quad	_A__Divide_var_u8_L
	.quad	_L_1+81032
	.quad	_A__uDivide_var_u8_L
	.quad	_L_1+81048
	.quad	_A__Divide_param_u8_i8
	.quad	_L_1+81065
	.quad	_A__uDivide_param_u8_i8
	.quad	_L_1+81084
	.quad	_A__Divide_var_u8_i8
	.quad	_L_1+81104
	.quad	_A__uDivide_var_u8_i8
	.quad	_L_1+81121
	.quad	_A__Divide_param_u8_u32
	.quad	_L_1+81139
	.quad	_A__uDivide_param_u8_u32
	.quad	_L_1+81159
	.quad	_A__Divide_var_u8_u32
	.quad	_L_1+81180
	.quad	_A__uDivide_var_u8_u32
	.quad	_L_1+81198
	.quad	_A__Divide_param_u8_C
	.quad	_L_1+81217
	.quad	_A__uDivide_param_u8_C
	.quad	_L_1+81235
	.quad	_A__Divide_var_u8_C
	.quad	_L_1+81254
	.quad	_A__uDivide_var_u8_C
	.quad	_L_1+81270
	.quad	_A__Divide_param_u8_u8
	.quad	_L_1+81287
	.quad	_A__uDivide_param_u8_u8
	.quad	_L_1+81306
	.quad	_A__Divide_var_u8_u8
	.quad	_L_1+81326
	.quad	_A__uDivide_var_u8_u8
	.quad	_L_1+81343
	.quad	_A__Divide_param_u8_I
	.quad	_L_1+81361
	.quad	_A__uDivide_param_u8_I
	.quad	_L_1+81379
	.quad	_A__Divide_var_u8_I
	.quad	_L_1+81398
	.quad	_A__uDivide_var_u8_I
	.quad	_L_1+81414
	.quad	_A__Divide_param_u8_i64
	.quad	_L_1+81431
	.quad	_A__uDivide_param_u8_i64
	.quad	_L_1+81451
	.quad	_A__Divide_var_u8_i64
	.quad	_L_1+81472
	.quad	_A__uDivide_var_u8_i64
	.quad	_L_1+81490
	.quad	_A__Divide_param_u8_LC
	.quad	_L_1+81509
	.quad	_A__uDivide_param_u8_LC
	.quad	_L_1+81528
	.quad	_A__Divide_var_u8_LC
	.quad	_L_1+81548
	.quad	_A__uDivide_var_u8_LC
	.quad	_L_1+81565
	.quad	_A__Divide_param_u8_i16
	.quad	_L_1+81583
	.quad	_A__uDivide_param_u8_i16
	.quad	_L_1+81603
	.quad	_A__Divide_var_u8_i16
	.quad	_L_1+81624
	.quad	_A__uDivide_var_u8_i16
	.quad	_L_1+81642
	.quad	_A__Divide_param_I_i32
	.quad	_L_1+81661
	.quad	_A__uDivide_param_I_i32
	.quad	_L_1+81680
	.quad	_A__Divide_var_I_i32
	.quad	_L_1+81700
	.quad	_A__uDivide_var_I_i32
	.quad	_L_1+81717
	.quad	_A__Divide_param_I_u16
	.quad	_L_1+81735
	.quad	_A__uDivide_param_I_u16
	.quad	_L_1+81754
	.quad	_A__Divide_var_I_u16
	.quad	_L_1+81774
	.quad	_A__uDivide_var_I_u16
	.quad	_L_1+81791
	.quad	_A__Divide_param_I_u64
	.quad	_L_1+81809
	.quad	_A__uDivide_param_I_u64
	.quad	_L_1+81828
	.quad	_A__Divide_var_I_u64
	.quad	_L_1+81848
	.quad	_A__uDivide_var_I_u64
	.quad	_L_1+81865
	.quad	_A__Divide_param_I_L
	.quad	_L_1+81883
	.quad	_A__uDivide_param_I_L
	.quad	_L_1+81900
	.quad	_A__Divide_var_I_L
	.quad	_L_1+81918
	.quad	_A__uDivide_var_I_L
	.quad	_L_1+81933
	.quad	_A__Divide_param_I_i8
	.quad	_L_1+81949
	.quad	_A__uDivide_param_I_i8
	.quad	_L_1+81967
	.quad	_A__Divide_var_I_i8
	.quad	_L_1+81986
	.quad	_A__uDivide_var_I_i8
	.quad	_L_1+82002
	.quad	_A__Divide_param_I_u32
	.quad	_L_1+82019
	.quad	_A__uDivide_param_I_u32
	.quad	_L_1+82038
	.quad	_A__Divide_var_I_u32
	.quad	_L_1+82058
	.quad	_A__uDivide_var_I_u32
	.quad	_L_1+82075
	.quad	_A__Divide_param_I_C
	.quad	_L_1+82093
	.quad	_A__uDivide_param_I_C
	.quad	_L_1+82110
	.quad	_A__Divide_var_I_C
	.quad	_L_1+82128
	.quad	_A__uDivide_var_I_C
	.quad	_L_1+82143
	.quad	_A__Divide_param_I_u8
	.quad	_L_1+82159
	.quad	_A__uDivide_param_I_u8
	.quad	_L_1+82177
	.quad	_A__Divide_var_I_u8
	.quad	_L_1+82196
	.quad	_A__uDivide_var_I_u8
	.quad	_L_1+82212
	.quad	_A__Divide_param_I_I
	.quad	_L_1+82229
	.quad	_A__uDivide_param_I_I
	.quad	_L_1+82246
	.quad	_A__Divide_var_I_I
	.quad	_L_1+82264
	.quad	_A__uDivide_var_I_I
	.quad	_L_1+82279
	.quad	_A__Divide_param_I_i64
	.quad	_L_1+82295
	.quad	_A__uDivide_param_I_i64
	.quad	_L_1+82314
	.quad	_A__Divide_var_I_i64
	.quad	_L_1+82334
	.quad	_A__uDivide_var_I_i64
	.quad	_L_1+82351
	.quad	_A__Divide_param_I_LC
	.quad	_L_1+82369
	.quad	_A__uDivide_param_I_LC
	.quad	_L_1+82387
	.quad	_A__Divide_var_I_LC
	.quad	_L_1+82406
	.quad	_A__uDivide_var_I_LC
	.quad	_L_1+82422
	.quad	_A__Divide_param_I_i16
	.quad	_L_1+82439
	.quad	_A__uDivide_param_I_i16
	.quad	_L_1+82458
	.quad	_A__Divide_var_I_i16
	.quad	_L_1+82478
	.quad	_A__uDivide_var_I_i16
	.quad	_L_1+82495
	.quad	_A__Divide_param_i64_i32
	.quad	_L_1+82513
	.quad	_A__uDivide_param_i64_i32
	.quad	_L_1+82534
	.quad	_A__Divide_var_i64_i32
	.quad	_L_1+82556
	.quad	_A__uDivide_var_i64_i32
	.quad	_L_1+82575
	.quad	_A__Divide_param_i64_u16
	.quad	_L_1+82595
	.quad	_A__uDivide_param_i64_u16
	.quad	_L_1+82616
	.quad	_A__Divide_var_i64_u16
	.quad	_L_1+82638
	.quad	_A__uDivide_var_i64_u16
	.quad	_L_1+82657
	.quad	_A__Divide_param_i64_u64
	.quad	_L_1+82677
	.quad	_A__uDivide_param_i64_u64
	.quad	_L_1+82698
	.quad	_A__Divide_var_i64_u64
	.quad	_L_1+82720
	.quad	_A__uDivide_var_i64_u64
	.quad	_L_1+82739
	.quad	_A__Divide_param_i64_L
	.quad	_L_1+82759
	.quad	_A__uDivide_param_i64_L
	.quad	_L_1+82778
	.quad	_A__Divide_var_i64_L
	.quad	_L_1+82798
	.quad	_A__uDivide_var_i64_L
	.quad	_L_1+82815
	.quad	_A__Divide_param_i64_i8
	.quad	_L_1+82833
	.quad	_A__uDivide_param_i64_i8
	.quad	_L_1+82853
	.quad	_A__Divide_var_i64_i8
	.quad	_L_1+82874
	.quad	_A__uDivide_var_i64_i8
	.quad	_L_1+82892
	.quad	_A__Divide_param_i64_u32
	.quad	_L_1+82911
	.quad	_A__uDivide_param_i64_u32
	.quad	_L_1+82932
	.quad	_A__Divide_var_i64_u32
	.quad	_L_1+82954
	.quad	_A__uDivide_var_i64_u32
	.quad	_L_1+82973
	.quad	_A__Divide_param_i64_C
	.quad	_L_1+82993
	.quad	_A__uDivide_param_i64_C
	.quad	_L_1+83012
	.quad	_A__Divide_var_i64_C
	.quad	_L_1+83032
	.quad	_A__uDivide_var_i64_C
	.quad	_L_1+83049
	.quad	_A__Divide_param_i64_u8
	.quad	_L_1+83067
	.quad	_A__uDivide_param_i64_u8
	.quad	_L_1+83087
	.quad	_A__Divide_var_i64_u8
	.quad	_L_1+83108
	.quad	_A__uDivide_var_i64_u8
	.quad	_L_1+83126
	.quad	_A__Divide_param_i64_I
	.quad	_L_1+83145
	.quad	_A__uDivide_param_i64_I
	.quad	_L_1+83164
	.quad	_A__Divide_var_i64_I
	.quad	_L_1+83184
	.quad	_A__uDivide_var_i64_I
	.quad	_L_1+83201
	.quad	_A__Divide_param_i64_i64
	.quad	_L_1+83219
	.quad	_A__uDivide_param_i64_i64
	.quad	_L_1+83240
	.quad	_A__Divide_var_i64_i64
	.quad	_L_1+83262
	.quad	_A__uDivide_var_i64_i64
	.quad	_L_1+83281
	.quad	_A__Divide_param_i64_LC
	.quad	_L_1+83301
	.quad	_A__uDivide_param_i64_LC
	.quad	_L_1+83321
	.quad	_A__Divide_var_i64_LC
	.quad	_L_1+83342
	.quad	_A__uDivide_var_i64_LC
	.quad	_L_1+83360
	.quad	_A__Divide_param_i64_i16
	.quad	_L_1+83379
	.quad	_A__uDivide_param_i64_i16
	.quad	_L_1+83400
	.quad	_A__Divide_var_i64_i16
	.quad	_L_1+83422
	.quad	_A__uDivide_var_i64_i16
	.quad	_L_1+83441
	.quad	_A__Divide_param_f64_f64
	.quad	_L_1+83461
	.quad	_A__Divide_var_f64_f64
	.quad	_L_1+83482
	.quad	_A__Divide_param_LC_i32
	.quad	_L_1+83501
	.quad	_A__uDivide_param_LC_i32
	.quad	_L_1+83521
	.quad	_A__Divide_var_LC_i32
	.quad	_L_1+83542
	.quad	_A__uDivide_var_LC_i32
	.quad	_L_1+83560
	.quad	_A__Divide_param_LC_u16
	.quad	_L_1+83579
	.quad	_A__uDivide_param_LC_u16
	.quad	_L_1+83599
	.quad	_A__Divide_var_LC_u16
	.quad	_L_1+83620
	.quad	_A__uDivide_var_LC_u16
	.quad	_L_1+83638
	.quad	_A__Divide_param_LC_u64
	.quad	_L_1+83657
	.quad	_A__uDivide_param_LC_u64
	.quad	_L_1+83677
	.quad	_A__Divide_var_LC_u64
	.quad	_L_1+83698
	.quad	_A__uDivide_var_LC_u64
	.quad	_L_1+83716
	.quad	_A__Divide_param_LC_L
	.quad	_L_1+83735
	.quad	_A__uDivide_param_LC_L
	.quad	_L_1+83753
	.quad	_A__Divide_var_LC_L
	.quad	_L_1+83772
	.quad	_A__uDivide_var_LC_L
	.quad	_L_1+83788
	.quad	_A__Divide_param_LC_i8
	.quad	_L_1+83805
	.quad	_A__uDivide_param_LC_i8
	.quad	_L_1+83824
	.quad	_A__Divide_var_LC_i8
	.quad	_L_1+83844
	.quad	_A__uDivide_var_LC_i8
	.quad	_L_1+83861
	.quad	_A__Divide_param_LC_u32
	.quad	_L_1+83879
	.quad	_A__uDivide_param_LC_u32
	.quad	_L_1+83899
	.quad	_A__Divide_var_LC_u32
	.quad	_L_1+83920
	.quad	_A__uDivide_var_LC_u32
	.quad	_L_1+83938
	.quad	_A__Divide_param_LC_C
	.quad	_L_1+83957
	.quad	_A__uDivide_param_LC_C
	.quad	_L_1+83975
	.quad	_A__Divide_var_LC_C
	.quad	_L_1+83994
	.quad	_A__uDivide_var_LC_C
	.quad	_L_1+84010
	.quad	_A__Divide_param_LC_u8
	.quad	_L_1+84027
	.quad	_A__uDivide_param_LC_u8
	.quad	_L_1+84046
	.quad	_A__Divide_var_LC_u8
	.quad	_L_1+84066
	.quad	_A__uDivide_var_LC_u8
	.quad	_L_1+84083
	.quad	_A__Divide_param_LC_I
	.quad	_L_1+84101
	.quad	_A__uDivide_param_LC_I
	.quad	_L_1+84119
	.quad	_A__Divide_var_LC_I
	.quad	_L_1+84138
	.quad	_A__uDivide_var_LC_I
	.quad	_L_1+84154
	.quad	_A__Divide_param_LC_i64
	.quad	_L_1+84171
	.quad	_A__uDivide_param_LC_i64
	.quad	_L_1+84191
	.quad	_A__Divide_var_LC_i64
	.quad	_L_1+84212
	.quad	_A__uDivide_var_LC_i64
	.quad	_L_1+84230
	.quad	_A__Divide_param_LC_LC
	.quad	_L_1+84249
	.quad	_A__uDivide_param_LC_LC
	.quad	_L_1+84268
	.quad	_A__Divide_var_LC_LC
	.quad	_L_1+84288
	.quad	_A__uDivide_var_LC_LC
	.quad	_L_1+84305
	.quad	_A__Divide_param_LC_i16
	.quad	_L_1+84323
	.quad	_A__uDivide_param_LC_i16
	.quad	_L_1+84343
	.quad	_A__Divide_var_LC_i16
	.quad	_L_1+84364
	.quad	_A__uDivide_var_LC_i16
	.quad	_L_1+84382
	.quad	_A__Divide_param_i16_i32
	.quad	_L_1+84401
	.quad	_A__uDivide_param_i16_i32
	.quad	_L_1+84422
	.quad	_A__Divide_var_i16_i32
	.quad	_L_1+84444
	.quad	_A__uDivide_var_i16_i32
	.quad	_L_1+84463
	.quad	_A__Divide_param_i16_u16
	.quad	_L_1+84483
	.quad	_A__uDivide_param_i16_u16
	.quad	_L_1+84504
	.quad	_A__Divide_var_i16_u16
	.quad	_L_1+84526
	.quad	_A__uDivide_var_i16_u16
	.quad	_L_1+84545
	.quad	_A__Divide_param_i16_u64
	.quad	_L_1+84565
	.quad	_A__uDivide_param_i16_u64
	.quad	_L_1+84586
	.quad	_A__Divide_var_i16_u64
	.quad	_L_1+84608
	.quad	_A__uDivide_var_i16_u64
	.quad	_L_1+84627
	.quad	_A__Divide_param_i16_L
	.quad	_L_1+84647
	.quad	_A__uDivide_param_i16_L
	.quad	_L_1+84666
	.quad	_A__Divide_var_i16_L
	.quad	_L_1+84686
	.quad	_A__uDivide_var_i16_L
	.quad	_L_1+84703
	.quad	_A__Divide_param_i16_i8
	.quad	_L_1+84721
	.quad	_A__uDivide_param_i16_i8
	.quad	_L_1+84741
	.quad	_A__Divide_var_i16_i8
	.quad	_L_1+84762
	.quad	_A__uDivide_var_i16_i8
	.quad	_L_1+84780
	.quad	_A__Divide_param_i16_u32
	.quad	_L_1+84799
	.quad	_A__uDivide_param_i16_u32
	.quad	_L_1+84820
	.quad	_A__Divide_var_i16_u32
	.quad	_L_1+84842
	.quad	_A__uDivide_var_i16_u32
	.quad	_L_1+84861
	.quad	_A__Divide_param_i16_C
	.quad	_L_1+84881
	.quad	_A__uDivide_param_i16_C
	.quad	_L_1+84900
	.quad	_A__Divide_var_i16_C
	.quad	_L_1+84920
	.quad	_A__uDivide_var_i16_C
	.quad	_L_1+84937
	.quad	_A__Divide_param_i16_u8
	.quad	_L_1+84955
	.quad	_A__uDivide_param_i16_u8
	.quad	_L_1+84975
	.quad	_A__Divide_var_i16_u8
	.quad	_L_1+84996
	.quad	_A__uDivide_var_i16_u8
	.quad	_L_1+85014
	.quad	_A__Divide_param_i16_I
	.quad	_L_1+85033
	.quad	_A__uDivide_param_i16_I
	.quad	_L_1+85052
	.quad	_A__Divide_var_i16_I
	.quad	_L_1+85072
	.quad	_A__uDivide_var_i16_I
	.quad	_L_1+85089
	.quad	_A__Divide_param_i16_i64
	.quad	_L_1+85107
	.quad	_A__uDivide_param_i16_i64
	.quad	_L_1+85128
	.quad	_A__Divide_var_i16_i64
	.quad	_L_1+85150
	.quad	_A__uDivide_var_i16_i64
	.quad	_L_1+85169
	.quad	_A__Divide_param_i16_LC
	.quad	_L_1+85189
	.quad	_A__uDivide_param_i16_LC
	.quad	_L_1+85209
	.quad	_A__Divide_var_i16_LC
	.quad	_L_1+85230
	.quad	_A__uDivide_var_i16_LC
	.quad	_L_1+85248
	.quad	_A__Divide_param_i16_i16
	.quad	_L_1+85267
	.quad	_A__uDivide_param_i16_i16
	.quad	_L_1+85288
	.quad	_A__Divide_var_i16_i16
	.quad	_L_1+85310
	.quad	_A__uDivide_var_i16_i16
	.quad	_L_1+85329
	.quad	_A__Minus_param_i32_i32
	.quad	_L_1+85349
	.quad	_A__uMinus_param_i32_i32
	.quad	_L_1+85369
	.quad	_A__Minus_var_i32_i32
	.quad	_L_1+85390
	.quad	_A__uMinus_var_i32_i32
	.quad	_L_1+85408
	.quad	_A__Minus_param_i32_u16
	.quad	_L_1+85427
	.quad	_A__uMinus_param_i32_u16
	.quad	_L_1+85447
	.quad	_A__Minus_var_i32_u16
	.quad	_L_1+85468
	.quad	_A__uMinus_var_i32_u16
	.quad	_L_1+85486
	.quad	_A__Minus_param_i32_u64
	.quad	_L_1+85505
	.quad	_A__uMinus_param_i32_u64
	.quad	_L_1+85525
	.quad	_A__Minus_var_i32_u64
	.quad	_L_1+85546
	.quad	_A__uMinus_var_i32_u64
	.quad	_L_1+85564
	.quad	_A__Minus_param_i32_L
	.quad	_L_1+85583
	.quad	_A__uMinus_param_i32_L
	.quad	_L_1+85601
	.quad	_A__Minus_var_i32_L
	.quad	_L_1+85620
	.quad	_A__uMinus_var_i32_L
	.quad	_L_1+85636
	.quad	_A__Minus_param_i32_i8
	.quad	_L_1+85653
	.quad	_A__uMinus_param_i32_i8
	.quad	_L_1+85672
	.quad	_A__Minus_var_i32_i8
	.quad	_L_1+85692
	.quad	_A__uMinus_var_i32_i8
	.quad	_L_1+85709
	.quad	_A__Minus_param_i32_u32
	.quad	_L_1+85727
	.quad	_A__uMinus_param_i32_u32
	.quad	_L_1+85747
	.quad	_A__Minus_var_i32_u32
	.quad	_L_1+85768
	.quad	_A__uMinus_var_i32_u32
	.quad	_L_1+85786
	.quad	_A__Minus_param_i32_C
	.quad	_L_1+85805
	.quad	_A__uMinus_param_i32_C
	.quad	_L_1+85823
	.quad	_A__Minus_var_i32_C
	.quad	_L_1+85842
	.quad	_A__uMinus_var_i32_C
	.quad	_L_1+85858
	.quad	_A__Minus_param_i32_u8
	.quad	_L_1+85875
	.quad	_A__uMinus_param_i32_u8
	.quad	_L_1+85894
	.quad	_A__Minus_var_i32_u8
	.quad	_L_1+85914
	.quad	_A__uMinus_var_i32_u8
	.quad	_L_1+85931
	.quad	_A__Minus_param_i32_I
	.quad	_L_1+85949
	.quad	_A__uMinus_param_i32_I
	.quad	_L_1+85967
	.quad	_A__Minus_var_i32_I
	.quad	_L_1+85986
	.quad	_A__uMinus_var_i32_I
	.quad	_L_1+86002
	.quad	_A__Minus_param_i32_i64
	.quad	_L_1+86019
	.quad	_A__uMinus_param_i32_i64
	.quad	_L_1+86039
	.quad	_A__Minus_var_i32_i64
	.quad	_L_1+86060
	.quad	_A__uMinus_var_i32_i64
	.quad	_L_1+86078
	.quad	_A__Minus_param_i32_LC
	.quad	_L_1+86097
	.quad	_A__uMinus_param_i32_LC
	.quad	_L_1+86116
	.quad	_A__Minus_var_i32_LC
	.quad	_L_1+86136
	.quad	_A__uMinus_var_i32_LC
	.quad	_L_1+86153
	.quad	_A__Minus_param_i32_i16
	.quad	_L_1+86171
	.quad	_A__uMinus_param_i32_i16
	.quad	_L_1+86191
	.quad	_A__Minus_var_i32_i16
	.quad	_L_1+86212
	.quad	_A__uMinus_var_i32_i16
	.quad	_L_1+86230
	.quad	_A__Minus_param_u16_i32
	.quad	_L_1+86249
	.quad	_A__uMinus_param_u16_i32
	.quad	_L_1+86269
	.quad	_A__Minus_var_u16_i32
	.quad	_L_1+86290
	.quad	_A__uMinus_var_u16_i32
	.quad	_L_1+86308
	.quad	_A__Minus_param_u16_u16
	.quad	_L_1+86327
	.quad	_A__uMinus_param_u16_u16
	.quad	_L_1+86347
	.quad	_A__Minus_var_u16_u16
	.quad	_L_1+86368
	.quad	_A__uMinus_var_u16_u16
	.quad	_L_1+86386
	.quad	_A__Minus_param_u16_u64
	.quad	_L_1+86405
	.quad	_A__uMinus_param_u16_u64
	.quad	_L_1+86425
	.quad	_A__Minus_var_u16_u64
	.quad	_L_1+86446
	.quad	_A__uMinus_var_u16_u64
	.quad	_L_1+86464
	.quad	_A__Minus_param_u16_L
	.quad	_L_1+86483
	.quad	_A__uMinus_param_u16_L
	.quad	_L_1+86501
	.quad	_A__Minus_var_u16_L
	.quad	_L_1+86520
	.quad	_A__uMinus_var_u16_L
	.quad	_L_1+86536
	.quad	_A__Minus_param_u16_i8
	.quad	_L_1+86553
	.quad	_A__uMinus_param_u16_i8
	.quad	_L_1+86572
	.quad	_A__Minus_var_u16_i8
	.quad	_L_1+86592
	.quad	_A__uMinus_var_u16_i8
	.quad	_L_1+86609
	.quad	_A__Minus_param_u16_u32
	.quad	_L_1+86627
	.quad	_A__uMinus_param_u16_u32
	.quad	_L_1+86647
	.quad	_A__Minus_var_u16_u32
	.quad	_L_1+86668
	.quad	_A__uMinus_var_u16_u32
	.quad	_L_1+86686
	.quad	_A__Minus_param_u16_C
	.quad	_L_1+86705
	.quad	_A__uMinus_param_u16_C
	.quad	_L_1+86723
	.quad	_A__Minus_var_u16_C
	.quad	_L_1+86742
	.quad	_A__uMinus_var_u16_C
	.quad	_L_1+86758
	.quad	_A__Minus_param_u16_u8
	.quad	_L_1+86775
	.quad	_A__uMinus_param_u16_u8
	.quad	_L_1+86794
	.quad	_A__Minus_var_u16_u8
	.quad	_L_1+86814
	.quad	_A__uMinus_var_u16_u8
	.quad	_L_1+86831
	.quad	_A__Minus_param_u16_I
	.quad	_L_1+86849
	.quad	_A__uMinus_param_u16_I
	.quad	_L_1+86867
	.quad	_A__Minus_var_u16_I
	.quad	_L_1+86886
	.quad	_A__uMinus_var_u16_I
	.quad	_L_1+86902
	.quad	_A__Minus_param_u16_i64
	.quad	_L_1+86919
	.quad	_A__uMinus_param_u16_i64
	.quad	_L_1+86939
	.quad	_A__Minus_var_u16_i64
	.quad	_L_1+86960
	.quad	_A__uMinus_var_u16_i64
	.quad	_L_1+86978
	.quad	_A__Minus_param_u16_LC
	.quad	_L_1+86997
	.quad	_A__uMinus_param_u16_LC
	.quad	_L_1+87016
	.quad	_A__Minus_var_u16_LC
	.quad	_L_1+87036
	.quad	_A__uMinus_var_u16_LC
	.quad	_L_1+87053
	.quad	_A__Minus_param_u16_i16
	.quad	_L_1+87071
	.quad	_A__uMinus_param_u16_i16
	.quad	_L_1+87091
	.quad	_A__Minus_var_u16_i16
	.quad	_L_1+87112
	.quad	_A__uMinus_var_u16_i16
	.quad	_L_1+87130
	.quad	_A__Minus_param_u64_i32
	.quad	_L_1+87149
	.quad	_A__uMinus_param_u64_i32
	.quad	_L_1+87169
	.quad	_A__Minus_var_u64_i32
	.quad	_L_1+87190
	.quad	_A__uMinus_var_u64_i32
	.quad	_L_1+87208
	.quad	_A__Minus_param_u64_u16
	.quad	_L_1+87227
	.quad	_A__uMinus_param_u64_u16
	.quad	_L_1+87247
	.quad	_A__Minus_var_u64_u16
	.quad	_L_1+87268
	.quad	_A__uMinus_var_u64_u16
	.quad	_L_1+87286
	.quad	_A__Minus_param_u64_u64
	.quad	_L_1+87305
	.quad	_A__uMinus_param_u64_u64
	.quad	_L_1+87325
	.quad	_A__Minus_var_u64_u64
	.quad	_L_1+87346
	.quad	_A__uMinus_var_u64_u64
	.quad	_L_1+87364
	.quad	_A__Minus_param_u64_L
	.quad	_L_1+87383
	.quad	_A__uMinus_param_u64_L
	.quad	_L_1+87401
	.quad	_A__Minus_var_u64_L
	.quad	_L_1+87420
	.quad	_A__uMinus_var_u64_L
	.quad	_L_1+87436
	.quad	_A__Minus_param_u64_i8
	.quad	_L_1+87453
	.quad	_A__uMinus_param_u64_i8
	.quad	_L_1+87472
	.quad	_A__Minus_var_u64_i8
	.quad	_L_1+87492
	.quad	_A__uMinus_var_u64_i8
	.quad	_L_1+87509
	.quad	_A__Minus_param_u64_u32
	.quad	_L_1+87527
	.quad	_A__uMinus_param_u64_u32
	.quad	_L_1+87547
	.quad	_A__Minus_var_u64_u32
	.quad	_L_1+87568
	.quad	_A__uMinus_var_u64_u32
	.quad	_L_1+87586
	.quad	_A__Minus_param_u64_C
	.quad	_L_1+87605
	.quad	_A__uMinus_param_u64_C
	.quad	_L_1+87623
	.quad	_A__Minus_var_u64_C
	.quad	_L_1+87642
	.quad	_A__uMinus_var_u64_C
	.quad	_L_1+87658
	.quad	_A__Minus_param_u64_u8
	.quad	_L_1+87675
	.quad	_A__uMinus_param_u64_u8
	.quad	_L_1+87694
	.quad	_A__Minus_var_u64_u8
	.quad	_L_1+87714
	.quad	_A__uMinus_var_u64_u8
	.quad	_L_1+87731
	.quad	_A__Minus_param_u64_I
	.quad	_L_1+87749
	.quad	_A__uMinus_param_u64_I
	.quad	_L_1+87767
	.quad	_A__Minus_var_u64_I
	.quad	_L_1+87786
	.quad	_A__uMinus_var_u64_I
	.quad	_L_1+87802
	.quad	_A__Minus_param_u64_i64
	.quad	_L_1+87819
	.quad	_A__uMinus_param_u64_i64
	.quad	_L_1+87839
	.quad	_A__Minus_var_u64_i64
	.quad	_L_1+87860
	.quad	_A__uMinus_var_u64_i64
	.quad	_L_1+87878
	.quad	_A__Minus_param_u64_LC
	.quad	_L_1+87897
	.quad	_A__uMinus_param_u64_LC
	.quad	_L_1+87916
	.quad	_A__Minus_var_u64_LC
	.quad	_L_1+87936
	.quad	_A__uMinus_var_u64_LC
	.quad	_L_1+87953
	.quad	_A__Minus_param_u64_i16
	.quad	_L_1+87971
	.quad	_A__uMinus_param_u64_i16
	.quad	_L_1+87991
	.quad	_A__Minus_var_u64_i16
	.quad	_L_1+88012
	.quad	_A__uMinus_var_u64_i16
	.quad	_L_1+88030
	.quad	_A__Minus_param_L_i32
	.quad	_L_1+88049
	.quad	_A__uMinus_param_L_i32
	.quad	_L_1+88067
	.quad	_A__Minus_var_L_i32
	.quad	_L_1+88086
	.quad	_A__uMinus_var_L_i32
	.quad	_L_1+88102
	.quad	_A__Minus_param_L_u16
	.quad	_L_1+88119
	.quad	_A__uMinus_param_L_u16
	.quad	_L_1+88137
	.quad	_A__Minus_var_L_u16
	.quad	_L_1+88156
	.quad	_A__uMinus_var_L_u16
	.quad	_L_1+88172
	.quad	_A__Minus_param_L_u64
	.quad	_L_1+88189
	.quad	_A__uMinus_param_L_u64
	.quad	_L_1+88207
	.quad	_A__Minus_var_L_u64
	.quad	_L_1+88226
	.quad	_A__uMinus_var_L_u64
	.quad	_L_1+88242
	.quad	_A__Minus_param_L_L
	.quad	_L_1+88259
	.quad	_A__uMinus_param_L_L
	.quad	_L_1+88275
	.quad	_A__Minus_var_L_L
	.quad	_L_1+88292
	.quad	_A__uMinus_var_L_L
	.quad	_L_1+88306
	.quad	_A__Minus_param_L_i8
	.quad	_L_1+88321
	.quad	_A__uMinus_param_L_i8
	.quad	_L_1+88338
	.quad	_A__Minus_var_L_i8
	.quad	_L_1+88356
	.quad	_A__uMinus_var_L_i8
	.quad	_L_1+88371
	.quad	_A__Minus_param_L_u32
	.quad	_L_1+88387
	.quad	_A__uMinus_param_L_u32
	.quad	_L_1+88405
	.quad	_A__Minus_var_L_u32
	.quad	_L_1+88424
	.quad	_A__uMinus_var_L_u32
	.quad	_L_1+88440
	.quad	_A__Minus_param_L_C
	.quad	_L_1+88457
	.quad	_A__uMinus_param_L_C
	.quad	_L_1+88473
	.quad	_A__Minus_var_L_C
	.quad	_L_1+88490
	.quad	_A__uMinus_var_L_C
	.quad	_L_1+88504
	.quad	_A__Minus_param_L_u8
	.quad	_L_1+88519
	.quad	_A__uMinus_param_L_u8
	.quad	_L_1+88536
	.quad	_A__Minus_var_L_u8
	.quad	_L_1+88554
	.quad	_A__uMinus_var_L_u8
	.quad	_L_1+88569
	.quad	_A__Minus_param_L_I
	.quad	_L_1+88585
	.quad	_A__uMinus_param_L_I
	.quad	_L_1+88601
	.quad	_A__Minus_var_L_I
	.quad	_L_1+88618
	.quad	_A__uMinus_var_L_I
	.quad	_L_1+88632
	.quad	_A__Minus_param_L_i64
	.quad	_L_1+88647
	.quad	_A__uMinus_param_L_i64
	.quad	_L_1+88665
	.quad	_A__Minus_var_L_i64
	.quad	_L_1+88684
	.quad	_A__uMinus_var_L_i64
	.quad	_L_1+88700
	.quad	_A__Minus_param_L_LC
	.quad	_L_1+88717
	.quad	_A__uMinus_param_L_LC
	.quad	_L_1+88734
	.quad	_A__Minus_var_L_LC
	.quad	_L_1+88752
	.quad	_A__uMinus_var_L_LC
	.quad	_L_1+88767
	.quad	_A__Minus_param_L_i16
	.quad	_L_1+88783
	.quad	_A__uMinus_param_L_i16
	.quad	_L_1+88801
	.quad	_A__Minus_var_L_i16
	.quad	_L_1+88820
	.quad	_A__uMinus_var_L_i16
	.quad	_L_1+88836
	.quad	_A__Minus_param_i8_i32
	.quad	_L_1+88853
	.quad	_A__uMinus_param_i8_i32
	.quad	_L_1+88872
	.quad	_A__Minus_var_i8_i32
	.quad	_L_1+88892
	.quad	_A__uMinus_var_i8_i32
	.quad	_L_1+88909
	.quad	_A__Minus_param_i8_u16
	.quad	_L_1+88927
	.quad	_A__uMinus_param_i8_u16
	.quad	_L_1+88946
	.quad	_A__Minus_var_i8_u16
	.quad	_L_1+88966
	.quad	_A__uMinus_var_i8_u16
	.quad	_L_1+88983
	.quad	_A__Minus_param_i8_u64
	.quad	_L_1+89001
	.quad	_A__uMinus_param_i8_u64
	.quad	_L_1+89020
	.quad	_A__Minus_var_i8_u64
	.quad	_L_1+89040
	.quad	_A__uMinus_var_i8_u64
	.quad	_L_1+89057
	.quad	_A__Minus_param_i8_L
	.quad	_L_1+89075
	.quad	_A__uMinus_param_i8_L
	.quad	_L_1+89092
	.quad	_A__Minus_var_i8_L
	.quad	_L_1+89110
	.quad	_A__uMinus_var_i8_L
	.quad	_L_1+89125
	.quad	_A__Minus_param_i8_i8
	.quad	_L_1+89141
	.quad	_A__uMinus_param_i8_i8
	.quad	_L_1+89159
	.quad	_A__Minus_var_i8_i8
	.quad	_L_1+89178
	.quad	_A__uMinus_var_i8_i8
	.quad	_L_1+89194
	.quad	_A__Minus_param_i8_u32
	.quad	_L_1+89211
	.quad	_A__uMinus_param_i8_u32
	.quad	_L_1+89230
	.quad	_A__Minus_var_i8_u32
	.quad	_L_1+89250
	.quad	_A__uMinus_var_i8_u32
	.quad	_L_1+89267
	.quad	_A__Minus_param_i8_C
	.quad	_L_1+89285
	.quad	_A__uMinus_param_i8_C
	.quad	_L_1+89302
	.quad	_A__Minus_var_i8_C
	.quad	_L_1+89320
	.quad	_A__uMinus_var_i8_C
	.quad	_L_1+89335
	.quad	_A__Minus_param_i8_u8
	.quad	_L_1+89351
	.quad	_A__uMinus_param_i8_u8
	.quad	_L_1+89369
	.quad	_A__Minus_var_i8_u8
	.quad	_L_1+89388
	.quad	_A__uMinus_var_i8_u8
	.quad	_L_1+89404
	.quad	_A__Minus_param_i8_I
	.quad	_L_1+89421
	.quad	_A__uMinus_param_i8_I
	.quad	_L_1+89438
	.quad	_A__Minus_var_i8_I
	.quad	_L_1+89456
	.quad	_A__uMinus_var_i8_I
	.quad	_L_1+89471
	.quad	_A__Minus_param_i8_i64
	.quad	_L_1+89487
	.quad	_A__uMinus_param_i8_i64
	.quad	_L_1+89506
	.quad	_A__Minus_var_i8_i64
	.quad	_L_1+89526
	.quad	_A__uMinus_var_i8_i64
	.quad	_L_1+89543
	.quad	_A__Minus_param_i8_LC
	.quad	_L_1+89561
	.quad	_A__uMinus_param_i8_LC
	.quad	_L_1+89579
	.quad	_A__Minus_var_i8_LC
	.quad	_L_1+89598
	.quad	_A__uMinus_var_i8_LC
	.quad	_L_1+89614
	.quad	_A__Minus_param_i8_i16
	.quad	_L_1+89631
	.quad	_A__uMinus_param_i8_i16
	.quad	_L_1+89650
	.quad	_A__Minus_var_i8_i16
	.quad	_L_1+89670
	.quad	_A__uMinus_var_i8_i16
	.quad	_L_1+89687
	.quad	_A__Minus_param_u32_i32
	.quad	_L_1+89705
	.quad	_A__uMinus_param_u32_i32
	.quad	_L_1+89725
	.quad	_A__Minus_var_u32_i32
	.quad	_L_1+89746
	.quad	_A__uMinus_var_u32_i32
	.quad	_L_1+89764
	.quad	_A__Minus_param_u32_u16
	.quad	_L_1+89783
	.quad	_A__uMinus_param_u32_u16
	.quad	_L_1+89803
	.quad	_A__Minus_var_u32_u16
	.quad	_L_1+89824
	.quad	_A__uMinus_var_u32_u16
	.quad	_L_1+89842
	.quad	_A__Minus_param_u32_u64
	.quad	_L_1+89861
	.quad	_A__uMinus_param_u32_u64
	.quad	_L_1+89881
	.quad	_A__Minus_var_u32_u64
	.quad	_L_1+89902
	.quad	_A__uMinus_var_u32_u64
	.quad	_L_1+89920
	.quad	_A__Minus_param_u32_L
	.quad	_L_1+89939
	.quad	_A__uMinus_param_u32_L
	.quad	_L_1+89957
	.quad	_A__Minus_var_u32_L
	.quad	_L_1+89976
	.quad	_A__uMinus_var_u32_L
	.quad	_L_1+89992
	.quad	_A__Minus_param_u32_i8
	.quad	_L_1+90009
	.quad	_A__uMinus_param_u32_i8
	.quad	_L_1+90028
	.quad	_A__Minus_var_u32_i8
	.quad	_L_1+90048
	.quad	_A__uMinus_var_u32_i8
	.quad	_L_1+90065
	.quad	_A__Minus_param_u32_u32
	.quad	_L_1+90083
	.quad	_A__uMinus_param_u32_u32
	.quad	_L_1+90103
	.quad	_A__Minus_var_u32_u32
	.quad	_L_1+90124
	.quad	_A__uMinus_var_u32_u32
	.quad	_L_1+90142
	.quad	_A__Minus_param_u32_C
	.quad	_L_1+90161
	.quad	_A__uMinus_param_u32_C
	.quad	_L_1+90179
	.quad	_A__Minus_var_u32_C
	.quad	_L_1+90198
	.quad	_A__uMinus_var_u32_C
	.quad	_L_1+90214
	.quad	_A__Minus_param_u32_u8
	.quad	_L_1+90231
	.quad	_A__uMinus_param_u32_u8
	.quad	_L_1+90250
	.quad	_A__Minus_var_u32_u8
	.quad	_L_1+90270
	.quad	_A__uMinus_var_u32_u8
	.quad	_L_1+90287
	.quad	_A__Minus_param_u32_I
	.quad	_L_1+90305
	.quad	_A__uMinus_param_u32_I
	.quad	_L_1+90323
	.quad	_A__Minus_var_u32_I
	.quad	_L_1+90342
	.quad	_A__uMinus_var_u32_I
	.quad	_L_1+90358
	.quad	_A__Minus_param_u32_i64
	.quad	_L_1+90375
	.quad	_A__uMinus_param_u32_i64
	.quad	_L_1+90395
	.quad	_A__Minus_var_u32_i64
	.quad	_L_1+90416
	.quad	_A__uMinus_var_u32_i64
	.quad	_L_1+90434
	.quad	_A__Minus_param_u32_LC
	.quad	_L_1+90453
	.quad	_A__uMinus_param_u32_LC
	.quad	_L_1+90472
	.quad	_A__Minus_var_u32_LC
	.quad	_L_1+90492
	.quad	_A__uMinus_var_u32_LC
	.quad	_L_1+90509
	.quad	_A__Minus_param_u32_i16
	.quad	_L_1+90527
	.quad	_A__uMinus_param_u32_i16
	.quad	_L_1+90547
	.quad	_A__Minus_var_u32_i16
	.quad	_L_1+90568
	.quad	_A__uMinus_var_u32_i16
	.quad	_L_1+90586
	.quad	_A__Minus_param_f32_f32
	.quad	_L_1+90605
	.quad	_A__Minus_var_f32_f32
	.quad	_L_1+90625
	.quad	_A__Minus_param_C_i32
	.quad	_L_1+90643
	.quad	_A__uMinus_param_C_i32
	.quad	_L_1+90661
	.quad	_A__Minus_var_C_i32
	.quad	_L_1+90680
	.quad	_A__uMinus_var_C_i32
	.quad	_L_1+90696
	.quad	_A__Minus_param_C_u16
	.quad	_L_1+90713
	.quad	_A__uMinus_param_C_u16
	.quad	_L_1+90731
	.quad	_A__Minus_var_C_u16
	.quad	_L_1+90750
	.quad	_A__uMinus_var_C_u16
	.quad	_L_1+90766
	.quad	_A__Minus_param_C_u64
	.quad	_L_1+90783
	.quad	_A__uMinus_param_C_u64
	.quad	_L_1+90801
	.quad	_A__Minus_var_C_u64
	.quad	_L_1+90820
	.quad	_A__uMinus_var_C_u64
	.quad	_L_1+90836
	.quad	_A__Minus_param_C_L
	.quad	_L_1+90853
	.quad	_A__uMinus_param_C_L
	.quad	_L_1+90869
	.quad	_A__Minus_var_C_L
	.quad	_L_1+90886
	.quad	_A__uMinus_var_C_L
	.quad	_L_1+90900
	.quad	_A__Minus_param_C_i8
	.quad	_L_1+90915
	.quad	_A__uMinus_param_C_i8
	.quad	_L_1+90932
	.quad	_A__Minus_var_C_i8
	.quad	_L_1+90950
	.quad	_A__uMinus_var_C_i8
	.quad	_L_1+90965
	.quad	_A__Minus_param_C_u32
	.quad	_L_1+90981
	.quad	_A__uMinus_param_C_u32
	.quad	_L_1+90999
	.quad	_A__Minus_var_C_u32
	.quad	_L_1+91018
	.quad	_A__uMinus_var_C_u32
	.quad	_L_1+91034
	.quad	_A__Minus_param_C_C
	.quad	_L_1+91051
	.quad	_A__uMinus_param_C_C
	.quad	_L_1+91067
	.quad	_A__Minus_var_C_C
	.quad	_L_1+91084
	.quad	_A__uMinus_var_C_C
	.quad	_L_1+91098
	.quad	_A__Minus_param_C_u8
	.quad	_L_1+91113
	.quad	_A__uMinus_param_C_u8
	.quad	_L_1+91130
	.quad	_A__Minus_var_C_u8
	.quad	_L_1+91148
	.quad	_A__uMinus_var_C_u8
	.quad	_L_1+91163
	.quad	_A__Minus_param_C_I
	.quad	_L_1+91179
	.quad	_A__uMinus_param_C_I
	.quad	_L_1+91195
	.quad	_A__Minus_var_C_I
	.quad	_L_1+91212
	.quad	_A__uMinus_var_C_I
	.quad	_L_1+91226
	.quad	_A__Minus_param_C_i64
	.quad	_L_1+91241
	.quad	_A__uMinus_param_C_i64
	.quad	_L_1+91259
	.quad	_A__Minus_var_C_i64
	.quad	_L_1+91278
	.quad	_A__uMinus_var_C_i64
	.quad	_L_1+91294
	.quad	_A__Minus_param_C_LC
	.quad	_L_1+91311
	.quad	_A__uMinus_param_C_LC
	.quad	_L_1+91328
	.quad	_A__Minus_var_C_LC
	.quad	_L_1+91346
	.quad	_A__uMinus_var_C_LC
	.quad	_L_1+91361
	.quad	_A__Minus_param_C_i16
	.quad	_L_1+91377
	.quad	_A__uMinus_param_C_i16
	.quad	_L_1+91395
	.quad	_A__Minus_var_C_i16
	.quad	_L_1+91414
	.quad	_A__uMinus_var_C_i16
	.quad	_L_1+91430
	.quad	_A__Minus_param_u8_i32
	.quad	_L_1+91447
	.quad	_A__uMinus_param_u8_i32
	.quad	_L_1+91466
	.quad	_A__Minus_var_u8_i32
	.quad	_L_1+91486
	.quad	_A__uMinus_var_u8_i32
	.quad	_L_1+91503
	.quad	_A__Minus_param_u8_u16
	.quad	_L_1+91521
	.quad	_A__uMinus_param_u8_u16
	.quad	_L_1+91540
	.quad	_A__Minus_var_u8_u16
	.quad	_L_1+91560
	.quad	_A__uMinus_var_u8_u16
	.quad	_L_1+91577
	.quad	_A__Minus_param_u8_u64
	.quad	_L_1+91595
	.quad	_A__uMinus_param_u8_u64
	.quad	_L_1+91614
	.quad	_A__Minus_var_u8_u64
	.quad	_L_1+91634
	.quad	_A__uMinus_var_u8_u64
	.quad	_L_1+91651
	.quad	_A__Minus_param_u8_L
	.quad	_L_1+91669
	.quad	_A__uMinus_param_u8_L
	.quad	_L_1+91686
	.quad	_A__Minus_var_u8_L
	.quad	_L_1+91704
	.quad	_A__uMinus_var_u8_L
	.quad	_L_1+91719
	.quad	_A__Minus_param_u8_i8
	.quad	_L_1+91735
	.quad	_A__uMinus_param_u8_i8
	.quad	_L_1+91753
	.quad	_A__Minus_var_u8_i8
	.quad	_L_1+91772
	.quad	_A__uMinus_var_u8_i8
	.quad	_L_1+91788
	.quad	_A__Minus_param_u8_u32
	.quad	_L_1+91805
	.quad	_A__uMinus_param_u8_u32
	.quad	_L_1+91824
	.quad	_A__Minus_var_u8_u32
	.quad	_L_1+91844
	.quad	_A__uMinus_var_u8_u32
	.quad	_L_1+91861
	.quad	_A__Minus_param_u8_C
	.quad	_L_1+91879
	.quad	_A__uMinus_param_u8_C
	.quad	_L_1+91896
	.quad	_A__Minus_var_u8_C
	.quad	_L_1+91914
	.quad	_A__uMinus_var_u8_C
	.quad	_L_1+91929
	.quad	_A__Minus_param_u8_u8
	.quad	_L_1+91945
	.quad	_A__uMinus_param_u8_u8
	.quad	_L_1+91963
	.quad	_A__Minus_var_u8_u8
	.quad	_L_1+91982
	.quad	_A__uMinus_var_u8_u8
	.quad	_L_1+91998
	.quad	_A__Minus_param_u8_I
	.quad	_L_1+92015
	.quad	_A__uMinus_param_u8_I
	.quad	_L_1+92032
	.quad	_A__Minus_var_u8_I
	.quad	_L_1+92050
	.quad	_A__uMinus_var_u8_I
	.quad	_L_1+92065
	.quad	_A__Minus_param_u8_i64
	.quad	_L_1+92081
	.quad	_A__uMinus_param_u8_i64
	.quad	_L_1+92100
	.quad	_A__Minus_var_u8_i64
	.quad	_L_1+92120
	.quad	_A__uMinus_var_u8_i64
	.quad	_L_1+92137
	.quad	_A__Minus_param_u8_LC
	.quad	_L_1+92155
	.quad	_A__uMinus_param_u8_LC
	.quad	_L_1+92173
	.quad	_A__Minus_var_u8_LC
	.quad	_L_1+92192
	.quad	_A__uMinus_var_u8_LC
	.quad	_L_1+92208
	.quad	_A__Minus_param_u8_i16
	.quad	_L_1+92225
	.quad	_A__uMinus_param_u8_i16
	.quad	_L_1+92244
	.quad	_A__Minus_var_u8_i16
	.quad	_L_1+92264
	.quad	_A__uMinus_var_u8_i16
	.quad	_L_1+92281
	.quad	_A__Minus_param_I_i32
	.quad	_L_1+92299
	.quad	_A__uMinus_param_I_i32
	.quad	_L_1+92317
	.quad	_A__Minus_var_I_i32
	.quad	_L_1+92336
	.quad	_A__uMinus_var_I_i32
	.quad	_L_1+92352
	.quad	_A__Minus_param_I_u16
	.quad	_L_1+92369
	.quad	_A__uMinus_param_I_u16
	.quad	_L_1+92387
	.quad	_A__Minus_var_I_u16
	.quad	_L_1+92406
	.quad	_A__uMinus_var_I_u16
	.quad	_L_1+92422
	.quad	_A__Minus_param_I_u64
	.quad	_L_1+92439
	.quad	_A__uMinus_param_I_u64
	.quad	_L_1+92457
	.quad	_A__Minus_var_I_u64
	.quad	_L_1+92476
	.quad	_A__uMinus_var_I_u64
	.quad	_L_1+92492
	.quad	_A__Minus_param_I_L
	.quad	_L_1+92509
	.quad	_A__uMinus_param_I_L
	.quad	_L_1+92525
	.quad	_A__Minus_var_I_L
	.quad	_L_1+92542
	.quad	_A__uMinus_var_I_L
	.quad	_L_1+92556
	.quad	_A__Minus_param_I_i8
	.quad	_L_1+92571
	.quad	_A__uMinus_param_I_i8
	.quad	_L_1+92588
	.quad	_A__Minus_var_I_i8
	.quad	_L_1+92606
	.quad	_A__uMinus_var_I_i8
	.quad	_L_1+92621
	.quad	_A__Minus_param_I_u32
	.quad	_L_1+92637
	.quad	_A__uMinus_param_I_u32
	.quad	_L_1+92655
	.quad	_A__Minus_var_I_u32
	.quad	_L_1+92674
	.quad	_A__uMinus_var_I_u32
	.quad	_L_1+92690
	.quad	_A__Minus_param_I_C
	.quad	_L_1+92707
	.quad	_A__uMinus_param_I_C
	.quad	_L_1+92723
	.quad	_A__Minus_var_I_C
	.quad	_L_1+92740
	.quad	_A__uMinus_var_I_C
	.quad	_L_1+92754
	.quad	_A__Minus_param_I_u8
	.quad	_L_1+92769
	.quad	_A__uMinus_param_I_u8
	.quad	_L_1+92786
	.quad	_A__Minus_var_I_u8
	.quad	_L_1+92804
	.quad	_A__uMinus_var_I_u8
	.quad	_L_1+92819
	.quad	_A__Minus_param_I_I
	.quad	_L_1+92835
	.quad	_A__uMinus_param_I_I
	.quad	_L_1+92851
	.quad	_A__Minus_var_I_I
	.quad	_L_1+92868
	.quad	_A__uMinus_var_I_I
	.quad	_L_1+92882
	.quad	_A__Minus_param_I_i64
	.quad	_L_1+92897
	.quad	_A__uMinus_param_I_i64
	.quad	_L_1+92915
	.quad	_A__Minus_var_I_i64
	.quad	_L_1+92934
	.quad	_A__uMinus_var_I_i64
	.quad	_L_1+92950
	.quad	_A__Minus_param_I_LC
	.quad	_L_1+92967
	.quad	_A__uMinus_param_I_LC
	.quad	_L_1+92984
	.quad	_A__Minus_var_I_LC
	.quad	_L_1+93002
	.quad	_A__uMinus_var_I_LC
	.quad	_L_1+93017
	.quad	_A__Minus_param_I_i16
	.quad	_L_1+93033
	.quad	_A__uMinus_param_I_i16
	.quad	_L_1+93051
	.quad	_A__Minus_var_I_i16
	.quad	_L_1+93070
	.quad	_A__uMinus_var_I_i16
	.quad	_L_1+93086
	.quad	_A__Minus_param_i64_i32
	.quad	_L_1+93103
	.quad	_A__uMinus_param_i64_i32
	.quad	_L_1+93123
	.quad	_A__Minus_var_i64_i32
	.quad	_L_1+93144
	.quad	_A__uMinus_var_i64_i32
	.quad	_L_1+93162
	.quad	_A__Minus_param_i64_u16
	.quad	_L_1+93181
	.quad	_A__uMinus_param_i64_u16
	.quad	_L_1+93201
	.quad	_A__Minus_var_i64_u16
	.quad	_L_1+93222
	.quad	_A__uMinus_var_i64_u16
	.quad	_L_1+93240
	.quad	_A__Minus_param_i64_u64
	.quad	_L_1+93259
	.quad	_A__uMinus_param_i64_u64
	.quad	_L_1+93279
	.quad	_A__Minus_var_i64_u64
	.quad	_L_1+93300
	.quad	_A__uMinus_var_i64_u64
	.quad	_L_1+93318
	.quad	_A__Minus_param_i64_L
	.quad	_L_1+93337
	.quad	_A__uMinus_param_i64_L
	.quad	_L_1+93355
	.quad	_A__Minus_var_i64_L
	.quad	_L_1+93374
	.quad	_A__uMinus_var_i64_L
	.quad	_L_1+93390
	.quad	_A__Minus_param_i64_i8
	.quad	_L_1+93407
	.quad	_A__uMinus_param_i64_i8
	.quad	_L_1+93426
	.quad	_A__Minus_var_i64_i8
	.quad	_L_1+93446
	.quad	_A__uMinus_var_i64_i8
	.quad	_L_1+93463
	.quad	_A__Minus_param_i64_u32
	.quad	_L_1+93481
	.quad	_A__uMinus_param_i64_u32
	.quad	_L_1+93501
	.quad	_A__Minus_var_i64_u32
	.quad	_L_1+93522
	.quad	_A__uMinus_var_i64_u32
	.quad	_L_1+93540
	.quad	_A__Minus_param_i64_C
	.quad	_L_1+93559
	.quad	_A__uMinus_param_i64_C
	.quad	_L_1+93577
	.quad	_A__Minus_var_i64_C
	.quad	_L_1+93596
	.quad	_A__uMinus_var_i64_C
	.quad	_L_1+93612
	.quad	_A__Minus_param_i64_u8
	.quad	_L_1+93629
	.quad	_A__uMinus_param_i64_u8
	.quad	_L_1+93648
	.quad	_A__Minus_var_i64_u8
	.quad	_L_1+93668
	.quad	_A__uMinus_var_i64_u8
	.quad	_L_1+93685
	.quad	_A__Minus_param_i64_I
	.quad	_L_1+93703
	.quad	_A__uMinus_param_i64_I
	.quad	_L_1+93721
	.quad	_A__Minus_var_i64_I
	.quad	_L_1+93740
	.quad	_A__uMinus_var_i64_I
	.quad	_L_1+93756
	.quad	_A__Minus_param_i64_i64
	.quad	_L_1+93773
	.quad	_A__uMinus_param_i64_i64
	.quad	_L_1+93793
	.quad	_A__Minus_var_i64_i64
	.quad	_L_1+93814
	.quad	_A__uMinus_var_i64_i64
	.quad	_L_1+93832
	.quad	_A__Minus_param_i64_LC
	.quad	_L_1+93851
	.quad	_A__uMinus_param_i64_LC
	.quad	_L_1+93870
	.quad	_A__Minus_var_i64_LC
	.quad	_L_1+93890
	.quad	_A__uMinus_var_i64_LC
	.quad	_L_1+93907
	.quad	_A__Minus_param_i64_i16
	.quad	_L_1+93925
	.quad	_A__uMinus_param_i64_i16
	.quad	_L_1+93945
	.quad	_A__Minus_var_i64_i16
	.quad	_L_1+93966
	.quad	_A__uMinus_var_i64_i16
	.quad	_L_1+93984
	.quad	_A__Minus_param_f64_f64
	.quad	_L_1+94003
	.quad	_A__Minus_var_f64_f64
	.quad	_L_1+94023
	.quad	_A__Minus_param_LC_i32
	.quad	_L_1+94041
	.quad	_A__uMinus_param_LC_i32
	.quad	_L_1+94060
	.quad	_A__Minus_var_LC_i32
	.quad	_L_1+94080
	.quad	_A__uMinus_var_LC_i32
	.quad	_L_1+94097
	.quad	_A__Minus_param_LC_u16
	.quad	_L_1+94115
	.quad	_A__uMinus_param_LC_u16
	.quad	_L_1+94134
	.quad	_A__Minus_var_LC_u16
	.quad	_L_1+94154
	.quad	_A__uMinus_var_LC_u16
	.quad	_L_1+94171
	.quad	_A__Minus_param_LC_u64
	.quad	_L_1+94189
	.quad	_A__uMinus_param_LC_u64
	.quad	_L_1+94208
	.quad	_A__Minus_var_LC_u64
	.quad	_L_1+94228
	.quad	_A__uMinus_var_LC_u64
	.quad	_L_1+94245
	.quad	_A__Minus_param_LC_L
	.quad	_L_1+94263
	.quad	_A__uMinus_param_LC_L
	.quad	_L_1+94280
	.quad	_A__Minus_var_LC_L
	.quad	_L_1+94298
	.quad	_A__uMinus_var_LC_L
	.quad	_L_1+94313
	.quad	_A__Minus_param_LC_i8
	.quad	_L_1+94329
	.quad	_A__uMinus_param_LC_i8
	.quad	_L_1+94347
	.quad	_A__Minus_var_LC_i8
	.quad	_L_1+94366
	.quad	_A__uMinus_var_LC_i8
	.quad	_L_1+94382
	.quad	_A__Minus_param_LC_u32
	.quad	_L_1+94399
	.quad	_A__uMinus_param_LC_u32
	.quad	_L_1+94418
	.quad	_A__Minus_var_LC_u32
	.quad	_L_1+94438
	.quad	_A__uMinus_var_LC_u32
	.quad	_L_1+94455
	.quad	_A__Minus_param_LC_C
	.quad	_L_1+94473
	.quad	_A__uMinus_param_LC_C
	.quad	_L_1+94490
	.quad	_A__Minus_var_LC_C
	.quad	_L_1+94508
	.quad	_A__uMinus_var_LC_C
	.quad	_L_1+94523
	.quad	_A__Minus_param_LC_u8
	.quad	_L_1+94539
	.quad	_A__uMinus_param_LC_u8
	.quad	_L_1+94557
	.quad	_A__Minus_var_LC_u8
	.quad	_L_1+94576
	.quad	_A__uMinus_var_LC_u8
	.quad	_L_1+94592
	.quad	_A__Minus_param_LC_I
	.quad	_L_1+94609
	.quad	_A__uMinus_param_LC_I
	.quad	_L_1+94626
	.quad	_A__Minus_var_LC_I
	.quad	_L_1+94644
	.quad	_A__uMinus_var_LC_I
	.quad	_L_1+94659
	.quad	_A__Minus_param_LC_i64
	.quad	_L_1+94675
	.quad	_A__uMinus_param_LC_i64
	.quad	_L_1+94694
	.quad	_A__Minus_var_LC_i64
	.quad	_L_1+94714
	.quad	_A__uMinus_var_LC_i64
	.quad	_L_1+94731
	.quad	_A__Minus_param_LC_LC
	.quad	_L_1+94749
	.quad	_A__uMinus_param_LC_LC
	.quad	_L_1+94767
	.quad	_A__Minus_var_LC_LC
	.quad	_L_1+94786
	.quad	_A__uMinus_var_LC_LC
	.quad	_L_1+94802
	.quad	_A__Minus_param_LC_i16
	.quad	_L_1+94819
	.quad	_A__uMinus_param_LC_i16
	.quad	_L_1+94838
	.quad	_A__Minus_var_LC_i16
	.quad	_L_1+94858
	.quad	_A__uMinus_var_LC_i16
	.quad	_L_1+94875
	.quad	_A__Minus_param_i16_i32
	.quad	_L_1+94893
	.quad	_A__uMinus_param_i16_i32
	.quad	_L_1+94913
	.quad	_A__Minus_var_i16_i32
	.quad	_L_1+94934
	.quad	_A__uMinus_var_i16_i32
	.quad	_L_1+94952
	.quad	_A__Minus_param_i16_u16
	.quad	_L_1+94971
	.quad	_A__uMinus_param_i16_u16
	.quad	_L_1+94991
	.quad	_A__Minus_var_i16_u16
	.quad	_L_1+95012
	.quad	_A__uMinus_var_i16_u16
	.quad	_L_1+95030
	.quad	_A__Minus_param_i16_u64
	.quad	_L_1+95049
	.quad	_A__uMinus_param_i16_u64
	.quad	_L_1+95069
	.quad	_A__Minus_var_i16_u64
	.quad	_L_1+95090
	.quad	_A__uMinus_var_i16_u64
	.quad	_L_1+95108
	.quad	_A__Minus_param_i16_L
	.quad	_L_1+95127
	.quad	_A__uMinus_param_i16_L
	.quad	_L_1+95145
	.quad	_A__Minus_var_i16_L
	.quad	_L_1+95164
	.quad	_A__uMinus_var_i16_L
	.quad	_L_1+95180
	.quad	_A__Minus_param_i16_i8
	.quad	_L_1+95197
	.quad	_A__uMinus_param_i16_i8
	.quad	_L_1+95216
	.quad	_A__Minus_var_i16_i8
	.quad	_L_1+95236
	.quad	_A__uMinus_var_i16_i8
	.quad	_L_1+95253
	.quad	_A__Minus_param_i16_u32
	.quad	_L_1+95271
	.quad	_A__uMinus_param_i16_u32
	.quad	_L_1+95291
	.quad	_A__Minus_var_i16_u32
	.quad	_L_1+95312
	.quad	_A__uMinus_var_i16_u32
	.quad	_L_1+95330
	.quad	_A__Minus_param_i16_C
	.quad	_L_1+95349
	.quad	_A__uMinus_param_i16_C
	.quad	_L_1+95367
	.quad	_A__Minus_var_i16_C
	.quad	_L_1+95386
	.quad	_A__uMinus_var_i16_C
	.quad	_L_1+95402
	.quad	_A__Minus_param_i16_u8
	.quad	_L_1+95419
	.quad	_A__uMinus_param_i16_u8
	.quad	_L_1+95438
	.quad	_A__Minus_var_i16_u8
	.quad	_L_1+95458
	.quad	_A__uMinus_var_i16_u8
	.quad	_L_1+95475
	.quad	_A__Minus_param_i16_I
	.quad	_L_1+95493
	.quad	_A__uMinus_param_i16_I
	.quad	_L_1+95511
	.quad	_A__Minus_var_i16_I
	.quad	_L_1+95530
	.quad	_A__uMinus_var_i16_I
	.quad	_L_1+95546
	.quad	_A__Minus_param_i16_i64
	.quad	_L_1+95563
	.quad	_A__uMinus_param_i16_i64
	.quad	_L_1+95583
	.quad	_A__Minus_var_i16_i64
	.quad	_L_1+95604
	.quad	_A__uMinus_var_i16_i64
	.quad	_L_1+95622
	.quad	_A__Minus_param_i16_LC
	.quad	_L_1+95641
	.quad	_A__uMinus_param_i16_LC
	.quad	_L_1+95660
	.quad	_A__Minus_var_i16_LC
	.quad	_L_1+95680
	.quad	_A__uMinus_var_i16_LC
	.quad	_L_1+95697
	.quad	_A__Minus_param_i16_i16
	.quad	_L_1+95715
	.quad	_A__uMinus_param_i16_i16
	.quad	_L_1+95735
	.quad	_A__Minus_var_i16_i16
	.quad	_L_1+95756
	.quad	_A__uMinus_var_i16_i16
	.quad	_L_1+95774
	.quad	_A__Times_param_i32_i32
	.quad	_L_1+95793
	.quad	_A__uTimes_param_i32_i32
	.quad	_L_1+95813
	.quad	_A__Times_var_i32_i32
	.quad	_L_1+95834
	.quad	_A__uTimes_var_i32_i32
	.quad	_L_1+95852
	.quad	_A__Times_param_i32_u16
	.quad	_L_1+95871
	.quad	_A__uTimes_param_i32_u16
	.quad	_L_1+95891
	.quad	_A__Times_var_i32_u16
	.quad	_L_1+95912
	.quad	_A__uTimes_var_i32_u16
	.quad	_L_1+95930
	.quad	_A__Times_param_i32_u64
	.quad	_L_1+95949
	.quad	_A__uTimes_param_i32_u64
	.quad	_L_1+95969
	.quad	_A__Times_var_i32_u64
	.quad	_L_1+95990
	.quad	_A__uTimes_var_i32_u64
	.quad	_L_1+96008
	.quad	_A__Times_param_i32_L
	.quad	_L_1+96027
	.quad	_A__uTimes_param_i32_L
	.quad	_L_1+96045
	.quad	_A__Times_var_i32_L
	.quad	_L_1+96064
	.quad	_A__uTimes_var_i32_L
	.quad	_L_1+96080
	.quad	_A__Times_param_i32_i8
	.quad	_L_1+96097
	.quad	_A__uTimes_param_i32_i8
	.quad	_L_1+96116
	.quad	_A__Times_var_i32_i8
	.quad	_L_1+96136
	.quad	_A__uTimes_var_i32_i8
	.quad	_L_1+96153
	.quad	_A__Times_param_i32_u32
	.quad	_L_1+96171
	.quad	_A__uTimes_param_i32_u32
	.quad	_L_1+96191
	.quad	_A__Times_var_i32_u32
	.quad	_L_1+96212
	.quad	_A__uTimes_var_i32_u32
	.quad	_L_1+96230
	.quad	_A__Times_param_i32_C
	.quad	_L_1+96249
	.quad	_A__uTimes_param_i32_C
	.quad	_L_1+96267
	.quad	_A__Times_var_i32_C
	.quad	_L_1+96286
	.quad	_A__uTimes_var_i32_C
	.quad	_L_1+96302
	.quad	_A__Times_param_i32_u8
	.quad	_L_1+96319
	.quad	_A__uTimes_param_i32_u8
	.quad	_L_1+96338
	.quad	_A__Times_var_i32_u8
	.quad	_L_1+96358
	.quad	_A__uTimes_var_i32_u8
	.quad	_L_1+96375
	.quad	_A__Times_param_i32_I
	.quad	_L_1+96393
	.quad	_A__uTimes_param_i32_I
	.quad	_L_1+96411
	.quad	_A__Times_var_i32_I
	.quad	_L_1+96430
	.quad	_A__uTimes_var_i32_I
	.quad	_L_1+96446
	.quad	_A__Times_param_i32_i64
	.quad	_L_1+96463
	.quad	_A__uTimes_param_i32_i64
	.quad	_L_1+96483
	.quad	_A__Times_var_i32_i64
	.quad	_L_1+96504
	.quad	_A__uTimes_var_i32_i64
	.quad	_L_1+96522
	.quad	_A__Times_param_i32_LC
	.quad	_L_1+96541
	.quad	_A__uTimes_param_i32_LC
	.quad	_L_1+96560
	.quad	_A__Times_var_i32_LC
	.quad	_L_1+96580
	.quad	_A__uTimes_var_i32_LC
	.quad	_L_1+96597
	.quad	_A__Times_param_i32_i16
	.quad	_L_1+96615
	.quad	_A__uTimes_param_i32_i16
	.quad	_L_1+96635
	.quad	_A__Times_var_i32_i16
	.quad	_L_1+96656
	.quad	_A__uTimes_var_i32_i16
	.quad	_L_1+96674
	.quad	_A__Times_param_u16_i32
	.quad	_L_1+96693
	.quad	_A__uTimes_param_u16_i32
	.quad	_L_1+96713
	.quad	_A__Times_var_u16_i32
	.quad	_L_1+96734
	.quad	_A__uTimes_var_u16_i32
	.quad	_L_1+96752
	.quad	_A__Times_param_u16_u16
	.quad	_L_1+96771
	.quad	_A__uTimes_param_u16_u16
	.quad	_L_1+96791
	.quad	_A__Times_var_u16_u16
	.quad	_L_1+96812
	.quad	_A__uTimes_var_u16_u16
	.quad	_L_1+96830
	.quad	_A__Times_param_u16_u64
	.quad	_L_1+96849
	.quad	_A__uTimes_param_u16_u64
	.quad	_L_1+96869
	.quad	_A__Times_var_u16_u64
	.quad	_L_1+96890
	.quad	_A__uTimes_var_u16_u64
	.quad	_L_1+96908
	.quad	_A__Times_param_u16_L
	.quad	_L_1+96927
	.quad	_A__uTimes_param_u16_L
	.quad	_L_1+96945
	.quad	_A__Times_var_u16_L
	.quad	_L_1+96964
	.quad	_A__uTimes_var_u16_L
	.quad	_L_1+96980
	.quad	_A__Times_param_u16_i8
	.quad	_L_1+96997
	.quad	_A__uTimes_param_u16_i8
	.quad	_L_1+97016
	.quad	_A__Times_var_u16_i8
	.quad	_L_1+97036
	.quad	_A__uTimes_var_u16_i8
	.quad	_L_1+97053
	.quad	_A__Times_param_u16_u32
	.quad	_L_1+97071
	.quad	_A__uTimes_param_u16_u32
	.quad	_L_1+97091
	.quad	_A__Times_var_u16_u32
	.quad	_L_1+97112
	.quad	_A__uTimes_var_u16_u32
	.quad	_L_1+97130
	.quad	_A__Times_param_u16_C
	.quad	_L_1+97149
	.quad	_A__uTimes_param_u16_C
	.quad	_L_1+97167
	.quad	_A__Times_var_u16_C
	.quad	_L_1+97186
	.quad	_A__uTimes_var_u16_C
	.quad	_L_1+97202
	.quad	_A__Times_param_u16_u8
	.quad	_L_1+97219
	.quad	_A__uTimes_param_u16_u8
	.quad	_L_1+97238
	.quad	_A__Times_var_u16_u8
	.quad	_L_1+97258
	.quad	_A__uTimes_var_u16_u8
	.quad	_L_1+97275
	.quad	_A__Times_param_u16_I
	.quad	_L_1+97293
	.quad	_A__uTimes_param_u16_I
	.quad	_L_1+97311
	.quad	_A__Times_var_u16_I
	.quad	_L_1+97330
	.quad	_A__uTimes_var_u16_I
	.quad	_L_1+97346
	.quad	_A__Times_param_u16_i64
	.quad	_L_1+97363
	.quad	_A__uTimes_param_u16_i64
	.quad	_L_1+97383
	.quad	_A__Times_var_u16_i64
	.quad	_L_1+97404
	.quad	_A__uTimes_var_u16_i64
	.quad	_L_1+97422
	.quad	_A__Times_param_u16_LC
	.quad	_L_1+97441
	.quad	_A__uTimes_param_u16_LC
	.quad	_L_1+97460
	.quad	_A__Times_var_u16_LC
	.quad	_L_1+97480
	.quad	_A__uTimes_var_u16_LC
	.quad	_L_1+97497
	.quad	_A__Times_param_u16_i16
	.quad	_L_1+97515
	.quad	_A__uTimes_param_u16_i16
	.quad	_L_1+97535
	.quad	_A__Times_var_u16_i16
	.quad	_L_1+97556
	.quad	_A__uTimes_var_u16_i16
	.quad	_L_1+97574
	.quad	_A__Times_param_u64_i32
	.quad	_L_1+97593
	.quad	_A__uTimes_param_u64_i32
	.quad	_L_1+97613
	.quad	_A__Times_var_u64_i32
	.quad	_L_1+97634
	.quad	_A__uTimes_var_u64_i32
	.quad	_L_1+97652
	.quad	_A__Times_param_u64_u16
	.quad	_L_1+97671
	.quad	_A__uTimes_param_u64_u16
	.quad	_L_1+97691
	.quad	_A__Times_var_u64_u16
	.quad	_L_1+97712
	.quad	_A__uTimes_var_u64_u16
	.quad	_L_1+97730
	.quad	_A__Times_param_u64_u64
	.quad	_L_1+97749
	.quad	_A__uTimes_param_u64_u64
	.quad	_L_1+97769
	.quad	_A__Times_var_u64_u64
	.quad	_L_1+97790
	.quad	_A__uTimes_var_u64_u64
	.quad	_L_1+97808
	.quad	_A__Times_param_u64_L
	.quad	_L_1+97827
	.quad	_A__uTimes_param_u64_L
	.quad	_L_1+97845
	.quad	_A__Times_var_u64_L
	.quad	_L_1+97864
	.quad	_A__uTimes_var_u64_L
	.quad	_L_1+97880
	.quad	_A__Times_param_u64_i8
	.quad	_L_1+97897
	.quad	_A__uTimes_param_u64_i8
	.quad	_L_1+97916
	.quad	_A__Times_var_u64_i8
	.quad	_L_1+97936
	.quad	_A__uTimes_var_u64_i8
	.quad	_L_1+97953
	.quad	_A__Times_param_u64_u32
	.quad	_L_1+97971
	.quad	_A__uTimes_param_u64_u32
	.quad	_L_1+97991
	.quad	_A__Times_var_u64_u32
	.quad	_L_1+98012
	.quad	_A__uTimes_var_u64_u32
	.quad	_L_1+98030
	.quad	_A__Times_param_u64_C
	.quad	_L_1+98049
	.quad	_A__uTimes_param_u64_C
	.quad	_L_1+98067
	.quad	_A__Times_var_u64_C
	.quad	_L_1+98086
	.quad	_A__uTimes_var_u64_C
	.quad	_L_1+98102
	.quad	_A__Times_param_u64_u8
	.quad	_L_1+98119
	.quad	_A__uTimes_param_u64_u8
	.quad	_L_1+98138
	.quad	_A__Times_var_u64_u8
	.quad	_L_1+98158
	.quad	_A__uTimes_var_u64_u8
	.quad	_L_1+98175
	.quad	_A__Times_param_u64_I
	.quad	_L_1+98193
	.quad	_A__uTimes_param_u64_I
	.quad	_L_1+98211
	.quad	_A__Times_var_u64_I
	.quad	_L_1+98230
	.quad	_A__uTimes_var_u64_I
	.quad	_L_1+98246
	.quad	_A__Times_param_u64_i64
	.quad	_L_1+98263
	.quad	_A__uTimes_param_u64_i64
	.quad	_L_1+98283
	.quad	_A__Times_var_u64_i64
	.quad	_L_1+98304
	.quad	_A__uTimes_var_u64_i64
	.quad	_L_1+98322
	.quad	_A__Times_param_u64_LC
	.quad	_L_1+98341
	.quad	_A__uTimes_param_u64_LC
	.quad	_L_1+98360
	.quad	_A__Times_var_u64_LC
	.quad	_L_1+98380
	.quad	_A__uTimes_var_u64_LC
	.quad	_L_1+98397
	.quad	_A__Times_param_u64_i16
	.quad	_L_1+98415
	.quad	_A__uTimes_param_u64_i16
	.quad	_L_1+98435
	.quad	_A__Times_var_u64_i16
	.quad	_L_1+98456
	.quad	_A__uTimes_var_u64_i16
	.quad	_L_1+98474
	.quad	_A__Times_param_L_i32
	.quad	_L_1+98493
	.quad	_A__uTimes_param_L_i32
	.quad	_L_1+98511
	.quad	_A__Times_var_L_i32
	.quad	_L_1+98530
	.quad	_A__uTimes_var_L_i32
	.quad	_L_1+98546
	.quad	_A__Times_param_L_u16
	.quad	_L_1+98563
	.quad	_A__uTimes_param_L_u16
	.quad	_L_1+98581
	.quad	_A__Times_var_L_u16
	.quad	_L_1+98600
	.quad	_A__uTimes_var_L_u16
	.quad	_L_1+98616
	.quad	_A__Times_param_L_u64
	.quad	_L_1+98633
	.quad	_A__uTimes_param_L_u64
	.quad	_L_1+98651
	.quad	_A__Times_var_L_u64
	.quad	_L_1+98670
	.quad	_A__uTimes_var_L_u64
	.quad	_L_1+98686
	.quad	_A__Times_param_L_L
	.quad	_L_1+98703
	.quad	_A__uTimes_param_L_L
	.quad	_L_1+98719
	.quad	_A__Times_var_L_L
	.quad	_L_1+98736
	.quad	_A__uTimes_var_L_L
	.quad	_L_1+98750
	.quad	_A__Times_param_L_i8
	.quad	_L_1+98765
	.quad	_A__uTimes_param_L_i8
	.quad	_L_1+98782
	.quad	_A__Times_var_L_i8
	.quad	_L_1+98800
	.quad	_A__uTimes_var_L_i8
	.quad	_L_1+98815
	.quad	_A__Times_param_L_u32
	.quad	_L_1+98831
	.quad	_A__uTimes_param_L_u32
	.quad	_L_1+98849
	.quad	_A__Times_var_L_u32
	.quad	_L_1+98868
	.quad	_A__uTimes_var_L_u32
	.quad	_L_1+98884
	.quad	_A__Times_param_L_C
	.quad	_L_1+98901
	.quad	_A__uTimes_param_L_C
	.quad	_L_1+98917
	.quad	_A__Times_var_L_C
	.quad	_L_1+98934
	.quad	_A__uTimes_var_L_C
	.quad	_L_1+98948
	.quad	_A__Times_param_L_u8
	.quad	_L_1+98963
	.quad	_A__uTimes_param_L_u8
	.quad	_L_1+98980
	.quad	_A__Times_var_L_u8
	.quad	_L_1+98998
	.quad	_A__uTimes_var_L_u8
	.quad	_L_1+99013
	.quad	_A__Times_param_L_I
	.quad	_L_1+99029
	.quad	_A__uTimes_param_L_I
	.quad	_L_1+99045
	.quad	_A__Times_var_L_I
	.quad	_L_1+99062
	.quad	_A__uTimes_var_L_I
	.quad	_L_1+99076
	.quad	_A__Times_param_L_i64
	.quad	_L_1+99091
	.quad	_A__uTimes_param_L_i64
	.quad	_L_1+99109
	.quad	_A__Times_var_L_i64
	.quad	_L_1+99128
	.quad	_A__uTimes_var_L_i64
	.quad	_L_1+99144
	.quad	_A__Times_param_L_LC
	.quad	_L_1+99161
	.quad	_A__uTimes_param_L_LC
	.quad	_L_1+99178
	.quad	_A__Times_var_L_LC
	.quad	_L_1+99196
	.quad	_A__uTimes_var_L_LC
	.quad	_L_1+99211
	.quad	_A__Times_param_L_i16
	.quad	_L_1+99227
	.quad	_A__uTimes_param_L_i16
	.quad	_L_1+99245
	.quad	_A__Times_var_L_i16
	.quad	_L_1+99264
	.quad	_A__uTimes_var_L_i16
	.quad	_L_1+99280
	.quad	_A__Times_param_i8_i32
	.quad	_L_1+99297
	.quad	_A__uTimes_param_i8_i32
	.quad	_L_1+99316
	.quad	_A__Times_var_i8_i32
	.quad	_L_1+99336
	.quad	_A__uTimes_var_i8_i32
	.quad	_L_1+99353
	.quad	_A__Times_param_i8_u16
	.quad	_L_1+99371
	.quad	_A__uTimes_param_i8_u16
	.quad	_L_1+99390
	.quad	_A__Times_var_i8_u16
	.quad	_L_1+99410
	.quad	_A__uTimes_var_i8_u16
	.quad	_L_1+99427
	.quad	_A__Times_param_i8_u64
	.quad	_L_1+99445
	.quad	_A__uTimes_param_i8_u64
	.quad	_L_1+99464
	.quad	_A__Times_var_i8_u64
	.quad	_L_1+99484
	.quad	_A__uTimes_var_i8_u64
	.quad	_L_1+99501
	.quad	_A__Times_param_i8_L
	.quad	_L_1+99519
	.quad	_A__uTimes_param_i8_L
	.quad	_L_1+99536
	.quad	_A__Times_var_i8_L
	.quad	_L_1+99554
	.quad	_A__uTimes_var_i8_L
	.quad	_L_1+99569
	.quad	_A__Times_param_i8_i8
	.quad	_L_1+99585
	.quad	_A__uTimes_param_i8_i8
	.quad	_L_1+99603
	.quad	_A__Times_var_i8_i8
	.quad	_L_1+99622
	.quad	_A__uTimes_var_i8_i8
	.quad	_L_1+99638
	.quad	_A__Times_param_i8_u32
	.quad	_L_1+99655
	.quad	_A__uTimes_param_i8_u32
	.quad	_L_1+99674
	.quad	_A__Times_var_i8_u32
	.quad	_L_1+99694
	.quad	_A__uTimes_var_i8_u32
	.quad	_L_1+99711
	.quad	_A__Times_param_i8_C
	.quad	_L_1+99729
	.quad	_A__uTimes_param_i8_C
	.quad	_L_1+99746
	.quad	_A__Times_var_i8_C
	.quad	_L_1+99764
	.quad	_A__uTimes_var_i8_C
	.quad	_L_1+99779
	.quad	_A__Times_param_i8_u8
	.quad	_L_1+99795
	.quad	_A__uTimes_param_i8_u8
	.quad	_L_1+99813
	.quad	_A__Times_var_i8_u8
	.quad	_L_1+99832
	.quad	_A__uTimes_var_i8_u8
	.quad	_L_1+99848
	.quad	_A__Times_param_i8_I
	.quad	_L_1+99865
	.quad	_A__uTimes_param_i8_I
	.quad	_L_1+99882
	.quad	_A__Times_var_i8_I
	.quad	_L_1+99900
	.quad	_A__uTimes_var_i8_I
	.quad	_L_1+99915
	.quad	_A__Times_param_i8_i64
	.quad	_L_1+99931
	.quad	_A__uTimes_param_i8_i64
	.quad	_L_1+99950
	.quad	_A__Times_var_i8_i64
	.quad	_L_1+99970
	.quad	_A__uTimes_var_i8_i64
	.quad	_L_1+99987
	.quad	_A__Times_param_i8_LC
	.quad	_L_1+100005
	.quad	_A__uTimes_param_i8_LC
	.quad	_L_1+100023
	.quad	_A__Times_var_i8_LC
	.quad	_L_1+100042
	.quad	_A__uTimes_var_i8_LC
	.quad	_L_1+100058
	.quad	_A__Times_param_i8_i16
	.quad	_L_1+100075
	.quad	_A__uTimes_param_i8_i16
	.quad	_L_1+100094
	.quad	_A__Times_var_i8_i16
	.quad	_L_1+100114
	.quad	_A__uTimes_var_i8_i16
	.quad	_L_1+100131
	.quad	_A__Times_param_u32_i32
	.quad	_L_1+100149
	.quad	_A__uTimes_param_u32_i32
	.quad	_L_1+100169
	.quad	_A__Times_var_u32_i32
	.quad	_L_1+100190
	.quad	_A__uTimes_var_u32_i32
	.quad	_L_1+100208
	.quad	_A__Times_param_u32_u16
	.quad	_L_1+100227
	.quad	_A__uTimes_param_u32_u16
	.quad	_L_1+100247
	.quad	_A__Times_var_u32_u16
	.quad	_L_1+100268
	.quad	_A__uTimes_var_u32_u16
	.quad	_L_1+100286
	.quad	_A__Times_param_u32_u64
	.quad	_L_1+100305
	.quad	_A__uTimes_param_u32_u64
	.quad	_L_1+100325
	.quad	_A__Times_var_u32_u64
	.quad	_L_1+100346
	.quad	_A__uTimes_var_u32_u64
	.quad	_L_1+100364
	.quad	_A__Times_param_u32_L
	.quad	_L_1+100383
	.quad	_A__uTimes_param_u32_L
	.quad	_L_1+100401
	.quad	_A__Times_var_u32_L
	.quad	_L_1+100420
	.quad	_A__uTimes_var_u32_L
	.quad	_L_1+100436
	.quad	_A__Times_param_u32_i8
	.quad	_L_1+100453
	.quad	_A__uTimes_param_u32_i8
	.quad	_L_1+100472
	.quad	_A__Times_var_u32_i8
	.quad	_L_1+100492
	.quad	_A__uTimes_var_u32_i8
	.quad	_L_1+100509
	.quad	_A__Times_param_u32_u32
	.quad	_L_1+100527
	.quad	_A__uTimes_param_u32_u32
	.quad	_L_1+100547
	.quad	_A__Times_var_u32_u32
	.quad	_L_1+100568
	.quad	_A__uTimes_var_u32_u32
	.quad	_L_1+100586
	.quad	_A__Times_param_u32_C
	.quad	_L_1+100605
	.quad	_A__uTimes_param_u32_C
	.quad	_L_1+100623
	.quad	_A__Times_var_u32_C
	.quad	_L_1+100642
	.quad	_A__uTimes_var_u32_C
	.quad	_L_1+100658
	.quad	_A__Times_param_u32_u8
	.quad	_L_1+100675
	.quad	_A__uTimes_param_u32_u8
	.quad	_L_1+100694
	.quad	_A__Times_var_u32_u8
	.quad	_L_1+100714
	.quad	_A__uTimes_var_u32_u8
	.quad	_L_1+100731
	.quad	_A__Times_param_u32_I
	.quad	_L_1+100749
	.quad	_A__uTimes_param_u32_I
	.quad	_L_1+100767
	.quad	_A__Times_var_u32_I
	.quad	_L_1+100786
	.quad	_A__uTimes_var_u32_I
	.quad	_L_1+100802
	.quad	_A__Times_param_u32_i64
	.quad	_L_1+100819
	.quad	_A__uTimes_param_u32_i64
	.quad	_L_1+100839
	.quad	_A__Times_var_u32_i64
	.quad	_L_1+100860
	.quad	_A__uTimes_var_u32_i64
	.quad	_L_1+100878
	.quad	_A__Times_param_u32_LC
	.quad	_L_1+100897
	.quad	_A__uTimes_param_u32_LC
	.quad	_L_1+100916
	.quad	_A__Times_var_u32_LC
	.quad	_L_1+100936
	.quad	_A__uTimes_var_u32_LC
	.quad	_L_1+100953
	.quad	_A__Times_param_u32_i16
	.quad	_L_1+100971
	.quad	_A__uTimes_param_u32_i16
	.quad	_L_1+100991
	.quad	_A__Times_var_u32_i16
	.quad	_L_1+101012
	.quad	_A__uTimes_var_u32_i16
	.quad	_L_1+101030
	.quad	_A__Times_param_f32_f32
	.quad	_L_1+101049
	.quad	_A__Times_var_f32_f32
	.quad	_L_1+101069
	.quad	_A__Times_param_C_i32
	.quad	_L_1+101087
	.quad	_A__uTimes_param_C_i32
	.quad	_L_1+101105
	.quad	_A__Times_var_C_i32
	.quad	_L_1+101124
	.quad	_A__uTimes_var_C_i32
	.quad	_L_1+101140
	.quad	_A__Times_param_C_u16
	.quad	_L_1+101157
	.quad	_A__uTimes_param_C_u16
	.quad	_L_1+101175
	.quad	_A__Times_var_C_u16
	.quad	_L_1+101194
	.quad	_A__uTimes_var_C_u16
	.quad	_L_1+101210
	.quad	_A__Times_param_C_u64
	.quad	_L_1+101227
	.quad	_A__uTimes_param_C_u64
	.quad	_L_1+101245
	.quad	_A__Times_var_C_u64
	.quad	_L_1+101264
	.quad	_A__uTimes_var_C_u64
	.quad	_L_1+101280
	.quad	_A__Times_param_C_L
	.quad	_L_1+101297
	.quad	_A__uTimes_param_C_L
	.quad	_L_1+101313
	.quad	_A__Times_var_C_L
	.quad	_L_1+101330
	.quad	_A__uTimes_var_C_L
	.quad	_L_1+101344
	.quad	_A__Times_param_C_i8
	.quad	_L_1+101359
	.quad	_A__uTimes_param_C_i8
	.quad	_L_1+101376
	.quad	_A__Times_var_C_i8
	.quad	_L_1+101394
	.quad	_A__uTimes_var_C_i8
	.quad	_L_1+101409
	.quad	_A__Times_param_C_u32
	.quad	_L_1+101425
	.quad	_A__uTimes_param_C_u32
	.quad	_L_1+101443
	.quad	_A__Times_var_C_u32
	.quad	_L_1+101462
	.quad	_A__uTimes_var_C_u32
	.quad	_L_1+101478
	.quad	_A__Times_param_C_C
	.quad	_L_1+101495
	.quad	_A__uTimes_param_C_C
	.quad	_L_1+101511
	.quad	_A__Times_var_C_C
	.quad	_L_1+101528
	.quad	_A__uTimes_var_C_C
	.quad	_L_1+101542
	.quad	_A__Times_param_C_u8
	.quad	_L_1+101557
	.quad	_A__uTimes_param_C_u8
	.quad	_L_1+101574
	.quad	_A__Times_var_C_u8
	.quad	_L_1+101592
	.quad	_A__uTimes_var_C_u8
	.quad	_L_1+101607
	.quad	_A__Times_param_C_I
	.quad	_L_1+101623
	.quad	_A__uTimes_param_C_I
	.quad	_L_1+101639
	.quad	_A__Times_var_C_I
	.quad	_L_1+101656
	.quad	_A__uTimes_var_C_I
	.quad	_L_1+101670
	.quad	_A__Times_param_C_i64
	.quad	_L_1+101685
	.quad	_A__uTimes_param_C_i64
	.quad	_L_1+101703
	.quad	_A__Times_var_C_i64
	.quad	_L_1+101722
	.quad	_A__uTimes_var_C_i64
	.quad	_L_1+101738
	.quad	_A__Times_param_C_LC
	.quad	_L_1+101755
	.quad	_A__uTimes_param_C_LC
	.quad	_L_1+101772
	.quad	_A__Times_var_C_LC
	.quad	_L_1+101790
	.quad	_A__uTimes_var_C_LC
	.quad	_L_1+101805
	.quad	_A__Times_param_C_i16
	.quad	_L_1+101821
	.quad	_A__uTimes_param_C_i16
	.quad	_L_1+101839
	.quad	_A__Times_var_C_i16
	.quad	_L_1+101858
	.quad	_A__uTimes_var_C_i16
	.quad	_L_1+101874
	.quad	_A__Times_param_u8_i32
	.quad	_L_1+101891
	.quad	_A__uTimes_param_u8_i32
	.quad	_L_1+101910
	.quad	_A__Times_var_u8_i32
	.quad	_L_1+101930
	.quad	_A__uTimes_var_u8_i32
	.quad	_L_1+101947
	.quad	_A__Times_param_u8_u16
	.quad	_L_1+101965
	.quad	_A__uTimes_param_u8_u16
	.quad	_L_1+101984
	.quad	_A__Times_var_u8_u16
	.quad	_L_1+102004
	.quad	_A__uTimes_var_u8_u16
	.quad	_L_1+102021
	.quad	_A__Times_param_u8_u64
	.quad	_L_1+102039
	.quad	_A__uTimes_param_u8_u64
	.quad	_L_1+102058
	.quad	_A__Times_var_u8_u64
	.quad	_L_1+102078
	.quad	_A__uTimes_var_u8_u64
	.quad	_L_1+102095
	.quad	_A__Times_param_u8_L
	.quad	_L_1+102113
	.quad	_A__uTimes_param_u8_L
	.quad	_L_1+102130
	.quad	_A__Times_var_u8_L
	.quad	_L_1+102148
	.quad	_A__uTimes_var_u8_L
	.quad	_L_1+102163
	.quad	_A__Times_param_u8_i8
	.quad	_L_1+102179
	.quad	_A__uTimes_param_u8_i8
	.quad	_L_1+102197
	.quad	_A__Times_var_u8_i8
	.quad	_L_1+102216
	.quad	_A__uTimes_var_u8_i8
	.quad	_L_1+102232
	.quad	_A__Times_param_u8_u32
	.quad	_L_1+102249
	.quad	_A__uTimes_param_u8_u32
	.quad	_L_1+102268
	.quad	_A__Times_var_u8_u32
	.quad	_L_1+102288
	.quad	_A__uTimes_var_u8_u32
	.quad	_L_1+102305
	.quad	_A__Times_param_u8_C
	.quad	_L_1+102323
	.quad	_A__uTimes_param_u8_C
	.quad	_L_1+102340
	.quad	_A__Times_var_u8_C
	.quad	_L_1+102358
	.quad	_A__uTimes_var_u8_C
	.quad	_L_1+102373
	.quad	_A__Times_param_u8_u8
	.quad	_L_1+102389
	.quad	_A__uTimes_param_u8_u8
	.quad	_L_1+102407
	.quad	_A__Times_var_u8_u8
	.quad	_L_1+102426
	.quad	_A__uTimes_var_u8_u8
	.quad	_L_1+102442
	.quad	_A__Times_param_u8_I
	.quad	_L_1+102459
	.quad	_A__uTimes_param_u8_I
	.quad	_L_1+102476
	.quad	_A__Times_var_u8_I
	.quad	_L_1+102494
	.quad	_A__uTimes_var_u8_I
	.quad	_L_1+102509
	.quad	_A__Times_param_u8_i64
	.quad	_L_1+102525
	.quad	_A__uTimes_param_u8_i64
	.quad	_L_1+102544
	.quad	_A__Times_var_u8_i64
	.quad	_L_1+102564
	.quad	_A__uTimes_var_u8_i64
	.quad	_L_1+102581
	.quad	_A__Times_param_u8_LC
	.quad	_L_1+102599
	.quad	_A__uTimes_param_u8_LC
	.quad	_L_1+102617
	.quad	_A__Times_var_u8_LC
	.quad	_L_1+102636
	.quad	_A__uTimes_var_u8_LC
	.quad	_L_1+102652
	.quad	_A__Times_param_u8_i16
	.quad	_L_1+102669
	.quad	_A__uTimes_param_u8_i16
	.quad	_L_1+102688
	.quad	_A__Times_var_u8_i16
	.quad	_L_1+102708
	.quad	_A__uTimes_var_u8_i16
	.quad	_L_1+102725
	.quad	_A__Times_param_I_i32
	.quad	_L_1+102743
	.quad	_A__uTimes_param_I_i32
	.quad	_L_1+102761
	.quad	_A__Times_var_I_i32
	.quad	_L_1+102780
	.quad	_A__uTimes_var_I_i32
	.quad	_L_1+102796
	.quad	_A__Times_param_I_u16
	.quad	_L_1+102813
	.quad	_A__uTimes_param_I_u16
	.quad	_L_1+102831
	.quad	_A__Times_var_I_u16
	.quad	_L_1+102850
	.quad	_A__uTimes_var_I_u16
	.quad	_L_1+102866
	.quad	_A__Times_param_I_u64
	.quad	_L_1+102883
	.quad	_A__uTimes_param_I_u64
	.quad	_L_1+102901
	.quad	_A__Times_var_I_u64
	.quad	_L_1+102920
	.quad	_A__uTimes_var_I_u64
	.quad	_L_1+102936
	.quad	_A__Times_param_I_L
	.quad	_L_1+102953
	.quad	_A__uTimes_param_I_L
	.quad	_L_1+102969
	.quad	_A__Times_var_I_L
	.quad	_L_1+102986
	.quad	_A__uTimes_var_I_L
	.quad	_L_1+103000
	.quad	_A__Times_param_I_i8
	.quad	_L_1+103015
	.quad	_A__uTimes_param_I_i8
	.quad	_L_1+103032
	.quad	_A__Times_var_I_i8
	.quad	_L_1+103050
	.quad	_A__uTimes_var_I_i8
	.quad	_L_1+103065
	.quad	_A__Times_param_I_u32
	.quad	_L_1+103081
	.quad	_A__uTimes_param_I_u32
	.quad	_L_1+103099
	.quad	_A__Times_var_I_u32
	.quad	_L_1+103118
	.quad	_A__uTimes_var_I_u32
	.quad	_L_1+103134
	.quad	_A__Times_param_I_C
	.quad	_L_1+103151
	.quad	_A__uTimes_param_I_C
	.quad	_L_1+103167
	.quad	_A__Times_var_I_C
	.quad	_L_1+103184
	.quad	_A__uTimes_var_I_C
	.quad	_L_1+103198
	.quad	_A__Times_param_I_u8
	.quad	_L_1+103213
	.quad	_A__uTimes_param_I_u8
	.quad	_L_1+103230
	.quad	_A__Times_var_I_u8
	.quad	_L_1+103248
	.quad	_A__uTimes_var_I_u8
	.quad	_L_1+103263
	.quad	_A__Times_param_I_I
	.quad	_L_1+103279
	.quad	_A__uTimes_param_I_I
	.quad	_L_1+103295
	.quad	_A__Times_var_I_I
	.quad	_L_1+103312
	.quad	_A__uTimes_var_I_I
	.quad	_L_1+103326
	.quad	_A__Times_param_I_i64
	.quad	_L_1+103341
	.quad	_A__uTimes_param_I_i64
	.quad	_L_1+103359
	.quad	_A__Times_var_I_i64
	.quad	_L_1+103378
	.quad	_A__uTimes_var_I_i64
	.quad	_L_1+103394
	.quad	_A__Times_param_I_LC
	.quad	_L_1+103411
	.quad	_A__uTimes_param_I_LC
	.quad	_L_1+103428
	.quad	_A__Times_var_I_LC
	.quad	_L_1+103446
	.quad	_A__uTimes_var_I_LC
	.quad	_L_1+103461
	.quad	_A__Times_param_I_i16
	.quad	_L_1+103477
	.quad	_A__uTimes_param_I_i16
	.quad	_L_1+103495
	.quad	_A__Times_var_I_i16
	.quad	_L_1+103514
	.quad	_A__uTimes_var_I_i16
	.quad	_L_1+103530
	.quad	_A__Times_param_i64_i32
	.quad	_L_1+103547
	.quad	_A__uTimes_param_i64_i32
	.quad	_L_1+103567
	.quad	_A__Times_var_i64_i32
	.quad	_L_1+103588
	.quad	_A__uTimes_var_i64_i32
	.quad	_L_1+103606
	.quad	_A__Times_param_i64_u16
	.quad	_L_1+103625
	.quad	_A__uTimes_param_i64_u16
	.quad	_L_1+103645
	.quad	_A__Times_var_i64_u16
	.quad	_L_1+103666
	.quad	_A__uTimes_var_i64_u16
	.quad	_L_1+103684
	.quad	_A__Times_param_i64_u64
	.quad	_L_1+103703
	.quad	_A__uTimes_param_i64_u64
	.quad	_L_1+103723
	.quad	_A__Times_var_i64_u64
	.quad	_L_1+103744
	.quad	_A__uTimes_var_i64_u64
	.quad	_L_1+103762
	.quad	_A__Times_param_i64_L
	.quad	_L_1+103781
	.quad	_A__uTimes_param_i64_L
	.quad	_L_1+103799
	.quad	_A__Times_var_i64_L
	.quad	_L_1+103818
	.quad	_A__uTimes_var_i64_L
	.quad	_L_1+103834
	.quad	_A__Times_param_i64_i8
	.quad	_L_1+103851
	.quad	_A__uTimes_param_i64_i8
	.quad	_L_1+103870
	.quad	_A__Times_var_i64_i8
	.quad	_L_1+103890
	.quad	_A__uTimes_var_i64_i8
	.quad	_L_1+103907
	.quad	_A__Times_param_i64_u32
	.quad	_L_1+103925
	.quad	_A__uTimes_param_i64_u32
	.quad	_L_1+103945
	.quad	_A__Times_var_i64_u32
	.quad	_L_1+103966
	.quad	_A__uTimes_var_i64_u32
	.quad	_L_1+103984
	.quad	_A__Times_param_i64_C
	.quad	_L_1+104003
	.quad	_A__uTimes_param_i64_C
	.quad	_L_1+104021
	.quad	_A__Times_var_i64_C
	.quad	_L_1+104040
	.quad	_A__uTimes_var_i64_C
	.quad	_L_1+104056
	.quad	_A__Times_param_i64_u8
	.quad	_L_1+104073
	.quad	_A__uTimes_param_i64_u8
	.quad	_L_1+104092
	.quad	_A__Times_var_i64_u8
	.quad	_L_1+104112
	.quad	_A__uTimes_var_i64_u8
	.quad	_L_1+104129
	.quad	_A__Times_param_i64_I
	.quad	_L_1+104147
	.quad	_A__uTimes_param_i64_I
	.quad	_L_1+104165
	.quad	_A__Times_var_i64_I
	.quad	_L_1+104184
	.quad	_A__uTimes_var_i64_I
	.quad	_L_1+104200
	.quad	_A__Times_param_i64_i64
	.quad	_L_1+104217
	.quad	_A__uTimes_param_i64_i64
	.quad	_L_1+104237
	.quad	_A__Times_var_i64_i64
	.quad	_L_1+104258
	.quad	_A__uTimes_var_i64_i64
	.quad	_L_1+104276
	.quad	_A__Times_param_i64_LC
	.quad	_L_1+104295
	.quad	_A__uTimes_param_i64_LC
	.quad	_L_1+104314
	.quad	_A__Times_var_i64_LC
	.quad	_L_1+104334
	.quad	_A__uTimes_var_i64_LC
	.quad	_L_1+104351
	.quad	_A__Times_param_i64_i16
	.quad	_L_1+104369
	.quad	_A__uTimes_param_i64_i16
	.quad	_L_1+104389
	.quad	_A__Times_var_i64_i16
	.quad	_L_1+104410
	.quad	_A__uTimes_var_i64_i16
	.quad	_L_1+104428
	.quad	_A__Times_param_f64_f64
	.quad	_L_1+104447
	.quad	_A__Times_var_f64_f64
	.quad	_L_1+104467
	.quad	_A__Times_param_LC_i32
	.quad	_L_1+104485
	.quad	_A__uTimes_param_LC_i32
	.quad	_L_1+104504
	.quad	_A__Times_var_LC_i32
	.quad	_L_1+104524
	.quad	_A__uTimes_var_LC_i32
	.quad	_L_1+104541
	.quad	_A__Times_param_LC_u16
	.quad	_L_1+104559
	.quad	_A__uTimes_param_LC_u16
	.quad	_L_1+104578
	.quad	_A__Times_var_LC_u16
	.quad	_L_1+104598
	.quad	_A__uTimes_var_LC_u16
	.quad	_L_1+104615
	.quad	_A__Times_param_LC_u64
	.quad	_L_1+104633
	.quad	_A__uTimes_param_LC_u64
	.quad	_L_1+104652
	.quad	_A__Times_var_LC_u64
	.quad	_L_1+104672
	.quad	_A__uTimes_var_LC_u64
	.quad	_L_1+104689
	.quad	_A__Times_param_LC_L
	.quad	_L_1+104707
	.quad	_A__uTimes_param_LC_L
	.quad	_L_1+104724
	.quad	_A__Times_var_LC_L
	.quad	_L_1+104742
	.quad	_A__uTimes_var_LC_L
	.quad	_L_1+104757
	.quad	_A__Times_param_LC_i8
	.quad	_L_1+104773
	.quad	_A__uTimes_param_LC_i8
	.quad	_L_1+104791
	.quad	_A__Times_var_LC_i8
	.quad	_L_1+104810
	.quad	_A__uTimes_var_LC_i8
	.quad	_L_1+104826
	.quad	_A__Times_param_LC_u32
	.quad	_L_1+104843
	.quad	_A__uTimes_param_LC_u32
	.quad	_L_1+104862
	.quad	_A__Times_var_LC_u32
	.quad	_L_1+104882
	.quad	_A__uTimes_var_LC_u32
	.quad	_L_1+104899
	.quad	_A__Times_param_LC_C
	.quad	_L_1+104917
	.quad	_A__uTimes_param_LC_C
	.quad	_L_1+104934
	.quad	_A__Times_var_LC_C
	.quad	_L_1+104952
	.quad	_A__uTimes_var_LC_C
	.quad	_L_1+104967
	.quad	_A__Times_param_LC_u8
	.quad	_L_1+104983
	.quad	_A__uTimes_param_LC_u8
	.quad	_L_1+105001
	.quad	_A__Times_var_LC_u8
	.quad	_L_1+105020
	.quad	_A__uTimes_var_LC_u8
	.quad	_L_1+105036
	.quad	_A__Times_param_LC_I
	.quad	_L_1+105053
	.quad	_A__uTimes_param_LC_I
	.quad	_L_1+105070
	.quad	_A__Times_var_LC_I
	.quad	_L_1+105088
	.quad	_A__uTimes_var_LC_I
	.quad	_L_1+105103
	.quad	_A__Times_param_LC_i64
	.quad	_L_1+105119
	.quad	_A__uTimes_param_LC_i64
	.quad	_L_1+105138
	.quad	_A__Times_var_LC_i64
	.quad	_L_1+105158
	.quad	_A__uTimes_var_LC_i64
	.quad	_L_1+105175
	.quad	_A__Times_param_LC_LC
	.quad	_L_1+105193
	.quad	_A__uTimes_param_LC_LC
	.quad	_L_1+105211
	.quad	_A__Times_var_LC_LC
	.quad	_L_1+105230
	.quad	_A__uTimes_var_LC_LC
	.quad	_L_1+105246
	.quad	_A__Times_param_LC_i16
	.quad	_L_1+105263
	.quad	_A__uTimes_param_LC_i16
	.quad	_L_1+105282
	.quad	_A__Times_var_LC_i16
	.quad	_L_1+105302
	.quad	_A__uTimes_var_LC_i16
	.quad	_L_1+105319
	.quad	_A__Times_param_i16_i32
	.quad	_L_1+105337
	.quad	_A__uTimes_param_i16_i32
	.quad	_L_1+105357
	.quad	_A__Times_var_i16_i32
	.quad	_L_1+105378
	.quad	_A__uTimes_var_i16_i32
	.quad	_L_1+105396
	.quad	_A__Times_param_i16_u16
	.quad	_L_1+105415
	.quad	_A__uTimes_param_i16_u16
	.quad	_L_1+105435
	.quad	_A__Times_var_i16_u16
	.quad	_L_1+105456
	.quad	_A__uTimes_var_i16_u16
	.quad	_L_1+105474
	.quad	_A__Times_param_i16_u64
	.quad	_L_1+105493
	.quad	_A__uTimes_param_i16_u64
	.quad	_L_1+105513
	.quad	_A__Times_var_i16_u64
	.quad	_L_1+105534
	.quad	_A__uTimes_var_i16_u64
	.quad	_L_1+105552
	.quad	_A__Times_param_i16_L
	.quad	_L_1+105571
	.quad	_A__uTimes_param_i16_L
	.quad	_L_1+105589
	.quad	_A__Times_var_i16_L
	.quad	_L_1+105608
	.quad	_A__uTimes_var_i16_L
	.quad	_L_1+105624
	.quad	_A__Times_param_i16_i8
	.quad	_L_1+105641
	.quad	_A__uTimes_param_i16_i8
	.quad	_L_1+105660
	.quad	_A__Times_var_i16_i8
	.quad	_L_1+105680
	.quad	_A__uTimes_var_i16_i8
	.quad	_L_1+105697
	.quad	_A__Times_param_i16_u32
	.quad	_L_1+105715
	.quad	_A__uTimes_param_i16_u32
	.quad	_L_1+105735
	.quad	_A__Times_var_i16_u32
	.quad	_L_1+105756
	.quad	_A__uTimes_var_i16_u32
	.quad	_L_1+105774
	.quad	_A__Times_param_i16_C
	.quad	_L_1+105793
	.quad	_A__uTimes_param_i16_C
	.quad	_L_1+105811
	.quad	_A__Times_var_i16_C
	.quad	_L_1+105830
	.quad	_A__uTimes_var_i16_C
	.quad	_L_1+105846
	.quad	_A__Times_param_i16_u8
	.quad	_L_1+105863
	.quad	_A__uTimes_param_i16_u8
	.quad	_L_1+105882
	.quad	_A__Times_var_i16_u8
	.quad	_L_1+105902
	.quad	_A__uTimes_var_i16_u8
	.quad	_L_1+105919
	.quad	_A__Times_param_i16_I
	.quad	_L_1+105937
	.quad	_A__uTimes_param_i16_I
	.quad	_L_1+105955
	.quad	_A__Times_var_i16_I
	.quad	_L_1+105974
	.quad	_A__uTimes_var_i16_I
	.quad	_L_1+105990
	.quad	_A__Times_param_i16_i64
	.quad	_L_1+106007
	.quad	_A__uTimes_param_i16_i64
	.quad	_L_1+106027
	.quad	_A__Times_var_i16_i64
	.quad	_L_1+106048
	.quad	_A__uTimes_var_i16_i64
	.quad	_L_1+106066
	.quad	_A__Times_param_i16_LC
	.quad	_L_1+106085
	.quad	_A__uTimes_param_i16_LC
	.quad	_L_1+106104
	.quad	_A__Times_var_i16_LC
	.quad	_L_1+106124
	.quad	_A__uTimes_var_i16_LC
	.quad	_L_1+106141
	.quad	_A__Times_param_i16_i16
	.quad	_L_1+106159
	.quad	_A__uTimes_param_i16_i16
	.quad	_L_1+106179
	.quad	_A__Times_var_i16_i16
	.quad	_L_1+106200
	.quad	_A__uTimes_var_i16_i16
	.quad	_L_1+106218
	.quad	_A__Plus_param_i32_i32
	.quad	_L_1+106237
	.quad	_A__uPlus_param_i32_i32
	.quad	_L_1+106256
	.quad	_A__Plus_var_i32_i32
	.quad	_L_1+106276
	.quad	_A__uPlus_var_i32_i32
	.quad	_L_1+106293
	.quad	_A__Plus_param_i32_u16
	.quad	_L_1+106311
	.quad	_A__uPlus_param_i32_u16
	.quad	_L_1+106330
	.quad	_A__Plus_var_i32_u16
	.quad	_L_1+106350
	.quad	_A__uPlus_var_i32_u16
	.quad	_L_1+106367
	.quad	_A__Plus_param_i32_u64
	.quad	_L_1+106385
	.quad	_A__uPlus_param_i32_u64
	.quad	_L_1+106404
	.quad	_A__Plus_var_i32_u64
	.quad	_L_1+106424
	.quad	_A__uPlus_var_i32_u64
	.quad	_L_1+106441
	.quad	_A__Plus_param_i32_L
	.quad	_L_1+106459
	.quad	_A__uPlus_param_i32_L
	.quad	_L_1+106476
	.quad	_A__Plus_var_i32_L
	.quad	_L_1+106494
	.quad	_A__uPlus_var_i32_L
	.quad	_L_1+106509
	.quad	_A__Plus_param_i32_i8
	.quad	_L_1+106525
	.quad	_A__uPlus_param_i32_i8
	.quad	_L_1+106543
	.quad	_A__Plus_var_i32_i8
	.quad	_L_1+106562
	.quad	_A__uPlus_var_i32_i8
	.quad	_L_1+106578
	.quad	_A__Plus_param_i32_u32
	.quad	_L_1+106595
	.quad	_A__uPlus_param_i32_u32
	.quad	_L_1+106614
	.quad	_A__Plus_var_i32_u32
	.quad	_L_1+106634
	.quad	_A__uPlus_var_i32_u32
	.quad	_L_1+106651
	.quad	_A__Plus_param_i32_C
	.quad	_L_1+106669
	.quad	_A__uPlus_param_i32_C
	.quad	_L_1+106686
	.quad	_A__Plus_var_i32_C
	.quad	_L_1+106704
	.quad	_A__uPlus_var_i32_C
	.quad	_L_1+106719
	.quad	_A__Plus_param_i32_u8
	.quad	_L_1+106735
	.quad	_A__uPlus_param_i32_u8
	.quad	_L_1+106753
	.quad	_A__Plus_var_i32_u8
	.quad	_L_1+106772
	.quad	_A__uPlus_var_i32_u8
	.quad	_L_1+106788
	.quad	_A__Plus_param_i32_I
	.quad	_L_1+106805
	.quad	_A__uPlus_param_i32_I
	.quad	_L_1+106822
	.quad	_A__Plus_var_i32_I
	.quad	_L_1+106840
	.quad	_A__uPlus_var_i32_I
	.quad	_L_1+106855
	.quad	_A__Plus_param_i32_i64
	.quad	_L_1+106871
	.quad	_A__uPlus_param_i32_i64
	.quad	_L_1+106890
	.quad	_A__Plus_var_i32_i64
	.quad	_L_1+106910
	.quad	_A__uPlus_var_i32_i64
	.quad	_L_1+106927
	.quad	_A__Plus_param_i32_LC
	.quad	_L_1+106945
	.quad	_A__uPlus_param_i32_LC
	.quad	_L_1+106963
	.quad	_A__Plus_var_i32_LC
	.quad	_L_1+106982
	.quad	_A__uPlus_var_i32_LC
	.quad	_L_1+106998
	.quad	_A__Plus_param_i32_i16
	.quad	_L_1+107015
	.quad	_A__uPlus_param_i32_i16
	.quad	_L_1+107034
	.quad	_A__Plus_var_i32_i16
	.quad	_L_1+107054
	.quad	_A__uPlus_var_i32_i16
	.quad	_L_1+107071
	.quad	_A__Plus_param_u16_i32
	.quad	_L_1+107089
	.quad	_A__uPlus_param_u16_i32
	.quad	_L_1+107108
	.quad	_A__Plus_var_u16_i32
	.quad	_L_1+107128
	.quad	_A__uPlus_var_u16_i32
	.quad	_L_1+107145
	.quad	_A__Plus_param_u16_u16
	.quad	_L_1+107163
	.quad	_A__uPlus_param_u16_u16
	.quad	_L_1+107182
	.quad	_A__Plus_var_u16_u16
	.quad	_L_1+107202
	.quad	_A__uPlus_var_u16_u16
	.quad	_L_1+107219
	.quad	_A__Plus_param_u16_u64
	.quad	_L_1+107237
	.quad	_A__uPlus_param_u16_u64
	.quad	_L_1+107256
	.quad	_A__Plus_var_u16_u64
	.quad	_L_1+107276
	.quad	_A__uPlus_var_u16_u64
	.quad	_L_1+107293
	.quad	_A__Plus_param_u16_L
	.quad	_L_1+107311
	.quad	_A__uPlus_param_u16_L
	.quad	_L_1+107328
	.quad	_A__Plus_var_u16_L
	.quad	_L_1+107346
	.quad	_A__uPlus_var_u16_L
	.quad	_L_1+107361
	.quad	_A__Plus_param_u16_i8
	.quad	_L_1+107377
	.quad	_A__uPlus_param_u16_i8
	.quad	_L_1+107395
	.quad	_A__Plus_var_u16_i8
	.quad	_L_1+107414
	.quad	_A__uPlus_var_u16_i8
	.quad	_L_1+107430
	.quad	_A__Plus_param_u16_u32
	.quad	_L_1+107447
	.quad	_A__uPlus_param_u16_u32
	.quad	_L_1+107466
	.quad	_A__Plus_var_u16_u32
	.quad	_L_1+107486
	.quad	_A__uPlus_var_u16_u32
	.quad	_L_1+107503
	.quad	_A__Plus_param_u16_C
	.quad	_L_1+107521
	.quad	_A__uPlus_param_u16_C
	.quad	_L_1+107538
	.quad	_A__Plus_var_u16_C
	.quad	_L_1+107556
	.quad	_A__uPlus_var_u16_C
	.quad	_L_1+107571
	.quad	_A__Plus_param_u16_u8
	.quad	_L_1+107587
	.quad	_A__uPlus_param_u16_u8
	.quad	_L_1+107605
	.quad	_A__Plus_var_u16_u8
	.quad	_L_1+107624
	.quad	_A__uPlus_var_u16_u8
	.quad	_L_1+107640
	.quad	_A__Plus_param_u16_I
	.quad	_L_1+107657
	.quad	_A__uPlus_param_u16_I
	.quad	_L_1+107674
	.quad	_A__Plus_var_u16_I
	.quad	_L_1+107692
	.quad	_A__uPlus_var_u16_I
	.quad	_L_1+107707
	.quad	_A__Plus_param_u16_i64
	.quad	_L_1+107723
	.quad	_A__uPlus_param_u16_i64
	.quad	_L_1+107742
	.quad	_A__Plus_var_u16_i64
	.quad	_L_1+107762
	.quad	_A__uPlus_var_u16_i64
	.quad	_L_1+107779
	.quad	_A__Plus_param_u16_LC
	.quad	_L_1+107797
	.quad	_A__uPlus_param_u16_LC
	.quad	_L_1+107815
	.quad	_A__Plus_var_u16_LC
	.quad	_L_1+107834
	.quad	_A__uPlus_var_u16_LC
	.quad	_L_1+107850
	.quad	_A__Plus_param_u16_i16
	.quad	_L_1+107867
	.quad	_A__uPlus_param_u16_i16
	.quad	_L_1+107886
	.quad	_A__Plus_var_u16_i16
	.quad	_L_1+107906
	.quad	_A__uPlus_var_u16_i16
	.quad	_L_1+107923
	.quad	_A__Plus_param_u64_i32
	.quad	_L_1+107941
	.quad	_A__uPlus_param_u64_i32
	.quad	_L_1+107960
	.quad	_A__Plus_var_u64_i32
	.quad	_L_1+107980
	.quad	_A__uPlus_var_u64_i32
	.quad	_L_1+107997
	.quad	_A__Plus_param_u64_u16
	.quad	_L_1+108015
	.quad	_A__uPlus_param_u64_u16
	.quad	_L_1+108034
	.quad	_A__Plus_var_u64_u16
	.quad	_L_1+108054
	.quad	_A__uPlus_var_u64_u16
	.quad	_L_1+108071
	.quad	_A__Plus_param_u64_u64
	.quad	_L_1+108089
	.quad	_A__uPlus_param_u64_u64
	.quad	_L_1+108108
	.quad	_A__Plus_var_u64_u64
	.quad	_L_1+108128
	.quad	_A__uPlus_var_u64_u64
	.quad	_L_1+108145
	.quad	_A__Plus_param_u64_L
	.quad	_L_1+108163
	.quad	_A__uPlus_param_u64_L
	.quad	_L_1+108180
	.quad	_A__Plus_var_u64_L
	.quad	_L_1+108198
	.quad	_A__uPlus_var_u64_L
	.quad	_L_1+108213
	.quad	_A__Plus_param_u64_i8
	.quad	_L_1+108229
	.quad	_A__uPlus_param_u64_i8
	.quad	_L_1+108247
	.quad	_A__Plus_var_u64_i8
	.quad	_L_1+108266
	.quad	_A__uPlus_var_u64_i8
	.quad	_L_1+108282
	.quad	_A__Plus_param_u64_u32
	.quad	_L_1+108299
	.quad	_A__uPlus_param_u64_u32
	.quad	_L_1+108318
	.quad	_A__Plus_var_u64_u32
	.quad	_L_1+108338
	.quad	_A__uPlus_var_u64_u32
	.quad	_L_1+108355
	.quad	_A__Plus_param_u64_C
	.quad	_L_1+108373
	.quad	_A__uPlus_param_u64_C
	.quad	_L_1+108390
	.quad	_A__Plus_var_u64_C
	.quad	_L_1+108408
	.quad	_A__uPlus_var_u64_C
	.quad	_L_1+108423
	.quad	_A__Plus_param_u64_u8
	.quad	_L_1+108439
	.quad	_A__uPlus_param_u64_u8
	.quad	_L_1+108457
	.quad	_A__Plus_var_u64_u8
	.quad	_L_1+108476
	.quad	_A__uPlus_var_u64_u8
	.quad	_L_1+108492
	.quad	_A__Plus_param_u64_I
	.quad	_L_1+108509
	.quad	_A__uPlus_param_u64_I
	.quad	_L_1+108526
	.quad	_A__Plus_var_u64_I
	.quad	_L_1+108544
	.quad	_A__uPlus_var_u64_I
	.quad	_L_1+108559
	.quad	_A__Plus_param_u64_i64
	.quad	_L_1+108575
	.quad	_A__uPlus_param_u64_i64
	.quad	_L_1+108594
	.quad	_A__Plus_var_u64_i64
	.quad	_L_1+108614
	.quad	_A__uPlus_var_u64_i64
	.quad	_L_1+108631
	.quad	_A__Plus_param_u64_LC
	.quad	_L_1+108649
	.quad	_A__uPlus_param_u64_LC
	.quad	_L_1+108667
	.quad	_A__Plus_var_u64_LC
	.quad	_L_1+108686
	.quad	_A__uPlus_var_u64_LC
	.quad	_L_1+108702
	.quad	_A__Plus_param_u64_i16
	.quad	_L_1+108719
	.quad	_A__uPlus_param_u64_i16
	.quad	_L_1+108738
	.quad	_A__Plus_var_u64_i16
	.quad	_L_1+108758
	.quad	_A__uPlus_var_u64_i16
	.quad	_L_1+108775
	.quad	_A__Plus_param_L_i32
	.quad	_L_1+108793
	.quad	_A__uPlus_param_L_i32
	.quad	_L_1+108810
	.quad	_A__Plus_var_L_i32
	.quad	_L_1+108828
	.quad	_A__uPlus_var_L_i32
	.quad	_L_1+108843
	.quad	_A__Plus_param_L_u16
	.quad	_L_1+108859
	.quad	_A__uPlus_param_L_u16
	.quad	_L_1+108876
	.quad	_A__Plus_var_L_u16
	.quad	_L_1+108894
	.quad	_A__uPlus_var_L_u16
	.quad	_L_1+108909
	.quad	_A__Plus_param_L_u64
	.quad	_L_1+108925
	.quad	_A__uPlus_param_L_u64
	.quad	_L_1+108942
	.quad	_A__Plus_var_L_u64
	.quad	_L_1+108960
	.quad	_A__uPlus_var_L_u64
	.quad	_L_1+108975
	.quad	_A__Plus_param_L_L
	.quad	_L_1+108991
	.quad	_A__uPlus_param_L_L
	.quad	_L_1+109006
	.quad	_A__Plus_var_L_L
	.quad	_L_1+109022
	.quad	_A__uPlus_var_L_L
	.quad	_L_1+109035
	.quad	_A__Plus_param_L_i8
	.quad	_L_1+109049
	.quad	_A__uPlus_param_L_i8
	.quad	_L_1+109065
	.quad	_A__Plus_var_L_i8
	.quad	_L_1+109082
	.quad	_A__uPlus_var_L_i8
	.quad	_L_1+109096
	.quad	_A__Plus_param_L_u32
	.quad	_L_1+109111
	.quad	_A__uPlus_param_L_u32
	.quad	_L_1+109128
	.quad	_A__Plus_var_L_u32
	.quad	_L_1+109146
	.quad	_A__uPlus_var_L_u32
	.quad	_L_1+109161
	.quad	_A__Plus_param_L_C
	.quad	_L_1+109177
	.quad	_A__uPlus_param_L_C
	.quad	_L_1+109192
	.quad	_A__Plus_var_L_C
	.quad	_L_1+109208
	.quad	_A__uPlus_var_L_C
	.quad	_L_1+109221
	.quad	_A__Plus_param_L_u8
	.quad	_L_1+109235
	.quad	_A__uPlus_param_L_u8
	.quad	_L_1+109251
	.quad	_A__Plus_var_L_u8
	.quad	_L_1+109268
	.quad	_A__uPlus_var_L_u8
	.quad	_L_1+109282
	.quad	_A__Plus_param_L_I
	.quad	_L_1+109297
	.quad	_A__uPlus_param_L_I
	.quad	_L_1+109312
	.quad	_A__Plus_var_L_I
	.quad	_L_1+109328
	.quad	_A__uPlus_var_L_I
	.quad	_L_1+109341
	.quad	_A__Plus_param_L_i64
	.quad	_L_1+109355
	.quad	_A__uPlus_param_L_i64
	.quad	_L_1+109372
	.quad	_A__Plus_var_L_i64
	.quad	_L_1+109390
	.quad	_A__uPlus_var_L_i64
	.quad	_L_1+109405
	.quad	_A__Plus_param_L_LC
	.quad	_L_1+109421
	.quad	_A__uPlus_param_L_LC
	.quad	_L_1+109437
	.quad	_A__Plus_var_L_LC
	.quad	_L_1+109454
	.quad	_A__uPlus_var_L_LC
	.quad	_L_1+109468
	.quad	_A__Plus_param_L_i16
	.quad	_L_1+109483
	.quad	_A__uPlus_param_L_i16
	.quad	_L_1+109500
	.quad	_A__Plus_var_L_i16
	.quad	_L_1+109518
	.quad	_A__uPlus_var_L_i16
	.quad	_L_1+109533
	.quad	_A__Plus_param_i8_i32
	.quad	_L_1+109549
	.quad	_A__uPlus_param_i8_i32
	.quad	_L_1+109567
	.quad	_A__Plus_var_i8_i32
	.quad	_L_1+109586
	.quad	_A__uPlus_var_i8_i32
	.quad	_L_1+109602
	.quad	_A__Plus_param_i8_u16
	.quad	_L_1+109619
	.quad	_A__uPlus_param_i8_u16
	.quad	_L_1+109637
	.quad	_A__Plus_var_i8_u16
	.quad	_L_1+109656
	.quad	_A__uPlus_var_i8_u16
	.quad	_L_1+109672
	.quad	_A__Plus_param_i8_u64
	.quad	_L_1+109689
	.quad	_A__uPlus_param_i8_u64
	.quad	_L_1+109707
	.quad	_A__Plus_var_i8_u64
	.quad	_L_1+109726
	.quad	_A__uPlus_var_i8_u64
	.quad	_L_1+109742
	.quad	_A__Plus_param_i8_L
	.quad	_L_1+109759
	.quad	_A__uPlus_param_i8_L
	.quad	_L_1+109775
	.quad	_A__Plus_var_i8_L
	.quad	_L_1+109792
	.quad	_A__uPlus_var_i8_L
	.quad	_L_1+109806
	.quad	_A__Plus_param_i8_i8
	.quad	_L_1+109821
	.quad	_A__uPlus_param_i8_i8
	.quad	_L_1+109838
	.quad	_A__Plus_var_i8_i8
	.quad	_L_1+109856
	.quad	_A__uPlus_var_i8_i8
	.quad	_L_1+109871
	.quad	_A__Plus_param_i8_u32
	.quad	_L_1+109887
	.quad	_A__uPlus_param_i8_u32
	.quad	_L_1+109905
	.quad	_A__Plus_var_i8_u32
	.quad	_L_1+109924
	.quad	_A__uPlus_var_i8_u32
	.quad	_L_1+109940
	.quad	_A__Plus_param_i8_C
	.quad	_L_1+109957
	.quad	_A__uPlus_param_i8_C
	.quad	_L_1+109973
	.quad	_A__Plus_var_i8_C
	.quad	_L_1+109990
	.quad	_A__uPlus_var_i8_C
	.quad	_L_1+110004
	.quad	_A__Plus_param_i8_u8
	.quad	_L_1+110019
	.quad	_A__uPlus_param_i8_u8
	.quad	_L_1+110036
	.quad	_A__Plus_var_i8_u8
	.quad	_L_1+110054
	.quad	_A__uPlus_var_i8_u8
	.quad	_L_1+110069
	.quad	_A__Plus_param_i8_I
	.quad	_L_1+110085
	.quad	_A__uPlus_param_i8_I
	.quad	_L_1+110101
	.quad	_A__Plus_var_i8_I
	.quad	_L_1+110118
	.quad	_A__uPlus_var_i8_I
	.quad	_L_1+110132
	.quad	_A__Plus_param_i8_i64
	.quad	_L_1+110147
	.quad	_A__uPlus_param_i8_i64
	.quad	_L_1+110165
	.quad	_A__Plus_var_i8_i64
	.quad	_L_1+110184
	.quad	_A__uPlus_var_i8_i64
	.quad	_L_1+110200
	.quad	_A__Plus_param_i8_LC
	.quad	_L_1+110217
	.quad	_A__uPlus_param_i8_LC
	.quad	_L_1+110234
	.quad	_A__Plus_var_i8_LC
	.quad	_L_1+110252
	.quad	_A__uPlus_var_i8_LC
	.quad	_L_1+110267
	.quad	_A__Plus_param_i8_i16
	.quad	_L_1+110283
	.quad	_A__uPlus_param_i8_i16
	.quad	_L_1+110301
	.quad	_A__Plus_var_i8_i16
	.quad	_L_1+110320
	.quad	_A__uPlus_var_i8_i16
	.quad	_L_1+110336
	.quad	_A__Plus_param_u32_i32
	.quad	_L_1+110353
	.quad	_A__uPlus_param_u32_i32
	.quad	_L_1+110372
	.quad	_A__Plus_var_u32_i32
	.quad	_L_1+110392
	.quad	_A__uPlus_var_u32_i32
	.quad	_L_1+110409
	.quad	_A__Plus_param_u32_u16
	.quad	_L_1+110427
	.quad	_A__uPlus_param_u32_u16
	.quad	_L_1+110446
	.quad	_A__Plus_var_u32_u16
	.quad	_L_1+110466
	.quad	_A__uPlus_var_u32_u16
	.quad	_L_1+110483
	.quad	_A__Plus_param_u32_u64
	.quad	_L_1+110501
	.quad	_A__uPlus_param_u32_u64
	.quad	_L_1+110520
	.quad	_A__Plus_var_u32_u64
	.quad	_L_1+110540
	.quad	_A__uPlus_var_u32_u64
	.quad	_L_1+110557
	.quad	_A__Plus_param_u32_L
	.quad	_L_1+110575
	.quad	_A__uPlus_param_u32_L
	.quad	_L_1+110592
	.quad	_A__Plus_var_u32_L
	.quad	_L_1+110610
	.quad	_A__uPlus_var_u32_L
	.quad	_L_1+110625
	.quad	_A__Plus_param_u32_i8
	.quad	_L_1+110641
	.quad	_A__uPlus_param_u32_i8
	.quad	_L_1+110659
	.quad	_A__Plus_var_u32_i8
	.quad	_L_1+110678
	.quad	_A__uPlus_var_u32_i8
	.quad	_L_1+110694
	.quad	_A__Plus_param_u32_u32
	.quad	_L_1+110711
	.quad	_A__uPlus_param_u32_u32
	.quad	_L_1+110730
	.quad	_A__Plus_var_u32_u32
	.quad	_L_1+110750
	.quad	_A__uPlus_var_u32_u32
	.quad	_L_1+110767
	.quad	_A__Plus_param_u32_C
	.quad	_L_1+110785
	.quad	_A__uPlus_param_u32_C
	.quad	_L_1+110802
	.quad	_A__Plus_var_u32_C
	.quad	_L_1+110820
	.quad	_A__uPlus_var_u32_C
	.quad	_L_1+110835
	.quad	_A__Plus_param_u32_u8
	.quad	_L_1+110851
	.quad	_A__uPlus_param_u32_u8
	.quad	_L_1+110869
	.quad	_A__Plus_var_u32_u8
	.quad	_L_1+110888
	.quad	_A__uPlus_var_u32_u8
	.quad	_L_1+110904
	.quad	_A__Plus_param_u32_I
	.quad	_L_1+110921
	.quad	_A__uPlus_param_u32_I
	.quad	_L_1+110938
	.quad	_A__Plus_var_u32_I
	.quad	_L_1+110956
	.quad	_A__uPlus_var_u32_I
	.quad	_L_1+110971
	.quad	_A__Plus_param_u32_i64
	.quad	_L_1+110987
	.quad	_A__uPlus_param_u32_i64
	.quad	_L_1+111006
	.quad	_A__Plus_var_u32_i64
	.quad	_L_1+111026
	.quad	_A__uPlus_var_u32_i64
	.quad	_L_1+111043
	.quad	_A__Plus_param_u32_LC
	.quad	_L_1+111061
	.quad	_A__uPlus_param_u32_LC
	.quad	_L_1+111079
	.quad	_A__Plus_var_u32_LC
	.quad	_L_1+111098
	.quad	_A__uPlus_var_u32_LC
	.quad	_L_1+111114
	.quad	_A__Plus_param_u32_i16
	.quad	_L_1+111131
	.quad	_A__uPlus_param_u32_i16
	.quad	_L_1+111150
	.quad	_A__Plus_var_u32_i16
	.quad	_L_1+111170
	.quad	_A__uPlus_var_u32_i16
	.quad	_L_1+111187
	.quad	_A__Plus_param_f32_f32
	.quad	_L_1+111205
	.quad	_A__Plus_var_f32_f32
	.quad	_L_1+111224
	.quad	_A__Plus_param_C_i32
	.quad	_L_1+111241
	.quad	_A__uPlus_param_C_i32
	.quad	_L_1+111258
	.quad	_A__Plus_var_C_i32
	.quad	_L_1+111276
	.quad	_A__uPlus_var_C_i32
	.quad	_L_1+111291
	.quad	_A__Plus_param_C_u16
	.quad	_L_1+111307
	.quad	_A__uPlus_param_C_u16
	.quad	_L_1+111324
	.quad	_A__Plus_var_C_u16
	.quad	_L_1+111342
	.quad	_A__uPlus_var_C_u16
	.quad	_L_1+111357
	.quad	_A__Plus_param_C_u64
	.quad	_L_1+111373
	.quad	_A__uPlus_param_C_u64
	.quad	_L_1+111390
	.quad	_A__Plus_var_C_u64
	.quad	_L_1+111408
	.quad	_A__uPlus_var_C_u64
	.quad	_L_1+111423
	.quad	_A__Plus_param_C_L
	.quad	_L_1+111439
	.quad	_A__uPlus_param_C_L
	.quad	_L_1+111454
	.quad	_A__Plus_var_C_L
	.quad	_L_1+111470
	.quad	_A__uPlus_var_C_L
	.quad	_L_1+111483
	.quad	_A__Plus_param_C_i8
	.quad	_L_1+111497
	.quad	_A__uPlus_param_C_i8
	.quad	_L_1+111513
	.quad	_A__Plus_var_C_i8
	.quad	_L_1+111530
	.quad	_A__uPlus_var_C_i8
	.quad	_L_1+111544
	.quad	_A__Plus_param_C_u32
	.quad	_L_1+111559
	.quad	_A__uPlus_param_C_u32
	.quad	_L_1+111576
	.quad	_A__Plus_var_C_u32
	.quad	_L_1+111594
	.quad	_A__uPlus_var_C_u32
	.quad	_L_1+111609
	.quad	_A__Plus_param_C_C
	.quad	_L_1+111625
	.quad	_A__uPlus_param_C_C
	.quad	_L_1+111640
	.quad	_A__Plus_var_C_C
	.quad	_L_1+111656
	.quad	_A__uPlus_var_C_C
	.quad	_L_1+111669
	.quad	_A__Plus_param_C_u8
	.quad	_L_1+111683
	.quad	_A__uPlus_param_C_u8
	.quad	_L_1+111699
	.quad	_A__Plus_var_C_u8
	.quad	_L_1+111716
	.quad	_A__uPlus_var_C_u8
	.quad	_L_1+111730
	.quad	_A__Plus_param_C_I
	.quad	_L_1+111745
	.quad	_A__uPlus_param_C_I
	.quad	_L_1+111760
	.quad	_A__Plus_var_C_I
	.quad	_L_1+111776
	.quad	_A__uPlus_var_C_I
	.quad	_L_1+111789
	.quad	_A__Plus_param_C_i64
	.quad	_L_1+111803
	.quad	_A__uPlus_param_C_i64
	.quad	_L_1+111820
	.quad	_A__Plus_var_C_i64
	.quad	_L_1+111838
	.quad	_A__uPlus_var_C_i64
	.quad	_L_1+111853
	.quad	_A__Plus_param_C_LC
	.quad	_L_1+111869
	.quad	_A__uPlus_param_C_LC
	.quad	_L_1+111885
	.quad	_A__Plus_var_C_LC
	.quad	_L_1+111902
	.quad	_A__uPlus_var_C_LC
	.quad	_L_1+111916
	.quad	_A__Plus_param_C_i16
	.quad	_L_1+111931
	.quad	_A__uPlus_param_C_i16
	.quad	_L_1+111948
	.quad	_A__Plus_var_C_i16
	.quad	_L_1+111966
	.quad	_A__uPlus_var_C_i16
	.quad	_L_1+111981
	.quad	_A__Plus_param_u8_i32
	.quad	_L_1+111997
	.quad	_A__uPlus_param_u8_i32
	.quad	_L_1+112015
	.quad	_A__Plus_var_u8_i32
	.quad	_L_1+112034
	.quad	_A__uPlus_var_u8_i32
	.quad	_L_1+112050
	.quad	_A__Plus_param_u8_u16
	.quad	_L_1+112067
	.quad	_A__uPlus_param_u8_u16
	.quad	_L_1+112085
	.quad	_A__Plus_var_u8_u16
	.quad	_L_1+112104
	.quad	_A__uPlus_var_u8_u16
	.quad	_L_1+112120
	.quad	_A__Plus_param_u8_u64
	.quad	_L_1+112137
	.quad	_A__uPlus_param_u8_u64
	.quad	_L_1+112155
	.quad	_A__Plus_var_u8_u64
	.quad	_L_1+112174
	.quad	_A__uPlus_var_u8_u64
	.quad	_L_1+112190
	.quad	_A__Plus_param_u8_L
	.quad	_L_1+112207
	.quad	_A__uPlus_param_u8_L
	.quad	_L_1+112223
	.quad	_A__Plus_var_u8_L
	.quad	_L_1+112240
	.quad	_A__uPlus_var_u8_L
	.quad	_L_1+112254
	.quad	_A__Plus_param_u8_i8
	.quad	_L_1+112269
	.quad	_A__uPlus_param_u8_i8
	.quad	_L_1+112286
	.quad	_A__Plus_var_u8_i8
	.quad	_L_1+112304
	.quad	_A__uPlus_var_u8_i8
	.quad	_L_1+112319
	.quad	_A__Plus_param_u8_u32
	.quad	_L_1+112335
	.quad	_A__uPlus_param_u8_u32
	.quad	_L_1+112353
	.quad	_A__Plus_var_u8_u32
	.quad	_L_1+112372
	.quad	_A__uPlus_var_u8_u32
	.quad	_L_1+112388
	.quad	_A__Plus_param_u8_C
	.quad	_L_1+112405
	.quad	_A__uPlus_param_u8_C
	.quad	_L_1+112421
	.quad	_A__Plus_var_u8_C
	.quad	_L_1+112438
	.quad	_A__uPlus_var_u8_C
	.quad	_L_1+112452
	.quad	_A__Plus_param_u8_u8
	.quad	_L_1+112467
	.quad	_A__uPlus_param_u8_u8
	.quad	_L_1+112484
	.quad	_A__Plus_var_u8_u8
	.quad	_L_1+112502
	.quad	_A__uPlus_var_u8_u8
	.quad	_L_1+112517
	.quad	_A__Plus_param_u8_I
	.quad	_L_1+112533
	.quad	_A__uPlus_param_u8_I
	.quad	_L_1+112549
	.quad	_A__Plus_var_u8_I
	.quad	_L_1+112566
	.quad	_A__uPlus_var_u8_I
	.quad	_L_1+112580
	.quad	_A__Plus_param_u8_i64
	.quad	_L_1+112595
	.quad	_A__uPlus_param_u8_i64
	.quad	_L_1+112613
	.quad	_A__Plus_var_u8_i64
	.quad	_L_1+112632
	.quad	_A__uPlus_var_u8_i64
	.quad	_L_1+112648
	.quad	_A__Plus_param_u8_LC
	.quad	_L_1+112665
	.quad	_A__uPlus_param_u8_LC
	.quad	_L_1+112682
	.quad	_A__Plus_var_u8_LC
	.quad	_L_1+112700
	.quad	_A__uPlus_var_u8_LC
	.quad	_L_1+112715
	.quad	_A__Plus_param_u8_i16
	.quad	_L_1+112731
	.quad	_A__uPlus_param_u8_i16
	.quad	_L_1+112749
	.quad	_A__Plus_var_u8_i16
	.quad	_L_1+112768
	.quad	_A__uPlus_var_u8_i16
	.quad	_L_1+112784
	.quad	_A__Plus_param_I_i32
	.quad	_L_1+112801
	.quad	_A__uPlus_param_I_i32
	.quad	_L_1+112818
	.quad	_A__Plus_var_I_i32
	.quad	_L_1+112836
	.quad	_A__uPlus_var_I_i32
	.quad	_L_1+112851
	.quad	_A__Plus_param_I_u16
	.quad	_L_1+112867
	.quad	_A__uPlus_param_I_u16
	.quad	_L_1+112884
	.quad	_A__Plus_var_I_u16
	.quad	_L_1+112902
	.quad	_A__uPlus_var_I_u16
	.quad	_L_1+112917
	.quad	_A__Plus_param_I_u64
	.quad	_L_1+112933
	.quad	_A__uPlus_param_I_u64
	.quad	_L_1+112950
	.quad	_A__Plus_var_I_u64
	.quad	_L_1+112968
	.quad	_A__uPlus_var_I_u64
	.quad	_L_1+112983
	.quad	_A__Plus_param_I_L
	.quad	_L_1+112999
	.quad	_A__uPlus_param_I_L
	.quad	_L_1+113014
	.quad	_A__Plus_var_I_L
	.quad	_L_1+113030
	.quad	_A__uPlus_var_I_L
	.quad	_L_1+113043
	.quad	_A__Plus_param_I_i8
	.quad	_L_1+113057
	.quad	_A__uPlus_param_I_i8
	.quad	_L_1+113073
	.quad	_A__Plus_var_I_i8
	.quad	_L_1+113090
	.quad	_A__uPlus_var_I_i8
	.quad	_L_1+113104
	.quad	_A__Plus_param_I_u32
	.quad	_L_1+113119
	.quad	_A__uPlus_param_I_u32
	.quad	_L_1+113136
	.quad	_A__Plus_var_I_u32
	.quad	_L_1+113154
	.quad	_A__uPlus_var_I_u32
	.quad	_L_1+113169
	.quad	_A__Plus_param_I_C
	.quad	_L_1+113185
	.quad	_A__uPlus_param_I_C
	.quad	_L_1+113200
	.quad	_A__Plus_var_I_C
	.quad	_L_1+113216
	.quad	_A__uPlus_var_I_C
	.quad	_L_1+113229
	.quad	_A__Plus_param_I_u8
	.quad	_L_1+113243
	.quad	_A__uPlus_param_I_u8
	.quad	_L_1+113259
	.quad	_A__Plus_var_I_u8
	.quad	_L_1+113276
	.quad	_A__uPlus_var_I_u8
	.quad	_L_1+113290
	.quad	_A__Plus_param_I_I
	.quad	_L_1+113305
	.quad	_A__uPlus_param_I_I
	.quad	_L_1+113320
	.quad	_A__Plus_var_I_I
	.quad	_L_1+113336
	.quad	_A__uPlus_var_I_I
	.quad	_L_1+113349
	.quad	_A__Plus_param_I_i64
	.quad	_L_1+113363
	.quad	_A__uPlus_param_I_i64
	.quad	_L_1+113380
	.quad	_A__Plus_var_I_i64
	.quad	_L_1+113398
	.quad	_A__uPlus_var_I_i64
	.quad	_L_1+113413
	.quad	_A__Plus_param_I_LC
	.quad	_L_1+113429
	.quad	_A__uPlus_param_I_LC
	.quad	_L_1+113445
	.quad	_A__Plus_var_I_LC
	.quad	_L_1+113462
	.quad	_A__uPlus_var_I_LC
	.quad	_L_1+113476
	.quad	_A__Plus_param_I_i16
	.quad	_L_1+113491
	.quad	_A__uPlus_param_I_i16
	.quad	_L_1+113508
	.quad	_A__Plus_var_I_i16
	.quad	_L_1+113526
	.quad	_A__uPlus_var_I_i16
	.quad	_L_1+113541
	.quad	_A__Plus_param_i64_i32
	.quad	_L_1+113557
	.quad	_A__uPlus_param_i64_i32
	.quad	_L_1+113576
	.quad	_A__Plus_var_i64_i32
	.quad	_L_1+113596
	.quad	_A__uPlus_var_i64_i32
	.quad	_L_1+113613
	.quad	_A__Plus_param_i64_u16
	.quad	_L_1+113631
	.quad	_A__uPlus_param_i64_u16
	.quad	_L_1+113650
	.quad	_A__Plus_var_i64_u16
	.quad	_L_1+113670
	.quad	_A__uPlus_var_i64_u16
	.quad	_L_1+113687
	.quad	_A__Plus_param_i64_u64
	.quad	_L_1+113705
	.quad	_A__uPlus_param_i64_u64
	.quad	_L_1+113724
	.quad	_A__Plus_var_i64_u64
	.quad	_L_1+113744
	.quad	_A__uPlus_var_i64_u64
	.quad	_L_1+113761
	.quad	_A__Plus_param_i64_L
	.quad	_L_1+113779
	.quad	_A__uPlus_param_i64_L
	.quad	_L_1+113796
	.quad	_A__Plus_var_i64_L
	.quad	_L_1+113814
	.quad	_A__uPlus_var_i64_L
	.quad	_L_1+113829
	.quad	_A__Plus_param_i64_i8
	.quad	_L_1+113845
	.quad	_A__uPlus_param_i64_i8
	.quad	_L_1+113863
	.quad	_A__Plus_var_i64_i8
	.quad	_L_1+113882
	.quad	_A__uPlus_var_i64_i8
	.quad	_L_1+113898
	.quad	_A__Plus_param_i64_u32
	.quad	_L_1+113915
	.quad	_A__uPlus_param_i64_u32
	.quad	_L_1+113934
	.quad	_A__Plus_var_i64_u32
	.quad	_L_1+113954
	.quad	_A__uPlus_var_i64_u32
	.quad	_L_1+113971
	.quad	_A__Plus_param_i64_C
	.quad	_L_1+113989
	.quad	_A__uPlus_param_i64_C
	.quad	_L_1+114006
	.quad	_A__Plus_var_i64_C
	.quad	_L_1+114024
	.quad	_A__uPlus_var_i64_C
	.quad	_L_1+114039
	.quad	_A__Plus_param_i64_u8
	.quad	_L_1+114055
	.quad	_A__uPlus_param_i64_u8
	.quad	_L_1+114073
	.quad	_A__Plus_var_i64_u8
	.quad	_L_1+114092
	.quad	_A__uPlus_var_i64_u8
	.quad	_L_1+114108
	.quad	_A__Plus_param_i64_I
	.quad	_L_1+114125
	.quad	_A__uPlus_param_i64_I
	.quad	_L_1+114142
	.quad	_A__Plus_var_i64_I
	.quad	_L_1+114160
	.quad	_A__uPlus_var_i64_I
	.quad	_L_1+114175
	.quad	_A__Plus_param_i64_i64
	.quad	_L_1+114191
	.quad	_A__uPlus_param_i64_i64
	.quad	_L_1+114210
	.quad	_A__Plus_var_i64_i64
	.quad	_L_1+114230
	.quad	_A__uPlus_var_i64_i64
	.quad	_L_1+114247
	.quad	_A__Plus_param_i64_LC
	.quad	_L_1+114265
	.quad	_A__uPlus_param_i64_LC
	.quad	_L_1+114283
	.quad	_A__Plus_var_i64_LC
	.quad	_L_1+114302
	.quad	_A__uPlus_var_i64_LC
	.quad	_L_1+114318
	.quad	_A__Plus_param_i64_i16
	.quad	_L_1+114335
	.quad	_A__uPlus_param_i64_i16
	.quad	_L_1+114354
	.quad	_A__Plus_var_i64_i16
	.quad	_L_1+114374
	.quad	_A__uPlus_var_i64_i16
	.quad	_L_1+114391
	.quad	_A__Plus_param_f64_f64
	.quad	_L_1+114409
	.quad	_A__Plus_var_f64_f64
	.quad	_L_1+114428
	.quad	_A__Plus_param_LC_i32
	.quad	_L_1+114445
	.quad	_A__uPlus_param_LC_i32
	.quad	_L_1+114463
	.quad	_A__Plus_var_LC_i32
	.quad	_L_1+114482
	.quad	_A__uPlus_var_LC_i32
	.quad	_L_1+114498
	.quad	_A__Plus_param_LC_u16
	.quad	_L_1+114515
	.quad	_A__uPlus_param_LC_u16
	.quad	_L_1+114533
	.quad	_A__Plus_var_LC_u16
	.quad	_L_1+114552
	.quad	_A__uPlus_var_LC_u16
	.quad	_L_1+114568
	.quad	_A__Plus_param_LC_u64
	.quad	_L_1+114585
	.quad	_A__uPlus_param_LC_u64
	.quad	_L_1+114603
	.quad	_A__Plus_var_LC_u64
	.quad	_L_1+114622
	.quad	_A__uPlus_var_LC_u64
	.quad	_L_1+114638
	.quad	_A__Plus_param_LC_L
	.quad	_L_1+114655
	.quad	_A__uPlus_param_LC_L
	.quad	_L_1+114671
	.quad	_A__Plus_var_LC_L
	.quad	_L_1+114688
	.quad	_A__uPlus_var_LC_L
	.quad	_L_1+114702
	.quad	_A__Plus_param_LC_i8
	.quad	_L_1+114717
	.quad	_A__uPlus_param_LC_i8
	.quad	_L_1+114734
	.quad	_A__Plus_var_LC_i8
	.quad	_L_1+114752
	.quad	_A__uPlus_var_LC_i8
	.quad	_L_1+114767
	.quad	_A__Plus_param_LC_u32
	.quad	_L_1+114783
	.quad	_A__uPlus_param_LC_u32
	.quad	_L_1+114801
	.quad	_A__Plus_var_LC_u32
	.quad	_L_1+114820
	.quad	_A__uPlus_var_LC_u32
	.quad	_L_1+114836
	.quad	_A__Plus_param_LC_C
	.quad	_L_1+114853
	.quad	_A__uPlus_param_LC_C
	.quad	_L_1+114869
	.quad	_A__Plus_var_LC_C
	.quad	_L_1+114886
	.quad	_A__uPlus_var_LC_C
	.quad	_L_1+114900
	.quad	_A__Plus_param_LC_u8
	.quad	_L_1+114915
	.quad	_A__uPlus_param_LC_u8
	.quad	_L_1+114932
	.quad	_A__Plus_var_LC_u8
	.quad	_L_1+114950
	.quad	_A__uPlus_var_LC_u8
	.quad	_L_1+114965
	.quad	_A__Plus_param_LC_I
	.quad	_L_1+114981
	.quad	_A__uPlus_param_LC_I
	.quad	_L_1+114997
	.quad	_A__Plus_var_LC_I
	.quad	_L_1+115014
	.quad	_A__uPlus_var_LC_I
	.quad	_L_1+115028
	.quad	_A__Plus_param_LC_i64
	.quad	_L_1+115043
	.quad	_A__uPlus_param_LC_i64
	.quad	_L_1+115061
	.quad	_A__Plus_var_LC_i64
	.quad	_L_1+115080
	.quad	_A__uPlus_var_LC_i64
	.quad	_L_1+115096
	.quad	_A__Plus_param_LC_LC
	.quad	_L_1+115113
	.quad	_A__uPlus_param_LC_LC
	.quad	_L_1+115130
	.quad	_A__Plus_var_LC_LC
	.quad	_L_1+115148
	.quad	_A__uPlus_var_LC_LC
	.quad	_L_1+115163
	.quad	_A__Plus_param_LC_i16
	.quad	_L_1+115179
	.quad	_A__uPlus_param_LC_i16
	.quad	_L_1+115197
	.quad	_A__Plus_var_LC_i16
	.quad	_L_1+115216
	.quad	_A__uPlus_var_LC_i16
	.quad	_L_1+115232
	.quad	_A__Plus_param_i16_i32
	.quad	_L_1+115249
	.quad	_A__uPlus_param_i16_i32
	.quad	_L_1+115268
	.quad	_A__Plus_var_i16_i32
	.quad	_L_1+115288
	.quad	_A__uPlus_var_i16_i32
	.quad	_L_1+115305
	.quad	_A__Plus_param_i16_u16
	.quad	_L_1+115323
	.quad	_A__uPlus_param_i16_u16
	.quad	_L_1+115342
	.quad	_A__Plus_var_i16_u16
	.quad	_L_1+115362
	.quad	_A__uPlus_var_i16_u16
	.quad	_L_1+115379
	.quad	_A__Plus_param_i16_u64
	.quad	_L_1+115397
	.quad	_A__uPlus_param_i16_u64
	.quad	_L_1+115416
	.quad	_A__Plus_var_i16_u64
	.quad	_L_1+115436
	.quad	_A__uPlus_var_i16_u64
	.quad	_L_1+115453
	.quad	_A__Plus_param_i16_L
	.quad	_L_1+115471
	.quad	_A__uPlus_param_i16_L
	.quad	_L_1+115488
	.quad	_A__Plus_var_i16_L
	.quad	_L_1+115506
	.quad	_A__uPlus_var_i16_L
	.quad	_L_1+115521
	.quad	_A__Plus_param_i16_i8
	.quad	_L_1+115537
	.quad	_A__uPlus_param_i16_i8
	.quad	_L_1+115555
	.quad	_A__Plus_var_i16_i8
	.quad	_L_1+115574
	.quad	_A__uPlus_var_i16_i8
	.quad	_L_1+115590
	.quad	_A__Plus_param_i16_u32
	.quad	_L_1+115607
	.quad	_A__uPlus_param_i16_u32
	.quad	_L_1+115626
	.quad	_A__Plus_var_i16_u32
	.quad	_L_1+115646
	.quad	_A__uPlus_var_i16_u32
	.quad	_L_1+115663
	.quad	_A__Plus_param_i16_C
	.quad	_L_1+115681
	.quad	_A__uPlus_param_i16_C
	.quad	_L_1+115698
	.quad	_A__Plus_var_i16_C
	.quad	_L_1+115716
	.quad	_A__uPlus_var_i16_C
	.quad	_L_1+115731
	.quad	_A__Plus_param_i16_u8
	.quad	_L_1+115747
	.quad	_A__uPlus_param_i16_u8
	.quad	_L_1+115765
	.quad	_A__Plus_var_i16_u8
	.quad	_L_1+115784
	.quad	_A__uPlus_var_i16_u8
	.quad	_L_1+115800
	.quad	_A__Plus_param_i16_I
	.quad	_L_1+115817
	.quad	_A__uPlus_param_i16_I
	.quad	_L_1+115834
	.quad	_A__Plus_var_i16_I
	.quad	_L_1+115852
	.quad	_A__uPlus_var_i16_I
	.quad	_L_1+115867
	.quad	_A__Plus_param_i16_i64
	.quad	_L_1+115883
	.quad	_A__uPlus_param_i16_i64
	.quad	_L_1+115902
	.quad	_A__Plus_var_i16_i64
	.quad	_L_1+115922
	.quad	_A__uPlus_var_i16_i64
	.quad	_L_1+115939
	.quad	_A__Plus_param_i16_LC
	.quad	_L_1+115957
	.quad	_A__uPlus_param_i16_LC
	.quad	_L_1+115975
	.quad	_A__Plus_var_i16_LC
	.quad	_L_1+115994
	.quad	_A__uPlus_var_i16_LC
	.quad	_L_1+116010
	.quad	_A__Plus_param_i16_i16
	.quad	_L_1+116027
	.quad	_A__uPlus_param_i16_i16
	.quad	_L_1+116046
	.quad	_A__Plus_var_i16_i16
	.quad	_L_1+116066
	.quad	_A__uPlus_var_i16_i16
	.quad	_L_1+116083
	.quad	_A__ret_u16_u16
	.quad	_L_1+116101
	.quad	_A__ret_u16_i32
	.quad	_L_1+116113
	.quad	_A__ret_u16_u64
	.quad	_L_1+116125
	.quad	_A__ret_u16_L
	.quad	_L_1+116137
	.quad	_A__ret_u16_i8
	.quad	_L_1+116147
	.quad	_A__ret_u16_u32
	.quad	_L_1+116158
	.quad	_A__ret_u16_C
	.quad	_L_1+116170
	.quad	_A__ret_u16_u8
	.quad	_L_1+116180
	.quad	_A__ret_u16_I
	.quad	_L_1+116191
	.quad	_A__ret_u16_i16
	.quad	_L_1+116201
	.quad	_A__ret_u16_i64
	.quad	_L_1+116213
	.quad	_A__ret_u16_LC
	.quad	_L_1+116225
	.quad	_A__ret_i32_u16
	.quad	_L_1+116236
	.quad	_A__ret_i32_i32
	.quad	_L_1+116248
	.quad	_A__ret_i32_u64
	.quad	_L_1+116260
	.quad	_A__ret_i32_L
	.quad	_L_1+116272
	.quad	_A__ret_i32_i8
	.quad	_L_1+116282
	.quad	_A__ret_i32_u32
	.quad	_L_1+116293
	.quad	_A__ret_i32_C
	.quad	_L_1+116305
	.quad	_A__ret_i32_u8
	.quad	_L_1+116315
	.quad	_A__ret_i32_I
	.quad	_L_1+116326
	.quad	_A__ret_i32_i16
	.quad	_L_1+116336
	.quad	_A__ret_i32_i64
	.quad	_L_1+116348
	.quad	_A__ret_i32_LC
	.quad	_L_1+116360
	.quad	_A__ret_u64_u16
	.quad	_L_1+116371
	.quad	_A__ret_u64_i32
	.quad	_L_1+116383
	.quad	_A__ret_u64_u64
	.quad	_L_1+116395
	.quad	_A__ret_u64_L
	.quad	_L_1+116407
	.quad	_A__ret_u64_i8
	.quad	_L_1+116417
	.quad	_A__ret_u64_u32
	.quad	_L_1+116428
	.quad	_A__ret_u64_C
	.quad	_L_1+116440
	.quad	_A__ret_u64_u8
	.quad	_L_1+116450
	.quad	_A__ret_u64_I
	.quad	_L_1+116461
	.quad	_A__ret_u64_i16
	.quad	_L_1+116471
	.quad	_A__ret_u64_i64
	.quad	_L_1+116483
	.quad	_A__ret_u64_LC
	.quad	_L_1+116495
	.quad	_A__ret_L_u16
	.quad	_L_1+116506
	.quad	_A__ret_L_i32
	.quad	_L_1+116516
	.quad	_A__ret_L_u64
	.quad	_L_1+116526
	.quad	_A__ret_L_L
	.quad	_L_1+116536
	.quad	_A__ret_L_i8
	.quad	_L_1+116544
	.quad	_A__ret_L_u32
	.quad	_L_1+116553
	.quad	_A__ret_L_C
	.quad	_L_1+116563
	.quad	_A__ret_L_u8
	.quad	_L_1+116571
	.quad	_A__ret_L_I
	.quad	_L_1+116580
	.quad	_A__ret_L_i16
	.quad	_L_1+116588
	.quad	_A__ret_L_i64
	.quad	_L_1+116598
	.quad	_A__ret_L_LC
	.quad	_L_1+116608
	.quad	_A__ret_i8_u16
	.quad	_L_1+116617
	.quad	_A__ret_i8_i32
	.quad	_L_1+116628
	.quad	_A__ret_i8_u64
	.quad	_L_1+116639
	.quad	_A__ret_i8_L
	.quad	_L_1+116650
	.quad	_A__ret_i8_i8
	.quad	_L_1+116659
	.quad	_A__ret_i8_u32
	.quad	_L_1+116669
	.quad	_A__ret_i8_C
	.quad	_L_1+116680
	.quad	_A__ret_i8_u8
	.quad	_L_1+116689
	.quad	_A__ret_i8_I
	.quad	_L_1+116699
	.quad	_A__ret_i8_i16
	.quad	_L_1+116708
	.quad	_A__ret_i8_i64
	.quad	_L_1+116719
	.quad	_A__ret_i8_LC
	.quad	_L_1+116730
	.quad	_A__ret_u32_u16
	.quad	_L_1+116740
	.quad	_A__ret_u32_i32
	.quad	_L_1+116752
	.quad	_A__ret_u32_u64
	.quad	_L_1+116764
	.quad	_A__ret_u32_L
	.quad	_L_1+116776
	.quad	_A__ret_u32_i8
	.quad	_L_1+116786
	.quad	_A__ret_u32_u32
	.quad	_L_1+116797
	.quad	_A__ret_u32_C
	.quad	_L_1+116809
	.quad	_A__ret_u32_u8
	.quad	_L_1+116819
	.quad	_A__ret_u32_I
	.quad	_L_1+116830
	.quad	_A__ret_u32_i16
	.quad	_L_1+116840
	.quad	_A__ret_u32_i64
	.quad	_L_1+116852
	.quad	_A__ret_u32_LC
	.quad	_L_1+116864
	.quad	_A__ret_C_u16
	.quad	_L_1+116875
	.quad	_A__ret_C_i32
	.quad	_L_1+116885
	.quad	_A__ret_C_u64
	.quad	_L_1+116895
	.quad	_A__ret_C_L
	.quad	_L_1+116905
	.quad	_A__ret_C_i8
	.quad	_L_1+116913
	.quad	_A__ret_C_u32
	.quad	_L_1+116922
	.quad	_A__ret_C_C
	.quad	_L_1+116932
	.quad	_A__ret_C_u8
	.quad	_L_1+116940
	.quad	_A__ret_C_I
	.quad	_L_1+116949
	.quad	_A__ret_C_i16
	.quad	_L_1+116957
	.quad	_A__ret_C_i64
	.quad	_L_1+116967
	.quad	_A__ret_C_LC
	.quad	_L_1+116977
	.quad	_A__ret_u8_u16
	.quad	_L_1+116986
	.quad	_A__ret_u8_i32
	.quad	_L_1+116997
	.quad	_A__ret_u8_u64
	.quad	_L_1+117008
	.quad	_A__ret_u8_L
	.quad	_L_1+117019
	.quad	_A__ret_u8_i8
	.quad	_L_1+117028
	.quad	_A__ret_u8_u32
	.quad	_L_1+117038
	.quad	_A__ret_u8_C
	.quad	_L_1+117049
	.quad	_A__ret_u8_u8
	.quad	_L_1+117058
	.quad	_A__ret_u8_I
	.quad	_L_1+117068
	.quad	_A__ret_u8_i16
	.quad	_L_1+117077
	.quad	_A__ret_u8_i64
	.quad	_L_1+117088
	.quad	_A__ret_u8_LC
	.quad	_L_1+117099
	.quad	_A__ret_I_u16
	.quad	_L_1+117109
	.quad	_A__ret_I_i32
	.quad	_L_1+117119
	.quad	_A__ret_I_u64
	.quad	_L_1+117129
	.quad	_A__ret_I_L
	.quad	_L_1+117139
	.quad	_A__ret_I_i8
	.quad	_L_1+117147
	.quad	_A__ret_I_u32
	.quad	_L_1+117156
	.quad	_A__ret_I_C
	.quad	_L_1+117166
	.quad	_A__ret_I_u8
	.quad	_L_1+117174
	.quad	_A__ret_I_I
	.quad	_L_1+117183
	.quad	_A__ret_I_i16
	.quad	_L_1+117191
	.quad	_A__ret_I_i64
	.quad	_L_1+117201
	.quad	_A__ret_I_LC
	.quad	_L_1+117211
	.quad	_A__ret_i16_u16
	.quad	_L_1+117220
	.quad	_A__ret_i16_i32
	.quad	_L_1+117232
	.quad	_A__ret_i16_u64
	.quad	_L_1+117244
	.quad	_A__ret_i16_L
	.quad	_L_1+117256
	.quad	_A__ret_i16_i8
	.quad	_L_1+117266
	.quad	_A__ret_i16_u32
	.quad	_L_1+117277
	.quad	_A__ret_i16_C
	.quad	_L_1+117289
	.quad	_A__ret_i16_u8
	.quad	_L_1+117299
	.quad	_A__ret_i16_I
	.quad	_L_1+117310
	.quad	_A__ret_i16_i16
	.quad	_L_1+117320
	.quad	_A__ret_i16_i64
	.quad	_L_1+117332
	.quad	_A__ret_i16_LC
	.quad	_L_1+117344
	.quad	_A__ret_i64_u16
	.quad	_L_1+117355
	.quad	_A__ret_i64_i32
	.quad	_L_1+117367
	.quad	_A__ret_i64_u64
	.quad	_L_1+117379
	.quad	_A__ret_i64_L
	.quad	_L_1+117391
	.quad	_A__ret_i64_i8
	.quad	_L_1+117401
	.quad	_A__ret_i64_u32
	.quad	_L_1+117412
	.quad	_A__ret_i64_C
	.quad	_L_1+117424
	.quad	_A__ret_i64_u8
	.quad	_L_1+117434
	.quad	_A__ret_i64_I
	.quad	_L_1+117445
	.quad	_A__ret_i64_i16
	.quad	_L_1+117455
	.quad	_A__ret_i64_i64
	.quad	_L_1+117467
	.quad	_A__ret_i64_LC
	.quad	_L_1+117479
	.quad	_A__ret_LC_u16
	.quad	_L_1+117490
	.quad	_A__ret_LC_i32
	.quad	_L_1+117501
	.quad	_A__ret_LC_u64
	.quad	_L_1+117512
	.quad	_A__ret_LC_L
	.quad	_L_1+117523
	.quad	_A__ret_LC_i8
	.quad	_L_1+117532
	.quad	_A__ret_LC_u32
	.quad	_L_1+117542
	.quad	_A__ret_LC_C
	.quad	_L_1+117553
	.quad	_A__ret_LC_u8
	.quad	_L_1+117562
	.quad	_A__ret_LC_I
	.quad	_L_1+117572
	.quad	_A__ret_LC_i16
	.quad	_L_1+117581
	.quad	_A__ret_LC_i64
	.quad	_L_1+117592
	.quad	_A__ret_LC_LC
	.quad	_L_1+117603
	.quad	_A__ret_pi32
	.quad	_L_1+117613
	.quad	_A__ret_pu16
	.quad	_L_1+117622
	.quad	_A__ret_pu64
	.quad	_L_1+117631
	.quad	_A__ret_pL
	.quad	_L_1+117640
	.quad	_A__ret_pi8
	.quad	_L_1+117647
	.quad	_A__ret_pu32
	.quad	_L_1+117655
	.quad	_A__ret_pf32
	.quad	_L_1+117664
	.quad	_A__ret_pC
	.quad	_L_1+117673
	.quad	_A__ret_pu8
	.quad	_L_1+117680
	.quad	_A__ret_pI
	.quad	_L_1+117688
	.quad	_A__ret_pi64
	.quad	_L_1+117695
	.quad	_A__ret_pf64
	.quad	_L_1+117704
	.quad	_A__ret_pLC
	.quad	_L_1+117713
	.quad	_A__ret_pi16
	.quad	_L_1+117721
	.quad	_A__ret_vi32
	.quad	_L_1+117730
	.quad	_A__ret_vu16
	.quad	_L_1+117739
	.quad	_A__ret_vu64
	.quad	_L_1+117748
	.quad	_A__ret_vL
	.quad	_L_1+117757
	.quad	_A__ret_vi8
	.quad	_L_1+117764
	.quad	_A__ret_vu32
	.quad	_L_1+117772
	.quad	_A__ret_vf32
	.quad	_L_1+117781
	.quad	_A__ret_vC
	.quad	_L_1+117790
	.quad	_A__ret_vu8
	.quad	_L_1+117797
	.quad	_A__ret_vI
	.quad	_L_1+117805
	.quad	_A__ret_vi64
	.quad	_L_1+117812
	.quad	_A__ret_vf64
	.quad	_L_1+117821
	.quad	_A__ret_vLC
	.quad	_L_1+117830
	.quad	_A__ret_vi16
	.quad	_L_1+117838
	.quad	_A__ret_ki32
	.quad	_L_1+117847
	.quad	_A__ret_ku16
	.quad	_L_1+117856
	.quad	_A__ret_ku64
	.quad	_L_1+117865
	.quad	_A__ret_kL
	.quad	_L_1+117874
	.quad	_A__ret_ki8
	.quad	_L_1+117881
	.quad	_A__ret_ku32
	.quad	_L_1+117889
	.quad	_A__ret_kf32
	.quad	_L_1+117898
	.quad	_A__ret_kC
	.quad	_L_1+117907
	.quad	_A__ret_ku8
	.quad	_L_1+117914
	.quad	_A__ret_kI
	.quad	_L_1+117922
	.quad	_A__ret_ki64
	.quad	_L_1+117929
	.quad	_A__ret_kf64
	.quad	_L_1+117938
	.quad	_A__ret_kLC
	.quad	_L_1+117947
	.quad	_A__ret_ki16
	.quad	_L_1+117955
	.space 8
	.ascii "../AMD64_DARWIN/A.m3"
	.space 4
	.data
	.align 5
_MM_A:
	.quad	_L_1+233864
	.space 32
	.quad	_L_1+117968
	.space 24
	.quad	_MM_A+216
	.space 8
	.quad	_A_M3
	.quad	3
	.word	17
	.space 6
	.quad	18
	.long	858993459
	.long	1077097267
	.quad	21
	.quad	22
	.byte	23
	.space 7
	.quad	24
	.long	1103762555
	.long	27
	.byte	28
	.space 7
	.quad	29
	.quad	30
	.word	31
	.space 2
	.long	32
	.space 24
	.quad	_A_I3
	.quad	_MM_A+240
	.space 8
	.quad	_Long_I3
	.quad	_MM_A+264
	.space 8
	.quad	_Word_I3
	.quad	_MM_A+288
	.space 8
	.quad	_Cstdint_I3
	.quad	_MM_A+312
	.space 8
	.quad	_RTHooks_I3
	.space 8
	.literal8
	.align 3
LC0:
	.long	858993459
	.long	1074475827
	.literal4
	.align 2
LC1:
	.long	1091672474
	.literal16
	.align 4
LC2:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.align 4
LC3:
	.long	2147483648
	.long	0
	.long	0
	.long	0
	.subsections_via_symbols
