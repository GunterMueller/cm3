%------------------------------------------------------------------------------

readonly proc NormalizeString (String) is
  String = subst (String, " (core dumped)", "", 9)
  String = del_chars (subst (String, " (core dumped)", "", 9), "\r")
  String = subst_chars (String, "\\", "/")

  %
  % r0/r001 ends with an unhandled exception
  %
  % As a result, NT386 has a stack trace in *.pgm, other platforms do not.
  % And *.build says "aborted", in some fashion.
  % Remove these.
  %
  local StackTraceMarker = "\nStack trace:\n   FP         PC      Procedure\n---------  ---------  -------------------------------\n 0x"
  local StackTracePosition = pos (String, StackTraceMarker)
  if not equal (StackTracePosition, "-1")
    String = sub (String, 0, StackTracePosition) & "\n"
  end
  %
  % We probably need do something else here.
  % This is what we see on birch. Maybe we can list enough variations.
  % Maybe we can get regular expressions in Quake..
  % Maybe we can wrap the invocation such as to quash the output.
  % Maybe we can remove any line that says "Abort".
  %
  % "/bin/sh: line 1: 30573 Aborted                 ./pgm >stdout.pgm.raw 2>stderr.pgm.raw\n", "", 1)
  %                   ^^^^^ This varies.
  %
  local AbortMarker1 = "/bin/sh: line 1: "
  local AbortMarker2 = " Aborted                 ./pgm >stdout.pgm.raw 2>stderr.pgm.raw\n"
  local AbortMarker1Position = pos (String, AbortMarker1)
  local AbortMarker2Position = pos (String, AbortMarker2)
  if not equal (AbortMarker1Position, "-1") and not equal (AbortMarker2Position, "-1")
    String = sub (String, 0, AbortMarker1Position)
  end

  return String
end

readonly proc ReadAndNormalizeFile (Path) is
  return NormalizeString (fs_contents (Path))
end

readonly proc NormalizeFile (Path) is
  fs_putfile (Path, ReadAndNormalizeFile (Path & ".raw"))
end

%------------------------------------------------------------------------------

if defined ("local_libs")
  override ("m3core", ROOT)
  override ("libm3", ROOT)
end

import ("libm3")

%------------------------------------------------------------------------------

local M3TestsRoot = not stale ("../src/Test.common", "../src/Test.common")

%
% Some of the tests have their own Test.i3 and cannot import this.
%
if not M3TestsRoot
  if stale ("../Test.i3", "../Test.i3")
    override ("m3tests", PACKAGE_DIR & "/../../../..")
    import ("m3tests")
  end
end

%
% This is outdated.
%
if defined ("local_m3")
  M3 = format ("%s/m3/%s/m3", ROOT, BUILD_DIR)
  m3_options = format ("-Y6@%s/m3cc/%s/cm3cg@-quiet@", ROOT, BUILD_DIR)
end

proc M3TestsNoEcho () is
  if defined ("xM3TESTS")
    return "@"
  end
  return ""
end

readonly proc RunTest () is
  if fs_readable ("runopts")
    runopts = " " & fs_contents ("runopts")
  else
    runopts = ""
  end
  write ("runopts = " & runopts & EOL)
  if not M3TestsRoot
    program("pgm")
    local f = program_name ("pgm")
    if not stale (f, f)
      exec (M3TestsNoEcho () & "-." & SL & f & runopts & " >stdout.pgm.raw 2>stderr.pgm.raw")
      NormalizeFile ("stdout.pgm")
      NormalizeFile ("stderr.pgm")
    end
  end
end

RunTest()
