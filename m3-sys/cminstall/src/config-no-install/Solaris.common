%-------------------------------------------------------------------
% defined by cm3, but not the other MxConfig users
if not defined("CR") CR = "\n" end
if not defined("EOL") EOL = "\n" end
if not defined("M3_PROFILING") M3_PROFILING = FALSE end
if not defined("SL") SL = "/" end
%-------------------------------------------------------------------

readonly TARGET_OS = "SOLARIS"

readonly SYSTEM_AR = "/usr/ccs/bin/ar"

if equal (WORD_SIZE, "32BITS")
    GccMBits = "32"
else
    GccMBits = "64"
end

proc GetM3BackFlags() is
    if defined("M3_BOOTSTRAP") or defined("BOOT")
        return "-m" & GccMBits
    else
        return "-funwind-tables -gstabs+ -fPIC -m" & GccMBits
    end
end

readonly SYSTEM_ASM = "/usr/ccs/bin/as -s -K PIC -xarch=" & SunXArch

if equal (C_COMPILER, "SUN")
    SYSTEM_CC = "/usr/bin/cc -g -mt -xarch=" & SunXArch & " -xcode=pic32 -xldscope=symbolic"
    % SYSTEM_LD = "/usr/ccs/bin/ld"
end

if equal (C_COMPILER, "GNU")
    if not defined("SYSTEM_CC")
        SYSTEM_CC = "/usr/sfw/bin/gcc -gstabs+ -fPIC -pthreads -m" & GccMBits
    end
end

SYSTEM_LD = SYSTEM_CC & " -B direct -z ignore -z combreloc -z defs -z text"
    & " -i -z now -z origin "
    & " -R \\$ORIGIN"
    & " -R \\$ORIGIN/../lib"

SYSTEM_LIBS = {
    "LIBC"      : [ "-lsocket", "-lnsl",
                    "-lpthread",
                    "-lrt", % semaphores
                    "-lm", "-lc" ],
    "LEX-YACC"   : [ "-ll" ],
    "FLEX-BISON" : [ ],
    % "POSTGRES95" : [ ],
    "OPENGL"     : [ "-lGLU", "-lGL", "-lXext" ],
    % "ODBC"     : [ ],
    "MOTIF"      : [ "-lXm" ],
    "X11"        : [ "-lXaw", "-lXmu", "-lXext", "-lXt", "-lX11" ],
    "TCP"        : [ ]
}

SYSTEM_LIBORDER = [
    "OPENGL",
    % "DECPEX",
    "MOTIF",
    "X11",
    "TCP",
    % "ODBC",
    % "POSTGRES95",
    % "FLEX-BISON",
    "LEX-YACC",
    "LIBC"
]

proc make_lib (lib, options, objects, imported_libs, shared) is
    local ret_code = 0
    local lib_a    = format ("lib%s.a", lib)
    local lib_so   = format ("lib%s.so", lib)
    local lib_sox  = format ("lib%s.so.5", lib)

    % first, build the non-shared library
    ret_code = try_exec ("@" & SYSTEM_AR, "cru", lib_a, objects)
    if not equal (ret_code, 0)
        return ret_code
    end

    local shared_option = ""
    if shared and equal(C_COMPILER, "GNU")
        shared_option = "-shared"
    end

    if shared
        % then, build the shared library
        ret_code = try_exec ("@" & SYSTEM_LD, shared_option, "-G", "-o",
                             lib_sox, "-h", lib_sox, objects,
                             imported_libs)
        if not equal (ret_code, 0)
            return ret_code
        end
    end

    local a = skip_lib(lib, shared)

    return 0
end

%------------------------------------------------------------------- linker ---
% "m3_link" is called to produce a final executable.

proc m3_link (prog, options, objects, imported_libs, shared) is
    local linker = [ "@" & SYSTEM_LD ]
    local args = []
    if M3_PROFILING
        args += "-pg"
    end
    args += [ "-o", prog, options, objects, imported_libs ]
    if shared or equal (C_COMPILER, "SUN")
        return try_exec (linker, args)
    else
        return try_exec (linker, "-pie -dy -Bstatic", args)
    end
end

% don't build up large RPATH
M3_SHARED_LIB_ARG = ""

include ("Unix.common")

M3_MAIN_IN_C = TRUE
