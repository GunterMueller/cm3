%
% Unfortunately, command line defines are not actually
% available to the toplevel cm3.cfg, so environment variables
% are what are actually used here.
%
local readonly proc CM3SetInstallRoot() is
    if defined("INSTALL_ROOT")
        return
    end
    if not equal ($CM3_INSTALL, "")
        INSTALL_ROOT = $CM3_INSTALL
        return
    end
    if not equal ($INSTALLROOT, "")
        INSTALL_ROOT = $INSTALLROOT
        return
    end
    INSTALL_ROOT = (path() & SL & "..")
end

%
% This file can be split up.
% If we know the source root, we can push code into it.
%

CM3SetInstallRoot()

local readonly proc CM3TargetProbe() is

    if defined("TARGET")
        return
    end

    if not equal($CM3_TARGET, "")
        TARGET = $CM3_TARGET
        return
    end

    if not equal($TARGET, "")
        TARGET = $TARGET
        return
    end
    
    %
    % default to a native build; probe what is native
    %

    if equal($OS, "Windows_NT")
        TARGET = "NT386"
        return
    end

    local readonly proc FileExists(a) is
      return not stale (a, a)
    end

    if FileExists("/bin/sh")
        %
        % This command should be built up from a table.
        % Or rather, cm3 should know what it is native for.
        %
        local readonly ExitCode =
            try_exec(
                "@" & ". " & INSTALL_ROOT & "/bin/sysinfo.sh",
                "&& [ $TARGET == PPC_DARWIN ] && exit 100"
                )
        if equal(ExitCode, 25600)
            TARGET = "PPC_DARWIN"
        return
        end
    end
    
    error(
        "unable to determine target -- try setting the CM3_TARGET environment variable" & CR
        & "Possible values include FreeBSD4, I386_DARWIN, LINUXLIBC6, NetBSD2_i386, NT386, NT386GNU, PPC_DARWIN, PPC_LINUX, SOLgnu, SPARC"
        )
end

CM3TargetProbe()

local readonly proc CM3ConfigInclude(a) is

    local readonly proc FileExists(a) is
      return not stale (a, a)
    end

    %write("checking " & a & CR)
    if FileExists(a)
        %write("using " & a & CR)
        return a
    end
    return FALSE
end

local readonly proc CM3ConfigProbe() is
    %
    % In order for this file to be useful in a distribution without source, first look near the compiler.
    %
    local Result =
            (CM3ConfigInclude(path() & SL & "config" & SL & TARGET)
            or CM3ConfigInclude(path() & SL & ".." & SL & TARGET & ".config")
            or CM3ConfigInclude(path() & SL & TARGET & ".cfg")
            or CM3ConfigInclude(path() & SL & TARGET & ".cfg")
            or CM3ConfigInclude(path() & SL & "cm3.exe.config")
            or CM3ConfigInclude(path() & SL & "cm3.config"))

    if Result
        return Result
    end
    %
    % Then go to the source tree.
    %
    local readonly proc CM3SetSourceRoot() is
        if defined("ROOT")
            return
        end
        if not equal($CM3_ROOT, "")
            ROOT = $CM3_ROOT
            return
        end
        if not equal($ROOT, "")
            ROOT = $ROOT
            return
        end
        error("Neither the variable ROOT nor environment variables ROOT or CM3_ROOT is defined.")
    end

    CM3SetSourceRoot()

    Result = CM3ConfigInclude(ROOT & SL & "m3-sys" & SL & "cminstall" & SL & "src" & SL & "config-no-install" & SL & TARGET)
    if Result
        return Result
    end

    Result = CM3ConfigInclude(ROOT & SL & "m3-sys" & SL & "cminstall" & SL & "src" & SL & "config-no-install" & SL & TARGET)
    if Result
        return Result
    end

    Result = CM3ConfigInclude(ROOT & SL & "m3-sys" & SL & "cminstall" & SL & "src" & SL & "config" & SL & TARGET)
    if Result
        return Result
    end

    %
    % Give up.
    %
    error("unable to find a configuration file for (" & INSTALL_ROOT & ", " & ROOT & ", " & TARGET & ")")
end

include(CM3ConfigProbe())
