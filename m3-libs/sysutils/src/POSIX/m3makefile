% Copyright 1999-2002 elego Software Solutions GmbH, Berlin, Germany.
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions
% are met:
% 1. Redistributions of source code must retain the above copyright
%    notice, this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright
%    notice, this list of conditions and the following disclaimer in the
%    documentation and/or other materials provided with the distribution.
%
% THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
% IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
% NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
% DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
% THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
% THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%
% $Id$

implementation("OSSpecialsPosix")
implementation("PathReprPosix")
implementation("SystemPosix")
if equal(M3_VARIANT, "PM3")
  implementation("FSUnix_pm3")
else
  implementation("FSUnix_cm3")
end


%
% Support bootstrapping against older m3core.
% if shipped m3core does not have Uwaitpid, then use
% the source tree version and put it in our package.
%

readonly proc CopyFile (Source, Destination) is
    write("CopyFile(" & Source & ", " & Destination & ")" & CR)
    % DeleteFile (Destination)
    cp_if(Source, Destination)
end

readonly proc DeleteFile (a) is
    delete_file (a)
end

%
% fs_exists is deliberately not used here, in order to build
% starting with versions of cm3 that do not have it.
%
readonly proc FileExists (a) is
    return not stale (a, a)
end

if equal($OS, "Windows_NT")
    FindString = "findstr"
    DeviceNull = "nul:"
else
    FindString = "grep"
    DeviceNull = "/dev/null"
end

readonly proc Run(Command) is
    % write(Command & CR)
    return try_exec(Command)
end

readonly proc FileContains (File, String) is
    local Result = Run (FindString & " " & String & " " & File & " > " & DeviceNull)
    Result = equal (Result, 0)
    % write("FileContains(" & File & "," & String & "):" & (Result & "") & CR)
    return Result
end

local M3CoreUnixCommon = "m3core" & SL & "src" & SL & "unix" & SL & "Common"
local M3CoreExports = PKG_INSTALL & SL & "m3core" & SL & BUILD_DIR & SL & ".M3EXPORTS"

% This is generally correct, but if you merely delete the files, to test, it is not correct.
% if not FileExists(PKG_INSTALL & SL & M3CoreUnixCommon & "Uwaitpid.i3")

% Again, for testing, "Uwaitpid" isn't specific enough.
% if not FileExists(M3CoreExports) or not FileContains(M3CoreExports, "Uwaitpid")

if not FileExists(M3CoreExports) or not FileContains(M3CoreExports, "Uwaitpid.c")
    M3CoreUnixCommon = ROOT & SL & "m3-libs" & SL & M3CoreUnixCommon
    local eval = Run("mkdir " & BUILD_DIR & " > " & DeviceNull)
    CopyFile(M3CoreUnixCommon & SL & "Uwaitpid.i3", BUILD_DIR & SL & "Uwaitpid.i3")
    CopyFile(M3CoreUnixCommon & SL & "Uwaitpid.c", BUILD_DIR & SL & "Uwaitpid.c")
    derived_interface("Uwaitpid", HIDDEN)
    derived_c("Uwaitpid")
end
