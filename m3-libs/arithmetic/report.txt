for Harry:

 What's advantage of using REAL64 instead of LONGREAL and REAL32 instead of REAL?
 Why are there constants like 'Module' and 'ftn' ? Are they for documentation or  debugging purposes?


for comp.lang.modula3 :

PROCEDURE Uniform(self:RandomGen;
                  min:REAL64:=0.0D0;  (*from min*)
                  max:REAL64:=1.0D0   (*up to but not including max*)
                  ):REAL64            (*return uniform deviate*)
                  (* RAISES{xUtils.Error} *)
                  =

METHODS
    uniform(min:REAL64:=Min;  (*from min*)
            max:REAL64:=Max   (*to max*)
              ):REAL64
              (*RAISES{xUtils.Error}*);        (*return uniform deviate*)

match, but if the RAISES statement is also given the compiler seems to see a difference in both declarations and thus outputs "procedure redefined (Uniform)"

may be that xUtils are not imported in one of these modules
 - the compiler complains about type incompabilities before knowing of the identifiers

---------------

It would be of great help, if the compiler tells me with which (implicitly given) declaration the new one conflicts and where it is was done, e.g.

"Rand.m3", line 123: procedure redefined (Uniform), in
"Rand.i3", line 234: defined as Uniform (blabla : TEXT)
exception list differs

When IMPORT is used after the first declaration,
the compiler should give a more precise error diagnostic.

Modula-3 definition says: MOD (x, y: Float) : Float
but cm3 expects: infix    MOD (x, y: Float) : Float

---------------

Design question:

Is it better to create a pair interface,module for every set of functions for the same datatype
or is it better to create one interface and multiple modules that export to this interface.
The reason is that I don't want to mix low level computation routines
with high level formatting routines.

---------------

Modules with computations of a different naming scheme:
m3core/fingerprint/Poly: Sum, Product, TimesX, Power
m3core/word/Word: Plus, Minus, Times, Divide
Point: Add, Sub, Mul, Div

---------------

Conventions for names of Array and Reference types?
