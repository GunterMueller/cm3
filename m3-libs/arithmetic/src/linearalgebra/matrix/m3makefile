import("libm3")

template("matrix")


generic_module("MatrixBasic")
MatrixBasic("LongRealComplex",  "LongRealComplex", "Basic", "Basic")
MatrixBasic("Integer32",        "Integer32",       "Basic", "Basic")
MatrixBasic("BigInteger",       "BigInteger",      "Basic", "Basic")

generic_module("MatrixFast")
MatrixFast("Real",     "Real",     "Basic", "Fast")
MatrixFast("LongReal", "LongReal", "Basic", "Fast")
MatrixFast("Extended", "Extended", "Basic", "Fast")

generic_module("MatrixTrans")
MatrixTrans("Real",            "Real",     "Basic", "",        "Basic", "Fast")
MatrixTrans("LongReal",        "LongReal", "Basic", "",        "Basic", "Fast")
% no EXTENDED EigenSystem
%MatrixTrans("Extended",        "Extended", "Basic", "",        "Basic", "Fast")
% no Complex EigenSystem
%MatrixTrans("RealComplex",     "Real",     "Basic", "Complex", "Fast",  "Basic")
%MatrixTrans("LongRealComplex", "LongReal", "Basic", "Complex", "Fast",  "Basic")
%MatrixTrans("ExtendedComplex", "Extended", "Basic", "Complex", "Fast",  "Basic")

generic_module("MatrixDecomposition")
MatrixDecomposition("Real",     "Fast")
MatrixDecomposition("LongReal", "Fast")
MatrixDecomposition("Extended", "Fast")

generic_module("EigenSystem")
EigenSystem("Real",     "Fast")
EigenSystem("LongReal", "Fast")
%EigenSystem("Extended", "Fast")

InstantiateFortran("Real",     "Real",     "MatrixLapack", "s")
InstantiateFortran("LongReal", "LongReal", "MatrixLapack", "d")

generic_module("CharPolynomial")
CharPolynomial("Real",            "Fast",  "Basic")
CharPolynomial("LongReal",        "Fast",  "Basic")
CharPolynomial("Extended",        "Fast",  "Basic")
CharPolynomial("LongRealComplex", "Basic", "Fast")
CharPolynomial("Integer32",       "Basic", "Basic")
CharPolynomial("BigInteger",      "Basic", "Basic")

generic_module("MatrixFmtLex")
MatrixFmtLex("Real",            "Fast")
MatrixFmtLex("LongReal",        "Fast")
MatrixFmtLex("Extended",        "Fast")
MatrixFmtLex("LongRealComplex", "Basic")
MatrixFmtLex("Integer32",       "Basic")
MatrixFmtLex("BigInteger",      "Basic")

% if you import 'blas' functions like 'e_wsfe' cannot be found
% if you then switch to 'gslcblas', compile, switch back to 'blas'
% then it can be compiled
%import_lib("blas","/usr/lib")

% needed for blas and lapack, part of the f2c package, I guess
import_lib("g2c","/usr/lib")
import_lib("blas","/usr/lib")
import_lib("lapack","/usr/lib")
%import_lib("lapack","/home/ignacio/lib")
%import_lib("lapack","/home/thielema/lib/ix86-linux2")
