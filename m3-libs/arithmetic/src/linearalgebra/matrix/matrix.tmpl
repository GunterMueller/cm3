%
%  Quake functions to instantiate operations on generic matrices.
%

readonly proc MatrixBasic (nm, rfield) is
  local vfield   = nm & "Vector"
  local vrep     = nm & "VectorRep"
  local base     = nm & "Matrix"
  local impl     = base & "Basic"
  build_generic_intf (base, "Matrix",      [rfield, vfield, impl], VISIBLE)
  build_generic_impl (base, "Matrix",      [rfield, vfield])
  build_generic_intf (impl, "MatrixBasic", [rfield, vfield], VISIBLE)
  build_generic_impl (impl, "MatrixBasic", [rfield, vfield, vrep, base])
end

readonly proc MatrixFast (nm, rfield) is
  local vfield   = nm & "Vector"
  local base     = nm & "Matrix"
  local impl     = base & "Fast"
  local decomp   = nm & "MatrixDecomposition"
  build_generic_intf (base, "Matrix",     [rfield, vfield, impl], VISIBLE)
  build_generic_impl (base, "Matrix",     [rfield, vfield])
  build_generic_intf (impl, "MatrixFast", [rfield, vfield], VISIBLE)
  build_generic_impl (impl, "MatrixFast", [rfield, vfield, base, decomp])
end

readonly proc MatrixTrans (nm, field) is
  local rfield = field & "Basic"
  local rtrans = field & "Trans"
  local ctrans = nm & "Trans"
  local cvsup  = nm & "VectorRep"
  local mfield = nm & "Matrix"
  local mtrans = nm & "MatrixTrans"
  local eigen  = nm & "EigenSystem"
  build_generic_intf (mtrans, "MatrixTrans", [rfield,                        mfield], VISIBLE)
  build_generic_impl (mtrans, "MatrixTrans", [rfield, rtrans, ctrans, cvsup, mfield, eigen])
end

readonly proc MatrixDecomposition (nm, rfield) is
  local basic   = nm & "MatrixDecomposition"
  local rtrans  = nm & "Trans"
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local mfield  = nm & "Matrix"
  build_generic_intf (basic, "MatrixDecomposition", [rfield,         vfield, mfield], VISIBLE)
  build_generic_impl (basic, "MatrixDecomposition", [rfield, rtrans, vfield, mfield])
end

readonly proc EigenSystem (nm, rfield) is
  local basic   = nm & "EigenSystem"
  local rtrans  = nm & "Trans"
  local cfield  = nm & "Complex"
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local mfield  = nm & "Matrix"
  local mlap    = nm & "MatrixLapack"
  build_generic_intf (basic, "EigenSystem", [        rtrans, vfield, mfield, mlap], VISIBLE)
  build_generic_impl (basic, "EigenSystem", [rfield, rtrans, vfield, mfield])
end

readonly proc CharPolynomial (nm, rfield) is
  local basic   = nm & "CharPolynomial"
  local rtfield = nm & "Root"
  local mfield  = nm & "Matrix"
  build_generic_intf (basic, "CharPolynomial", [        rtfield, mfield], VISIBLE)
  build_generic_impl (basic, "CharPolynomial", [rfield, rtfield, mfield])
end

readonly proc MatrixFmtLex (nm, rfield) is
  local rfmt   = nm & "FmtLex"
  local vfield = nm & "Vector"
  local vfmt   = nm & "VectorFmtLex"
  local mfield = nm & "Matrix"
  local mfmt   = nm & "MatrixFmtLex"
  build_generic_intf (mfmt, "MatrixFmtLex", [rfmt,               mfield], VISIBLE)
  build_generic_impl (mfmt, "MatrixFmtLex", [rfmt, vfield, vfmt, mfield])
end

readonly proc LAPACKToModula3 (nm, field, src, prefix, Prefix) is
  local raw = nm & src
  exec(path()&SL&"lapack2i3.sh",raw,prefix,Prefix,">"&path()&SL&raw&".i3")
end

readonly proc Lapack (nm, rfield) is
  local rtrans  = nm & "Trans"
  local cfield  = nm & "Complex"
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local cvfield = nm & "ComplexVector"
  local cvrep   = nm & "ComplexVectorRep"
  local mfield  = nm & "Matrix"
  local mlap    = nm & "MatrixLapack"
  local mlapraw = mlap & "Raw"
  module (mlapraw)
  build_generic_intf (mlap, "FloatMatrixLapack", [rfield,         vfield,       cvfield, mfield], VISIBLE)
  build_generic_impl (mlap, "FloatMatrixLapack", [rfield, cfield, vfield, vrep, cvfield, mfield, mlapraw])
end
