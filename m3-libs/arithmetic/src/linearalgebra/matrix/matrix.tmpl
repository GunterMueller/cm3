%
%  Quake functions to instantiate operations on generic matrices.
%

readonly proc Matrix (nm, impl, rfield) is
  local vfield   = nm & "Vector"
  local vrep     = nm & "VectorRep"
  local base     = nm & "Matrix"
  local instimpl = base & impl
  build_generic_intf (base,     "Matrix",        [rfield, vfield, instimpl], VISIBLE)
  build_generic_impl (base,     "Matrix",        [rfield, vfield])
  build_generic_intf (instimpl, "Matrix" & impl, [rfield, vfield], VISIBLE)
  build_generic_impl (instimpl, "Matrix" & impl, [rfield, vfield, vrep])
end

readonly proc MatrixTrans (nm, real, rimpl, complex, cimpl, mimpl) is
  local basic  = nm & "MatrixTrans"
  local rfield = real & rimpl
  local rtrans = real & "Trans"
  local ctrans = real & complex & "Trans"
  local eigen  = nm & "EigenSystem"
  local mfield = nm & "Matrix" & mimpl
  build_generic_intf (basic, "MatrixTrans", [rfield,                        mfield], VISIBLE)
  build_generic_impl (basic, "MatrixTrans", [rfield, rtrans, ctrans, eigen, mfield])
end

readonly proc MatrixDecomposition (nm, rfield) is
  local basic   = nm & "MatrixDecomposition"
  local rtrans  = nm & "Trans"
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local mfield  = nm & "Matrix"
  build_generic_intf (basic, "MatrixDecomposition", [rfield,         vfield, mfield], VISIBLE)
  build_generic_impl (basic, "MatrixDecomposition", [rfield, rtrans, vfield, mfield])
end

readonly proc EigenSystem (nm, impl) is
  local basic   = nm & "EigenSystem"
  local rfield  = nm & "Basic"
  local rtrans  = nm & "Trans"
  local cfield  = nm & "Complex" & impl
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local mfield  = nm & "Matrix"
  local mlap    = nm & "MatrixLapack"
  build_generic_intf (basic, "EigenSystem", [        rtrans, vfield, mfield, mlap], VISIBLE)
  build_generic_impl (basic, "EigenSystem", [rfield, rtrans, vfield, mfield])
end

readonly proc CharPolynomial (nm, rimpl) is
  local basic   = nm & "CharPolynomial"
  local rfield  = nm & rimpl
  local rtfield = nm & "RootBasic"
  local mfield  = nm & "Matrix"
  build_generic_intf (basic, "CharPolynomial", [        rtfield, mfield], VISIBLE)
  build_generic_impl (basic, "CharPolynomial", [rfield, rtfield, mfield])
end

readonly proc MatrixFmtLex (nm, mimpl) is
  local mfield = nm & "Matrix" & mimpl
  local mfmt   = nm & "MatrixFmtLex"
  local rfmt   = nm & "FmtLex"
  build_generic_intf (mfmt, "MatrixFmtLex", [rfmt, mfield], VISIBLE)
  build_generic_impl (mfmt, "MatrixFmtLex", [rfmt])
end

readonly proc LAPACKToModula3 (nm, field, src, prefix, Prefix) is
  local raw = nm & src
  exec(path()&SL&"lapack2i3.sh",raw,prefix,Prefix,">"&path()&SL&raw&".i3")
end

readonly proc Lapack (nm, impl) is
  local rfield  = nm & "Basic"
  local rtrans  = nm & "Trans"
  local cfield  = nm & "Complex" & impl
  local vfield  = nm & "Vector"
  local vrep    = nm & "VectorRep"
  local cvfield = nm & "ComplexVector"
  local cvrep   = nm & "ComplexVectorRep"
  local mfield  = nm & "Matrix"
  local mlap    = nm & "MatrixLapack"
  local mlapraw = mlap & "Raw"
  module (mlapraw)
  build_generic_intf (mlap, "FloatMatrixLapack", [rfield,         vfield,       cvfield, mfield], VISIBLE)
  build_generic_impl (mlap, "FloatMatrixLapack", [rfield, cfield, vfield, vrep, cvfield, mfield, mlapraw])
end
