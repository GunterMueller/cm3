import("libm3")

template("polynomial")


generic_module("PolynomialBasic")
PolynomialBasic("Real",               "RealBasic")
PolynomialBasic("LongReal",           "LongRealBasic")
PolynomialBasic("Extended",           "ExtendedBasic")
PolynomialBasic("RealComplex",        "RealComplexBasic")
PolynomialBasic("LongRealComplex",    "LongRealComplexBasic")
PolynomialBasic("ExtendedComplex",    "ExtendedComplexBasic")
PolynomialBasic("Integer32",          "Integer32Basic")
PolynomialBasic("BigInteger",         "BigIntegerBasic")
PolynomialBasic("BigIntegerFraction", "BigIntegerFractionBasic")

generic_module("PolynomialFast")
PolynomialFast("Real",     "RealBasic")
PolynomialFast("LongReal", "LongRealBasic")
PolynomialFast("Extended", "ExtendedBasic")

generic_module("PolynomialFmtLex")
PolynomialFmtLex("Real",     "RealPolynomialFast",     "RealFmtLex")
PolynomialFmtLex("LongReal", "LongRealPolynomialFast", "LongRealFmtLex")
PolynomialFmtLex("Extended", "ExtendedPolynomialFast", "ExtendedFmtLex")
PolynomialFmtLex("LongRealComplex",    "LongRealComplexPolynomialBasic",    "LongRealComplexFmtLex")
PolynomialFmtLex("Integer32",          "Integer32PolynomialBasic",          "Integer32FmtLex")
PolynomialFmtLex("BigInteger",         "BigIntegerPolynomialBasic",         "BigIntegerFmtLex")
PolynomialFmtLex("BigIntegerFraction", "BigIntegerFractionPolynomialBasic", "BigIntegerFractionFmtLex")
