%remove_m3_option("-map")
%remove_m3_option("-g")

import("libm3")

readonly proc FloatBasic (nm, elt) is
  local basic = nm & "Basic"
  build_generic_intf (basic, "FloatBasic", [elt], VISIBLE)
  build_generic_impl (basic, "FloatBasic", [])
end

generic_module("FloatBasic")
FloatBasic("Real",     "Real")
FloatBasic("LongReal", "LongReal")
FloatBasic("Extended", "Extended")

readonly proc FloatTrans (nm, elt) is
  local trans = nm & "Trans"
  build_generic_intf (trans, "FloatTrans", [elt], VISIBLE)
  build_generic_impl (trans, "FloatTrans", [])
end

generic_module("FloatTrans")
FloatTrans("Real",     "Real")
FloatTrans("LongReal", "LongReal")
FloatTrans("Extended", "Extended")


readonly proc ComplexBasic (nm, elt) is
  local basic = nm & "ComplexBasic"
  build_generic_intf (basic, "ComplexBasic", [elt], VISIBLE)
  build_generic_impl (basic, "ComplexBasic", [elt])
end

generic_module("ComplexBasic")
ComplexBasic("Real",     "RealBasic")
ComplexBasic("LongReal", "LongRealBasic")
ComplexBasic("Extended", "ExtendedBasic")


readonly proc ComplexFast (nm, elt) is
  local basic = nm & "ComplexFast"
  build_generic_intf (basic, "ComplexFast", [elt], VISIBLE)
  build_generic_impl (basic, "ComplexFast", [elt])
end

generic_module("ComplexFast")
ComplexFast("Real",     "RealBasic")
ComplexFast("LongReal", "LongRealBasic")
ComplexFast("Extended", "ExtendedBasic")



module("xUtils")
export_interface("xUtils")

module("xWordEx")
export_interface("xWordEx")

module("xBits")
export_interface("xBits")

module("xInteger")
implementation("xPrime")
export_interface("xInteger")

module("xReal32")
export_interface("xReal32")

module("xReal64")
implementation("xSpecFtn")
export_interface("xReal64")

module("xComplex")
export_interface("xComplex")

module("xPoly")
export_interface("xPoly")

module("xVect")
export_interface("xVect")

module("xMat")
export_interface("xMat")

module("xRoot")
export_interface("xRoot")

module("xInterp")
export_interface("xInterp")

module("xSLE")
export_interface("xSLE")

module("xRand")
interface("xRandP")
export_interface("xRand")

module("xRNG01")
export_interface("xRNG01")

module("xRNG02")
export_interface("xRNG02")

module("xStat")
export_interface("xStat")

%module("xInteg")
%export_interface("xInteg")

%module("xCheby")
%export_interface("xCheby")

module("xFFT")
export_interface("xFFT")

%module("xStat")
%export_interface("xStat")

library("m3na")
