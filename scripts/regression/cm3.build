# name of the project
PROJECT=cm3

# this treename must match the name of the tree defined in the tinderbox config
TREENAME=cm3

# the url of the status-processing cgi on the tinderbox server
TINDERBOX_URL="http://tinderbox.elegosoft.com/tinderbox/cgi-bin/processmail_builds.cgi"

# specify the program used to send the status to the server
# this is what we use in our local network:
TINDERBOX_MAILER="wget -q -O - ${TINDERBOX_URL} --post-file"

#use this if you are committer of the cm3 repo:
#TINDERBOX_MAILER="cat build.log | ssh YOURNAME@tinderbox.elegosoft.com \"sudo -u tinderbox /usr/local/tinderbox/tinderbox-cgi/processmail_builds.cgi\""

# cm3 build script specific stuff
BUILD_REL=${BUILD_REL:-"rel"}
BUILD_REL_NAME="${BUILD_REL}"

# relative name to regression scripts directory 
REGRESSION_SCRIPTS_DIR="regression-scripts"

if [ "${BUILD_REL}" == "rel" ] ; then
	BUILD_REL_NAME="release"
fi
	
# source host specific overrides
if [ -e ~/cm3/`hostname`.conf ]; then
  . ~/cm3/`hostname`.conf
fi

# checkout the current cm3 regression script and source it
cvs -d :ext:modula3.elegosoft.com:/usr/cvs checkout -A -d ${REGRESSION_SCRIPTS_DIR} cm3/scripts/regression/defs.sh
test -r ${REGRESSION_SCRIPTS_DIR}/defs.sh || exit 10
. ${REGRESSION_SCRIPTS_DIR}/defs.sh

  
TESTMACHINE=${TESTMACHINE:-"`uname -s` `uname -r`"}
BUILDNAME="${CM3_TARGET} ${TESTMACHINE} ${TESTHOSTNAME} ${BUILD_REL_NAME}-build"

do_checkout() {
	( checkout ) > /dev/null
}

do_compile() {
	( test_build_core_${BUILD_REL} ) 2>&1
}

do_tests() {
        if [ "${BUILD_REL}" == "rel" ] ; then
                # if we land here, core compilation succeeded with
				# last release, so we have a new lastok
                ( test_build_std_lastok ) 2>&1
                r1=$?
                ( test_m3tests ) 2>&1
                r2=$?
                ( test_m3_all_pkgs ) 2>&1
                r3=$?
                return `expr ${r1} + ${r2} + ${r3}`
        fi
}

do_cleanup() {
	( cleanup_all 5 ) 2>/dev/null
}
